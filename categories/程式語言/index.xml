<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>程式語言 on 記錄用</title><link>https://aben20807.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/</link><description>Recent content in 程式語言 on 記錄用</description><generator>Hugo</generator><language>zh-tw</language><managingEditor>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</managingEditor><webMaster>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</webMaster><lastBuildDate>Tue, 18 Mar 2025 22:02:34 +0800</lastBuildDate><atom:link href="https://aben20807.github.io/categories/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Semantic Refactor: Sampling</title><link>https://aben20807.github.io/posts/20250318-python-semantic-refactor-sample/</link><pubDate>Tue, 18 Mar 2025 16:44:55 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20250318-python-semantic-refactor-sample/</guid><description>&lt;p>在看 code 時又看到一段神奇的程式碼。有骰子大法的味道。&lt;/p></description></item><item><title>C++ 語義分析最佳化，案例分享</title><link>https://aben20807.github.io/posts/20250303-cpp-semantic-refactor-speedup-check-subset-of-dynamic-vector/</link><pubDate>Mon, 03 Mar 2025 16:30:21 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20250303-cpp-semantic-refactor-speedup-check-subset-of-dynamic-vector/</guid><description>&lt;p>在看 code 時看到一段神奇的程式碼，也不知道它為何要這樣寫。仔細觀察後發現其實它是想要確認 subset 關係。用 ChatGPT 查一下 subset 怎麼寫後就達到 20 倍加速。&lt;/p></description></item><item><title>繁體中文.tex</title><link>https://aben20807.github.io/posts/20231107-traditional-chinese-latex/</link><pubDate>Wed, 08 Nov 2023 13:31:32 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20231107-traditional-chinese-latex/</guid><description>&lt;p>此篇文章提供一個簡易的繁體中文設定，並改良之前 &lt;a href="https://aben20807.github.io/posts/20221227-latex-examples/">Latex Examples&lt;/a> 提供的程式碼設定。&lt;/p></description></item><item><title>Flockfile for Multithreading stdout</title><link>https://aben20807.github.io/posts/20230310-flockfile-for-multithreading-stdout/</link><pubDate>Sun, 12 Mar 2023 20:32:29 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20230310-flockfile-for-multithreading-stdout/</guid><description/></item><item><title>Latex Examples</title><link>https://aben20807.github.io/posts/20221227-latex-examples/</link><pubDate>Tue, 10 Jan 2023 16:54:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20221227-latex-examples/</guid><description>&lt;p>Latex 應該也算是一種程式語言 吧&lt;/p></description></item><item><title>C++ Shared Library Compile</title><link>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</link><pubDate>Mon, 21 Mar 2022 17:28:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</guid><description>&lt;p>看到 C/C++初學者 FB 社團的&lt;a href="https://www.facebook.com/groups/C.and.CPP.beginner/posts/2097833393706803/" title="發問" aria-label="發問" target="_blank" rel="noreferrer noopener">&lt;i class="fas fa-external-link-square-alt">&lt;/i> 發問&lt;/a>，&lt;br>
情境是沒有 header file 下要如何使用 .so 編譯 C++ 的程式。&lt;br>
因為沒有後續，所以也不確定是否解決，不過最後的回答的確是突破口。&lt;/p></description></item><item><title>C++ Get Pretty Type Name</title><link>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</link><pubDate>Fri, 10 Jul 2020 13:36:58 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</guid><description>&lt;!-- https://drive.google.com/uc?export=view&amp;id= -->
&lt;p>最近狂看 C++ 的東西，明明這麼複雜，可是真香 OuO&lt;/p></description></item><item><title>Shutil</title><link>https://aben20807.github.io/posts/20200420-shutil/</link><pubDate>Mon, 20 Apr 2020 16:20:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20200420-shutil/</guid><description>&lt;!-- https://drive.google.com/uc?export=view&amp;id= --></description></item><item><title>Numpy Array Truncate</title><link>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</link><pubDate>Tue, 22 Oct 2019 20:27:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</guid><description>&lt;!-- https://drive.google.com/uc?export=view&amp;id= -->
&lt;p>踩個雷 OuO&lt;/p></description></item><item><title>Makefile Help Message</title><link>https://aben20807.github.io/posts/20190402-makefile-help-message/</link><pubDate>Tue, 02 Apr 2019 09:06:15 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20190402-makefile-help-message/</guid><description>&lt;!-- https://drive.google.com/uc?export=view&amp;id= -->
&lt;p>最近蠻常用 Makefile 的，想說寫一個 help 選項，這樣就不用要使用時都要打開 Makefile 看怎麼用，意外查到可以使用小技巧來印出 help。達到註解及文件的效果。&lt;/p></description></item><item><title>Makefile for Testing</title><link>https://aben20807.github.io/posts/20190216-makefile-for-testing/</link><pubDate>Sat, 16 Feb 2019 10:00:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄 (aben20807))</author><guid>https://aben20807.github.io/posts/20190216-makefile-for-testing/</guid><description>&lt;p>Makefile 可以執行終端機的指令，所以也可以搭配重新導向 (redirection) 用來做簡單測試&lt;/p>
&lt;p>例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-make" data-lang="make">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fabd2f">test&lt;/span>&lt;span style="color:#fe8019">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./a.out &amp;lt; input.txt &amp;gt; output.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這樣只需要用 &lt;code>$ make test&lt;/code> 就可以測試輸入 input.txt，並把結果存到 output.txt&lt;/p></description></item></channel></rss>