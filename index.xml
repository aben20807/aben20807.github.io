<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>記錄用</title><link>https://aben20807.github.io/</link><description>Recent content on 記錄用</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><managingEditor>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</managingEditor><webMaster>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</webMaster><atom:link href="https://aben20807.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Shor's Algorithm</title><link>https://aben20807.github.io/posts/20220626-shor-algorithm/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220626-shor-algorithm/</guid><description><![CDATA[
          <p>利用量子特性來質因數分解。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220626-shor-algorithm/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220626-shor-algorithm/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>利用量子特性來質因數分解。</p><p>有錯再麻煩指正，感謝。</p><br/><br/><h1 id="目標問題" class="article-heading">目標問題 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9b%ae%e6%a8%99%e5%95%8f%e9%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>RSA 是一種常見的加密演算法，使用的是非對稱加密演算法，其中會利用到兩個極大質數相乘，因此 RSA 的可靠度建立於對極大整數因數分解的難度。</p><br/><br/><h2 id="example-refhttpswwwcsjhueduyairamircs437week12sld015htm" class="article-heading">Example <br/><br/><a href="https://www.cs.jhu.edu/~yairamir/cs437/week12/sld015.htm" target="_blank" rel="noreferrer noopener">ref</a> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-refhttpswwwcsjhueduyairamircs437week12sld015htm"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>Generate keys:<br/><ul><li>Pick two prime numbers $P, Q$, e.g., $P = 5, Q = 11$</li><li>$N = P\times Q = 55$</li><li>$Z = (P-1)\times(Q-1) = 40$</li><li>Pick $e$ such that $\gcd(e, Z) = 1$, e.g., $e = 13$</li><li>Pick $d$ such that $e\times d\equiv1(\text{mod }Z)$, e.g., $d = 37$</li><li>$\Rightarrow$ Public key: $(e, N)$; Private key: $(d, N)$</li></ul></li><li>Usage:<br/><ul><li>Encrypt: $E = M^e(\text{mod }N)\Rightarrow E = M^{13}(\text{mod }55)$</li><li>Decrypt: $M = E^d(\text{mod }N)\Rightarrow M = E^{37}(\text{mod }55)$</li></ul></li></ul><br/><br/><h1 id="several-lemmas-with-examples" class="article-heading">Several lemmas with examples <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#several-lemmas-with-examples"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這邊使用了比較直觀會用到的 Lemma，且使用範例當作說明，不使用證明。</p><br/><br/>  <div class="info-msg"><br/>    <i class="fa fa-info-circle"></i><br/>    Lemma 1:<br><br/>$g^2\equiv1(\text{mod }N), 1&lt;g&lt;N-1\Rightarrow$<br><br/>$\gcd(N, g-1)\mid N \text{ or }\gcd(N, g+1)\mid N$<br/>  </div><br/><br/><ul><li><p>Example 1: $N = 15$<br/>$4^2\equiv 1(\text{mod }15), \gcd(15, 3) = 3\mid 15, \gcd(15, 5) = 5 \mid 15$</p></li><li><p>Example 2: $N = 21$<br/>$8^2\equiv 1(\text{mod }21), \gcd(21, 7) = 7\mid 21, \gcd(21, 9) = 3 \mid 21$</p></li></ul><br/><br/>  <div class="info-msg"><br/>    <i class="fa fa-info-circle"></i><br/>    Lemma 2:<br><br/>$g^x\equiv1(\text{mod }N), 2\mid x, g^{\frac{x}{2}}\not\equiv1(\text{mod }N)\Rightarrow$<br><br/>$(g^{\frac{x}{2}})^2\equiv1(\text{mod }N), g^{\frac{x}{2}}\not\equiv 1(\text{mod }N) \text{, and }g^{\frac{x}{2}}\not\equiv N-1(\text{mod }N)<br/>\Rightarrow$<br><br/>$\gcd(N, g^{\frac{x}{2}}-1)\mid N \text{ or }\gcd(N, g^{\frac{x}{2}}+1)\mid N$<br/>  </div><br/><br/><ul><li><p>Example 1: $N = 15$<br/>$2^4\equiv 1(\text{mod }N), \gcd(15, 3) = 3\mid 15, \gcd(15, 5) = 5 \mid 15$</p></li><li><p>Example 2: $N = 21$<br/>$2^6\equiv 1(\text{mod }N), \gcd(21, 7) = 7\mid 21, \gcd(21, 9) = 3 \mid 21$</p></li></ul><br/><br/>  <div class="info-msg"><br/>    <i class="fa fa-info-circle"></i><br/>    Lemma 3:<br><br/>$g^p\equiv 1(\text{mod }N)\Rightarrow$<br><br/>$g^x\equiv g^{x+np}(\text{mod }N), n \in\mathbb{N}$<br/>  </div><br/><br/><ul><li>Example: $N = 15, g = 2$<br/>$2^1\equiv 2^5\equiv 2^9\equiv 2(\text{mod }15); 2^2\equiv 2^6\equiv 2^{10}\equiv 4(\text{mod }15)$<br/>$\Rightarrow p = 4\Rightarrow 2^4\equiv 1(\text{mod }15)$</li><li>Example: $N = 15, g = 7$<br/>$7^1\equiv 7^5\equiv 7^9\equiv 7(\text{mod }15); 7^2\equiv 7^6\equiv 7^{10}\equiv 4(\text{mod }15)$<br/>$\Rightarrow p = 4\Rightarrow 2^4\equiv 1(\text{mod }15)$</li></ul><br/><br/><h1 id="solving-by-quantum" class="article-heading">Solving by Quantum <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#solving-by-quantum"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>加速效果 (對 $N$ 作質因數分解):</p><ul><li>古典最佳: $O(e^{1.9(\log N)^{1/3}(\log\log N)^{2/3}})$ is <br/><br/><a href="https://en.wikipedia.org/wiki/Sub-exponential_time" target="_blank" rel="noreferrer noopener">sub-exponential time</a></li><li>Shor&rsquo;s algorithm: $O((\log N)^2(\log\log N)(\log\log\log N))$ is <br/><br/><a href="https://en.wikipedia.org/wiki/Polynomial_time" target="_blank" rel="noreferrer noopener">polynomial time</a></li></ul><br/><br/><h2 id="convert-to-u" class="article-heading">Convert to $U$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#convert-to-u"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$f(x) = g^x (\text{mod } N)$, where $g, N\in\mathbb{Z}, g &lt; N$, and $\gcd(g, N) = 1$<br><br/>$g^r \equiv 1 (\text{mod } N)$<br><br/>$U\lvert y\rangle\equiv \lvert g y (\text{mod } N)\rangle$<br><br/>$U^k\lvert y\rangle\equiv \lvert g^ky (\text{mod } N)\rangle, 0\le k$</p><ul><li>Example: $N = 15, g = 7$<br/><ul><li>$U^0\lvert 1\rangle = \lvert 1\rangle$</li><li>$U^1\lvert 1\rangle = \lvert 7\rangle$</li><li>$U^2\lvert 1\rangle = \lvert 4\rangle$</li><li>$U^3\lvert 1\rangle = \lvert 13\rangle$</li><li>$U^4\lvert 1\rangle = U^r\lvert 1\rangle = \lvert 1\rangle$</li><li>$U^5\lvert 1\rangle = \lvert 7\rangle$</li></ul></li></ul><br/><br/><h2 id="eigenvector" class="article-heading">Eigenvector <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvector"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$$\lvert \mu_s\rangle = \frac{1}{\sqrt{r}}\sum_{k = 0}^{r-1}<br/>e^{-\frac{2\pi i s k}{r}}\lvert g^k (\text{mod } N)\rangle, 0\le s &lt; r<br/>$$</p><p>$$U\lvert \mu_s\rangle = e^{\frac{2\pi i s}{r}}\lvert \mu_s\rangle$$</p><p>則 eigenvalue 可推得為 $e^{\frac{2\pi i s}{r}}$，再經過 IQFT 將相位資訊提出，可得 $\varphi = \frac{s}{r}$。</p><ul><li>Example: $N = 15, g = 7$<br/><ul><li>$\lvert \mu_0\rangle = \frac{1}{2}(\lvert 1\rangle+\qquad\lvert 7\rangle+\qquad<br/>\lvert 4\rangle+\qquad<br/>\lvert 13\rangle)$</li><li>$\lvert \mu_1\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{2\pi i}{4}}\lvert 7\rangle+e^{-\frac{4\pi i}{4}}<br/>\lvert 4\rangle+e^{-\frac{6\pi i}{4}}<br/>\lvert 13\rangle)$</li><li>$\lvert \mu_2\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{4\pi i}{4}}<br/>\lvert 7\rangle+e^{-\frac{8\pi i}{4}}<br/>\lvert 4\rangle+e^{-\frac{12\pi i}{4}}<br/>\lvert 13\rangle)$</li><li>$\lvert \mu_3\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{6\pi i}{4}}<br/>\lvert 7\rangle+e^{-\frac{12\pi i}{4}}<br/>\lvert 4\rangle+e^{-\frac{18\pi i}{4}}<br/>\lvert 13\rangle)$</li></ul></li></ul><br/><br/><h2 id="eigenvectors-superposition" class="article-heading">Eigenvectors superposition <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvectors-superposition"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$$\frac{1}{\sqrt{r}}\sum_{s = 0}^{r-1}\lvert \mu_s\rangle = \lvert 1\rangle<br/>$$</p><ul><li>Example: $N = 15, g = 7$</li></ul><p>$$\frac{1}{\sqrt{r}}\sum_{s = 0}^{r-1}\lvert \mu_s\rangle =\lvert \mu_0\rangle +\lvert \mu_1\rangle+\lvert \mu_2\rangle+\lvert \mu_3\rangle<br/>=\lvert 1\rangle$$</p><br/><br/><h2 id="use-qpe-to-get-eigenvalue" class="article-heading">Use QPE to get eigenvalue <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#use-qpe-to-get-eigenvalue"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Eigenvector 輸入使用疊加態 (參考上一篇文章)。輸出時就有這些可能: $\lvert 2^t\frac{0}{r}\rangle,\lvert 2^t\frac{1}{r}\rangle,&hellip;, \lvert 2^t\frac{r-1}{r}\rangle$ 共 $r$ 種，$2^t$ 可以看作將小數變為整數的 scaling factor 表達時可以將其轉換成小數的表達方法即可，因此就可以透過統計的方式找出所求 $r$。另外可以看到 $\frac{0}{r} = 0$ 無法得知 $r$ 的資訊，因此有 $\frac{1}{r}$ 的機率會猜到 $0$ 進而無法推算出 $r$。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLURt5hmoOhaFNJzXaCwR39u_b2JQnHbLgsKiBYDTNFOVX2Ja1_QX3wwy4An4puT8MBMZPkJzLJh88EohLMTtVrI_Pm-HwVBP1BGVvAS63FK-Z9OohYqtFZ-31kg4oYFQKWemHppK1jEjEqE_xDRCD7-8Q=w2200-h365-no?authuser=1" class="center img-zoomable" alt="Shor&amp;rsquo;s algorithm 示意圖; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLURt5hmoOhaFNJzXaCwR39u_b2JQnHbLgsKiBYDTNFOVX2Ja1_QX3wwy4An4puT8MBMZPkJzLJh88EohLMTtVrI_Pm-HwVBP1BGVvAS63FK-Z9OohYqtFZ-31kg4oYFQKWemHppK1jEjEqE_xDRCD7-8Q=w2200-h365-no?authuser=1" class="center img-zoomable lazyload" alt="Shor&amp;rsquo;s algorithm 示意圖; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Shor&rsquo;s algorithm 示意圖; <br/><br/><a href="/posts/20220626-shor-algorithm/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLURt5hmoOhaFNJzXaCwR39u_b2JQnHbLgsKiBYDTNFOVX2Ja1_QX3wwy4An4puT8MBMZPkJzLJh88EohLMTtVrI_Pm-HwVBP1BGVvAS63FK-Z9OohYqtFZ-31kg4oYFQKWemHppK1jEjEqE_xDRCD7-8Q=w2200-h365-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>以上就是利用量子來解決質因數分解的方法。再來進入實作部分。</p><br/><br/><h1 id="qiskit-implementation" class="article-heading">Qiskit implementation <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qiskit-implementation"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>因為程式已經大到我用 IBM Composer 無法簡單實作了，所以這邊改使用 IBM Qiskit 這個量子 python 工具以及從官方的範例 <br/><br/><a href="https://qiskit.org/textbook/ch-algorithms/shor.html" target="_blank" rel="noreferrer noopener">Shor&rsquo;s Algorithm - IBM</a> / <br/><br/><a href="https://github.com/qiskit-community/qiskit-textbook/blob/main/content/ch-algorithms/shor.ipynb" target="_blank" rel="noreferrer noopener">src</a> 下去修改。並且由於 Qubit 數量已經超過官方提供的 5 位，因此先使用模擬器來進行運算。</p><p>差異性: 官方使用的 counting bit 數量是 8-bit 不過理論上 2-bit 就可以，但本篇使用 4-bit。另外一些變數跟函式命名方式有針對本文所使用的符號進行修改。官方在 counting bit 使用 Little Endian 但 $U$ 的運算使用 Big Endian，本篇統一使用 Little Endian (高記憶體位置放 MSB)。</p><p>電路架構:</p><ol><li>U circuit: 實作 $g^x (\text{mod } N)$</li><li>IQFT</li><li>QPE: 包含對 t-bit counting bits 做疊加以及 1. 2.</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUdYVfbelD-M3FV9TA2rxrwUH3oViTvBaeQi5IWwaB4cy741estpmPv2pWNhNWk62jOZy8zMTCJ7_JVSrYCuaVZa2sVFII65dKcwQyEf6y4w90GQm2F7d0iJtPGdd-9u4eQK82xFqAifXzJyjyF3dccyA=w1733-h631-no?authuser=1" class="center img-zoomable" alt="High-level 量子電路圖" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUdYVfbelD-M3FV9TA2rxrwUH3oViTvBaeQi5IWwaB4cy741estpmPv2pWNhNWk62jOZy8zMTCJ7_JVSrYCuaVZa2sVFII65dKcwQyEf6y4w90GQm2F7d0iJtPGdd-9u4eQK82xFqAifXzJyjyF3dccyA=w1733-h631-no?authuser=1" class="center img-zoomable lazyload" alt="High-level 量子電路圖"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">High-level 量子電路圖</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUdYVfbelD-M3FV9TA2rxrwUH3oViTvBaeQi5IWwaB4cy741estpmPv2pWNhNWk62jOZy8zMTCJ7_JVSrYCuaVZa2sVFII65dKcwQyEf6y4w90GQm2F7d0iJtPGdd-9u4eQK82xFqAifXzJyjyF3dccyA=w1733-h631-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="u-circuit" class="article-heading">U circuit <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u-circuit"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這個 circuit 是我個人認為最複雜的區塊，因為它似乎沒有一個直觀的建立方法，且隨著 $g$ 或 $N$ 不一樣就需要重新建立，因此不太像一般古典運算的函式一樣可以修改輸入的變數即可。U circuit 要做的事就是產生一個 $g^x (\text{mod } N)$ 其中 $x$ 隨著 $t$ 增加而增加。為何這邊的 $U$ 需要使用 4-bit，原因是 $\text{mod } 15$ ($0, 1, &hellip;, 14$) 的所有數字需要用 4-bit 表示。</p><p>另外可以看到這裡的 <code>gmod15_circ</code> 是比較一般化 (general) 的形式，可以同時支援不同的 $g$ 作為輸入，不過仍是需要重新產生不同的電路。有趣的是根據設計可以發現在 $g = 4$ 時可以用到最少的邏輯閘 (只需要 2 個 CSWAP  也就是 6 個 CCX )。</p><p>這裡以 $t = 2, g = 7$ 為例 (因為 counting bit 兩位就足夠)，真值表可寫成下方表格。$[i]$ 表示二進位第 $i$ 位。請搭配下方圖片查看中間結果。</p><table><br/><thead><br/><tr><br/><th style="text-align:center">$t[1]$</th><br/><th style="text-align:center">$t[0]$</th><br/><th style="text-align:center">$\mu[3]$</th><br/><th style="text-align:center">$\mu[2]$</th><br/><th style="text-align:center">$\mu[1]$</th><br/><th style="text-align:center">$\mu[0]$</th><br/><th style="text-align:center">$\mu$</th><br/></tr><br/></thead><br/><tbody><br/><tr><br/><td style="text-align:center">$0$</td><br/><td style="text-align:center">${\color{red}0}$</td><br/><td style="text-align:center">${\color{red}0}$</td><br/><td style="text-align:center">${\color{red}0}$</td><br/><td style="text-align:center">${\color{red}0}$</td><br/><td style="text-align:center">${\color{red}1}$</td><br/><td style="text-align:center">1</td><br/></tr><br/><tr><br/><td style="text-align:center">$0$</td><br/><td style="text-align:center">${\color{blue}1}$</td><br/><td style="text-align:center">${\color{blue}0}$</td><br/><td style="text-align:center">${\color{blue}1}$</td><br/><td style="text-align:center">${\color{blue}1}$</td><br/><td style="text-align:center">${\color{blue}1}$</td><br/><td style="text-align:center">7</td><br/></tr><br/><tr><br/><td style="text-align:center">$\fcolorbox{green}{}1$</td><br/><td style="text-align:center">$0$</td><br/><td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td><br/><td style="text-align:center">${\color{red}\fcolorbox{green}{}1}$</td><br/><td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td><br/><td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td><br/><td style="text-align:center">4</td><br/></tr><br/><tr><br/><td style="text-align:center">$\fcolorbox{green}{}1$</td><br/><td style="text-align:center">$1$</td><br/><td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td><br/><td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td><br/><td style="text-align:center">${\color{blue}\fcolorbox{green}{}0}$</td><br/><td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td><br/><td style="text-align:center">13</td><br/></tr><br/></tbody><br/></table><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWHI0gN2NVQZZu6Rgw9EMhzMltThUL8J5mxD6RNAS9Oj0Q7E6LvdqKRQCdgcUucheXMuPbf2oCxV_tfiRYNTv4qZTSUKptRkbxuF2K3thpEVZPSC4GsLsz9C-SWaRzAS9f_eRm7QR8mnLzXf8xub6SwpQ=w2022-h1127-no?authuser=1" class="center img-zoomable" alt="First U; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWHI0gN2NVQZZu6Rgw9EMhzMltThUL8J5mxD6RNAS9Oj0Q7E6LvdqKRQCdgcUucheXMuPbf2oCxV_tfiRYNTv4qZTSUKptRkbxuF2K3thpEVZPSC4GsLsz9C-SWaRzAS9f_eRm7QR8mnLzXf8xub6SwpQ=w2022-h1127-no?authuser=1" class="center img-zoomable lazyload" alt="First U; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">First U; <br/><br/><a href="/posts/20220626-shor-algorithm/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWHI0gN2NVQZZu6Rgw9EMhzMltThUL8J5mxD6RNAS9Oj0Q7E6LvdqKRQCdgcUucheXMuPbf2oCxV_tfiRYNTv4qZTSUKptRkbxuF2K3thpEVZPSC4GsLsz9C-SWaRzAS9f_eRm7QR8mnLzXf8xub6SwpQ=w2022-h1127-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVZqHdG1Ov3hr5Qn2HB9PeNnP1uO7efKxW6Qp4CMUu47vDjzQ0C8s0z_2nKwHj_ZNAwi9y4BwRiq39cRU2HEWpELDs7tkYPhHd_6cbA4xqIzxZGkfsQd2z1Tu4SlyVFpP_rq6FlXq3NHmTQN3pZae3hIA=w2021-h569-no?authuser=1" class="center img-zoomable" alt="Second U; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVZqHdG1Ov3hr5Qn2HB9PeNnP1uO7efKxW6Qp4CMUu47vDjzQ0C8s0z_2nKwHj_ZNAwi9y4BwRiq39cRU2HEWpELDs7tkYPhHd_6cbA4xqIzxZGkfsQd2z1Tu4SlyVFpP_rq6FlXq3NHmTQN3pZae3hIA=w2021-h569-no?authuser=1" class="center img-zoomable lazyload" alt="Second U; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220626-shor-algorithm/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Second U; <br/><br/><a href="/posts/20220626-shor-algorithm/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVZqHdG1Ov3hr5Qn2HB9PeNnP1uO7efKxW6Qp4CMUu47vDjzQ0C8s0z_2nKwHj_ZNAwi9y4BwRiq39cRU2HEWpELDs7tkYPhHd_6cbA4xqIzxZGkfsQd2z1Tu4SlyVFpP_rq6FlXq3NHmTQN3pZae3hIA=w2021-h569-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div style="border: 1px solid #888888;"></div><br/><br/><h2 id="iqft" class="article-heading">IQFT <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#iqft"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這部份我們之前討論過 (請參考前幾篇文章)，所以很容易可以實現。有兩種實作方式，IBM 這裡採用 SWAP 在前的版本。</p><div style="border: 1px solid #888888;"></div><br/><br/><h2 id="qpe" class="article-heading">QPE <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qpe"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>將上述電路合併在一起。</p><div style="border: 1px solid #888888;"></div><br/><br/><h2 id="轉譯電路-transpile" class="article-heading">轉譯電路 Transpile <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bd%89%e8%ad%af%e9%9b%bb%e8%b7%af-transpile"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"></div><br/><br/><h2 id="執行電路" class="article-heading">執行電路 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e9%9b%bb%e8%b7%af"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>要執行一個量子電路需要先進行 <code>assemble</code> (將資訊打包並產生 task ID) 接著再使用對應的 backend 執行。執行過一次 QPE (如下方程式碼) 算一次 Attempt。可以看到每個 Attempt 只用到一個 shot。若是用 1024 shot 統計可以發現 counting bit 只會出現四種結果 (&lsquo;0000&rsquo;, &lsquo;0100&rsquo;, &lsquo;1000&rsquo;, &lsquo;1100&rsquo;)。</p><div style="border: 1px solid #888888;"></div><p>運氣好只要一次 Attempt 就可以得到質因數結果，反之，要重複執行。因此會有一個迴圈去重複嘗試 <code>run_qpe</code> (第 81 行) 直到得到結果。</p><div style="border: 1px solid #888888;"></div><p> <br/><br/><details><br/>  <summary><span>展開查看完整程式碼 </span></summary><br/>  <div style="border: 1px solid #888888;"></div><br/></details><br/> <br/><br/><details><br/>  <summary><span>執行環境 </span></summary><br/>  <div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-env" data-lang="env"><span style="display:flex;"><span>$ cat /proc/version<br/></span></span><span style="display:flex;"><span>Linux version 5.10.16.3-microsoft-standard-WSL2 <span style="color:#f92672">(</span>oe-user@oe-host<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>x86_64-msft-linux-gcc <span style="color:#f92672">(</span>GCC<span style="color:#f92672">)</span> 9.3.0, GNU ld <span style="color:#f92672">(</span>GNU Binutils<span style="color:#f92672">)</span> 2.34.0.20200220<span style="color:#f92672">)</span> <span style="color:#75715e">#1 SMP Fri Apr 2 22:23:49 UTC 2021</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ uname -a<br/></span></span><span style="display:flex;"><span>Linux DESKTOP-M72RH5C 5.10.16.3-microsoft-standard-WSL2 <span style="color:#75715e">#1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ python --version<br/></span></span><span style="display:flex;"><span>Python 3.8.10<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ pip list<br/></span></span><span style="display:flex;"><span>Package              Version<br/></span></span><span style="display:flex;"><span>-------------------- -----------<br/></span></span><span style="display:flex;"><span>certifi              2022.5.18.1<br/></span></span><span style="display:flex;"><span>cffi                 1.15.0<br/></span></span><span style="display:flex;"><span>charset-normalizer   2.0.12<br/></span></span><span style="display:flex;"><span>click                8.1.3<br/></span></span><span style="display:flex;"><span>cryptography         37.0.2<br/></span></span><span style="display:flex;"><span>Deprecated           1.2.13<br/></span></span><span style="display:flex;"><span>dill                 0.3.5.1<br/></span></span><span style="display:flex;"><span>idna                 3.3<br/></span></span><span style="display:flex;"><span>mpmath               1.2.1<br/></span></span><span style="display:flex;"><span>networkx             2.8.3<br/></span></span><span style="display:flex;"><span>ntlm-auth            1.5.0<br/></span></span><span style="display:flex;"><span>numpy                1.22.4<br/></span></span><span style="display:flex;"><span>pbr                  5.9.0<br/></span></span><span style="display:flex;"><span>pip                  20.0.2<br/></span></span><span style="display:flex;"><span>pkg-resources        0.0.0<br/></span></span><span style="display:flex;"><span>ply                  3.11<br/></span></span><span style="display:flex;"><span>psutil               5.9.1<br/></span></span><span style="display:flex;"><span>pycparser            2.21<br/></span></span><span style="display:flex;"><span>python-constraint    1.4.0<br/></span></span><span style="display:flex;"><span>python-dateutil      2.8.2<br/></span></span><span style="display:flex;"><span>python-tsp           0.2.1<br/></span></span><span style="display:flex;"><span>qiskit               0.36.2<br/></span></span><span style="display:flex;"><span>qiskit-aer           0.10.4<br/></span></span><span style="display:flex;"><span>qiskit-ibmq-provider 0.19.1<br/></span></span><span style="display:flex;"><span>qiskit-ignis         0.7.1<br/></span></span><span style="display:flex;"><span>qiskit-terra         0.20.2<br/></span></span><span style="display:flex;"><span>requests             2.27.1<br/></span></span><span style="display:flex;"><span>requests-ntlm        1.1.0<br/></span></span><span style="display:flex;"><span>retworkx             0.11.0<br/></span></span><span style="display:flex;"><span>scipy                1.8.1<br/></span></span><span style="display:flex;"><span>setuptools           44.0.0<br/></span></span><span style="display:flex;"><span>six                  1.16.0<br/></span></span><span style="display:flex;"><span>stevedore            3.5.0<br/></span></span><span style="display:flex;"><span>symengine            0.9.2<br/></span></span><span style="display:flex;"><span>sympy                1.10.1<br/></span></span><span style="display:flex;"><span>tabulate             0.8.9<br/></span></span><span style="display:flex;"><span>tsplib95             0.7.1<br/></span></span><span style="display:flex;"><span>tweedledum           1.1.1<br/></span></span><span style="display:flex;"><span>urllib3              1.26.9<br/></span></span><span style="display:flex;"><span>websocket-client     1.3.2<br/></span></span><span style="display:flex;"><span>websockets           10.3<br/></span></span><span style="display:flex;"><span>wheel                0.34.2<br/></span></span><span style="display:flex;"><span>wrapt                1.14.1<br/></span></span></code></pre></div></div><br/></details></p><br/><br/><h2 id="執行結果" class="article-heading">執行結果 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>運氣較好:</li></ul><pre tabindex="0"><code>Attempt 1:<br/>Register Reading: 0100<br/>Corresponding Phase: 0.250000<br/>Result: r = 4<br/>Guessed Factors: 3 and 5<br/>*** Non-trivial factor found: 3 ***<br/>*** Non-trivial factor found: 5 ***<br/></code></pre><ul><li>運氣較差:</li></ul><pre tabindex="0"><code>Attempt 1:<br/>Register Reading: 0000<br/>Corresponding Phase: 0.000000<br/>Result: r = 1<br/><br/>Attempt 2:<br/>Register Reading: 0000<br/>Corresponding Phase: 0.000000<br/>Result: r = 1<br/><br/>Attempt 3:<br/>Register Reading: 0000<br/>Corresponding Phase: 0.000000<br/>Result: r = 1<br/><br/>Attempt 4:<br/>Register Reading: 1000<br/>Corresponding Phase: 0.500000<br/>Result: r = 2<br/>Guessed Factors: 3 and 1<br/>*** Non-trivial factor found: 3 ***<br/></code></pre><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>有些部分還是不能完全理解。尤其是 $U$ 的理論及實作，這裡留下一些我個人的疑問等待後續找到答案:</p><ul><li>$\mu$ 的部分，輸出似乎不是 $\mu$ 本身，而是四種狀態 (1, 4, 7, 13) 隨機出現。</li><li>無法直觀看出 QPE 中 phace kickback 的影響。</li></ul><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29" target="_blank" rel="noreferrer noopener">RSA (cryptosystem) - wiki</a></li><li><br/><br/><a href="https://www.youtube.com/watch?v=lvTqbM5Dq4Q" target="_blank" rel="noreferrer noopener">How Quantum Computers Break Encryption | Shor&rsquo;s Algorithm Explained - minutephysics youtube</a></li><li><br/><br/><a href="https://en.wikipedia.org/wiki/Shor%27s_algorithm" target="_blank" rel="noreferrer noopener">Shor&rsquo;s algorithm - wiki</a></li><li><br/><br/><a href="https://qiskit.org/textbook/ch-algorithms/shor.html" target="_blank" rel="noreferrer noopener">Shor&rsquo;s Algorithm - IBM</a></li><li><br/><br/><a href="https://jonathan-hui.medium.com/qc-period-finding-in-shors-algorithm-7eb0c22e8202" target="_blank" rel="noreferrer noopener">QC — Period finding in Shor’s Algorithm - Jonathan Hui</a></li><li><br/><br/><a href="https://github.com/Qiskit/qiskit-aer/issues/585" target="_blank" rel="noreferrer noopener">The seed_simulator doesn&rsquo;t work for list of circuits #585</a></li><li><br/><br/><a href="https://sharkyspool.home.blog/2019/08/02/large-integer-factorization-number-field-sieve-vs-shor/" target="_blank" rel="noreferrer noopener">Large Integer Factorization: Number Field Sieve vs Shor - Vladimir Silva</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Fredkin_gate" target="_blank" rel="noreferrer noopener">Fredkin gate</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Toffoli_gate" target="_blank" rel="noreferrer noopener">Toffoli gate</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Quantum Phase Estimation</title><link>https://aben20807.github.io/posts/20220623-quantum-phase-estimation/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220623-quantum-phase-estimation/</guid><description><![CDATA[
          <p>範例導向學習量子相位估計 (Quantum Phase Estimation)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220623-quantum-phase-estimation/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220623-quantum-phase-estimation/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>範例導向學習量子相位估計 (Quantum Phase Estimation)。</p><p>有錯再麻煩指正。</p><br/><br/><h1 id="用途" class="article-heading">用途 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a8%e9%80%94"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Quantum phase estimation (QPE) 的主要功能: finding the eigenvalue of a unitary operator (找出么正算子 的特徵值)</p><br/><br/><h1 id="review-linear-algebra" class="article-heading">Review linear algebra <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#review-linear-algebra"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>$A$ is a matrix, $\lambda$ is the eigenvalue of $A$ where two $u$ vectors are the eigenvectors.</p><p>$$Au = \lambda u$$</p><p>特性:</p><ul><li>$(A-\lambda I )u =0$</li><li>$\det(A-\lambda I ) =0\iff u \ne \vec{0}$</li></ul><br/><br/><h1 id="quantum-form-for-eigenvalue-and-eigenvector" class="article-heading">Quantum form for eigenvalue and eigenvector <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-form-for-eigenvalue-and-eigenvector"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>$U$ is a unitary matrix, $\lambda$ is the eigenvalue of $U$ where two $\mu$ vectors are the eigenvectors (or eigenstates).</p><p>$$U\lvert\mu\rangle = \lambda \lvert\mu\rangle$$</p><p>特性:</p><ul><li>$\because U$ is a unitary matrix $\therefore \lvert\det(U)\rvert =\lvert\lambda\rvert= 1 \Rightarrow\lambda = e^{i\theta} = e^{2\pi i\varphi}, 0 \le\varphi &lt; 1$</li><li>$\Rightarrow U\lvert\mu\rangle = e^{2\pi i\varphi}\lvert\mu\rangle$</li></ul><br/><br/><h2 id="example-x" class="article-heading">Example: X <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-x"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$X$ gate has two eigenvalues ($\lambda_1, \lambda_2$) and corresponding eigenvectors ($\lvert \mu_1\rangle, \lvert \mu_2\rangle$)</p><p>$U = X =\begin{bmatrix}0&amp;1\\1&amp;0\end{bmatrix}$</p><p>$\det(X-\lambda I) = 0\Rightarrow$</p><p>$\begin{vmatrix}-\lambda&amp;1\\1&amp;-\lambda\end{vmatrix} = 0 = \lambda^2-1 \Rightarrow \lambda=\pm 1\Rightarrow$</p><p>$\begin{cases}<br/>\lambda_1 = 1, u_1 =\frac{1}{\sqrt{2}} \begin{bmatrix}1\\1\end{bmatrix}\Rightarrow \lvert \mu_1\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1 \rangle)\\<br/>\lambda_2 = -1, u_2 =\frac{1}{\sqrt{2}}<br/>\begin{bmatrix}1\\-1\end{bmatrix}\Rightarrow \lvert \mu_2\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1 \rangle<br/>\end{cases}$</p><br/><br/><h1 id="phase-kickback" class="article-heading">Phase kickback <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#phase-kickback"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Phase kickback 是在量子糾纏 (entanglement) 下的一種現象，原本在量子糾纏下 $C\mbox{-}U$ (controlled-U) 運算會由控制位元 (control bit) 影響目標位元 (target qubit)，然而在有些情況中目標位元會維持輸入的狀態反而是控制位元的相位 (phase) 會受到影響 (不影響 0, 1 的機率)。</p><p>可以看成 $\lambda\lvert xy\rangle$ 有兩種表達方式，但是展開後會發現確實是 control bit 受到影響，也就是 $(\lambda\lvert x\rangle)\lvert y\rangle$:</p><p>$\lambda\lvert xy\rangle = \lvert x\rangle(\lambda \lvert y\rangle) = (\lambda\lvert x\rangle)\lvert y\rangle$</p><br/><br/><h2 id="example-1-cx" class="article-heading">Example 1: CX <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-1-cx"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$U = X\Rightarrow C\mbox{-}U = CX = CNOT$</p><table><br/><thead><br/><tr><br/><th>Before CX</th><br/><th>After CX</th><br/></tr><br/></thead><br/><tbody><br/><tr><br/><td>$\small\lvert ++\rangle = \frac{1}{2}(\lvert00\rangle+\lvert01\rangle+\lvert10\rangle+\lvert11\rangle)$</td><br/><td>$\small\frac{1}{2}(\lvert00\rangle+\lvert01\rangle+\lvert11\rangle+\lvert10\rangle = \lvert ++\rangle$</td><br/></tr><br/><tr><br/><td>$\small\lvert +-\rangle = \frac{1}{2}(\lvert00\rangle-\lvert01\rangle+\lvert10\rangle-\lvert11\rangle)$</td><br/><td>$\small\frac{1}{2}(\lvert00\rangle-\lvert01\rangle+\lvert11\rangle-\lvert10\rangle = {\color{red}\lvert- -\rangle}$</td><br/></tr><br/><tr><br/><td>$\small\lvert -+\rangle = \frac{1}{2}(\lvert00\rangle+\lvert01\rangle-\lvert10\rangle-\lvert11\rangle)$</td><br/><td>$\small\frac{1}{2}(\lvert00\rangle+\lvert01\rangle-\lvert11\rangle-\lvert10\rangle = \lvert -+\rangle$</td><br/></tr><br/><tr><br/><td>$\small\lvert - -\rangle = \frac{1}{2}(\lvert00\rangle-\lvert01\rangle-\lvert10\rangle+\lvert11\rangle)$</td><br/><td>$\small\frac{1}{2}(\lvert00\rangle-\lvert01\rangle-\lvert11\rangle+\lvert10\rangle = {\color{red}\lvert+-\rangle}$</td><br/></tr><br/></tbody><br/></table><p>可以看到以 $\lvert +-\rangle, \lvert - -\rangle$ 為輸入的話其對應的結果反而是 control bit 的相位有變化。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV5K2MxurhOtvj645ycCpbgCKpMKife0d2ehu_vDTfe-xfIh6G-Mbm9Go2wZ3MfzI3GDeIB5Ga9kNL2jlcg0oXKcXv26IT9C5SwiXtiY6QoaM8gC1cclf5KyMce1ZKgApBOumCeZOeZNDcLEFbZnpojKg=w1625-h670-no?authuser=1" class="center img-zoomable" alt="$\lvert &#43;-\rangle$ for CX; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV5K2MxurhOtvj645ycCpbgCKpMKife0d2ehu_vDTfe-xfIh6G-Mbm9Go2wZ3MfzI3GDeIB5Ga9kNL2jlcg0oXKcXv26IT9C5SwiXtiY6QoaM8gC1cclf5KyMce1ZKgApBOumCeZOeZNDcLEFbZnpojKg=w1625-h670-no?authuser=1" class="center img-zoomable lazyload" alt="$\lvert &#43;-\rangle$ for CX; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$\lvert +-\rangle$ for CX; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV5K2MxurhOtvj645ycCpbgCKpMKife0d2ehu_vDTfe-xfIh6G-Mbm9Go2wZ3MfzI3GDeIB5Ga9kNL2jlcg0oXKcXv26IT9C5SwiXtiY6QoaM8gC1cclf5KyMce1ZKgApBOumCeZOeZNDcLEFbZnpojKg=w1625-h670-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-2-cz" class="article-heading">Example 2: CZ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-2-cz"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$U = Z\Rightarrow C\mbox{-}U = CZ$</p><p>$CZ\big(\frac{1}{\sqrt{2}}(<br/>\lvert 01\rangle+\lvert 11\rangle)\big) =\frac{1}{\sqrt{2}}<br/>(\lvert 01\rangle - \lvert 11\rangle)$</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUb1xcfRPJ1zQy88OXXceKap7FEYFlFYWwlL1JUS8Tad8yxF8UQQW5DUVrnfs864oK7lO0OJGB88MOQjAIM58jXA4teMaVVQwPBeQIWIvkp9YtwQ4S1Yu5VwbQYxKm9QyQTslWqX6FudBBV4l2PerVVpw=w1612-h704-no?authuser=1" class="center img-zoomable" alt="$\lvert &#43;1\rangle$ for CZ; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUb1xcfRPJ1zQy88OXXceKap7FEYFlFYWwlL1JUS8Tad8yxF8UQQW5DUVrnfs864oK7lO0OJGB88MOQjAIM58jXA4teMaVVQwPBeQIWIvkp9YtwQ4S1Yu5VwbQYxKm9QyQTslWqX6FudBBV4l2PerVVpw=w1612-h704-no?authuser=1" class="center img-zoomable lazyload" alt="$\lvert &#43;1\rangle$ for CZ; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$\lvert +1\rangle$ for CZ; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUb1xcfRPJ1zQy88OXXceKap7FEYFlFYWwlL1JUS8Tad8yxF8UQQW5DUVrnfs864oK7lO0OJGB88MOQjAIM58jXA4teMaVVQwPBeQIWIvkp9YtwQ4S1Yu5VwbQYxKm9QyQTslWqX6FudBBV4l2PerVVpw=w1612-h704-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="quantum-phase-estimation" class="article-heading">Quantum phase estimation <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-phase-estimation"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>利用 Phase kickback 的現象及 IQFT (請參考前幾篇文章) 來產生 $U$ 對應的 eigenvalue。</p><br/><br/><h2 id="運算式定義" class="article-heading">運算式定義 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e5%bc%8f%e5%ae%9a%e7%be%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$U$ 次方計算定義如下</p><p>$U^n\lvert\mu\rangle = \underbrace{U&hellip;U}_{n}\lvert\mu\rangle=\lambda^n \lvert\mu\rangle$</p><br/><br/><h2 id="邏輯閘" class="article-heading">邏輯閘 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%82%8f%e8%bc%af%e9%96%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>上方使用 $t$ 個 qubit 作為估計位 (counting qubits)，通常越多位會越精準，除非已被二進位小數完整表達。例如，$t = 3$，可以精確到 $\frac{1}{2^3} = \frac{1}{8}$。下方 $\lvert\mu\rangle$ 為 eigenvector 輸入，輸出 $\lvert 2^t\varphi\rangle$ 為 eigenvalue。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXgACFY_PCI6HuBVOVuJgRTLRps_Q7tvE3MhVdn8ywbQe0L0ml-DT8kPIlMdx97rGWzENy5j30GSTdXlzaEJ_082BOVjavuQPTctX4gwUJcST_qLTytYS20KWDBidsibypwLycZ8UCjnbgZxh7srD44ig=w1625-h660-no?authuser=1" class="center img-zoomable" alt="QPE, Little-Endian: 高記憶體位置放 MSB; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXgACFY_PCI6HuBVOVuJgRTLRps_Q7tvE3MhVdn8ywbQe0L0ml-DT8kPIlMdx97rGWzENy5j30GSTdXlzaEJ_082BOVjavuQPTctX4gwUJcST_qLTytYS20KWDBidsibypwLycZ8UCjnbgZxh7srD44ig=w1625-h660-no?authuser=1" class="center img-zoomable lazyload" alt="QPE, Little-Endian: 高記憶體位置放 MSB; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">QPE, Little-Endian: 高記憶體位置放 MSB; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXgACFY_PCI6HuBVOVuJgRTLRps_Q7tvE3MhVdn8ywbQe0L0ml-DT8kPIlMdx97rGWzENy5j30GSTdXlzaEJ_082BOVjavuQPTctX4gwUJcST_qLTytYS20KWDBidsibypwLycZ8UCjnbgZxh7srD44ig=w1625-h660-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-1-u--x-with-t--1" class="article-heading">Example 1: U = X with t = 1 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-1-u--x-with-t--1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>以其中一組 eigenvector、eigenvalue 示範。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXyRPDyzTMv96qdVNBjwAOSBq-orTIKIETTwrkh7FuCLt96Vgq8HXAzwGweJ8fyUeLl01la38JnGiKyi9yI3-hN5ZLoXIVpDL9XBBznUWaT_AgHbce2Ibs5ph6wwuOPe52JWe0-pJ4fn7eLXRCQJtqexg=w1625-h528-no?authuser=1" class="center img-zoomable" alt="QPE on $U = X, t = 1$; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXyRPDyzTMv96qdVNBjwAOSBq-orTIKIETTwrkh7FuCLt96Vgq8HXAzwGweJ8fyUeLl01la38JnGiKyi9yI3-hN5ZLoXIVpDL9XBBznUWaT_AgHbce2Ibs5ph6wwuOPe52JWe0-pJ4fn7eLXRCQJtqexg=w1625-h528-no?authuser=1" class="center img-zoomable lazyload" alt="QPE on $U = X, t = 1$; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">QPE on $U = X, t = 1$; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXyRPDyzTMv96qdVNBjwAOSBq-orTIKIETTwrkh7FuCLt96Vgq8HXAzwGweJ8fyUeLl01la38JnGiKyi9yI3-hN5ZLoXIVpDL9XBBznUWaT_AgHbce2Ibs5ph6wwuOPe52JWe0-pJ4fn7eLXRCQJtqexg=w1625-h528-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>從結果可以有以下推導: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i (2^{0}\varphi)}\lvert 1\rangle)\Rightarrow e^{2\pi i (2^0\varphi)} =\lambda = -1$，不過相位的資訊在觀測時就會消失，所以這邊要借助 IQFT 來將相位的資訊 (Fourier basis) 轉換到 qubit (Computational basis) 上，如下圖。</p><p>有 IQFT 的幫助下，測量的輸出是 $p = \lvert 1\rangle$，此時可以根據 $t = 1$ 代入求 eigenvalue 的公式: $\lambda = e^{2\pi i(\frac{p}{2^t})} = e^{2\pi i(\frac{1}{2^1})} = -1$。這邊因為剛好 $U = X$ 所需要的精確度是 0.5 所以 $t$ (counting qubits) 只需要 1 個位元即可。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWoNMnzYn7CRwQdflxmm9L2K1_S5QoUpbFdlA9wCrRBM8yJ8n0qpOpY1hfkhkfGrGfZVCcyKkcCbESHKYVX0n3VpRTT4mFFSVQmJJK78HlJvNXjNXRd-3ZEBPJbp3dxAJ4dpnAXUcFGA4GUPt0g5M6EJQ=w1265-h411-no?authuser=1" class="center img-zoomable" alt="QPE on $U = X, t = 1$ with IQFT; QPE_X_1bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWoNMnzYn7CRwQdflxmm9L2K1_S5QoUpbFdlA9wCrRBM8yJ8n0qpOpY1hfkhkfGrGfZVCcyKkcCbESHKYVX0n3VpRTT4mFFSVQmJJK78HlJvNXjNXRd-3ZEBPJbp3dxAJ4dpnAXUcFGA4GUPt0g5M6EJQ=w1265-h411-no?authuser=1" class="center img-zoomable lazyload" alt="QPE on $U = X, t = 1$ with IQFT; QPE_X_1bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">QPE on $U = X, t = 1$ with IQFT; QPE_X_1bit; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWoNMnzYn7CRwQdflxmm9L2K1_S5QoUpbFdlA9wCrRBM8yJ8n0qpOpY1hfkhkfGrGfZVCcyKkcCbESHKYVX0n3VpRTT4mFFSVQmJJK78HlJvNXjNXRd-3ZEBPJbp3dxAJ4dpnAXUcFGA4GUPt0g5M6EJQ=w1265-h411-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>實際執行</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUswU-FSrVYVwyQAz1kX4-wTK-CIQ9NQwec82-D2w8cWVENR0kvPG2g9BjK-rrVH9mR_w1v5nIy1_bn8bJFtSC2gyZFhI9yN8E8svJdRtwW4y19mJy2twYY4gDarOm_tsPLH96J4GAb4Z7P74pbw9Nwdg=w1265-h645-no?authuser=1" class="center img-zoomable" alt="IBM Composer circuit - QPE_X_1bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUswU-FSrVYVwyQAz1kX4-wTK-CIQ9NQwec82-D2w8cWVENR0kvPG2g9BjK-rrVH9mR_w1v5nIy1_bn8bJFtSC2gyZFhI9yN8E8svJdRtwW4y19mJy2twYY4gDarOm_tsPLH96J4GAb4Z7P74pbw9Nwdg=w1265-h645-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer circuit - QPE_X_1bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer circuit - QPE_X_1bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUswU-FSrVYVwyQAz1kX4-wTK-CIQ9NQwec82-D2w8cWVENR0kvPG2g9BjK-rrVH9mR_w1v5nIy1_bn8bJFtSC2gyZFhI9yN8E8svJdRtwW4y19mJy2twYY4gDarOm_tsPLH96J4GAb4Z7P74pbw9Nwdg=w1265-h645-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUnUmWP7vURMBk5kNCMFtplGHRfi0j-Z6x50YIEtIbsFOycklpPNOx8t7y_WLIPZvgDsm4klM_0WVVKdYCAp-2l5zqPEUtMUu_Z1FU9WSJM4B1YiI6aHVd2LNBnhv73ZLvsinkRK7tvhguIS_eKRin5LQ=w1266-h519-no?authuser=1" class="center img-zoomable" alt="IBM Composer result - QPE_X_1bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUnUmWP7vURMBk5kNCMFtplGHRfi0j-Z6x50YIEtIbsFOycklpPNOx8t7y_WLIPZvgDsm4klM_0WVVKdYCAp-2l5zqPEUtMUu_Z1FU9WSJM4B1YiI6aHVd2LNBnhv73ZLvsinkRK7tvhguIS_eKRin5LQ=w1266-h519-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer result - QPE_X_1bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer result - QPE_X_1bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUnUmWP7vURMBk5kNCMFtplGHRfi0j-Z6x50YIEtIbsFOycklpPNOx8t7y_WLIPZvgDsm4klM_0WVVKdYCAp-2l5zqPEUtMUu_Z1FU9WSJM4B1YiI6aHVd2LNBnhv73ZLvsinkRK7tvhguIS_eKRin5LQ=w1266-h519-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-2-u--x-with-t--2" class="article-heading">Example 2: U = X with t = 2 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-2-u--x-with-t--2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>雖然 $t$ (counting qubits) 只需要 1 個位元即可，這邊還是使用這個邏輯閘當作使用更多 $t$ 的情況。$t = 2$ 輸出為 $\lvert 10\rangle$ 代入公式 $\lambda = e^{2\pi i(\frac{p}{2^t})} = e^{2\pi i(\frac{2}{2^2})} = -1$。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVCSfWYS0s3LF7w_TE0XY7fZlQ59yp-QfvetmxT-LPkjI5_Exjh7E-8gK2j0VwzE2Vde6y93o-niA4M_QJNj-s3MC2DknQEnmfIBuy0TISCcIvQAGqqszC2KfRJUbwb1hJB9jq1gpQoNbR5dgyymY9dZg=w1265-h308-no?authuser=1" class="center img-zoomable" alt="QPE on $U = X, t = 2$ with IQFT; QPE_X_2bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVCSfWYS0s3LF7w_TE0XY7fZlQ59yp-QfvetmxT-LPkjI5_Exjh7E-8gK2j0VwzE2Vde6y93o-niA4M_QJNj-s3MC2DknQEnmfIBuy0TISCcIvQAGqqszC2KfRJUbwb1hJB9jq1gpQoNbR5dgyymY9dZg=w1265-h308-no?authuser=1" class="center img-zoomable lazyload" alt="QPE on $U = X, t = 2$ with IQFT; QPE_X_2bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">QPE on $U = X, t = 2$ with IQFT; QPE_X_2bit; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVCSfWYS0s3LF7w_TE0XY7fZlQ59yp-QfvetmxT-LPkjI5_Exjh7E-8gK2j0VwzE2Vde6y93o-niA4M_QJNj-s3MC2DknQEnmfIBuy0TISCcIvQAGqqszC2KfRJUbwb1hJB9jq1gpQoNbR5dgyymY9dZg=w1265-h308-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>實際執行</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVPgX4uASflbTaIlrM3dayKp1QUZB8azK0lkFqURz8Z5r3CPfK5muwo6PwiGCc53sbovGlztbQgg4BW4cfhoh_pYzLLGr84V-seUZEUJbP6E7zBCvns4fwjhjk8CVrJQHMGCTc4W9aRQNkghm-SXXmvEw=w1265-h413-no?authuser=1" class="center img-zoomable" alt="IBM Composer circuit - QPE_X_2bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVPgX4uASflbTaIlrM3dayKp1QUZB8azK0lkFqURz8Z5r3CPfK5muwo6PwiGCc53sbovGlztbQgg4BW4cfhoh_pYzLLGr84V-seUZEUJbP6E7zBCvns4fwjhjk8CVrJQHMGCTc4W9aRQNkghm-SXXmvEw=w1265-h413-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer circuit - QPE_X_2bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer circuit - QPE_X_2bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVPgX4uASflbTaIlrM3dayKp1QUZB8azK0lkFqURz8Z5r3CPfK5muwo6PwiGCc53sbovGlztbQgg4BW4cfhoh_pYzLLGr84V-seUZEUJbP6E7zBCvns4fwjhjk8CVrJQHMGCTc4W9aRQNkghm-SXXmvEw=w1265-h413-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUi57xrHcqhGeNOwqHpjB3cyI5eOSOvIR9jNp8J03napH3fHWiV3uGDt1Vc3CmrsLPZwIvOm_unxkQf0uXhl03lhrDfGtdke3AQ-DBKvn8qbAV4LVjYuXCcL1wJz0VGeSMJNn7YVmc1xbcseF-3TtsVqw=w1266-h513-no?authuser=1" class="center img-zoomable" alt="IBM Composer result - QPE_X_2bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUi57xrHcqhGeNOwqHpjB3cyI5eOSOvIR9jNp8J03napH3fHWiV3uGDt1Vc3CmrsLPZwIvOm_unxkQf0uXhl03lhrDfGtdke3AQ-DBKvn8qbAV4LVjYuXCcL1wJz0VGeSMJNn7YVmc1xbcseF-3TtsVqw=w1266-h513-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer result - QPE_X_2bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer result - QPE_X_2bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUi57xrHcqhGeNOwqHpjB3cyI5eOSOvIR9jNp8J03napH3fHWiV3uGDt1Vc3CmrsLPZwIvOm_unxkQf0uXhl03lhrDfGtdke3AQ-DBKvn8qbAV4LVjYuXCcL1wJz0VGeSMJNn7YVmc1xbcseF-3TtsVqw=w1266-h513-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-3-u--x-with-t--3" class="article-heading">Example 3: U = X with t = 3 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-3-u--x-with-t--3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXpgGU7CVt-4LR4UTo5jb858EC-_yquwv5bTvHqOIz6CWB6k7dDUx_InsHY_P4ZUWSD17EL9e8Tw8fyVj4r6fy1xNt579rTbthM07H4v0KtP0Xn0YGFx5rEUppuYdmLYSbGmXSXfECrFmcT1ptRC02HKw=w1266-h279-no?authuser=1" class="center img-zoomable" alt="QPE_X_3bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXpgGU7CVt-4LR4UTo5jb858EC-_yquwv5bTvHqOIz6CWB6k7dDUx_InsHY_P4ZUWSD17EL9e8Tw8fyVj4r6fy1xNt579rTbthM07H4v0KtP0Xn0YGFx5rEUppuYdmLYSbGmXSXfECrFmcT1ptRC02HKw=w1266-h279-no?authuser=1" class="center img-zoomable lazyload" alt="QPE_X_3bit; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">QPE_X_3bit; <br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXpgGU7CVt-4LR4UTo5jb858EC-_yquwv5bTvHqOIz6CWB6k7dDUx_InsHY_P4ZUWSD17EL9e8Tw8fyVj4r6fy1xNt579rTbthM07H4v0KtP0Xn0YGFx5rEUppuYdmLYSbGmXSXfECrFmcT1ptRC02HKw=w1266-h279-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVJZiKduFAseFiwV1D7jPauNhSM2j_ElemITO0Ypf3bu57iPDiNm4P2Tlu1GL5rotJ2qdneo--HHoUmPi2bfabeVYu-T_sM58Kq8zcw20tQ4qyKupDGSggVajWdsR4eycPjiwGoQMVJWbHh_I9vbhhorA=w1265-h281-no?authuser=1" class="center img-zoomable" alt="IBM Composer circuit - QPE_X_3bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVJZiKduFAseFiwV1D7jPauNhSM2j_ElemITO0Ypf3bu57iPDiNm4P2Tlu1GL5rotJ2qdneo--HHoUmPi2bfabeVYu-T_sM58Kq8zcw20tQ4qyKupDGSggVajWdsR4eycPjiwGoQMVJWbHh_I9vbhhorA=w1265-h281-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer circuit - QPE_X_3bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer circuit - QPE_X_3bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVJZiKduFAseFiwV1D7jPauNhSM2j_ElemITO0Ypf3bu57iPDiNm4P2Tlu1GL5rotJ2qdneo--HHoUmPi2bfabeVYu-T_sM58Kq8zcw20tQ4qyKupDGSggVajWdsR4eycPjiwGoQMVJWbHh_I9vbhhorA=w1265-h281-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXMdx0k1D-axmC2_8agPZuldgV-rPL4RUAzMSw6PhO6_2bXNvKsTe7GnXcxSRWo06FiXoJpaH91P3an8u5mBlLJpgKFQxsCtwjalxQkeRi_LXXunVVQ2CYyYxzglWPq0ZJAPIwn18hHrmWLQTQ31xP6ig=w1265-h532-no?authuser=1" class="center img-zoomable" alt="IBM Composer result - QPE_X_3bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXMdx0k1D-axmC2_8agPZuldgV-rPL4RUAzMSw6PhO6_2bXNvKsTe7GnXcxSRWo06FiXoJpaH91P3an8u5mBlLJpgKFQxsCtwjalxQkeRi_LXXunVVQ2CYyYxzglWPq0ZJAPIwn18hHrmWLQTQ31xP6ig=w1265-h532-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer result - QPE_X_3bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer result - QPE_X_3bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXMdx0k1D-axmC2_8agPZuldgV-rPL4RUAzMSw6PhO6_2bXNvKsTe7GnXcxSRWo06FiXoJpaH91P3an8u5mBlLJpgKFQxsCtwjalxQkeRi_LXXunVVQ2CYyYxzglWPq0ZJAPIwn18hHrmWLQTQ31xP6ig=w1265-h532-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-4-u--x-with-t--4" class="article-heading">Example 4: U = X with t = 4 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-4-u--x-with-t--4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV1sJjJYivHBoUTu1jIMcEhUp9CY5AaPynEDW538XGkFxMvhUYplENnUQW2-AdDM30lb6Niq3K09PJl3Nww4yqaEluEaATUqYIRzhYWI-mgJv8hhSl8tcG0d7KtudxWU32GuL9ck9G2Aq9lnaN6TfXshA=w1265-h209-no?authuser=1" class="center img-zoomable" alt="IBM Composer circuit - QPE_X_4bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV1sJjJYivHBoUTu1jIMcEhUp9CY5AaPynEDW538XGkFxMvhUYplENnUQW2-AdDM30lb6Niq3K09PJl3Nww4yqaEluEaATUqYIRzhYWI-mgJv8hhSl8tcG0d7KtudxWU32GuL9ck9G2Aq9lnaN6TfXshA=w1265-h209-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer circuit - QPE_X_4bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer circuit - QPE_X_4bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV1sJjJYivHBoUTu1jIMcEhUp9CY5AaPynEDW538XGkFxMvhUYplENnUQW2-AdDM30lb6Niq3K09PJl3Nww4yqaEluEaATUqYIRzhYWI-mgJv8hhSl8tcG0d7KtudxWU32GuL9ck9G2Aq9lnaN6TfXshA=w1265-h209-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXhnOGo263e0jLa38kbYc26PeUh_rJ-oLOYy2n9dyXnWUP6ryAsy6ydQIOAiVKNpNJDcQaA3IIqSx4jrTkvxyrz6lufRQZtPuw4mWYQk5LcsT-8Q56SEXSCbSzoXiLJd1MRIzViVEtXAG7DObvr8H5hKg=w1265-h446-no?authuser=1" class="center img-zoomable" alt="IBM Composer result - QPE_X_4bit" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXhnOGo263e0jLa38kbYc26PeUh_rJ-oLOYy2n9dyXnWUP6ryAsy6ydQIOAiVKNpNJDcQaA3IIqSx4jrTkvxyrz6lufRQZtPuw4mWYQk5LcsT-8Q56SEXSCbSzoXiLJd1MRIzViVEtXAG7DObvr8H5hKg=w1265-h446-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer result - QPE_X_4bit"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer result - QPE_X_4bit</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXhnOGo263e0jLa38kbYc26PeUh_rJ-oLOYy2n9dyXnWUP6ryAsy6ydQIOAiVKNpNJDcQaA3IIqSx4jrTkvxyrz6lufRQZtPuw4mWYQk5LcsT-8Q56SEXSCbSzoXiLJd1MRIzViVEtXAG7DObvr8H5hKg=w1265-h446-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="eigenvectors-superposition" class="article-heading">Eigenvectors superposition <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvectors-superposition"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>上面示範的都是事先已知 eigenvector，例如都使用 $X$ 的其中一個 eigenvector ($\lvert \mu_2\rangle$) 來求得 eigenvalue ($\lambda_2$)。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWdPpWotosWT0LDEJwmkC3HSoO46TEjaqFxoyrOAFErD0FrqNTS_sLKvllOcWTKTldmKJTH0ytMklNznu0_tfvUBO6EhNlN0jrAd2Fd18RG8byKYkH4FlheBu0L3r1wUJKsECqGdSNhNSkUiZJUXwy0EA=w1265-h317-no?authuser=1" class="center img-zoomable" alt="<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWdPpWotosWT0LDEJwmkC3HSoO46TEjaqFxoyrOAFErD0FrqNTS_sLKvllOcWTKTldmKJTH0ytMklNznu0_tfvUBO6EhNlN0jrAd2Fd18RG8byKYkH4FlheBu0L3r1wUJKsECqGdSNhNSkUiZJUXwy0EA=w1265-h317-no?authuser=1" class="center img-zoomable lazyload" alt="<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"><br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWdPpWotosWT0LDEJwmkC3HSoO46TEjaqFxoyrOAFErD0FrqNTS_sLKvllOcWTKTldmKJTH0ytMklNznu0_tfvUBO6EhNlN0jrAd2Fd18RG8byKYkH4FlheBu0L3r1wUJKsECqGdSNhNSkUiZJUXwy0EA=w1265-h317-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>但是一般情況沒這麼容易，因為若是知道 eigenvector 的話直接化簡就可以得到 eigenvalue。這裡可以利用疊加態同時存在不同狀態的能力，將 eigenvector 的疊加態當作輸入，則觀測輸出就會是其中一個 eigenvalue，利用統計的方式找出機率最大的幾個來代入公式。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXQuHaDe44KRxWm6XsYN4KToiLuRWvUWU-vyDf6WDrR6m7vFeaWYti20EheKTgFpBWwfTkiA5Fofn-lKN6pkR9_W3_njgB7tfTNVQdcHtWbNCcxznEyhFegC0ZsFFA7JV98pjIBMjnY6Syv0iCQkjc6KQ=w1265-h327-no?authuser=1" class="center img-zoomable" alt="<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXQuHaDe44KRxWm6XsYN4KToiLuRWvUWU-vyDf6WDrR6m7vFeaWYti20EheKTgFpBWwfTkiA5Fofn-lKN6pkR9_W3_njgB7tfTNVQdcHtWbNCcxznEyhFegC0ZsFFA7JV98pjIBMjnY6Syv0iCQkjc6KQ=w1265-h327-no?authuser=1" class="center img-zoomable lazyload" alt="<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220623-quantum-phase-estimation/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"><br/><br/><a href="/posts/20220623-quantum-phase-estimation/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXQuHaDe44KRxWm6XsYN4KToiLuRWvUWU-vyDf6WDrR6m7vFeaWYti20EheKTgFpBWwfTkiA5Fofn-lKN6pkR9_W3_njgB7tfTNVQdcHtWbNCcxznEyhFegC0ZsFFA7JV98pjIBMjnY6Syv0iCQkjc6KQ=w1265-h327-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="example-u--x-with-t--4" class="article-heading">Example: U = X with t = 4 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-u--x-with-t--4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>回顧 $X$ 有兩組 eigenvector、eigenvalue: $(\lambda_1, \mu_1), (\lambda_2, \mu_2)$</p><p>其中 $\mu_1\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1 \rangle)$、$\mu_2\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1 \rangle)$，這邊可以發現 $\lvert\mu_1\rangle+ \lvert \mu_2\rangle =\lvert 0\rangle$，因此以疊加態當作輸入的會變得容易許多。</p><p><code>q[4]</code> 為 eigenvectors 疊加態:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWmB8gC_Xy72K7GBnCJh3U1cdD41pjG5W99HzXIc5dfm9jFftop4g-fgT6uuIdqcM_vatqylQh3gjdhPCUlzUTdBP9A5k_vqZxzpUtbBApUEDZoOWVcYSyAG30dioud3mUOic0JPttjheundNIlZ9Jc_g=w2200-h387-no?authuser=1" class="center img-zoomable" alt="IBM Composer circuit - QPE_X_4bit_super" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWmB8gC_Xy72K7GBnCJh3U1cdD41pjG5W99HzXIc5dfm9jFftop4g-fgT6uuIdqcM_vatqylQh3gjdhPCUlzUTdBP9A5k_vqZxzpUtbBApUEDZoOWVcYSyAG30dioud3mUOic0JPttjheundNIlZ9Jc_g=w2200-h387-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer circuit - QPE_X_4bit_super"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer circuit - QPE_X_4bit_super</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWmB8gC_Xy72K7GBnCJh3U1cdD41pjG5W99HzXIc5dfm9jFftop4g-fgT6uuIdqcM_vatqylQh3gjdhPCUlzUTdBP9A5k_vqZxzpUtbBApUEDZoOWVcYSyAG30dioud3mUOic0JPttjheundNIlZ9Jc_g=w2200-h387-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLU2YZ3fKRt_fEfp3lejiOFmg7CGIjznB8rcL6doT0sIhKCElT1AuRkQPfXwcWpVWUuJFC7Z9y-kVOerxWAhjFZpKOVngcSwHTSgUlFFcjBwhK0bVRuvoakxLojfg0xRGRAf0xasQf3eDQttvSmN15yo_w=w2200-h760-no?authuser=1" class="center img-zoomable" alt="IBM Composer result - QPE_X_4bit_super" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLU2YZ3fKRt_fEfp3lejiOFmg7CGIjznB8rcL6doT0sIhKCElT1AuRkQPfXwcWpVWUuJFC7Z9y-kVOerxWAhjFZpKOVngcSwHTSgUlFFcjBwhK0bVRuvoakxLojfg0xRGRAf0xasQf3eDQttvSmN15yo_w=w2200-h760-no?authuser=1" class="center img-zoomable lazyload" alt="IBM Composer result - QPE_X_4bit_super"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">IBM Composer result - QPE_X_4bit_super</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLU2YZ3fKRt_fEfp3lejiOFmg7CGIjznB8rcL6doT0sIhKCElT1AuRkQPfXwcWpVWUuJFC7Z9y-kVOerxWAhjFZpKOVngcSwHTSgUlFFcjBwhK0bVRuvoakxLojfg0xRGRAf0xasQf3eDQttvSmN15yo_w=w2200-h760-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>根據輸出結果，理論上可以得到兩個 eigenvalue:</p><ul><li>${\color{red}\lvert 1000\rangle} =\lvert 8\rangle\Rightarrow\lambda =  e^{2\pi i {\color{blue}(}\frac{\color{red}{8}}{2^4}{\color{blue})}} = -1$</li><li>${\color{red}\lvert 0000\rangle} =\lvert 0\rangle\Rightarrow\lambda =  e^{2\pi i {\color{blue}(}\frac{\color{red}{0}}{2^4}{\color{blue})}} = 1$</li></ul><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://www.bilibili.com/read/cv10995770" target="_blank" rel="noreferrer noopener">量子计算 [5] &ndash; QFT &amp; 相位估计 - nyasyamorina</a></li><li><br/><br/><a href="https://zhuanlan.zhihu.com/p/156046500" target="_blank" rel="noreferrer noopener">为什么量子相位估计可以求矩阵特征值 - 你是想难为我胖虎</a></li><li><br/><br/><a href="https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html" target="_blank" rel="noreferrer noopener">Quantum Phase Estimation - IBM</a></li><li><br/><br/><a href="https://jonathan-hui.medium.com/qc-phase-estimation-in-shors-algorithm-acef265ebe50" target="_blank" rel="noreferrer noopener">QC — Phase estimation in Shor’s Algorithm - Jonathan Hui</a></li><li><br/><br/><a href="https://en.wikipedia.org/wiki/Controlled_NOT_gate" target="_blank" rel="noreferrer noopener">Controlled NOT gate - wiki</a></li><li><br/><br/><a href="https://towardsdatascience.com/quantum-phase-kickback-bb83d976a448" target="_blank" rel="noreferrer noopener">Quantum Phase Kickback - Frank Zickert | Quantum Machine Learning</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://terms.naer.edu.tw/detail/3191867/" target="_blank" rel="noreferrer noopener">unitary operator - 雙語詞彙資料庫翻譯</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>4-bit QFT IQFT</title><link>https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/</link><pubDate>Mon, 20 Jun 2022 15:06:24 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/</guid><description><![CDATA[
          <p>發現 IQFT 有其他的形式。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>發現 IQFT 有其他的形式。</p><p>可依照開頭或是結尾擺放 SWAP gate，讓其運算在古典電腦上減少誤差。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWJ_REgf9dk1JXbzlFvbMx7pAE0twGmebQsEIm_1IyQ9Q9RY4PNd5xQgEgizRRTx6stPbltfd8_XL4mux6074Yn1HCmSOj2EZlalYaNy4FbPstJr8jdf7cSDvh8zG-YKcS683yrK3BxJ1KpawiwpTQpDQ=w809-h620-no?authuser=1" class="center img-zoomable" alt="模擬的理想輸出結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWJ_REgf9dk1JXbzlFvbMx7pAE0twGmebQsEIm_1IyQ9Q9RY4PNd5xQgEgizRRTx6stPbltfd8_XL4mux6074Yn1HCmSOj2EZlalYaNy4FbPstJr8jdf7cSDvh8zG-YKcS683yrK3BxJ1KpawiwpTQpDQ=w809-h620-no?authuser=1" class="center img-zoomable lazyload" alt="模擬的理想輸出結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">模擬的理想輸出結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWJ_REgf9dk1JXbzlFvbMx7pAE0twGmebQsEIm_1IyQ9Q9RY4PNd5xQgEgizRRTx6stPbltfd8_XL4mux6074Yn1HCmSOj2EZlalYaNy4FbPstJr8jdf7cSDvh8zG-YKcS683yrK3BxJ1KpawiwpTQpDQ=w809-h620-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="version-1" class="article-heading">Version 1 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#version-1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXW7Al0t-UBKD-HhpBmQZEcVLYANR72aitOtaqSTE__Yn_NU8m1irX_a7E3LJpppXNUODVGeVgnmQh-mCbR7BsPT13f7qGg2q0D7FkUFPmsAtAlRfXk19aZMgu8PkJskTI6N76Hcd3C4wRxAG7mAY2MkQ=w2685-h468-no?authuser=1" class="center img-zoomable" alt="Version 1" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXW7Al0t-UBKD-HhpBmQZEcVLYANR72aitOtaqSTE__Yn_NU8m1irX_a7E3LJpppXNUODVGeVgnmQh-mCbR7BsPT13f7qGg2q0D7FkUFPmsAtAlRfXk19aZMgu8PkJskTI6N76Hcd3C4wRxAG7mAY2MkQ=w2685-h468-no?authuser=1" class="center img-zoomable lazyload" alt="Version 1"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Version 1</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXW7Al0t-UBKD-HhpBmQZEcVLYANR72aitOtaqSTE__Yn_NU8m1irX_a7E3LJpppXNUODVGeVgnmQh-mCbR7BsPT13f7qGg2q0D7FkUFPmsAtAlRfXk19aZMgu8PkJskTI6N76Hcd3C4wRxAG7mAY2MkQ=w2685-h468-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p> <br/><br/><details><br/>  <summary><span>Version 1 OpenQASM code </span></summary><br/>  <div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">8</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">8</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">1</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">2</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">3</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">3</span>];<br/></span></span></code></pre></div></div><br/></details><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWv1--GuqjsOcV8mHiX-W8_Bg_5ZQSdK5rOqSdyrojtwYSy9__YJYZAuFtW3YJoFQp7p1x2LTQPq1HnbJYBenQhi9FkuF9kVyFJBtfDxt3hEoqmGqt2e1FoPcAO83_1HAyoo8_ZFTtWlAuNLRMBSzQv_A=w976-h741-no?authuser=1" class="center img-zoomable" alt="Version 1 result on ibmq_lima" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWv1--GuqjsOcV8mHiX-W8_Bg_5ZQSdK5rOqSdyrojtwYSy9__YJYZAuFtW3YJoFQp7p1x2LTQPq1HnbJYBenQhi9FkuF9kVyFJBtfDxt3hEoqmGqt2e1FoPcAO83_1HAyoo8_ZFTtWlAuNLRMBSzQv_A=w976-h741-no?authuser=1" class="center img-zoomable lazyload" alt="Version 1 result on ibmq_lima"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Version 1 result on ibmq_lima</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWv1--GuqjsOcV8mHiX-W8_Bg_5ZQSdK5rOqSdyrojtwYSy9__YJYZAuFtW3YJoFQp7p1x2LTQPq1HnbJYBenQhi9FkuF9kVyFJBtfDxt3hEoqmGqt2e1FoPcAO83_1HAyoo8_ZFTtWlAuNLRMBSzQv_A=w976-h741-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="version-2" class="article-heading">Version 2 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#version-2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWuSfovX8z0EGFxGjFJIIjtPJAyrOOw9LXW2G-8B_Yv0Gc1hERKWDOjsBVjzi7iseB6tOsDw9F2sYNI_pwgE_O7qQQspUU_BgzGlS8-qi4FVAoumPjRXOFWTdx2O2sijVDQFKcGoDvY9DYUFKwvUaQHGA=w2673-h471-no?authuser=1" class="center img-zoomable" alt="Version 2" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWuSfovX8z0EGFxGjFJIIjtPJAyrOOw9LXW2G-8B_Yv0Gc1hERKWDOjsBVjzi7iseB6tOsDw9F2sYNI_pwgE_O7qQQspUU_BgzGlS8-qi4FVAoumPjRXOFWTdx2O2sijVDQFKcGoDvY9DYUFKwvUaQHGA=w2673-h471-no?authuser=1" class="center img-zoomable lazyload" alt="Version 2"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Version 2</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWuSfovX8z0EGFxGjFJIIjtPJAyrOOw9LXW2G-8B_Yv0Gc1hERKWDOjsBVjzi7iseB6tOsDw9F2sYNI_pwgE_O7qQQspUU_BgzGlS8-qi4FVAoumPjRXOFWTdx2O2sijVDQFKcGoDvY9DYUFKwvUaQHGA=w2673-h471-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p> <br/><br/><details><br/>  <summary><span>Version 2 OpenQASM code </span></summary><br/>  <div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">8</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">8</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">4</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">1</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">2</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">3</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">3</span>];<br/></span></span></code></pre></div></div><br/></details><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWwHz6DMl5OuFpyZqoowtN3hFkgJ-9KL47cOCcJhugwEQt6EtX3Cs5jmGIBiAkwFXgTxDfTw9HVByfOKb0rZH5OwZ3ZgFPGPykk88QSmiaRCb41UpllqrMj0dwnio15iOW_IhK5lptX-vFTcgB3iNLwDw=w991-h725-no?authuser=1" class="center img-zoomable" alt="Version 2 result on ibmq_lima" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWwHz6DMl5OuFpyZqoowtN3hFkgJ-9KL47cOCcJhugwEQt6EtX3Cs5jmGIBiAkwFXgTxDfTw9HVByfOKb0rZH5OwZ3ZgFPGPykk88QSmiaRCb41UpllqrMj0dwnio15iOW_IhK5lptX-vFTcgB3iNLwDw=w991-h725-no?authuser=1" class="center img-zoomable lazyload" alt="Version 2 result on ibmq_lima"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Version 2 result on ibmq_lima</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWwHz6DMl5OuFpyZqoowtN3hFkgJ-9KL47cOCcJhugwEQt6EtX3Cs5jmGIBiAkwFXgTxDfTw9HVByfOKb0rZH5OwZ3ZgFPGPykk88QSmiaRCb41UpllqrMj0dwnio15iOW_IhK5lptX-vFTcgB3iNLwDw=w991-h725-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>不過目前看起來 version 1 的執行結果好像似乎大概可能比 version 2 好。</p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" target="_blank" rel="noreferrer noopener">Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li></ul>
        ]]></description></item><item><title>Generalized Quantum Fourier Transform</title><link>https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/</link><pubDate>Thu, 19 May 2022 16:02:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/</guid><description><![CDATA[
          <p>上上篇 &ldquo;<br/><br/><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/">Quantum Fourier Transform</a>&rdquo; 介紹了 DFT 與 QFT 之間的關係，並用一些小規模的範例讓讀者可以方便驗證該理論。接下來我們要往更一般化的形式以完善 QFT 的介紹。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>上上篇 &ldquo;<br/><br/><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/">Quantum Fourier Transform</a>&rdquo; 介紹了 DFT 與 QFT 之間的關係，並用一些小規模的範例讓讀者可以方便驗證該理論。接下來我們要往更一般化的形式以完善 QFT 的介紹。</p><p>有錯再麻煩指正，感謝。</p><br/><br/><h1 id="符號" class="article-heading">符號 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%ac%a6%e8%99%9f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>$i = \sqrt{-1}$</li><li>$N = 2^n, n = \log N$</li><li>為了避免搞混，這裡使用 $a, b$ 表示 n-bit 量子位元，原本的 $x, y$ 表示 N 個古典機率分佈。可以想作二進位編碼，例如，$a_0, &hellip;, a_{n-1}$ 皆為 $0$ 的 $\lvert 00&hellip;0\rangle$，表示 N 種情況中 $x_0$ 機率為 $1$ 其餘 $x_1, &hellip;, x_{N-1}$ 為 $0$ 的 $\begin{bmatrix}1&amp;0&amp;0&amp;&hellip;&amp;0\end{bmatrix}^T$。同理，$(b_0, &hellip;, b_{n-1})$ 可表示 $(y_0, &hellip;, y_{N-1})$。其實它們是在描述同一件事: $\lvert x\rangle = \begin{bmatrix}x_0 &amp; x_1 &amp; &hellip; &amp; x_{N-1}\end{bmatrix}^T = \lvert a\rangle = \lvert a_0 a_1&hellip;a_{n-1}\rangle$</li><li>$[0.a_0a_1&hellip;a_{n-1}]$ 的用法是二進位的分數表示，例如 $0.1$ 表示 $\frac{1}{2}$，用於方便表示連續 $\frac{1}{2^n}$。較嚴謹的定義為: $[0.a_0a_1&hellip;a_{n-1}] = \sum_{k = 0}^{n-1}a_k2^{-(k+1)}$。</li></ul><br/><br/><h1 id="recall" class="article-heading">Recall <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#recall"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>QFT:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br/>\newline<br/>\newline<br/>\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br/>\newline<br/>{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><br/><br/><h1 id="generalized-qft-matrix" class="article-heading">Generalized QFT Matrix <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#generalized-qft-matrix"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="矩陣形式" class="article-heading">矩陣形式 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9f%a9%e9%99%a3%e5%bd%a2%e5%bc%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$\omega = e^{\frac{2\pi i}{N}}$, $\omega_N$ 的下標 $N$ 省略</p><p>$$<br/>M_{QFT} = {\frac{1}{\sqrt{N}} <br><br/>\small\begin{bmatrix} <br><br/>\omega^{0\times 0} &amp; \omega^{0\times 1} &amp; \omega^{0\times 2} &amp; \ldots &amp; \omega^{0\times (N-1)}\\ <br><br/>\omega^{1\times 0} &amp; \omega^{1\times 1} &amp; \omega^{1\times 2}&amp; \ldots &amp; \omega^{1\times (N-1)}\\ <br><br/>\omega^{2\times 0} &amp; \omega^{2\times 1} &amp; \omega^{2\times 2}&amp; \ldots &amp; \omega^{2\times (N-1)}\\ <br><br/>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ <br><br/>\omega^{(N-1)\times 0} &amp; \omega^{(N-1)\times 1} &amp; \omega^{(N-1)\times 2}&amp; \ldots &amp; \omega^{(N-1)\times (N-1)}\end{bmatrix}_{N\times N}}<br/>$$</p><br/><br/><h2 id="運算過程" class="article-heading">運算過程 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e9%81%8e%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>\lvert a \rangle&amp;\xrightarrow{QFT}\lvert b\rangle<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>其中依照情境 (因為 QFT 前後也可以有其他量子邏輯閘) 作古典跟量子之間的轉換:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>\begin{bmatrix}x_0 &amp; x_1 &amp; &hellip; &amp; x_{N-1}\end{bmatrix}^T&amp;\xrightarrow{encoding}\lvert a \rangle<br/>\newline<br/>\newline<br/>\lvert b\rangle&amp;\xrightarrow{decoding}\begin{bmatrix}y_0 &amp; y_1 &amp; &hellip; &amp; y_{N-1}\end{bmatrix}^T<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>Encoding 又可稱作 Quantum Embedding  用於將古典資料轉成量子狀態，可細分為 Basis Embedding、Amplitude Embedding 兩種。這裡用的比較偏向後者: $\lvert x\rangle = \sum^{N-1}_{k = 0}x_k\lvert k\rangle$。</p><p>Decoding 可視為用觀測 (measurement) 去統計各狀態出現機率。</p><br/><br/><h1 id="qft-implemented-by-quantum-gates" class="article-heading">QFT Implemented by Quantum gates <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-implemented-by-quantum-gates"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>為了一致性，這邊的電路或許跟其他地方的上下顛倒，不過這只是位元組順序 (Endianness )不同，這邊採用 IBM 使用的 little endian，也就是 <code>q[0]</code> 為 LSB (圖中靠上位置)，<code>q[n]</code> 為 MSB (圖中靠下位置)。</p><p>$R_k = CU1(\lambda) = {\small\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; e^{i\lambda}\end{bmatrix}}, \lambda = \frac{2\pi}{2^k}$</p><p>拓展到 n-bit 的電路如下圖，其支援 $2^n = N$ 種情況當作輸入:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXmpsNSAfStfWh-cxfT_iXDCbn16_NMBQBuE07gnylwvzNgvmbYet19R-3X7Bjr74TyVjL1Z8oVL3xbW4ZXDGn4kZCzZWhHqwT34VdC0Je2KJi3HzHJEcc5VLn3JPC_UKMDWFZdcb1AoKluWtcUBJFSOg=w2110-h722-no?authuser=1" class="center img-zoomable" alt="n-bit QFT; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXmpsNSAfStfWh-cxfT_iXDCbn16_NMBQBuE07gnylwvzNgvmbYet19R-3X7Bjr74TyVjL1Z8oVL3xbW4ZXDGn4kZCzZWhHqwT34VdC0Je2KJi3HzHJEcc5VLn3JPC_UKMDWFZdcb1AoKluWtcUBJFSOg=w2110-h722-no?authuser=1" class="center img-zoomable lazyload" alt="n-bit QFT; <br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">n-bit QFT; <br/><br/><a href="/posts/20220519-generalized-quantum-fourier-transform/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXmpsNSAfStfWh-cxfT_iXDCbn16_NMBQBuE07gnylwvzNgvmbYet19R-3X7Bjr74TyVjL1Z8oVL3xbW4ZXDGn4kZCzZWhHqwT34VdC0Je2KJi3HzHJEcc5VLn3JPC_UKMDWFZdcb1AoKluWtcUBJFSOg=w2110-h722-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="derivation" class="article-heading">Derivation <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#derivation"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>由上圖可以看出 $a_0$ 被 $a_0, &hellip;, a_{n-1}$ 控制，其中 $H$ 就是巧妙地用來代表控制自己的旋轉。若簡化到只有 $a_0$ (1-bit QFT) 可以看成輸出為 $\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_0]}\lvert 1\rangle)$ 當 $a_0 = 0$ ($e^{2\pi i[0.a_0]} = 1$) 輸出不旋轉 Z 軸為 $\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)$；反之 ($e^{2\pi i[0.a_0]} = -1$) 旋轉變成 $\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)$。</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>QFT(\lvert a\rangle) &amp;= \lvert b_0\rangle \otimes\lvert b_1\rangle\otimes &hellip;\otimes\lvert b_{n-1}\rangle<br/>\newline<br/>&amp;= <br><br/>\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_0&hellip;a_{n-1}]}\lvert 1\rangle) \otimes&hellip;\otimes<br><br/>\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_{n-1}]}\lvert 1\rangle)<br/>\newline<br/>&amp;= <br><br/>\frac{1}{\sqrt{2^n}}\big(\otimes^{n-1}_{k=0}(\lvert 0\rangle+e^{2\pi i[0.a_k&hellip;]}\lvert 1 \rangle)\big)<br/>\end{split}<br/>\end{equation*}<br/>$$</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://pennylane.ai/qml/glossary/quantum_embedding.html" target="_blank" rel="noreferrer noopener">Quantum embedding</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Endianness" target="_blank" rel="noreferrer noopener">Endianness - wiki</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>2-Bit Inverse Quantum Fourier Transform Implementation</title><link>https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/</link><pubDate>Thu, 19 May 2022 10:31:04 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/</guid><description><![CDATA[
          <p>IQFT 邏輯閘實作。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>IQFT 邏輯閘實作。</p><h1 id="邏輯閘實作" class="article-heading">邏輯閘實作 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%82%8f%e8%bc%af%e9%96%98%e5%af%a6%e4%bd%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>根據上一篇 &ldquo;<br/><br/><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/">Quantum Fourier Transform</a>&rdquo; 的內容，本篇延續相關知識並補充一些實作。</p><p>注意到這邊雖然看起來只是利用 $M_{QFT}\times M_{IQFT} = I$ 的特性，不過這是因為目前尚未有比較好的例子可以當作 IQFT 的輸入，所以這邊利用 QFT 先將輸入轉成 phase，接著再利用 IQFT 從這些 phase 分析出規律後輸出各個頻率。另外，為了保留完整性，所以 SWAP 並沒有被省略。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVLyQ3QtX-do_eqM6OkGECTMMNCQh3hw74-nWeCM1qO9b6CpJVBf3rF4Bh3dS-ANQuuSWYbQcxwl7hI8Cvl6tdJOsuEFst2LuJ8wokIoptOsSOpdVmQs3ZIg-UHpLnDxJfrDYQv2xUVt8TZozwKXCtxTg=w1075-h361-no?authuser=1" class="center img-zoomable" alt="" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVLyQ3QtX-do_eqM6OkGECTMMNCQh3hw74-nWeCM1qO9b6CpJVBf3rF4Bh3dS-ANQuuSWYbQcxwl7hI8Cvl6tdJOsuEFst2LuJ8wokIoptOsSOpdVmQs3ZIg-UHpLnDxJfrDYQv2xUVt8TZozwKXCtxTg=w1075-h361-no?authuser=1" class="center img-zoomable lazyload" alt=""<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVLyQ3QtX-do_eqM6OkGECTMMNCQh3hw74-nWeCM1qO9b6CpJVBf3rF4Bh3dS-ANQuuSWYbQcxwl7hI8Cvl6tdJOsuEFst2LuJ8wokIoptOsSOpdVmQs3ZIg-UHpLnDxJfrDYQv2xUVt8TZozwKXCtxTg=w1075-h361-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Input<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// QFT<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// IQFT<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>swap q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>cu1(<span style="color:#f92672">-</span>pi <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Output<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>barrier q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">1</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">1</span>];<br/></span></span></code></pre></div></div><br/><br/><h1 id="實際使用-ibm-qpu-執行結果" class="article-heading">實際使用 IBM QPU 執行結果 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%9a%9b%e4%bd%bf%e7%94%a8-ibm-qpu-%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>資料的 encoding 是 <code>q[0]</code> 為 LSB，<code>q[1]</code> 為 MSB。所以輸出與輸入相同皆為 <code>01</code>。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWxR9tTSeZ9wXst2jNNQD7jDA_ktpbaCeHBtrPu1yMxgzP2IyD0uEFR7ciEZ09Pd23Nz0txVNNvskXI6Pkzth3qvGAQZBlEt3Ooc6133BYqr4VpE8qPz5sTUeaSErfE_G6AdzN9oyzE08EWMJcZmWiNHw=w1484-h1250-no?authuser=1" class="center img-zoomable" alt="1024 shots 機率分布" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWxR9tTSeZ9wXst2jNNQD7jDA_ktpbaCeHBtrPu1yMxgzP2IyD0uEFR7ciEZ09Pd23Nz0txVNNvskXI6Pkzth3qvGAQZBlEt3Ooc6133BYqr4VpE8qPz5sTUeaSErfE_G6AdzN9oyzE08EWMJcZmWiNHw=w1484-h1250-no?authuser=1" class="center img-zoomable lazyload" alt="1024 shots 機率分布"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">1024 shots 機率分布</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWxR9tTSeZ9wXst2jNNQD7jDA_ktpbaCeHBtrPu1yMxgzP2IyD0uEFR7ciEZ09Pd23Nz0txVNNvskXI6Pkzth3qvGAQZBlEt3Ooc6133BYqr4VpE8qPz5sTUeaSErfE_G6AdzN9oyzE08EWMJcZmWiNHw=w1484-h1250-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVomA1k5Dzpcefzhcn9WVPPp3waF4wwEhyFLxOUGQSMbCohztinL4zW7w-yWljr5zBQOis5Y7Gviyr8D4msf_ajSX3frUTs2J_oHFDXnROMiIpDim7F1kTArZGaXnBhKWzV-hcLroGkeuL7cBzysUTjgA=w2110-h492-no?authuser=1" class="center img-zoomable" alt="轉換過實際執行的邏輯閘" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVomA1k5Dzpcefzhcn9WVPPp3waF4wwEhyFLxOUGQSMbCohztinL4zW7w-yWljr5zBQOis5Y7Gviyr8D4msf_ajSX3frUTs2J_oHFDXnROMiIpDim7F1kTArZGaXnBhKWzV-hcLroGkeuL7cBzysUTjgA=w2110-h492-no?authuser=1" class="center img-zoomable lazyload" alt="轉換過實際執行的邏輯閘"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">轉換過實際執行的邏輯閘</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVomA1k5Dzpcefzhcn9WVPPp3waF4wwEhyFLxOUGQSMbCohztinL4zW7w-yWljr5zBQOis5Y7Gviyr8D4msf_ajSX3frUTs2J_oHFDXnROMiIpDim7F1kTArZGaXnBhKWzV-hcLroGkeuL7cBzysUTjgA=w2110-h492-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>Quantum Fourier Transform</title><link>https://aben20807.github.io/posts/20220514-quantum-fourier-transform/</link><pubDate>Sat, 14 May 2022 16:38:16 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220514-quantum-fourier-transform/</guid><description><![CDATA[
          <p>有點感覺了，趕緊記錄。</p><br/><p>量子傅立葉轉換 (Quantum Fourier Transform, QFT) 是在量子運算上實現離散傅立葉轉換 (Discrete Fourier Transform, DFT)。QFT 的存在是為了之後 shor 演算法<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>，不過本篇先專注討論 QFT。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>有點感覺了，趕緊記錄。</p><p>量子傅立葉轉換 (Quantum Fourier Transform, QFT) 是在量子運算上實現離散傅立葉轉換 (Discrete Fourier Transform, DFT)。QFT 的存在是為了之後 shor 演算法 ，不過本篇先專注討論 QFT。</p><p>有錯再麻煩指正，感謝。</p><p>另外，本文強調使用實際例子，所以用的規模比較小，一般化的公式及程式再請大家參考所附的資料或等待之後的文章。</p><br/><br/><h1 id="常用符號" class="article-heading">常用符號 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b8%b8%e7%94%a8%e7%ac%a6%e8%99%9f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>$\log$: 資訊領域多用以 $2$ 為底，也就是 $\log_2$，不過本文使用 $\log$。</li><li>$i$: 虛數單位，也就是 $\sqrt{-1}$。</li></ul><br/><br/><h1 id="discrete-fourier-transform" class="article-heading">Discrete Fourier Transform <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#discrete-fourier-transform"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>雖然<del>小時候</del>大一普物 (一) 有使用 Matlab 實作傅立葉級數，傅立葉轉換的部分在大二下修電機系的通訊導論也有遇到，不過還是有些不懂，所以就順便記錄。</p><br/><br/><h2 id="定義" class="article-heading">定義 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%9a%e7%be%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>一般 DFT (classical Discrete Fourier Transform) 是針對一組長度為 $N = 2^n$ 的複數向量 $(x_0, x_1, &hellip;, x_{N-1})\in\mathbb{C}^N$ 轉換，其對應的結果也是一組複數向量 $(y_0, y_1, &hellip;, y_{N-1})\in\mathbb{C}^N$。函數對應如下:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{-kn}}, k = 0, 1, 2, &hellip;, N-1<br/>\newline<br/>\newline<br/>\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br/>\newline<br/>{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>根據尤拉公式 ，可以將公式表示為:</p><p>$$<br/>y_k = \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n\big(\cos(\frac{2\pi}{N}kn)-i\sin(\frac{2\pi}{N}kn)\big)}<br/>$$</p><p>對 DFT 來說，正規化並不重要，不過為了方便跟量子形式，$\frac{1}{\sqrt{N}}$ 做的事就是使此函數為么正變換 。一般 DFT 的物理意義如下圖所示，將時間軸的資料作為輸入，接著輸出不同頻率下的發生率。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXHUOJThi5oyv6mHqE20bwv02o5fWAhnkz_xhuLy4Z1jKBrHngbfb2FBL_ri62hIlWUTmmboMxuhVvFmEepFNzBpqf12Uzbo8rHOdM4C76grYhcPX_znqMk3_11QTgfUlu8ZLCIgZDxJ0iu_55_xCgB8Q=w540-h378-no?authuser=1" class="center img-zoomable" alt="來源: <br/><br/>&lt;a href=&#34;https://www.nti-audio.com/en/support/know-how/fast-fourier-transform-fft&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXHUOJThi5oyv6mHqE20bwv02o5fWAhnkz_xhuLy4Z1jKBrHngbfb2FBL_ri62hIlWUTmmboMxuhVvFmEepFNzBpqf12Uzbo8rHOdM4C76grYhcPX_znqMk3_11QTgfUlu8ZLCIgZDxJ0iu_55_xCgB8Q=w540-h378-no?authuser=1" class="center img-zoomable lazyload" alt="來源: <br/><br/>&lt;a href=&#34;https://www.nti-audio.com/en/support/know-how/fast-fourier-transform-fft&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">來源: <br/><br/><a href="https://www.nti-audio.com/en/support/know-how/fast-fourier-transform-fft" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXHUOJThi5oyv6mHqE20bwv02o5fWAhnkz_xhuLy4Z1jKBrHngbfb2FBL_ri62hIlWUTmmboMxuhVvFmEepFNzBpqf12Uzbo8rHOdM4C76grYhcPX_znqMk3_11QTgfUlu8ZLCIgZDxJ0iu_55_xCgB8Q=w540-h378-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="與單位根的關係" class="article-heading">與單位根的關係 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%87%e5%96%ae%e4%bd%8d%e6%a0%b9%e7%9a%84%e9%97%9c%e4%bf%82"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>傅立葉轉換利用的複數平面的旋轉特性。其中與 Root of unity 單位根 有關，其定義為 $z^n = 1$ 在複數平面上有 n 次單位根，這裡有一個旋轉及取模的概念也呈現在下圖中。同時注意若 $kn$ 前有負號的話就會順時針取根如下圖；反之，沒有負號就會逆時針，如稍後會提到的 IDFT。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXo3JDdTnTQcaApY0MpkaA6Z7KK2jPmqlKlaJZ7h0mkv_JfCmU_uTBz2BDUhF0WYZ1st5j-_Rp3pHSTeuAWq-AoG-XmhrMv8uoEtsRiOQ6v-NhXTIsUqaoiJgXMFwUVnCyAQZz4dXXp19w43EUxDnnpag=w571-h486-no?authuser=1" class="center img-zoomable" alt="MarekSchmidt, Public domain, via Wikimedia Commons <br/><br/>&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:3rd-roots-of-unity.png&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXo3JDdTnTQcaApY0MpkaA6Z7KK2jPmqlKlaJZ7h0mkv_JfCmU_uTBz2BDUhF0WYZ1st5j-_Rp3pHSTeuAWq-AoG-XmhrMv8uoEtsRiOQ6v-NhXTIsUqaoiJgXMFwUVnCyAQZz4dXXp19w43EUxDnnpag=w571-h486-no?authuser=1" class="center img-zoomable lazyload" alt="MarekSchmidt, Public domain, via Wikimedia Commons <br/><br/>&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:3rd-roots-of-unity.png&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">MarekSchmidt, Public domain, via Wikimedia Commons <br/><br/><a href="https://commons.wikimedia.org/wiki/File:3rd-roots-of-unity.png" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXo3JDdTnTQcaApY0MpkaA6Z7KK2jPmqlKlaJZ7h0mkv_JfCmU_uTBz2BDUhF0WYZ1st5j-_Rp3pHSTeuAWq-AoG-XmhrMv8uoEtsRiOQ6v-NhXTIsUqaoiJgXMFwUVnCyAQZz4dXXp19w43EUxDnnpag=w571-h486-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="離散傅里葉變換矩陣-dft-matrix" class="article-heading">離散傅里葉變換矩陣 (DFT Matrix) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%a2%e6%95%a3%e5%82%85%e9%87%8c%e8%91%89%e8%ae%8a%e6%8f%9b%e7%9f%a9%e9%99%a3-dft-matrix"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$\omega_N$ 所構成的運算可以看作一個矩陣，離散傅里葉變換矩陣 ，$N = 4, (\omega = e^{-\frac{2\pi i}{4}} = -i)$ 時如下:</p><p>$$<br/>M_{DFT} = {\frac{1}{\sqrt{N}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{bmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{bmatrix}} = {\frac{1}{2}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; -i &amp; -1 &amp; i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; i &amp; -1 &amp; -i\end{bmatrix}}<br/>$$</p><p>$$<br/>DFT: \begin{bmatrix}y_0 \\ y_1 \\ y_2 \\ y_3\end{bmatrix} = M_{DFT} \begin{bmatrix}x_0 \\ x_1 \\ x_2 \\ x_3\end{bmatrix}<br/>$$</p><p>實際運算把輸入乘上該矩陣即可得到結果 (範例來自: <br/><br/><a href="https://www.dsprelated.com/showarticle/901.php" target="_blank" rel="noreferrer noopener">The DFT Output and Its Dimensions</a>，為了方便把向量轉置):</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>\begin{bmatrix}0 &amp; 1 &amp; 0 &amp; -1\end{bmatrix}^T&amp;\xrightarrow{DFT}\begin{bmatrix}0 &amp; -2i &amp; 0 &amp; 2i\end{bmatrix}^T<br/>\newline<br/>\newline<br/>\begin{bmatrix}1 &amp; 0 &amp; -1 &amp; 0\end{bmatrix}^T&amp;\xrightarrow{DFT}\begin{bmatrix}0 &amp; 2 &amp; 0 &amp; 2\end{bmatrix}^T<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>DFT Matrix 視覺化呈現如下圖:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV_q9eedvqwTvlqI4g6CNXScKEFpG0Wt8zdTvtxrn73yWnGbaljqgPwXj2Ru5xuExfBRZ2NCwgo2g5K3THJAGLa_awQQ6aJn9EtmvsZiK-3lH6uLzbiKxLhyi3E0ByQaTaauXwdcSxmrJuMzdIzlTsffQ=w884-h899-no?authuser=1" class="center img-zoomable" alt="John Ringland, <br/><br/>&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-SA 4.0&lt;/a&gt;, via Wikimedia Commons <br/><br/>&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Visualization_of_the_matrix_of_the_discrete_Fourier_transform_for_n%3D4.svg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV_q9eedvqwTvlqI4g6CNXScKEFpG0Wt8zdTvtxrn73yWnGbaljqgPwXj2Ru5xuExfBRZ2NCwgo2g5K3THJAGLa_awQQ6aJn9EtmvsZiK-3lH6uLzbiKxLhyi3E0ByQaTaauXwdcSxmrJuMzdIzlTsffQ=w884-h899-no?authuser=1" class="center img-zoomable lazyload" alt="John Ringland, <br/><br/>&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;CC BY-SA 4.0&lt;/a&gt;, via Wikimedia Commons <br/><br/>&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Visualization_of_the_matrix_of_the_discrete_Fourier_transform_for_n%3D4.svg&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">John Ringland, <br/><br/><a href="https://creativecommons.org/licenses/by-sa/4.0" target="_blank" rel="noreferrer noopener">CC BY-SA 4.0</a>, via Wikimedia Commons <br/><br/><a href="https://commons.wikimedia.org/wiki/File:Visualization_of_the_matrix_of_the_discrete_Fourier_transform_for_n%3D4.svg" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV_q9eedvqwTvlqI4g6CNXScKEFpG0Wt8zdTvtxrn73yWnGbaljqgPwXj2Ru5xuExfBRZ2NCwgo2g5K3THJAGLa_awQQ6aJn9EtmvsZiK-3lH6uLzbiKxLhyi3E0ByQaTaauXwdcSxmrJuMzdIzlTsffQ=w884-h899-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>此外，我這邊極度推薦看 3Blue1Brown &ldquo;利用旋轉找出質心&rdquo; 的高品質視覺化解釋影片: <br/><br/><a href="https://www.youtube.com/watch?v=spUNpyF58BY" target="_blank" rel="noreferrer noopener">But what is the Fourier Transform? A visual introduction. - youtube</a> 和續集 <br/><br/><a href="https://www.youtube.com/watch?v=MBnnXbOM5S4" target="_blank" rel="noreferrer noopener">The more general uncertainty principle, beyond quantum - youtube</a> (就不附在本篇，自行前往觀看)。</p><br/><br/><br/><br/><br/><br/><br/> <br/><br/><br/><h2 id="idft" class="article-heading">IDFT <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#idft"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>DFT (時間到頻率) 的逆轉換是 IDFT (Inverse DFT)，也就是頻率到時間。其定義跟 DFT 在次方上差一個負號:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br/>\newline<br/>\newline<br/>\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br/>\newline<br/>{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUN7Holy5ZrW_P-xM5ag9tziUlnutIhO8ql4wpCNRU95rcTGtGVbqzk6KI7rFgccnFGjnHQjMzyJg4wTKHsOiTHwYuc1T0AbSs7grDQFjOd8J5anuwiCEEWiYg9b8OlNNJj2hQ93S1ba6rm4HyT3geNcw=w1520-h738-no?authuser=1" class="center img-zoomable" alt="來源: 3Blue1Brown <br/><br/>&lt;a href=&#34;https://www.youtube.com/watch?v=spUNpyF58BY&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUN7Holy5ZrW_P-xM5ag9tziUlnutIhO8ql4wpCNRU95rcTGtGVbqzk6KI7rFgccnFGjnHQjMzyJg4wTKHsOiTHwYuc1T0AbSs7grDQFjOd8J5anuwiCEEWiYg9b8OlNNJj2hQ93S1ba6rm4HyT3geNcw=w1520-h738-no?authuser=1" class="center img-zoomable lazyload" alt="來源: 3Blue1Brown <br/><br/>&lt;a href=&#34;https://www.youtube.com/watch?v=spUNpyF58BY&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">來源: 3Blue1Brown <br/><br/><a href="https://www.youtube.com/watch?v=spUNpyF58BY" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUN7Holy5ZrW_P-xM5ag9tziUlnutIhO8ql4wpCNRU95rcTGtGVbqzk6KI7rFgccnFGjnHQjMzyJg4wTKHsOiTHwYuc1T0AbSs7grDQFjOd8J5anuwiCEEWiYg9b8OlNNJj2hQ93S1ba6rm4HyT3geNcw=w1520-h738-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>$N = 4, (\omega = e^{\frac{2\pi i}{4}} = i)$ 時 IDFT Matrix 如下:</p><p>$$<br/>M_{IDFT} = {\frac{1}{\sqrt{N}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{bmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{bmatrix}} = {\frac{1}{2}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; i &amp; -1 &amp; -i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; -i &amp; -1 &amp; i\end{bmatrix}}<br/>$$</p><p>以上是大部分人使用的版本，我取自下方來源:</p><ul><li><br/><br/><a href="https://en.wikipedia.org/wiki/Discrete_Fourier_transform" target="_blank" rel="noreferrer noopener">Discrete Fourier transform - wiki</a></li><li><br/><br/><a href="https://en.wikipedia.org/wiki/Quantum_Fourier_transform" target="_blank" rel="noreferrer noopener">Quantum Fourier transform - wiki</a></li><li><br/><br/><a href="https://www.youtube.com/watch?v=1JnayXHhjlg" target="_blank" rel="noreferrer noopener">Introduction to the Fourier Transform (Part 1) - youtube</a></li><li><br/><br/><a href="https://numpy.org/doc/stable/reference/routines.fft.html#implementation-details" target="_blank" rel="noreferrer noopener">Discrete Fourier Transform (numpy.fft) - numpy</a></li><li><br/><br/><a href="https://ocw.mit.edu/courses/2-161-signal-processing-continuous-and-discrete-fall-2008/resources/lecture_10/" target="_blank" rel="noreferrer noopener">2.161 Signal Processing: Continuous and Discrete Fall 2008 LECTURE 10 - MIT OpenCourseWare</a></li></ul><p>另外有發現有些文章會將 DFT, IQFT 的運算對調以便說明 QFT。例如 IBM 教學中: <br/><br/><a href="https://qiskit.org/textbook/ch-algorithms/quantum-fourier-transform.html#1.-Introduction-" target="_blank" rel="noreferrer noopener">Quantum Fourier Transform</a> 就把 DFT 的負號移除。</p><br/><br/><h1 id="quantum-fourier-transform" class="article-heading">Quantum Fourier Transform <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-fourier-transform"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>量子傅立葉轉換也是一個對應關係，原先對資料旋轉的操作在量子上改成對 Z 軸來旋轉</p><ul><li>使用 $n = \log N$ 個量子位元的疊加態，來疊加出 $2^n = N$ 種可能，由這 $N$ 種可能當作輸入 $\lvert x\rangle = \sum^{N-1}_{j = 0}x_j\lvert j\rangle$，$x_j \in \mathbb{C}$ 且 $\lvert {x_j}\rvert^2$ 代表第 j 個 state $\lvert j\rangle$ 出現的機率。</li><li>輸出為 $\lvert y\rangle = \sum^{N-1}_{j = 0}y_j\lvert j\rangle$，與輸入的設定相同。</li><li>其量子形式的函數定義如下:</li></ul><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br/>\newline<br/>\newline<br/>\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br/>\newline<br/>{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>根據<br/><br/><a href="https://qiskit.org/textbook/ch-algorithms/quantum-fourier-transform.html#2.-Intuition-" target="_blank" rel="noreferrer noopener">IBM 教學</a>抽象一點可以看作下方的形式:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>\lvert \text{State in Computational Basis} \rangle &amp;\xrightarrow{QFT} \lvert \text{State in Fourier Basis}\rangle<br/>\newline<br/>\newline<br/>\lvert x \rangle &amp;\xrightarrow{QFT} \lvert y\rangle = \lvert \tilde{x}\rangle<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>其中 $\omega$ 的定義一樣是來自單位根:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXTNLvhRZaiJD0t72Rvw-9uasChZTuhEgdZySIddOOn8dKCNgfaMTG0Cn-ojg7VO4M8Dn-QtpeSjTCDQmxAJqdQkhCYfVlG3jItDE97TVrudgu-p4PJzc9J-kFjicWi3gFphvDafPtmykOtmBLC2bZZuA=w1842-h1162-no?authuser=1" class="center img-zoomable" alt="$N = 4$ 的情況，驗證&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220514-quantum-fourier-transform/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXTNLvhRZaiJD0t72Rvw-9uasChZTuhEgdZySIddOOn8dKCNgfaMTG0Cn-ojg7VO4M8Dn-QtpeSjTCDQmxAJqdQkhCYfVlG3jItDE97TVrudgu-p4PJzc9J-kFjicWi3gFphvDafPtmykOtmBLC2bZZuA=w1842-h1162-no?authuser=1" class="center img-zoomable lazyload" alt="$N = 4$ 的情況，驗證&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。<br/><br/>&lt;a href=&#34;https://aben20807.github.io/posts/20220514-quantum-fourier-transform/&#34;&gt;CC BY 4.0 Huang, Po-Hsuan&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$N = 4$ 的情況，驗證 。<br/><br/><a href="/posts/20220514-quantum-fourier-transform/">CC BY 4.0 Huang, Po-Hsuan</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXTNLvhRZaiJD0t72Rvw-9uasChZTuhEgdZySIddOOn8dKCNgfaMTG0Cn-ojg7VO4M8Dn-QtpeSjTCDQmxAJqdQkhCYfVlG3jItDE97TVrudgu-p4PJzc9J-kFjicWi3gFphvDafPtmykOtmBLC2bZZuA=w1842-h1162-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>可以注意到其實 QFT 是跟 IDFT 比較像，同樣是逆時針旋轉。這裡一開始可能會比較困惑，因為也有些人也是反過來看，兩種都有人用。常見的原因是使用慣例 (convention)。這邊可以參考 <br/><br/><a href="https://quantumcomputing.stackexchange.com/questions/17703/what-are-the-input-and-output-of-qft-and-iqft-respectively" target="_blank" rel="noreferrer noopener">What are the input and output of QFT and IQFT, respectively?</a> 中的討論。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLX6WJ4R0cKsDaB99KDyM47gPZHxcO7V1TCayUrWGc-KWs1AjLUV3mKFRowzplBMPDl-p9Jsno_WDHrek0novXkGWJBjySG01idtFjPK2nYMHqnKT00_qMaxW6s7GF9uZtQKHE-iMPxvDmqAHJiGz_xlSw=w828-h315-no?authuser=1" class="center img-zoomable" alt="$N = 8 = 2^n (n = 3)$。來源: <br/><br/>&lt;a href=&#34;https://www.amazon.co.jp/-/en/%E5%AE%87%E6%B4%A5%E6%9C%A8-%E5%81%A5/dp/4798157465/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLX6WJ4R0cKsDaB99KDyM47gPZHxcO7V1TCayUrWGc-KWs1AjLUV3mKFRowzplBMPDl-p9Jsno_WDHrek0novXkGWJBjySG01idtFjPK2nYMHqnKT00_qMaxW6s7GF9uZtQKHE-iMPxvDmqAHJiGz_xlSw=w828-h315-no?authuser=1" class="center img-zoomable lazyload" alt="$N = 8 = 2^n (n = 3)$。來源: <br/><br/>&lt;a href=&#34;https://www.amazon.co.jp/-/en/%E5%AE%87%E6%B4%A5%E6%9C%A8-%E5%81%A5/dp/4798157465/&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$N = 8 = 2^n (n = 3)$。來源: <br/><br/><a href="https://www.amazon.co.jp/-/en/%E5%AE%87%E6%B4%A5%E6%9C%A8-%E5%81%A5/dp/4798157465/" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLX6WJ4R0cKsDaB99KDyM47gPZHxcO7V1TCayUrWGc-KWs1AjLUV3mKFRowzplBMPDl-p9Jsno_WDHrek0novXkGWJBjySG01idtFjPK2nYMHqnKT00_qMaxW6s7GF9uZtQKHE-iMPxvDmqAHJiGz_xlSw=w828-h315-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="qft-matrix" class="article-heading">QFT Matrix <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-matrix"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$N = 4, (\omega = e^{\frac{2\pi i}{4}} = i)$ 時 QFT Matrix 如下 (跟 IDFT Matrix 一樣):</p><p>$$<br/>M_{QFT} = {\frac{1}{\sqrt{N}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{bmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{bmatrix}} = {\frac{1}{2}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; i &amp; -1 &amp; -i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; -i &amp; -1 &amp; i\end{bmatrix}}<br/>$$</p><br/><br/><h2 id="iqft-matrix" class="article-heading">IQFT Matrix <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#iqft-matrix"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>在公式補上負號，就變成 Inverse Quantum Fourier Transform。</p><p>$N = 4, (\omega = e^{-\frac{2\pi i}{4}} = -i)$ 時 IQFT Matrix 如下 (跟 DFT Matrix 一樣):</p><p>$$<br/>M_{IQFT} = {\frac{1}{\sqrt{N}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{bmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{bmatrix}} = {\frac{1}{2}\small\begin{bmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; -i &amp; -1 &amp; i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; i &amp; -1 &amp; -i\end{bmatrix}}<br/>$$</p><p>對我來說很特別的是，$M_{QFT}$ 跟 $M_{IQFT}$ 剛好互為共軛轉置 ，所以 ${M_{QFT}}^\dagger = M_{IQFT}$ 且 $M_{QFT}\times M_{IQFT} = I$。</p><br/><br/><h2 id="量子邏輯閘實作" class="article-heading">量子邏輯閘實作 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8f%e5%ad%90%e9%82%8f%e8%bc%af%e9%96%98%e5%af%a6%e4%bd%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="controlled-rotation" class="article-heading">Controlled rotation <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#controlled-rotation"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>一般用 CU1 實作對 Z 軸的旋轉，且控制控制位元為 $\lvert 1 \rangle$ 才會讓目標位元轉。$k$ 為控制位元與目標位元距離再加 1，例如第一個位元被第二個位元控制時，$k = (2-1)+1 = 2$ 則 $e^{i\lambda} = e^{\frac{\pi i}{2}} = i$，而也就是利用 $k$ 來實現不同角度的旋轉。</p><p>$$<br/>CU1(\lambda) = {\small\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; e^{i\lambda}\end{bmatrix}}, \lambda = \frac{2\pi}{2^k}<br/>$$</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" class="center img-zoomable" alt="對 Z 軸旋轉不會影響 quantum state 出現的機率，只會變更 phase。來源: <br/><br/>&lt;a href=&#34;https://github.com/cduck/bloch_sphere/blob/master/examples/common_gates.md&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" class="center img-zoomable lazyload" alt="對 Z 軸旋轉不會影響 quantum state 出現的機率，只會變更 phase。來源: <br/><br/>&lt;a href=&#34;https://github.com/cduck/bloch_sphere/blob/master/examples/common_gates.md&#34; target=&#34;_blank&#34; rel=&#34;noreferrer noopener&#34;&gt;link&lt;/a&gt;"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">對 Z 軸旋轉不會影響 quantum state 出現的機率，只會變更 phase。來源: <br/><br/><a href="https://github.com/cduck/bloch_sphere/blob/master/examples/common_gates.md" target="_blank" rel="noreferrer noopener">link</a></p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h3 id="swap" class="article-heading">SWAP <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#swap"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>最後輸出會用到交換 (SWAP)，讓輸出可以跟公式相同。Qiskit QFT 文件中 有提到，若是 SWAP 是整個電路的末端的話，可以將 SWAP 的工作移動到古典運算實作就可以。</p><br/><br/><h3 id="qft-邏輯閘" class="article-heading">QFT 邏輯閘 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-%e9%82%8f%e8%bc%af%e9%96%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>透過 IBM Quantum Composer 實作 $N = 4$ ($n = 2$) 的 QFT，輸入為 $[0 1 0 0]$ 為例。可透過 NOT 對兩個原為 $\lvert 0 \rangle$ 的值產生 $\lvert 1 \rangle$，因此有四種輸入可能:</p><ul><li>$\lvert 00\rangle$ ($\lvert 0 \rangle= \begin{bmatrix}1&amp;0&amp;0&amp;0\end{bmatrix}^T$)</li><li>$\lvert 01\rangle$ ($\lvert 1 \rangle= \begin{bmatrix}0&amp;1&amp;0&amp;0\end{bmatrix}^T$): 下圖中使用的</li><li>$\lvert 10\rangle$ ($\lvert 2 \rangle= \begin{bmatrix}0&amp;0&amp;1&amp;0\end{bmatrix}^T$)</li><li>$\lvert 11\rangle$ ($\lvert 3 \rangle= \begin{bmatrix}0&amp;0&amp;0&amp;1\end{bmatrix}^T$)</li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW0mGdVRAIizVnXS3RltKFUaLg9sXHiB5jRFlnMNvs1yD25Qd4PFjvNxLM4PKq2StG7it2WsG7UXbbdUAleG3V4oPXmcCBJi6NqKKHVMkem-vA5lpGcqmI1OodMlLSVdAYbd3ARTubpaUoKJGvLEsn2eQ=w678-h265-no?authuser=1" class="center img-zoomable" alt="2-bit QFT with $\lvert 01 \rangle$ as input" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW0mGdVRAIizVnXS3RltKFUaLg9sXHiB5jRFlnMNvs1yD25Qd4PFjvNxLM4PKq2StG7it2WsG7UXbbdUAleG3V4oPXmcCBJi6NqKKHVMkem-vA5lpGcqmI1OodMlLSVdAYbd3ARTubpaUoKJGvLEsn2eQ=w678-h265-no?authuser=1" class="center img-zoomable lazyload" alt="2-bit QFT with $\lvert 01 \rangle$ as input"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">2-bit QFT with $\lvert 01 \rangle$ as input</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW0mGdVRAIizVnXS3RltKFUaLg9sXHiB5jRFlnMNvs1yD25Qd4PFjvNxLM4PKq2StG7it2WsG7UXbbdUAleG3V4oPXmcCBJi6NqKKHVMkem-vA5lpGcqmI1OodMlLSVdAYbd3ARTubpaUoKJGvLEsn2eQ=w678-h265-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>輸出說明:</p><ul><li><code>q[0]</code>: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i\cdot\frac{1}{2}}\lvert 1\rangle) = \frac{1}{\sqrt{2}}(\lvert 0\rangle - \lvert 1\rangle)$</li><li><code>q[1]</code>: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i\cdot\frac{1}{4}}\lvert 1\rangle) = \frac{1}{\sqrt{2}}(\lvert 0\rangle + i \lvert 1\rangle)$</li><li>$\Rightarrow \frac{1}{2}(\lvert00\rangle+i\lvert01\rangle-\lvert10\rangle-i\lvert11\rangle)$</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>cu1(pi<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>) q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>swap q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>];<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVNwjAtYsh9i2IX_FpWoYNHI7kDIekG05_DKC7zUt_jY-pV1RBNX3VixSkeEKmO2YkUdhXzMAoNX9CwP2zFK2hYHjhZdEuEp9ExCLwQHaTrBJmDmtwPpqqmekBsbVZfk6AcCVPULfG2mdO2kXmyTBKtEg=w818-h570-no?authuser=1" class="center img-zoomable" alt="$\lvert 01 \rangle$ 為輸入的輸出模擬結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVNwjAtYsh9i2IX_FpWoYNHI7kDIekG05_DKC7zUt_jY-pV1RBNX3VixSkeEKmO2YkUdhXzMAoNX9CwP2zFK2hYHjhZdEuEp9ExCLwQHaTrBJmDmtwPpqqmekBsbVZfk6AcCVPULfG2mdO2kXmyTBKtEg=w818-h570-no?authuser=1" class="center img-zoomable lazyload" alt="$\lvert 01 \rangle$ 為輸入的輸出模擬結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$\lvert 01 \rangle$ 為輸入的輸出模擬結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVNwjAtYsh9i2IX_FpWoYNHI7kDIekG05_DKC7zUt_jY-pV1RBNX3VixSkeEKmO2YkUdhXzMAoNX9CwP2zFK2hYHjhZdEuEp9ExCLwQHaTrBJmDmtwPpqqmekBsbVZfk6AcCVPULfG2mdO2kXmyTBKtEg=w818-h570-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h3 id="驗證實作與公式是否對應" class="article-heading">驗證實作與公式是否對應 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a9%97%e8%ad%89%e5%af%a6%e4%bd%9c%e8%88%87%e5%85%ac%e5%bc%8f%e6%98%af%e5%90%a6%e5%b0%8d%e6%87%89"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>這邊為了減少手殘，所以使用 numpy 幫忙驗證。$N = 4 (n = 2)$，的公式驗證如下，<code>CU1</code> 中有一個 <code>j</code> 是因為 $e^{\frac{2\pi i}{4}}$ 是 $i$。 <code>si</code> 為輸入，可自行更改。這裡感謝 <br/><br/><a href="https://www.youtube.com/watch?v=rRblvBZkz7A" target="_blank" rel="noreferrer noopener">Small Quantum Fourier transforms | QuTech Academy - youtube</a> 影片示範推導過程 (雖然影片中的邏輯閘位置有錯誤)。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>si <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;0100&#39;</span><br/></span></span><span style="display:flex;"><span>Input <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>matrix(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;</span><span style="color:#e6db74">{</span>si[<span style="color:#ae81ff">0</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">;</span><span style="color:#e6db74">{</span>si[<span style="color:#ae81ff">1</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">;</span><span style="color:#e6db74">{</span>si[<span style="color:#ae81ff">2</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">;</span><span style="color:#e6db74">{</span>si[<span style="color:#ae81ff">3</span>]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>I <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>matrix(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        1 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 1&#39;</span>)<br/></span></span><span style="display:flex;"><span>H <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>matrix(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        1 1; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        1 -1&#39;</span>)<span style="color:#f92672">*</span>(<span style="color:#ae81ff">1</span><span style="color:#f92672">/</span>np<span style="color:#f92672">.</span>sqrt(<span style="color:#ae81ff">2</span>))<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>IH <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>kron(I, H) <span style="color:#75715e"># tensor product</span><br/></span></span><span style="display:flex;"><span>HI <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>kron(H, I) <span style="color:#75715e"># tensor product</span><br/></span></span><span style="display:flex;"><span>SWAP <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>matrix(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        1 0 0 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 0 1 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 1 0 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 0 0 1&#39;</span>)<br/></span></span><span style="display:flex;"><span>CU1 <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>matrix(<span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        1 0 0 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 1 0 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 0 1 0; </span><span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span><span style="color:#e6db74">        0 0 0 1j&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>QFT <span style="color:#f92672">=</span> SWAP<span style="color:#f92672">.</span>dot(IH)<span style="color:#f92672">.</span>dot(CU1)<span style="color:#f92672">.</span>dot(HI)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;QFT:</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">{</span>QFT<span style="color:#e6db74">}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#39;</span>)<br/></span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#39;QFT(|</span><span style="color:#e6db74">{</span>si<span style="color:#e6db74">}</span><span style="color:#e6db74">&gt;):</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">{</span>QFT<span style="color:#f92672">.</span>dot(Input)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#39;</span>)<br/></span></span></code></pre></div></div><p>驗證執行結果 (numpy 用 j 表示虛數單位 $i$):</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>QFT:<br/></span></span><span style="display:flex;"><span>[[ 0.5+0.j   0.5+0.j   0.5+0.j   0.5+0.j ]<br/></span></span><span style="display:flex;"><span> [ 0.5+0.j   0. +0.5j -0.5+0.j   0. -0.5j]<br/></span></span><span style="display:flex;"><span> [ 0.5+0.j  -0.5+0.j   0.5+0.j  -0.5+0.j ]<br/></span></span><span style="display:flex;"><span> [ 0.5+0.j   0. -0.5j -0.5+0.j   0. +0.5j]]<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>QFT(|0100&gt;):<br/></span></span><span style="display:flex;"><span>[[ 0.5+0.j ]<br/></span></span><span style="display:flex;"><span> [ 0. +0.5j]<br/></span></span><span style="display:flex;"><span> [-0.5+0.j ]<br/></span></span><span style="display:flex;"><span> [ 0. -0.5j]]<br/></span></span></code></pre></div></div><br/><br/><h1 id="複雜度比較" class="article-heading">複雜度比較 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a4%87%e9%9b%9c%e5%ba%a6%e6%af%94%e8%bc%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>參考 <br/><br/><a href="https://www.youtube.com/watch?v=mZ--1ldN7fU" target="_blank" rel="noreferrer noopener">QC Theory Lecture 20 Shor&rsquo;s algorithm part III Quantum Fourier Transform QFT - youtube</a> 內的說法得出下列複雜度比較 ($N = 2^n$)。最主要提升的原因是量子版本只需要 $\log N$ 位元即可運算 $N$ 種狀態。另外 <br/><br/><a href="https://www.youtube.com/watch?v=uuBgK44JrnA" target="_blank" rel="noreferrer noopener">Quantum Fourier Transform and Inverse QFT in Python - QISKit - youtube</a> 提到 QFT 無法加速 DFT 在古典資料上的運算，原因是輸入輸出資料的表達。不過也有相關研究是在用量子版本取代古典版本，例如: QFFT 。</p><ul><li>DFT: $O(N^2) = O(2^{2n})$</li><li>FFT: $O(N\log N) = O(n2^n)$</li><li>QFT: $O(\log^2N) = O(n^2)$</li></ul><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>本篇利用從 DFT 的原理介紹到實際用小規模的範例完整示範 QFT 的原理及實作過程，應該可以稱得上是目前最完整的文章 (除非是一些學校超長的課程)，若有其他更完整資料再請提供給我參考。接下來 &ldquo;有空的話&rdquo; 會拓展到一般化的形式，到時候會有更多公式。另外，本文章也沒實作 IQFT，雖然是正負號換一下就好，不過因為篇幅已經過長所以就保留到下次。</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Shor%27s_algorithm" target="_blank" rel="noreferrer noopener">Shor&rsquo;s algorithm - wiki</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Euler%27s_formula" target="_blank" rel="noreferrer noopener">Euler&rsquo;s formula - wiki</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://en.wikipedia.org/wiki/Unitary_transformation" target="_blank" rel="noreferrer noopener">Unitary transformation - wiki</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://en.wikipedia.org/wiki/Root_of_unity" target="_blank" rel="noreferrer noopener">Root of unity - wiki</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://en.wikipedia.org/wiki/DFT_matrix" target="_blank" rel="noreferrer noopener">DFT Matrix - wiki</a>&#160; </p></li><li id="fn:6"><p><br/><a href="https://www.wolframalpha.com/input?i=e%5E%7B%7B2&#43;pi&#43;i%7D%2F%7B4%7D%7D" target="_blank" rel="noreferrer noopener">e^{{2 pi i}/{4}} = i - wolframalpha</a>&#160; </p></li><li id="fn:7"><p><br/><a href="https://en.wikipedia.org/wiki/Conjugate_transpose" target="_blank" rel="noreferrer noopener">Conjugate transpose - wiki</a>&#160; </p></li><li id="fn:8"><p><br/><a href="https://qiskit.org/documentation/stubs/qiskit.circuit.library.QFT.html#qft" target="_blank" rel="noreferrer noopener">Docs &gt; Circuit Library &gt; QFT</a>&#160; </p></li><li id="fn:9"><p><br/><a href="https://doi.org/10.1007/s11128-020-02776-5" target="_blank" rel="noreferrer noopener">Asaka, R., Sakai, K. &amp; Yahagi, R. Quantum circuit for the fast Fourier transform. Quantum Inf Process 19, 277 (2020). https://doi.org/10.1007/s11128-020-02776-5</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Must-Do Setup for Programmer's New Windows PC</title><link>https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/</link><pubDate>Thu, 05 May 2022 09:50:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/</guid><description><![CDATA[
          <p>實驗室新設備 OuO<br><br/>記錄一些設定環境 (windows) 的過程<br><br/>未來會以雙系統安裝 Ubuntu 20.04</p>
          
            <p><a href="https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLWY9-XZXtjazLf8oOytALmQHfc6tWRtBNgcpNUI6hL_Vtb3ho-Ok-ki5hnwmMdLnzI0yL3j3rCEi8ICseGmH7LvlZQcr00h6QLIEgSHjsqtDWbewSHpsRMNEj8xGG0qOQ0tGWWA_p5nlSjWoS5iaon2cw=w1585-h1189-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>實驗室新設備 OuO<br><br/>記錄一些設定環境 (windows) 的過程<br><br/>未來會以雙系統安裝 Ubuntu 20.04</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUev1XFOtviqEMNI1sbVaO13E8FLOgLnbMN_aBzTKL32qWxvwrcZOpatSoAGoKXjCx0bVywIs1GM5DVNvNbpUqVfba6HCZ5ybzqyyaoBn_u88h1PsM6JsCCLdg1yH5-csH3aeAwuteuZajJdNOD3Nz6Uw=w1585-h1189-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUev1XFOtviqEMNI1sbVaO13E8FLOgLnbMN_aBzTKL32qWxvwrcZOpatSoAGoKXjCx0bVywIs1GM5DVNvNbpUqVfba6HCZ5ybzqyyaoBn_u88h1PsM6JsCCLdg1yH5-csH3aeAwuteuZajJdNOD3Nz6Uw=w1585-h1189-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUev1XFOtviqEMNI1sbVaO13E8FLOgLnbMN_aBzTKL32qWxvwrcZOpatSoAGoKXjCx0bVywIs1GM5DVNvNbpUqVfba6HCZ5ybzqyyaoBn_u88h1PsM6JsCCLdg1yH5-csH3aeAwuteuZajJdNOD3Nz6Uw=w1585-h1189-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="安裝實用軟體" class="article-heading">安裝實用軟體 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%af%a6%e7%94%a8%e8%bb%9f%e9%ab%94"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://picpick.app/zh-tw/download" target="_blank" rel="noreferrer noopener">PicPick</a>: 截圖神器</li><li><br/><br/><a href="https://code.visualstudio.com/download" target="_blank" rel="noreferrer noopener">VSCode</a>: 寫扣神器</li><li><br/><br/><a href="https://obsproject.com/download" target="_blank" rel="noreferrer noopener">OBS</a>: 畫面錄製神器</li><li><br/><br/><a href="https://www.videolan.org/vlc/download-windows.zh_TW.html" target="_blank" rel="noreferrer noopener">VLC</a>: 影音播放器</li><li><br/><br/><a href="https://apps.microsoft.com/store/detail/microsoft-powertoys/XP89DCGQ3K6VLD" target="_blank" rel="noreferrer noopener">Microsoft PowerToys</a>: 各種小工具</li><li><br/><br/><a href="https://www.7-zip.org/download.html" target="_blank" rel="noreferrer noopener">7-zip</a>: 壓縮、解壓縮</li><li>Synology Drive Client: 從網頁登入後安裝，用於同步備份資料夾</li><li><br/><br/><a href="https://zealdocs.org/download.html" target="_blank" rel="noreferrer noopener">Zeal</a>: 離線文件 (沒網路不用怕)，內建找不到的話可以去 <br/><br/><a href="https://github.com/hashhar/dash-contrib-docset-feeds" target="_blank" rel="noreferrer noopener">hashhar/dash-contrib-docset-feeds</a> 看看，記得用 raw 才能加到 feed。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/C8amR8q20wdr6z0BHhAk5ZHFM7V74HGz87D8KfUXSo76TJZDCEXWIB_n6wU-nGuvgtdX9IWPdmzf8GnpseUES0meyC3KuPEfEIWYaDt4V2G2FBjfD2eGjgAme9m6ONAphr3iQhFk1kPoVfIRiQmZ98ZCHT99lDCNi2OyxbvZGTs11ha0BunbnSHqyQliSbFjpiAG4PRpQN_TH6n0vDDakn-G0JLdjpsuBQ-WArJJ-Kps0fK-2abPHVa9h_tmgIF0IxEOTVNFfO-xhsRsx0gkMTfaf7XbSRAUjODwrdnWdwW7ddQ-f-auZy5PLESWy6kV83jE0lteC2rsJv3UFBxs0IKQUI6WuZZUmQ6X5GAKLmtM_KwLAEnN6uJdyeZbmzVEM-_o9JlLpEb1FGGX3kwqGe1iORpey4Hpr10_ayeVK9GIjP0xxN7yMEhY7DrOIVqCNm0gPcyjaD9SiY0Pgc3z8lG7hzAby4tq9GJfqV409XYPxBT8lKU-XnSwrKfplUp5ySiaq_fHEqb5BVUlVFlDYnp5Q5qz5ADl8JNFVmwkw7UY73X6zz8T3GFqZaaIxhffax4m4AQcW418rAIwwhDCrxJ9DzlUyyMexYPzZbZeAdlFA4NjhpK5emjbwikk4mlRPor0MGZL5DjFQ1X-RkD7KsQs_RwVmMd1bDWSJYEzmfjzII9zIr9Isok7cr5uGR_IUnwBfz2PZr9QbNhKjs36SIElVlMA_t9gsdCaCeSN3UX32DczcOhBOcg5c4HX9lGzAPwrvHuS2Zap_nWhpP1I82U_my1FFCh9Pbin=w2110-h1175-no?authuser=1" class="center img-zoomable" alt="" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/C8amR8q20wdr6z0BHhAk5ZHFM7V74HGz87D8KfUXSo76TJZDCEXWIB_n6wU-nGuvgtdX9IWPdmzf8GnpseUES0meyC3KuPEfEIWYaDt4V2G2FBjfD2eGjgAme9m6ONAphr3iQhFk1kPoVfIRiQmZ98ZCHT99lDCNi2OyxbvZGTs11ha0BunbnSHqyQliSbFjpiAG4PRpQN_TH6n0vDDakn-G0JLdjpsuBQ-WArJJ-Kps0fK-2abPHVa9h_tmgIF0IxEOTVNFfO-xhsRsx0gkMTfaf7XbSRAUjODwrdnWdwW7ddQ-f-auZy5PLESWy6kV83jE0lteC2rsJv3UFBxs0IKQUI6WuZZUmQ6X5GAKLmtM_KwLAEnN6uJdyeZbmzVEM-_o9JlLpEb1FGGX3kwqGe1iORpey4Hpr10_ayeVK9GIjP0xxN7yMEhY7DrOIVqCNm0gPcyjaD9SiY0Pgc3z8lG7hzAby4tq9GJfqV409XYPxBT8lKU-XnSwrKfplUp5ySiaq_fHEqb5BVUlVFlDYnp5Q5qz5ADl8JNFVmwkw7UY73X6zz8T3GFqZaaIxhffax4m4AQcW418rAIwwhDCrxJ9DzlUyyMexYPzZbZeAdlFA4NjhpK5emjbwikk4mlRPor0MGZL5DjFQ1X-RkD7KsQs_RwVmMd1bDWSJYEzmfjzII9zIr9Isok7cr5uGR_IUnwBfz2PZr9QbNhKjs36SIElVlMA_t9gsdCaCeSN3UX32DczcOhBOcg5c4HX9lGzAPwrvHuS2Zap_nWhpP1I82U_my1FFCh9Pbin=w2110-h1175-no?authuser=1" class="center img-zoomable lazyload" alt=""<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/C8amR8q20wdr6z0BHhAk5ZHFM7V74HGz87D8KfUXSo76TJZDCEXWIB_n6wU-nGuvgtdX9IWPdmzf8GnpseUES0meyC3KuPEfEIWYaDt4V2G2FBjfD2eGjgAme9m6ONAphr3iQhFk1kPoVfIRiQmZ98ZCHT99lDCNi2OyxbvZGTs11ha0BunbnSHqyQliSbFjpiAG4PRpQN_TH6n0vDDakn-G0JLdjpsuBQ-WArJJ-Kps0fK-2abPHVa9h_tmgIF0IxEOTVNFfO-xhsRsx0gkMTfaf7XbSRAUjODwrdnWdwW7ddQ-f-auZy5PLESWy6kV83jE0lteC2rsJv3UFBxs0IKQUI6WuZZUmQ6X5GAKLmtM_KwLAEnN6uJdyeZbmzVEM-_o9JlLpEb1FGGX3kwqGe1iORpey4Hpr10_ayeVK9GIjP0xxN7yMEhY7DrOIVqCNm0gPcyjaD9SiY0Pgc3z8lG7hzAby4tq9GJfqV409XYPxBT8lKU-XnSwrKfplUp5ySiaq_fHEqb5BVUlVFlDYnp5Q5qz5ADl8JNFVmwkw7UY73X6zz8T3GFqZaaIxhffax4m4AQcW418rAIwwhDCrxJ9DzlUyyMexYPzZbZeAdlFA4NjhpK5emjbwikk4mlRPor0MGZL5DjFQ1X-RkD7KsQs_RwVmMd1bDWSJYEzmfjzII9zIr9Isok7cr5uGR_IUnwBfz2PZr9QbNhKjs36SIElVlMA_t9gsdCaCeSN3UX32DczcOhBOcg5c4HX9lGzAPwrvHuS2Zap_nWhpP1I82U_my1FFCh9Pbin=w2110-h1175-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li><li><br/><br/><a href="https://brave.com/zh/download/" target="_blank" rel="noreferrer noopener">Brave browser</a>: 目前用最順手的瀏覽器沒有之一，<del>Edge bye bye</del><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVt6K7y2KiRckJ95lzSnwiv1JuWh8g06LwLhNNHftPldmtAjaEmixiVCppOTMhy2z0nPR7AiXGJHlrH8a7A4Qa4mFFLNAgB7fEVS2bvd0KJmQ5WQ7g5VhX1fEiqz4GdKOzdfW19cdJhgSlKPB6JZ3ELig=w701-h404-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVt6K7y2KiRckJ95lzSnwiv1JuWh8g06LwLhNNHftPldmtAjaEmixiVCppOTMhy2z0nPR7AiXGJHlrH8a7A4Qa4mFFLNAgB7fEVS2bvd0KJmQ5WQ7g5VhX1fEiqz4GdKOzdfW19cdJhgSlKPB6JZ3ELig=w701-h404-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVt6K7y2KiRckJ95lzSnwiv1JuWh8g06LwLhNNHftPldmtAjaEmixiVCppOTMhy2z0nPR7AiXGJHlrH8a7A4Qa4mFFLNAgB7fEVS2bvd0KJmQ5WQ7g5VhX1fEiqz4GdKOzdfW19cdJhgSlKPB6JZ3ELig=w701-h404-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li></ul><br/><br/><h1 id="設定-brave-sync" class="article-heading">設定 Brave Sync <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e5%ae%9a-brave-sync"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>直接同步所有設定，超好用。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWOeQx1BMcoZfhdAIMnL0TLEeNMTF0idLwJdmDejuFs8t2KYV3SFYZ_TMcf0Y9zVQDYmAZt6RXo5ByB-_qfPC1Jv1CLA5eWK4j6T0_0aA06aTft3b6gr3pChBsow-UidpV_RbGEej4TMAIIu_EO-sKaig=w2330-h1268-no?authuser=1" class="center img-zoomable" alt="從原有的設備複製同步代碼" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWOeQx1BMcoZfhdAIMnL0TLEeNMTF0idLwJdmDejuFs8t2KYV3SFYZ_TMcf0Y9zVQDYmAZt6RXo5ByB-_qfPC1Jv1CLA5eWK4j6T0_0aA06aTft3b6gr3pChBsow-UidpV_RbGEej4TMAIIu_EO-sKaig=w2330-h1268-no?authuser=1" class="center img-zoomable lazyload" alt="從原有的設備複製同步代碼"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">從原有的設備複製同步代碼</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWOeQx1BMcoZfhdAIMnL0TLEeNMTF0idLwJdmDejuFs8t2KYV3SFYZ_TMcf0Y9zVQDYmAZt6RXo5ByB-_qfPC1Jv1CLA5eWK4j6T0_0aA06aTft3b6gr3pChBsow-UidpV_RbGEej4TMAIIu_EO-sKaig=w2330-h1268-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXvY2tpbNzTMcCJiHGNqXJsutRbhPEf4qjDjslWczDaJDFNgFG2rgEhDAVy2MTq1mKr-KwgAzXgoB_vwJ2KhPe0s2xIhmHq52NGJExHtY9b8JQh2wrnRpTHGK9ChK6JKO3jnXLyr7ttri1cPM8msHe_pw=w1069-h862-no?authuser=1" class="center img-zoomable" alt="我會開啟的選項" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXvY2tpbNzTMcCJiHGNqXJsutRbhPEf4qjDjslWczDaJDFNgFG2rgEhDAVy2MTq1mKr-KwgAzXgoB_vwJ2KhPe0s2xIhmHq52NGJExHtY9b8JQh2wrnRpTHGK9ChK6JKO3jnXLyr7ttri1cPM8msHe_pw=w1069-h862-no?authuser=1" class="center img-zoomable lazyload" alt="我會開啟的選項"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">我會開啟的選項</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXvY2tpbNzTMcCJiHGNqXJsutRbhPEf4qjDjslWczDaJDFNgFG2rgEhDAVy2MTq1mKr-KwgAzXgoB_vwJ2KhPe0s2xIhmHq52NGJExHtY9b8JQh2wrnRpTHGK9ChK6JKO3jnXLyr7ttri1cPM8msHe_pw=w1069-h862-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="調整-win10" class="article-heading">調整 win10 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%bf%e6%95%b4-win10"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="取消登入畫面讓我直接打密碼" class="article-heading">取消登入畫面，讓我直接打密碼 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%96%e6%b6%88%e7%99%bb%e5%85%a5%e7%95%ab%e9%9d%a2%e8%ae%93%e6%88%91%e7%9b%b4%e6%8e%a5%e6%89%93%e5%af%86%e7%a2%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUV7MUJePrvc54x9Da9a46bKh7X9oUorhWzJX40-WtNSe_RqxdT9q2UItmrpQYHQr0ienuEYknrRH8izqtvFTs2_RHJmJ0vnZBhKeG5g_sPeS5Izzs7UIQYF1nhE6dnh0wa7dgLh-DGl919y_9hunhU5g=w2254-h1268-no?authuser=1" class="center img-zoomable" alt="我不太需要這個登入前的畫面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUV7MUJePrvc54x9Da9a46bKh7X9oUorhWzJX40-WtNSe_RqxdT9q2UItmrpQYHQr0ienuEYknrRH8izqtvFTs2_RHJmJ0vnZBhKeG5g_sPeS5Izzs7UIQYF1nhE6dnh0wa7dgLh-DGl919y_9hunhU5g=w2254-h1268-no?authuser=1" class="center img-zoomable lazyload" alt="我不太需要這個登入前的畫面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">我不太需要這個登入前的畫面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUV7MUJePrvc54x9Da9a46bKh7X9oUorhWzJX40-WtNSe_RqxdT9q2UItmrpQYHQr0ienuEYknrRH8izqtvFTs2_RHJmJ0vnZBhKeG5g_sPeS5Izzs7UIQYF1nhE6dnh0wa7dgLh-DGl919y_9hunhU5g=w2254-h1268-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ul><li>Steps:<br/><ul><li>打開登錄編輯程式<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6RRPipWBBNuaEJfqDhUWq0_xKa3Xxfu55vLpiyskOYHF7FiufqrJBs_nqCMQ3ieNBGM7VKL7WszdtJdl0ZaZBT6GgmPAY0z6s-Guuc7sY-XP96AV1vPimLpjSNjRk2ZDjzcXR_LYV9-xU5GIu3LNkLQ=w1477-h1242-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW6RRPipWBBNuaEJfqDhUWq0_xKa3Xxfu55vLpiyskOYHF7FiufqrJBs_nqCMQ3ieNBGM7VKL7WszdtJdl0ZaZBT6GgmPAY0z6s-Guuc7sY-XP96AV1vPimLpjSNjRk2ZDjzcXR_LYV9-xU5GIu3LNkLQ=w1477-h1242-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW6RRPipWBBNuaEJfqDhUWq0_xKa3Xxfu55vLpiyskOYHF7FiufqrJBs_nqCMQ3ieNBGM7VKL7WszdtJdl0ZaZBT6GgmPAY0z6s-Guuc7sY-XP96AV1vPimLpjSNjRk2ZDjzcXR_LYV9-xU5GIu3LNkLQ=w1477-h1242-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li><li>在 &ldquo;電腦\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows&rdquo; 上新增 Personalization 的機碼<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXOOeq9MR1vGJClmWK3aKoSoNQ4pwQxwbBAtIWeWzZtj1W5J7qmvaYTbV7O3rI_ysBZ-IMj9abQuLpBN3enno2I2fAc4uXzFqWcQvTp9u015aaITRZ4bIhRIhKdjN0FMqaklKXiaKZTQrXa2RKEs1hxug=w1430-h999-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXOOeq9MR1vGJClmWK3aKoSoNQ4pwQxwbBAtIWeWzZtj1W5J7qmvaYTbV7O3rI_ysBZ-IMj9abQuLpBN3enno2I2fAc4uXzFqWcQvTp9u015aaITRZ4bIhRIhKdjN0FMqaklKXiaKZTQrXa2RKEs1hxug=w1430-h999-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXOOeq9MR1vGJClmWK3aKoSoNQ4pwQxwbBAtIWeWzZtj1W5J7qmvaYTbV7O3rI_ysBZ-IMj9abQuLpBN3enno2I2fAc4uXzFqWcQvTp9u015aaITRZ4bIhRIhKdjN0FMqaklKXiaKZTQrXa2RKEs1hxug=w1430-h999-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li><li>在該機碼中新增 NoLockScreen 的 32-bit DWORD 值<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWMVLMzzbzE7PYA7c4QeWhrOpzjaIJxNcwc3G6SK8PQMiBGJNhqEE4kwm8bnncySamYJyMF-nzqunSaZz7VMDfUZuAMEdQpimepRjQaRz0fHZBg4HtlhKzBIekHTJ9egkB58ohK70bP1-KamGpG2L_idw=w1430-h999-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWMVLMzzbzE7PYA7c4QeWhrOpzjaIJxNcwc3G6SK8PQMiBGJNhqEE4kwm8bnncySamYJyMF-nzqunSaZz7VMDfUZuAMEdQpimepRjQaRz0fHZBg4HtlhKzBIekHTJ9egkB58ohK70bP1-KamGpG2L_idw=w1430-h999-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWMVLMzzbzE7PYA7c4QeWhrOpzjaIJxNcwc3G6SK8PQMiBGJNhqEE4kwm8bnncySamYJyMF-nzqunSaZz7VMDfUZuAMEdQpimepRjQaRz0fHZBg4HtlhKzBIekHTJ9egkB58ohK70bP1-KamGpG2L_idw=w1430-h999-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li><li>修改值為 1<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVMeCXCbH93QC7dka5M_wdTGufLYcP3fRKKjBygfpLiOQ-SQqfBwcAidf2NnjAIQm3V0vAMhuBgL99mPihBoBBoBpTCAyQKAcr97H8n9X8sUjGiOWddriCEUIhSEPB2CGRtvu634EE4IzjiOJDsWwaBsA=w1430-h999-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVMeCXCbH93QC7dka5M_wdTGufLYcP3fRKKjBygfpLiOQ-SQqfBwcAidf2NnjAIQm3V0vAMhuBgL99mPihBoBBoBpTCAyQKAcr97H8n9X8sUjGiOWddriCEUIhSEPB2CGRtvu634EE4IzjiOJDsWwaBsA=w1430-h999-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVMeCXCbH93QC7dka5M_wdTGufLYcP3fRKKjBygfpLiOQ-SQqfBwcAidf2NnjAIQm3V0vAMhuBgL99mPihBoBBoBpTCAyQKAcr97H8n9X8sUjGiOWddriCEUIhSEPB2CGRtvu634EE4IzjiOJDsWwaBsA=w1430-h999-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li></ul></li><li>若要取消此修改，即把登入畫面恢復，將新增的東西 (NoLockScreen 或 Personalization) 刪除即可<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUo6k0i6epDeMt67x9QEzZ3kwTSKtBXmYpnBRiKu49WZAGrfAQgtbALo3v4Do0qTB3mCZIjROfXgwsI1L5nLwIjBRvSF4TDyNsTFNACjWC8vj0lyzBHcCiFD84AYBhJa2gctPBfCKGzKov3YWOEPeBJcg=w1424-h739-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUo6k0i6epDeMt67x9QEzZ3kwTSKtBXmYpnBRiKu49WZAGrfAQgtbALo3v4Do0qTB3mCZIjROfXgwsI1L5nLwIjBRvSF4TDyNsTFNACjWC8vj0lyzBHcCiFD84AYBhJa2gctPBfCKGzKov3YWOEPeBJcg=w1424-h739-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUo6k0i6epDeMt67x9QEzZ3kwTSKtBXmYpnBRiKu49WZAGrfAQgtbALo3v4Do0qTB3mCZIjROfXgwsI1L5nLwIjBRvSF4TDyNsTFNACjWC8vj0lyzBHcCiFD84AYBhJa2gctPBfCKGzKov3YWOEPeBJcg=w1424-h739-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li></ul><br/><br/><h2 id="caps-lock-換成-esc" class="article-heading">Caps lock 換成 esc <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#caps-lock-%e6%8f%9b%e6%88%90-esc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>請參考: <br/><br/><a href="https://aben20807.blogspot.com/2017/07/1060726-win10-caps-lockesc.html#more" target="_blank" rel="noreferrer noopener">106.07.26 win10 caps lock換成esc</a>。</p><br/><br/><h1 id="安裝及設定-wsl2" class="article-heading">安裝及設定 WSL2 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%8f%8a%e8%a8%ad%e5%ae%9a-wsl2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>安裝參考: <br/><br/><a href="https://docs.microsoft.com/zh-tw/windows/wsl/install" target="_blank" rel="noreferrer noopener">https://docs.microsoft.com/zh-tw/windows/wsl/install</a></li><li>更新至 WSL2<br/><ul><li>從<br/><br/><a href="https://docs.microsoft.com/zh-tw/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package" target="_blank" rel="noreferrer noopener">此處</a>下載更新檔案並安裝</li><li><code>wsl --set-default-version 2</code></li><li><code>wsl --set-version Ubuntu-20.04 2</code></li></ul></li><li>接著安裝 <br/><br/><a href="https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=zh-tw&amp;gl=TW" target="_blank" rel="noreferrer noopener">windows terminal</a><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVG6EnhpZRztAnezKjJi6DuPWrjFaOvHiQQyaIUlNllYian_z55QXS47HxuZSjK6dr2ZOkwj5Cxm_jojzw-dIWScFdk81P3DB58uzHdqzHwpN9udXjVEh2jFXWrim5XBAqIsgA55DtNbVpl_wwVeW8XrA=w1642-h1268-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVG6EnhpZRztAnezKjJi6DuPWrjFaOvHiQQyaIUlNllYian_z55QXS47HxuZSjK6dr2ZOkwj5Cxm_jojzw-dIWScFdk81P3DB58uzHdqzHwpN9udXjVEh2jFXWrim5XBAqIsgA55DtNbVpl_wwVeW8XrA=w1642-h1268-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVG6EnhpZRztAnezKjJi6DuPWrjFaOvHiQQyaIUlNllYian_z55QXS47HxuZSjK6dr2ZOkwj5Cxm_jojzw-dIWScFdk81P3DB58uzHdqzHwpN9udXjVEh2jFXWrim5XBAqIsgA55DtNbVpl_wwVeW8XrA=w1642-h1268-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li></ul><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://www.windowscentral.com/how-disable-windows-10-lock-screen" target="_blank" rel="noreferrer noopener">https://www.windowscentral.com/how-disable-windows-10-lock-screen</a></li></ul>
        ]]></description></item><item><title>Quantum Search for Boolean Satisfiability Problem</title><link>https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/</link><pubDate>Sun, 10 Apr 2022 20:31:38 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/</guid><description><![CDATA[
          <p>進入量子演算法了。<br/>越來越複雜，勉強能跟上。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>進入量子演算法了。<br/>越來越複雜，勉強能跟上。</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>證明部分看情況再補上</p><p>有錯再麻煩指正。</p><br/><br/><h1 id="boolean-satisfiability-problem" class="article-heading">Boolean satisfiability problem <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#boolean-satisfiability-problem"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>布林可滿足性問題，可簡稱為 SAT  。給定一個邏輯電路，求是否存在一種輸入使得該電路輸出為真 (True, 1)。</p><p>舉例: $F(x_1, x_2) = (x_1\lor x_2)\land (\lnot x_1 \lor \lnot x_2) \land (x_1)$, where $x_1, x_2 \in \{0, 1\}$，<br/>透過演算法可得 $x_1 = 1, x_2 = 0$ 時 $F(x_1, x_2) = 1$。求存在的其中一組解即可。</p><br/><br/><h1 id="complexity" class="article-heading">Complexity <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#complexity"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>SAT 問題屬於 NP-Complete  ，一般解法的複雜度需要花費到指數時間 $O(2^n)$。</p><p>簡單釐清一下 P、NP、NP-Complete、NP-Hard 之間的關係:</p><ul><li>P: 能以多項式時間演算法計算答案的問題之集合</li><li>NP: 能以指數時間演算法計算答案，且能以多項式時間演算法驗證答案的問題之集合。P 也可以用指數時間演算法求解，因此 P $\subset$ NP。</li><li>NP-Complete: NP 中最難問題的集合，若其中一個問題存在多項式時間的解法的話，則此集合所有問題都可用多項式解決。NP-Complete $\subset$ NP。</li><li>NP-Hard: 難度至少為 NP，代表可能比 NP-Complete 還難 (例如，Halting problem  )。NP-Complete $\subset$ NP-Hard。</li></ul><p>若 P = NP 則 P = NP = NP-Complete $\subset$ NP-Hard。</p><br/><br/><h1 id="quantum-solution-for-sat" class="article-heading">Quantum Solution for SAT <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-solution-for-sat"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="goal" class="article-heading">Goal <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#goal"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>使用量子特性 (Grover&rsquo;s algorithm  ) 對解決 SAT 達到平方加速: $O(2^{\frac{n}{2}}) = O(\sqrt{2^n})$</p><br/><br/><h2 id="simple-example" class="article-heading">Simple example <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#simple-example"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$F(x_1, x_2) = x_1 \land x_2$, where $x_1, x_2 \in \{0, 1\}$</p><br/><br/><h2 id="setup" class="article-heading">Setup <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#setup"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><code>q[0]</code>: auxiliary working bit</li><li><code>q[1]</code>: unused</li><li><code>q[2]</code>: auxiliary Boolean variable, $s_2$</li><li><code>q[3]</code>: $x_0$</li><li><code>q[4]</code>: $x_1$</li></ul><p>一開始會先將兩個輸入位元進行疊加，所以 <code>q[3], q[4]</code> 都會先使用 H gate 進入到疊加態。另外 <code>q[0]</code> 會先用 X gate 使其變為 $\lvert 1\rangle$ 再用 H gate，目的是讓其疊加成 $\frac{\lvert 0\rangle-\lvert 1\rangle}{\sqrt{2}}$，稍後會利用到此特性。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWOQurcL9sjq7UV_xxB8P3SNnnzlGL3wYZI5u8ev_yTL90CA5pHhVp_w8P8JQx598vVz3PnhjJMmIKHavCVV1XNyz8t1NI712JkauxUB6hYYguuF7fegvDKxWUBK7lRynDSKzhvbf-1jXwWoj_ylo3ug=w713-h536-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWWOQurcL9sjq7UV_xxB8P3SNnnzlGL3wYZI5u8ev_yTL90CA5pHhVp_w8P8JQx598vVz3PnhjJMmIKHavCVV1XNyz8t1NI712JkauxUB6hYYguuF7fegvDKxWUBK7lRynDSKzhvbf-1jXwWoj_ylo3ug=w713-h536-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWWOQurcL9sjq7UV_xxB8P3SNnnzlGL3wYZI5u8ev_yTL90CA5pHhVp_w8P8JQx598vVz3PnhjJMmIKHavCVV1XNyz8t1NI712JkauxUB6hYYguuF7fegvDKxWUBK7lRynDSKzhvbf-1jXwWoj_ylo3ug=w713-h536-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="step-1-find-the-oracle" class="article-heading">Step 1: Find the Oracle <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#step-1-find-the-oracle"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Oracle (Oracle Machine，預言機)  可以把它看作是一個 black box，其功能是可以透過單次運算解答特定問題。例如此簡化後問題的 oracle 可寫成 $B$ 矩陣如下。有了此矩陣，就可以做振幅放大。<br/>$$B = \small\begin{bmatrix}<br/>1&amp;0&amp;0&amp;0 \\<br/>0&amp;1&amp;0&amp;0 \\<br/>0&amp;0&amp;1&amp;0 \\<br/>0&amp;0&amp;0&amp;-1\end{bmatrix}$$</p><p>但是這裡有一個明顯的疑問，$B$ 矩陣不就是把答案解出來了嗎 ($x_0, x_1$ 皆為 1)，怎麼還需要解問題? 其實這是因為此問題已經簡化過，所以可以示範 oracle 的模樣。在較複雜的情況下這個 oracle 是表示不出來的。因此需要靠量子特性去找出這個 oracle。</p><p>實際情況是使用量子邏輯閘。若大家還有印象我們之前練習了一堆古典邏輯閘的轉換 (<br/><br/><a href="/posts/20220324-programming-on-quantum-computers-ch2-exercises/">Programming on Quantum Computers Chapter 2 Exercises</a>) 這些技巧在這邊就會使用到。以本次範例為例，目的是找出 <code>q[3], q[4]</code> AND 的結果為 1 的情況，所以可以利用 CCNOT 建構 AND，接著將其結果存放在 <code>q[2]</code>，並透過 CNOT 讓 <code>q[2]</code> 控制 <code>q[0]</code>，因此當 AND 輸出結果為 1 時就會影響到 <code>q[0]</code>。而這也是整個演算法的核心。</p><p>透過 CNOT 去抓去 1 的結果就代表我們拿到 oracle 了，接下來需要回復 AND 的動作，以讓狀態只有 oracle。因此透過量子的其中一項特性: 可逆性，將運算反著操作就可以回復狀態。則這步驟的邏輯閘可表示成下圖，有點像是個翅膀 (為了對稱性有加一些 ID gate, 深藍色 I)。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXi_i3vdYiT2lC2moxu6JdSgVNk4IJW8FISfOnms_xSgFwAciHTU-3tlGsz0-s04rBCMMO-ST8kXK_2LFW6XFF7ATE0FX_a4zYQ3W-8pGapAtNAHE0fYiXL5GbEAlW7blkjIVwv92AapAWttZcaRRk74A=w2687-h537-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXi_i3vdYiT2lC2moxu6JdSgVNk4IJW8FISfOnms_xSgFwAciHTU-3tlGsz0-s04rBCMMO-ST8kXK_2LFW6XFF7ATE0FX_a4zYQ3W-8pGapAtNAHE0fYiXL5GbEAlW7blkjIVwv92AapAWttZcaRRk74A=w2687-h537-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXi_i3vdYiT2lC2moxu6JdSgVNk4IJW8FISfOnms_xSgFwAciHTU-3tlGsz0-s04rBCMMO-ST8kXK_2LFW6XFF7ATE0FX_a4zYQ3W-8pGapAtNAHE0fYiXL5GbEAlW7blkjIVwv92AapAWttZcaRRk74A=w2687-h537-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="step-2-amplitude-amplification" class="article-heading">Step 2: Amplitude Amplification <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#step-2-amplitude-amplification"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>有了 oracle 後再來只需要透過 Grover&rsquo;s algorithm 來操作振幅放大的工作。其中一般性的 Grover Diffusion Operator $D$ 定義為一個大小為 $2^n\times 2^n$ 內容為 $D_{i,j} = \frac{2}{2^n}$ if $i\ne j$, and $D_{i,j} = \frac{2}{2^n}-1$ if $i = j$。其中 $D = D^\dagger$ 且因為 $D\times D^\dagger = I_{2^n\times 2^n}$，符合 Unitary matrix  定義。$D$ 展開如下:</p><p>$$<br/>D = \begin{bmatrix}<br/>\frac{2}{2^n}-1 &amp; \frac{2}{2^n} &amp; \ldots &amp; \frac{2}{2^n} \\<br/>\frac{2}{2^n} &amp; \frac{2}{2^n}-1 &amp; \ldots &amp; \frac{2}{2^n} \\<br/>\vdots&amp;\vdots&amp;\ddots&amp;\vdots\\<br/>\frac{2}{2^n} &amp; \frac{2}{2^n} &amp; \ldots &amp; \frac{2}{2^n}-1\end{bmatrix}_{2^n\times 2^n}<br/>$$</p><p>接下來使用量子邏輯閘實作 $D$。首先介紹張量積 Tensor product  , $\otimes$，範例如下:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXWdJdNx89JNTLNox50BvYulLeratVXqmYTVji4dK7NrwefqYR0HWNImL8YESlMAwNXvK5lTWfNbd-tMMma-K2Ii6ByLZHPU9cOceL9bxy7lufYOdZOd2eWYfCimey0OxlAAdTwlDatklNqf43_n8Z5tg=w3716-h479-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXWdJdNx89JNTLNox50BvYulLeratVXqmYTVji4dK7NrwefqYR0HWNImL8YESlMAwNXvK5lTWfNbd-tMMma-K2Ii6ByLZHPU9cOceL9bxy7lufYOdZOd2eWYfCimey0OxlAAdTwlDatklNqf43_n8Z5tg=w3716-h479-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXWdJdNx89JNTLNox50BvYulLeratVXqmYTVji4dK7NrwefqYR0HWNImL8YESlMAwNXvK5lTWfNbd-tMMma-K2Ii6ByLZHPU9cOceL9bxy7lufYOdZOd2eWYfCimey0OxlAAdTwlDatklNqf43_n8Z5tg=w3716-h479-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>接著定義 $\lvert\psi\rangle$ (對 $n$ 個輸入, $\lvert 0\rangle$ , 做 H gate，每個輸入對應兩種可能結果，所以整體共有 $2^n$ 種結果且機率都相同)，$\langle\psi\rvert$ 為轉置後結果。</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>\lvert\psi\rangle =&amp; H^{\otimes n}\lvert 0^{\otimes n}\rangle<br/>\newline<br/>=&amp; \otimes^n_{k=1}\big(\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\big) = \frac{1}{\sqrt{2^n}}\begin{bmatrix}1 \\ 1 \\ \vdots \\ 1 \end{bmatrix}_{2^n\times 1}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>則 $D$ 矩陣的實作定義為第一行等式，並可簡化成第二行的版本方便使用量子邏輯閘實作:</p><p>$$<br/>\begin{equation*}<br/>\begin{split}<br/>D =&amp; 2\lvert\psi\rangle\langle\psi\rvert - I_{2^n\times 2^n}<br/>\newline<br/>\newline<br/>=&amp; H^{\otimes n}(2\lvert 0^{\otimes n} \rangle\langle 0^{\otimes n}\rvert - I_{2^n\times 2^n})H^{\otimes n}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><p>回頭看本文使用的範例，可知 $n = 2$，因此 $D$ 為:</p><p>$$<br/>D = \begin{bmatrix}<br/>\frac{2}{4}-1 &amp; \frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4} \\<br/>\frac{2}{4} &amp; \frac{2}{4}-1 &amp; \frac{2}{4} &amp; \frac{2}{4} \\<br/>\frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4}-1 &amp; \frac{2}{4}\\<br/>\frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4}-1\end{bmatrix}_{4\times 4}<br/>$$</p><p>並可由下方邏輯閘實作 (詳細關聯待確認)，以及測量最終機率:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXRRuuDScPY9_PzBp56KDxYUrwfvivH98VVwhFY6kObtBwxvkTYayBR7B_7eXDxpbBuePpSMLTuy0bYYQsRPqIIhDyg7QX6aB1qROW7M4av3vK8-o5xpawXNBjqvVQcnzvEKEcawfyux1ZF1NKaWx7AFg=w1097-h565-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXRRuuDScPY9_PzBp56KDxYUrwfvivH98VVwhFY6kObtBwxvkTYayBR7B_7eXDxpbBuePpSMLTuy0bYYQsRPqIIhDyg7QX6aB1qROW7M4av3vK8-o5xpawXNBjqvVQcnzvEKEcawfyux1ZF1NKaWx7AFg=w1097-h565-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXRRuuDScPY9_PzBp56KDxYUrwfvivH98VVwhFY6kObtBwxvkTYayBR7B_7eXDxpbBuePpSMLTuy0bYYQsRPqIIhDyg7QX6aB1qROW7M4av3vK8-o5xpawXNBjqvVQcnzvEKEcawfyux1ZF1NKaWx7AFg=w1097-h565-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="run-on-ibm-quantum-composer" class="article-heading">Run on IBM Quantum Composer <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#run-on-ibm-quantum-composer"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="source-code" class="article-heading">Source code <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#source-code"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">5</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">5</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Setup<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Step1: Find the Oracle<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>cx q[<span style="color:#ae81ff">4</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">4</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>id q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>id q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">4</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>t q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>tdg q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">4</span>],q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Step 2: Amplitude Amplification<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>cx q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>u3(<span style="color:#ae81ff">2</span><span style="color:#f92672">*</span>pi,<span style="color:#ae81ff">0</span><span style="color:#f92672">*</span>pi,<span style="color:#ae81ff">0</span><span style="color:#f92672">*</span>pi) q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// Measurement<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>measure q[<span style="color:#ae81ff">4</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">3</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">3</span>];<br/></span></span></code></pre></div></div><br/><br/><h2 id="simulation-result" class="article-heading">Simulation result <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#simulation-result"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUad9IY7ZzwmhNVOaHuOM1T_R7AfPO8rQEfKYqsGX7ed0ahsVuoDdtI5z6OebC4Qo1SAjmsdUdk1BkzpieJ9XkAHSoFupZ0ioLpLwufrzi0MIBPdGMTSCgNEmgCUQfqooA9lTcpWnQ2ChWeNJ8wp7F0mA=w980-h703-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUad9IY7ZzwmhNVOaHuOM1T_R7AfPO8rQEfKYqsGX7ed0ahsVuoDdtI5z6OebC4Qo1SAjmsdUdk1BkzpieJ9XkAHSoFupZ0ioLpLwufrzi0MIBPdGMTSCgNEmgCUQfqooA9lTcpWnQ2ChWeNJ8wp7F0mA=w980-h703-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUad9IY7ZzwmhNVOaHuOM1T_R7AfPO8rQEfKYqsGX7ed0ahsVuoDdtI5z6OebC4Qo1SAjmsdUdk1BkzpieJ9XkAHSoFupZ0ioLpLwufrzi0MIBPdGMTSCgNEmgCUQfqooA9lTcpWnQ2ChWeNJ8wp7F0mA=w980-h703-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="actual-result-from-qpu" class="article-heading">Actual result from QPU <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#actual-result-from-qpu"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>可以看到其實誤差蠻大，正確率是 365/1024 = 35.6%</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLU6VHp2Wt5IP36ZLs2RcMEx4vdc11Uwunel_GH508rFb9ocAka1eP7KfD1mqFaTZPF57zOdtV3kUGLOjAjd-SX9EfPk5deUuGpyRNniKUlnk5XW-2sH_mr2FavWu407zdeFFesGzhoocQahQOiM23oxKg=w3104-h1933-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLU6VHp2Wt5IP36ZLs2RcMEx4vdc11Uwunel_GH508rFb9ocAka1eP7KfD1mqFaTZPF57zOdtV3kUGLOjAjd-SX9EfPk5deUuGpyRNniKUlnk5XW-2sH_mr2FavWu407zdeFFesGzhoocQahQOiM23oxKg=w3104-h1933-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLU6VHp2Wt5IP36ZLs2RcMEx4vdc11Uwunel_GH508rFb9ocAka1eP7KfD1mqFaTZPF57zOdtV3kUGLOjAjd-SX9EfPk5deUuGpyRNniKUlnk5XW-2sH_mr2FavWu407zdeFFesGzhoocQahQOiM23oxKg=w3104-h1933-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" target="_blank" rel="noreferrer noopener">Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem" target="_blank" rel="noreferrer noopener">SAT - wiki</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/NP-completeness" target="_blank" rel="noreferrer noopener">NP-completeness - wiki</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://en.wikipedia.org/wiki/Halting_problem" target="_blank" rel="noreferrer noopener">Halting problem - wiki</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://en.wikipedia.org/wiki/Grover%27s_algorithm#Algorithm" target="_blank" rel="noreferrer noopener">The steps of Grover&rsquo;s algorithm - wiki</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://en.wikipedia.org/wiki/Oracle_machine" target="_blank" rel="noreferrer noopener">Oracle machine - wiki</a>&#160; </p></li><li id="fn:6"><p><br/><a href="https://en.wikipedia.org/wiki/Unitary_matrix" target="_blank" rel="noreferrer noopener">Unitary matrix - wiki</a>&#160; </p></li><li id="fn:7"><p><br/><a href="https://en.wikipedia.org/wiki/Tensor_product" target="_blank" rel="noreferrer noopener">Tensor product - wiki</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Birthday Review</title><link>https://aben20807.github.io/posts/20220404-birthday-review/</link><pubDate>Mon, 04 Apr 2022 22:01:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220404-birthday-review/</guid><description><![CDATA[
          <p>大家好，今天剛好我生日，來寫寫我個人的近況以及一些回顧。簡而言之，還沒畢業XD</p>
          
            <p><a href="https://aben20807.github.io/posts/20220404-birthday-review/"><img src="https://images.unsplash.com/photo-1647180116710-6b5da0fade46?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1974&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220404-birthday-review/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>大家好，今天剛好我生日，來寫寫我個人的近況以及一些回顧。簡而言之，還沒畢業XD</p> <br/><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>在讀書過程中老闆強調的是分辨 must have 和 nice to have，很明顯的我做了很多 nice to have ，不過事後想想這些更多是 must have。例如在本站寫文章，雖然跟未來沒什麼關係，不過後來發現是不錯的抒發管道 ，儘管是一些純學術、技術的文章，這種把較艱深的知識科普化的過程也能夠釋放一些在腦袋中佔據的空間。</p><br/><br/><h1 id="上一個專案結束" class="article-heading">上一個專案結束 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8a%e4%b8%80%e5%80%8b%e5%b0%88%e6%a1%88%e7%b5%90%e6%9d%9f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>如果有看我之前提到的 SAC2021 論文 的作者列，就會發現我是跟工研院合作，類似產學合作的概念，那邊提供計畫的經費給我們，我們這邊根據那邊有興趣的主題做研究以及相關的開發。合作過程整體不錯，老師和主管給的意見都相當有幫助，讓整體計畫進度持續推進。論文中有提到我們實作了兩種方案，其實是一開始我們沒有先作好相關調查，等做完之後才發現有更好的選擇。不過我們已經有相關經驗，因此在使用另一方案的時程縮短不少，這也讓我有了教訓：應該要有更完整的調查後才開始動作。就這樣做了三年期的計畫，最後算是有完整交接，程式碼部分目前沒有開源，但是我的貢獻數目應該是可以公開才對，畢竟第三方工具可以拿到相關數據。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW-s1DU1WbC5qUxqEaEmyDOMCkusxtexbDHs7P0TQQlT0USDMCKaYRACiL22edgJ10c27Lr0l1dVky2rxIo_SNL4ZEp2G9qKI4ksdiLUvUnhsfzIKESiQo2rm7Wev2Ivs0ltcZYnIzNpmUQoSEdDesNlw=w822-h879-no?authuser=1" class="center img-zoomable" alt="Contributed commits" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW-s1DU1WbC5qUxqEaEmyDOMCkusxtexbDHs7P0TQQlT0USDMCKaYRACiL22edgJ10c27Lr0l1dVky2rxIo_SNL4ZEp2G9qKI4ksdiLUvUnhsfzIKESiQo2rm7Wev2Ivs0ltcZYnIzNpmUQoSEdDesNlw=w822-h879-no?authuser=1" class="center img-zoomable lazyload" alt="Contributed commits"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Contributed commits</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW-s1DU1WbC5qUxqEaEmyDOMCkusxtexbDHs7P0TQQlT0USDMCKaYRACiL22edgJ10c27Lr0l1dVky2rxIo_SNL4ZEp2G9qKI4ksdiLUvUnhsfzIKESiQo2rm7Wev2Ivs0ltcZYnIzNpmUQoSEdDesNlw=w822-h879-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>在這個主題下目前已經寫了幾篇論文，如果幸運的話，以這些論文我應該可以過畢業的門檻，再來只需要有幾篇幫忙的大概就可以。</p><br/><br/><h1 id="接下來的研究方向" class="article-heading">接下來的研究方向 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a5%e4%b8%8b%e4%be%86%e7%9a%84%e7%a0%94%e7%a9%b6%e6%96%b9%e5%90%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>如果有關注本站的話，會發現近期發了許多量子相關的文章。其實除了正在修相關課程之外，目前也規劃往這邊研究，但是可能貢獻可能就不會有前一個方向這麼多。</p><br/><br/><h1 id="廣告營利" class="article-heading">廣告營利 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bb%a3%e5%91%8a%e7%87%9f%e5%88%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>前言提到了寫文章的療效(x，個人雖然被老闆評斷為淡泊名利，不過畢竟這塊是會花時間的，因此想說能否順便用廣告賺外快。我把本站以及之前的 Blogger 拿去申請，結果只有流量低不少的本站通過…以這個流量短時間看起來是沒有什麼廣告點擊吧，申請也有被告知不能自行點擊或宣傳讓大家點擊，可能是因為會影響 google 針對興趣的推測吧。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWx6vAgIMHyaewOreyF6jjLVuA80a4DFLH-a4_MiQGJrvEuZbD6ahQzeRqEZ9xwqphl62yObucE9cuetireJTdbNbAPn7EqEEHaIjqsX5S2fZmrNLiDunvaBem2_SQssT8EgGaaMq0E5x7HaWQhQh65NQ=w1498-h812-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWx6vAgIMHyaewOreyF6jjLVuA80a4DFLH-a4_MiQGJrvEuZbD6ahQzeRqEZ9xwqphl62yObucE9cuetireJTdbNbAPn7EqEEHaIjqsX5S2fZmrNLiDunvaBem2_SQssT8EgGaaMq0E5x7HaWQhQh65NQ=w1498-h812-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWx6vAgIMHyaewOreyF6jjLVuA80a4DFLH-a4_MiQGJrvEuZbD6ahQzeRqEZ9xwqphl62yObucE9cuetireJTdbNbAPn7EqEEHaIjqsX5S2fZmrNLiDunvaBem2_SQssT8EgGaaMq0E5x7HaWQhQh65NQ=w1498-h812-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>雖然我個人頗討厭廣告，我平時也使用 Brave 當作主流瀏覽器來擋廣告，所以我也只放置在一些區塊，應該不至於影響文章閱讀體驗，討厭的話用擋廣告軟體也是可以的。話說我的觀眾超過一半來自 China，這樣廣告是不是派不上用場…</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV730_OolGXoGxZrtEDzEdASiDhJxu1sBVNIk4F4wa-4nl0nyGMG_aMecfZgEJNlG3tyNvOOWzbCDf0w2yFcWpQCW4JYjLQSIfc299WK7PkK2CdOMuL64jJxV_RaxzX-Gi4zQsoUK9KPe5MExikq-5zfg=w1049-h670-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV730_OolGXoGxZrtEDzEdASiDhJxu1sBVNIk4F4wa-4nl0nyGMG_aMecfZgEJNlG3tyNvOOWzbCDf0w2yFcWpQCW4JYjLQSIfc299WK7PkK2CdOMuL64jJxV_RaxzX-Gi4zQsoUK9KPe5MExikq-5zfg=w1049-h670-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV730_OolGXoGxZrtEDzEdASiDhJxu1sBVNIk4F4wa-4nl0nyGMG_aMecfZgEJNlG3tyNvOOWzbCDf0w2yFcWpQCW4JYjLQSIfc299WK7PkK2CdOMuL64jJxV_RaxzX-Gi4zQsoUK9KPe5MExikq-5zfg=w1049-h670-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="nice-to-have" class="article-heading">Nice to have？ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#nice-to-have"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>另外一個比較大型的東西，是我為了老闆開的編譯器系統寫了一個改作業的工具 local-judge 。想當初我剛進來是每個助教要分一些然後半手動批改。為了更好的節省時間，我們規定了需要遵守的格式，但是用一般 shell script 批改會遇到許多情況需要手動排除，因此這個用 python 寫的工具就誕生了。用這個工具省下大量批改同學作業時間，一般常見錯誤也都有自動處理並記錄，現在只要一個人十分鐘就可以改完一百多份作業。</p><p>如今已經打包到 pypi 所以可以直接用 pip 安裝。結果才接到通知說因為教課年限快到，因此再來老闆可能會改教其他科目。原本想薛一波下載人數的打算就這樣落空XD</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXm7ETVbwoXkcLU25JHjntQHla4oOY19N85VE_j9iq9fiAVJbcgm4GP1cfZY7fTkRx1QpbtG2YbawEbkbv4DsbdrNNuEYO1ZS7KT-t-u0NLDelo1sDKcc0Oi7JTTMU5sLdBZ_0c7i_6M8cbjYvkR85N3A=w1165-h790-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXm7ETVbwoXkcLU25JHjntQHla4oOY19N85VE_j9iq9fiAVJbcgm4GP1cfZY7fTkRx1QpbtG2YbawEbkbv4DsbdrNNuEYO1ZS7KT-t-u0NLDelo1sDKcc0Oi7JTTMU5sLdBZ_0c7i_6M8cbjYvkR85N3A=w1165-h790-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXm7ETVbwoXkcLU25JHjntQHla4oOY19N85VE_j9iq9fiAVJbcgm4GP1cfZY7fTkRx1QpbtG2YbawEbkbv4DsbdrNNuEYO1ZS7KT-t-u0NLDelo1sDKcc0Oi7JTTMU5sLdBZ_0c7i_6M8cbjYvkR85N3A=w1165-h790-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWV-uyJWpbu_42P1qHfjgGZxkE8gKLX0hPZFo1FSNMlVzE92BvQ3Fk150fU05hgg05ruzkayaXLSj83YZBuDi-SuJI3dYbQpD3qXok1UdK5Gp9Hn9GwpyjzQ53uG0-_tc9Zerko_cFz7Raf_KD_JmdxsQ=w871-h570-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWV-uyJWpbu_42P1qHfjgGZxkE8gKLX0hPZFo1FSNMlVzE92BvQ3Fk150fU05hgg05ruzkayaXLSj83YZBuDi-SuJI3dYbQpD3qXok1UdK5Gp9Hn9GwpyjzQ53uG0-_tc9Zerko_cFz7Raf_KD_JmdxsQ=w871-h570-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWV-uyJWpbu_42P1qHfjgGZxkE8gKLX0hPZFo1FSNMlVzE92BvQ3Fk150fU05hgg05ruzkayaXLSj83YZBuDi-SuJI3dYbQpD3qXok1UdK5Gp9Hn9GwpyjzQ53uG0-_tc9Zerko_cFz7Raf_KD_JmdxsQ=w871-h570-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="近況" class="article-heading">近況 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bf%91%e6%b3%81"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近大概在休息、讀論文、報論文、練習審論文、改期刊論文。這麼好像都是論文，不過其實休息比重比較大。平時還是穩定跟女友在想宇宙最難問題：三餐要吃啥？</p><p>接下來有時間有毅力的話是有打算將之前研究的內容寫一些較口語化的文章，可能還是會偏學術，要到科普的境界可能有難度。當然目前的量子也會繼續，我會努力聽懂@@</p><p>另外之前有提到手機換了 S21U，目前用下來偶爾相機會顯示正在使用不能打開的問題，且這台的相機近距離拍出來的相片繪差相當嚴重，還被 Unsplash 退件多次，這邊原先的 V30+ 就幾乎沒這個問題。</p><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>不知不覺活了25年 (三百個月)。感謝大家的祝福。希望世界疫情趕快好轉，這樣大家才能各種出國玩，假日才不用一直看到一堆人(x</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://youtu.be/nmwKWuFMkLo" target="_blank" rel="noreferrer noopener">【一天聽一點 #685】生活充滿無力感？三種方法，幫你找回活力</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://dl.acm.org/doi/10.1145/3412841.3441929" target="_blank" rel="noreferrer noopener">TONIC: towards oblivious neural inference compiler</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Programming on Quantum Computers Chapter 2 Exercises</title><link>https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/</link><pubDate>Thu, 24 Mar 2022 14:16:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/</guid><description><![CDATA[
          <p>寫個修課的作業。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>寫個修課的作業。</p><p>有錯再麻煩指正。</p><br/><br/><h1 id="實作邏輯閘" class="article-heading">實作邏輯閘 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e4%bd%9c%e9%82%8f%e8%bc%af%e9%96%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>第二章的內容就是先介紹了 CCNOT 邏輯閘 (請參考之前文章 &ldquo;<br/><br/><a href="/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/">Quantum Toffoli Gate (CCNOT) Decomposition</a>)&quot;。此邏輯閘的出現可以讓古典運算做對照，也就是可以用量子邏輯閘來模擬古典邏輯閘的特性。不過並非純粹模擬，而是利用同樣輸入輸出的特性來得以描述同一問題，並嘗試利用量子特性來加速解決問題的時間。</p><p>本章作業內容是利用 CCNOT 可類推到 AND 的特性 (如下圖) 來將給定的邏輯閘轉換成使用 CCNOT。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUpe9b_MtBGHyroPABW-B-tbXJ35irNVZQ5l374Ob1SFQ_wi-HqmogLUefkIRkP7RS9NKuoD8onfePy56C4WHNteOS1zorN0duvAPQj6iMjPUlbFwM6HtknbjQJsCWNY6JIJRDFYIi2R6eRw87Gtv0qfw=w1892-h1012-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUpe9b_MtBGHyroPABW-B-tbXJ35irNVZQ5l374Ob1SFQ_wi-HqmogLUefkIRkP7RS9NKuoD8onfePy56C4WHNteOS1zorN0duvAPQj6iMjPUlbFwM6HtknbjQJsCWNY6JIJRDFYIi2R6eRw87Gtv0qfw=w1892-h1012-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUpe9b_MtBGHyroPABW-B-tbXJ35irNVZQ5l374Ob1SFQ_wi-HqmogLUefkIRkP7RS9NKuoD8onfePy56C4WHNteOS1zorN0duvAPQj6iMjPUlbFwM6HtknbjQJsCWNY6JIJRDFYIi2R6eRw87Gtv0qfw=w1892-h1012-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVegjkbXCJ4PyXvmtKssyvfON0ZRgn3j1uQ2gXZJ4zHNtR1zt0g_tjPZpkr3EdZZKXgPZMXg-b7YiJFckRxqFlzen25IDpORR65Phni597kttxVjmOUxAycmBTI3Ntm0T4VcAUQDhE2CKARl7LHwEfwNg=w1892-h1012-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVegjkbXCJ4PyXvmtKssyvfON0ZRgn3j1uQ2gXZJ4zHNtR1zt0g_tjPZpkr3EdZZKXgPZMXg-b7YiJFckRxqFlzen25IDpORR65Phni597kttxVjmOUxAycmBTI3Ntm0T4VcAUQDhE2CKARl7LHwEfwNg=w1892-h1012-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVegjkbXCJ4PyXvmtKssyvfON0ZRgn3j1uQ2gXZJ4zHNtR1zt0g_tjPZpkr3EdZZKXgPZMXg-b7YiJFckRxqFlzen25IDpORR65Phni597kttxVjmOUxAycmBTI3Ntm0T4VcAUQDhE2CKARl7LHwEfwNg=w1892-h1012-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>這裡會大量使用笛摩根定理   將主要邏輯閘換成 AND。另外這裡使用的符號跟課本所用的符號不太一樣 (因為 $\bar{x}$ 在多層下不太方便):</p><ul><li>$\lnot x$: NOT x</li><li>$x\lor y$: x OR y</li><li>$x\land y$: x AND y</li></ul><p>另外量子的表達方法用 OpenQASM 的方式呈現，$x$ 對應 <code>q[0]</code>, $y$ 對應 <code>q[1]</code>, 輸出為 <code>q[2]</code>，其中 <code>q[0], q[1]</code> 會用 Hadamard 使輸入變成疊加態。篇幅問題重複部分 (標頭檔、宣告、Hadamard、測量) 就不寫如簡化後版本:</p><ul><li>例如: $\lnot x \land y$ 簡化前:<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#ae81ff">2.0</span>;<br/></span></span><span style="display:flex;"><span>include <span style="color:#e6db74">&#34;qelib1.inc&#34;</span>;<br/></span></span><span style="display:flex;"><span>qreg q[<span style="color:#ae81ff">5</span>];<br/></span></span><span style="display:flex;"><span>creg c[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>h q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// ---<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>]; <span style="color:#75715e">// 回復 q[0]<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">// ---<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>measure q[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">1</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>measure q[<span style="color:#ae81ff">2</span>] <span style="color:#f92672">-&gt;</span> c[<span style="color:#ae81ff">2</span>];<br/></span></span></code></pre></div></div></li><li>例如: $\lnot x \land y$ 簡化後:<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>]; <span style="color:#75715e">// 回復 q[0]<br/></span></span></span></code></pre></div></div></li></ul><br/><br/><h2 id="lnot-x-lor-y" class="article-heading">$\lnot x \lor y$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-lor-y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$\lnot x \lor y \Longleftrightarrow \lnot(\lnot\lnot x \land \lnot y) \Longleftrightarrow \lnot(x \land \lnot y)$</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">2</span>]; <span style="color:#75715e">// AND 後 NOT 的做法是把 target bit 先 NOT<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span></code></pre></div></div><br/><br/><h2 id="x-lor-lnot-y" class="article-heading">$x \lor \lnot y$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#x-lor-lnot-y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$x \lor \lnot y \Longleftrightarrow \lnot(\lnot x \land \lnot\lnot y) \Longleftrightarrow \lnot(\lnot x \land y)$</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">2</span>]; <span style="color:#75715e">// AND 後 NOT 的做法是把 target bit 先 NOT<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span></code></pre></div></div><br/><br/><h2 id="lnot-y-land-x-lor-lnot-x" class="article-heading">$\lnot y \land (x \lor \lnot x)$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-y-land-x-lor-lnot-x"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>比較特別是 $x$ 跟 $\lnot x$ 需要分開，另外會需要用到兩個暫存 qubit (<code>q[3], q[4]</code>)。</p><p>$\lnot y \land (x \lor \lnot x)<br/>\Longleftrightarrow (\lnot y \land x) \lor (\lnot y \land \lnot x)<br/>\Longleftrightarrow \lnot \Big(\lnot (\lnot y \land x) \land \lnot(\lnot y \land \lnot x)\Big)$</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// (\lnot y \land x)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// (\lnot y \land \lnot x)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">3</span>], q[<span style="color:#ae81ff">4</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLU4MCnC3tKyN0VTu3ZymgJnQa9DoZZpQgJKYKQYhrrVPcZ5cC7_gIJNsxpSaYhz00ND1lXCF7ECcGxudz66e-0wFWr2mkhWXmKupK0_NycqS-2M_HgVr_ss2TvhbcJrPK0YwK-UhYf_Sri9oABp92p1WA=w1203-h968-no?authuser=1" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLU4MCnC3tKyN0VTu3ZymgJnQa9DoZZpQgJKYKQYhrrVPcZ5cC7_gIJNsxpSaYhz00ND1lXCF7ECcGxudz66e-0wFWr2mkhWXmKupK0_NycqS-2M_HgVr_ss2TvhbcJrPK0YwK-UhYf_Sri9oABp92p1WA=w1203-h968-no?authuser=1" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLU4MCnC3tKyN0VTu3ZymgJnQa9DoZZpQgJKYKQYhrrVPcZ5cC7_gIJNsxpSaYhz00ND1lXCF7ECcGxudz66e-0wFWr2mkhWXmKupK0_NycqS-2M_HgVr_ss2TvhbcJrPK0YwK-UhYf_Sri9oABp92p1WA=w1203-h968-no?authuser=1" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="lnot-x-land-y-lor-lnot-y" class="article-heading">$\lnot x \land (y \lor \lnot y)$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-land-y-lor-lnot-y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>其實跟上面類似，只是 $x, y$ 互換</p><p>$\lnot x \land (y \lor \lnot y)<br/>\Longleftrightarrow \lnot \Big(\lnot (\lnot x \land y) \land \lnot(\lnot x \land \lnot y)\Big)$</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// (\lnot x \land y)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// (\lnot x \land \lnot y)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>barrier q[<span style="color:#ae81ff">0</span>],q[<span style="color:#ae81ff">1</span>],q[<span style="color:#ae81ff">2</span>],q[<span style="color:#ae81ff">3</span>],q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">3</span>], q[<span style="color:#ae81ff">4</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">3</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">4</span>];<br/></span></span></code></pre></div></div><br/><br/><h2 id="lnot-x-land-y" class="article-heading">$\lnot x \land y$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-land-y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>直接用 CCNOT 實作 AND。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">0</span>];<br/></span></span></code></pre></div></div><br/><br/><h2 id="x-land-lnot-y" class="article-heading">$x \land \lnot y$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#x-land-lnot-y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>同上。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span><span style="display:flex;"><span>ccx q[<span style="color:#ae81ff">0</span>], q[<span style="color:#ae81ff">1</span>], q[<span style="color:#ae81ff">2</span>];<br/></span></span><span style="display:flex;"><span>x q[<span style="color:#ae81ff">1</span>];<br/></span></span></code></pre></div></div><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" target="_blank" rel="noreferrer noopener">Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/De_Morgan%27s_laws" target="_blank" rel="noreferrer noopener">De Morgan&rsquo;s laws - wiki</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>WSL2 Size Too Large Compact</title><link>https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/</link><pubDate>Wed, 23 Mar 2022 11:44:44 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/</guid><description><![CDATA[
          <p>WSL2 太佔硬碟空間了，看可否壓縮一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLUAahOMO1WJ53qQJCnqreDbs0ci8XMnJtWWq9vBtrxy49mpucvChEbRI3blKmOF4s6fXb6pX5Wehh774WM0YXA1kuZR_YzkVBRKMLMS7x39KGMzAN_MoKDHWXroYPE54IFLosm40aa2YFNttwXcbkyE_Q=w614-h353-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>WSL2 太佔硬碟空間了，看可否壓縮一下。</p><p>WSL2 跟 visualbox 的動態硬碟類似，用多少會動態調整，不過是只增不減。導致空間會越來越大。封面圖就是已經占用到 23 GB 了，查了一下如何縮減。剛好看到有方法，就記錄一下過程方便之後使用。</p><br/><br/><h1 id="建議前置動作-optional" class="article-heading">建議前置動作 (Optional) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bb%ba%e8%ad%b0%e5%89%8d%e7%bd%ae%e5%8b%95%e4%bd%9c-optional"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>建議先打開 WSL2 刪除那些不會用到或是暫存檔。</p><p>例如，用下面指令刪除 <code>/tmp/</code> 底下所以資料 (有重要資料請備份)。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ yes | rm -r /tmp/*<br/></span></span></code></pre></div></div><br/><br/><h1 id="ext4vhdx" class="article-heading">ext4.vhdx <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ext4vhdx"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>找出 ext4.vhdx 檔案位置，之後會用到。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV6-I6oUyopxc8rPRc-LczPBOXs2rE4AOqjLi0KmZgJky-YXVaTWPu5YvqlL6PrqWlqBJRa5HenInH0Srya0da1k1mfmSjCNqRWmzWSDVkdsRV3HWQVGDjl-fZ251z66bhdfNpImIO0NXZOlHly5lnRGg=w991-h201-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV6-I6oUyopxc8rPRc-LczPBOXs2rE4AOqjLi0KmZgJky-YXVaTWPu5YvqlL6PrqWlqBJRa5HenInH0Srya0da1k1mfmSjCNqRWmzWSDVkdsRV3HWQVGDjl-fZ251z66bhdfNpImIO0NXZOlHly5lnRGg=w991-h201-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV6-I6oUyopxc8rPRc-LczPBOXs2rE4AOqjLi0KmZgJky-YXVaTWPu5YvqlL6PrqWlqBJRa5HenInH0Srya0da1k1mfmSjCNqRWmzWSDVkdsRV3HWQVGDjl-fZ251z66bhdfNpImIO0NXZOlHly5lnRGg=w991-h201-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="powershell" class="article-heading">Powershell <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#powershell"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>使用管理員權限打開 Windows Powershell</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWHeTUgvY-gnJNdkGPLzwb54-03sgN1jt4_edrSQo3S2DisZA52IFBzN2i-MN_jViGSa6Hf1UndxBZ3jmMH-nqa2bgi1OhcKGjWzjKjrIyZtNu3nLdZmIY7eGeA2FGaOyAwzsDJI--Wn91KzMuhZvpEvg=w425-h238-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWHeTUgvY-gnJNdkGPLzwb54-03sgN1jt4_edrSQo3S2DisZA52IFBzN2i-MN_jViGSa6Hf1UndxBZ3jmMH-nqa2bgi1OhcKGjWzjKjrIyZtNu3nLdZmIY7eGeA2FGaOyAwzsDJI--Wn91KzMuhZvpEvg=w425-h238-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWHeTUgvY-gnJNdkGPLzwb54-03sgN1jt4_edrSQo3S2DisZA52IFBzN2i-MN_jViGSa6Hf1UndxBZ3jmMH-nqa2bgi1OhcKGjWzjKjrIyZtNu3nLdZmIY7eGeA2FGaOyAwzsDJI--Wn91KzMuhZvpEvg=w425-h238-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>依序執行下列指令 (路徑為 ext4.vhdx 所在位置):</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>wsl --shutdown<br/></span></span><span style="display:flex;"><span>diskpart<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># open window Diskpart</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">select</span> vdisk file<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;C:\WSL-Distros\…\ext4.vhdx&#34;</span><br/></span></span><span style="display:flex;"><span>attach vdisk readonly<br/></span></span><span style="display:flex;"><span>compact vdisk<br/></span></span><span style="display:flex;"><span>detach vdisk<br/></span></span><span style="display:flex;"><span>exit<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVyPzuO9Q4ntuSCZ3XSZ5c3KyJ5B5nf0MKy5zr_Bwdu1hBJvONxkaj2BMXDuGFFLaajqBff5_Y0OP-ujbD_MF8asKA3Fjw3i2yw9qUJtdJrtE67VZqDJBI8zBNv3nsASR2E4ozpuxTIrpMrqAk-XMTJWg=w1297-h563-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVyPzuO9Q4ntuSCZ3XSZ5c3KyJ5B5nf0MKy5zr_Bwdu1hBJvONxkaj2BMXDuGFFLaajqBff5_Y0OP-ujbD_MF8asKA3Fjw3i2yw9qUJtdJrtE67VZqDJBI8zBNv3nsASR2E4ozpuxTIrpMrqAk-XMTJWg=w1297-h563-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVyPzuO9Q4ntuSCZ3XSZ5c3KyJ5B5nf0MKy5zr_Bwdu1hBJvONxkaj2BMXDuGFFLaajqBff5_Y0OP-ujbD_MF8asKA3Fjw3i2yw9qUJtdJrtE67VZqDJBI8zBNv3nsASR2E4ozpuxTIrpMrqAk-XMTJWg=w1297-h563-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="成果" class="article-heading">成果 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%90%e6%9e%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最後會壓縮大小，不過還是很大就是&hellip;</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUsTv73doQGTZp0iQnSKtdvJh7snaaInoiy16p2jCpQJoKgGA-l2AEkq-92tMCSlIuaM0XeJMEyh3RNNS-NcYvkcIpZCO-6uthcmFpTRr3io3YY74JzAYFgnhmE5e_dYGulb9_j27KjHW-eDWRs2KbwVw=w985-h223-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUsTv73doQGTZp0iQnSKtdvJh7snaaInoiy16p2jCpQJoKgGA-l2AEkq-92tMCSlIuaM0XeJMEyh3RNNS-NcYvkcIpZCO-6uthcmFpTRr3io3YY74JzAYFgnhmE5e_dYGulb9_j27KjHW-eDWRs2KbwVw=w985-h223-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUsTv73doQGTZp0iQnSKtdvJh7snaaInoiy16p2jCpQJoKgGA-l2AEkq-92tMCSlIuaM0XeJMEyh3RNNS-NcYvkcIpZCO-6uthcmFpTRr3io3YY74JzAYFgnhmE5e_dYGulb9_j27KjHW-eDWRs2KbwVw=w985-h223-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://github.com/microsoft/WSL/issues/4699#issuecomment-627133168" target="_blank" rel="noreferrer noopener">@merkuriy &rsquo;s comment - WSL 2 should automatically release disk space back to the host OS</a></li></ul>
        ]]></description></item><item><title>C++ Shared Library Compile</title><link>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</link><pubDate>Mon, 21 Mar 2022 17:28:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</guid><description><![CDATA[
          <p>看到 C/C++初學者 FB 社團的<br/><br/><a href="https://www.facebook.com/groups/C.and.CPP.beginner/posts/2097833393706803/" target="_blank" rel="noreferrer noopener">發問</a>，<br/>情境是沒有 header file 下要如何使用 .so 編譯 C++ 的程式。<br/>因為沒有後續，所以也不確定是否解決，不過最後的回答的確是突破口。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVwPUvaPN2bZddB_qbWZFO_JbbC-gYcfLp5cAmsEKOBaCdXwKzZoipiV460LvChHNLdrf7yNMyYe4YccM7-hcoiWZrmbkZco5py-LBDF5eg8kKW_WMzFaIJZaJmdYx-PQo86ueiOiQh6TPxDuW_-xkv2w=w845-h583-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>看到 C/C++初學者 FB 社團的<br/><br/><a href="https://www.facebook.com/groups/C.and.CPP.beginner/posts/2097833393706803/" target="_blank" rel="noreferrer noopener">發問</a>，<br/>情境是沒有 header file 下要如何使用 .so 編譯 C++ 的程式。<br/>因為沒有後續，所以也不確定是否解決，不過最後的回答的確是突破口。</p><p>我之前有記錄過 &ldquo;<br/><br/><a href="https://aben20807.blogspot.com/2018/08/1070825-c-static-shared.html" target="_blank" rel="noreferrer noopener">107.08.25 C 語言 static 和 shared 函式庫</a>&rdquo; 不過是純 C 不適用此問題。以下為此問題的解決過程記錄。</p><br/><br/><h1 id="tldr" class="article-heading">TL;DR <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><a href="#c-g-可行版本">C++ (g++) 可行版本</a></p><br/><br/><h1 id="問題定義" class="article-heading">問題定義 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%95%8f%e9%a1%8c%e5%ae%9a%e7%be%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>手邊有 libabc.so, libabc.a，沒有 *.h, *.c</p><p>這邊就使用 libabc.so 為主要問題 (因為解決後，libabc.a 可用相同步驟解決)</p><p>libabc.so 中有 <code>xyz()</code> 可供呼叫</p><p>為了重現問題以下為 libabc 的測試程式 (因為問題中提到用 gcc 與 c 是可以使用，代表該函式庫有使用 <code>extern &quot;C&quot; {...}</code>):</p><ul><li><code>abc.cpp</code>:<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">extern</span> <span style="color:#e6db74">&#34;C&#34;</span> {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">xyz</span>() { std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;xyz&#34;</span> <span style="color:#f92672">&lt;&lt;</span> std<span style="color:#f92672">::</span>endl; }<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li>產生 <code>libabc.so</code>:<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c -fPIC -o libabc.o abc.cpp<br/></span></span><span style="display:flex;"><span>$ g++ -shared -o libabc.so libabc.o <span style="color:#f92672">&amp;&amp;</span> rm libabc.o<br/></span></span></code></pre></div></div></li></ul><br/><br/><h1 id="c-gcc-可行版本" class="article-heading">C (gcc) 可行版本 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-gcc-%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>test0.c</code><br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">xyz</span>();<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span>    xyz();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li>編譯並執行<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o test test0.c -L. -labc -Wl,-rpath<span style="color:#f92672">=</span>.<br/></span></span><span style="display:flex;"><span>$ ./test<br/></span></span><span style="display:flex;"><span>xyz<br/></span></span></code></pre></div></div></li></ul><br/><br/><h1 id="c-g-無法鏈結版本" class="article-heading">C++ (g++) 無法鏈結版本 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-%e7%84%a1%e6%b3%95%e9%8f%88%e7%b5%90%e7%89%88%e6%9c%ac"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>test1.cpp</code><br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">xyz</span>();<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span>    xyz();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li>編譯<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -o test test1.cpp -L. -labc -Wl,-rpath<span style="color:#f92672">=</span>.<br/></span></span><span style="display:flex;"><span>/tmp/ccL0SPL8.o: In <span style="color:#66d9ef">function</span> <span style="color:#e6db74">`</span>main<span style="color:#e6db74">&#39;:<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">t1.cpp:(.text+0x10): undefined reference to `xyz()&#39;</span><br/></span></span><span style="display:flex;"><span>collect2: error: ld returned <span style="color:#ae81ff">1</span> exit status<br/></span></span></code></pre></div></div></li><li>找出問題: 可以看到需要 <code>_Z3xyzv</code> 這個 symbol 但是在 linker 鏈結時找不到，因為 <code>libabc</code> 所提供的 <code>xyz()</code> 有定義 <code>extern &quot;C&quot; {...}</code> 所以其 symbol 是 <code>xyz</code>。<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c test1.cpp<br/></span></span><span style="display:flex;"><span>$ nm test1.o<br/></span></span><span style="display:flex;"><span>                 U _GLOBAL_OFFSET_TABLE_<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000064</span> t _GLOBAL__sub_I_main<br/></span></span><span style="display:flex;"><span>                 U _Z3xyzv<br/></span></span><span style="display:flex;"><span>000000000000001b t _Z41__static_initialization_and_destruction_0ii<br/></span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitC1Ev<br/></span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitD1Ev<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> r _ZStL19piecewise_construct<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> b _ZStL8__ioinit<br/></span></span><span style="display:flex;"><span>                 U __cxa_atexit<br/></span></span><span style="display:flex;"><span>                 U __dso_handle<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> T main<br/></span></span></code></pre></div></div></li></ul><br/><br/><h1 id="c-g-可行版本" class="article-heading">C++ (g++) 可行版本 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>test2.cpp</code><br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">extern</span> <span style="color:#e6db74">&#34;C&#34;</span> <span style="color:#66d9ef">void</span> xyz();<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span>    xyz();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li>編譯並執行<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o test test2.cpp -L. -labc -Wl,-rpath<span style="color:#f92672">=</span>.<br/></span></span><span style="display:flex;"><span>$ ./test<br/></span></span><span style="display:flex;"><span>xyz<br/></span></span></code></pre></div></div></li><li>確認<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c t1.cpp<br/></span></span><span style="display:flex;"><span>$ nm t1.o<br/></span></span><span style="display:flex;"><span>                 U _GLOBAL_OFFSET_TABLE_<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000064</span> t _GLOBAL__sub_I_main<br/></span></span><span style="display:flex;"><span>000000000000001b t _Z41__static_initialization_and_destruction_0ii<br/></span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitC1Ev<br/></span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitD1Ev<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> r _ZStL19piecewise_construct<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> b _ZStL8__ioinit<br/></span></span><span style="display:flex;"><span>                 U __cxa_atexit<br/></span></span><span style="display:flex;"><span>                 U __dso_handle<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">0000000000000000</span> T main<br/></span></span><span style="display:flex;"><span>                 U xyz<br/></span></span></code></pre></div></div></li></ul><br/><br/><h1 id="c-g-dlopen-噁心可行版本" class="article-heading">C++ (g++) dlopen <del>噁心</del>可行版本 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-dlopen-%e5%99%81%e5%bf%83%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>原先我覺得沒有 header file (*.h) 應該無法做到，所以就先繞了遠路用 dlopen   解決，後來才想到可以先用 <code>extern</code> 宣告尚未定義的函式。需要注意的是 dlopen 可能會影響效能。</p><ul><li><code>test3.cpp</code><br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;dlfcn.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">using</span> func_t <span style="color:#f92672">=</span> <span style="color:#66d9ef">void</span> (<span style="color:#f92672">*</span>)();<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>error;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">auto</span> lib <span style="color:#f92672">=</span> dlopen(<span style="color:#e6db74">&#34;libabc.so&#34;</span>, RTLD_LAZY <span style="color:#f92672">|</span> RTLD_GLOBAL);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> ((error <span style="color:#f92672">=</span> dlerror()) <span style="color:#f92672">!=</span> NULL) {<br/></span></span><span style="display:flex;"><span>        std<span style="color:#f92672">::</span>cerr <span style="color:#f92672">&lt;&lt;</span> error;<br/></span></span><span style="display:flex;"><span>        exit(EXIT_FAILURE);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    func_t xyz <span style="color:#f92672">=</span> (func_t)dlsym(lib, <span style="color:#e6db74">&#34;xyz&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> ((error <span style="color:#f92672">=</span> dlerror()) <span style="color:#f92672">!=</span> NULL) {<br/></span></span><span style="display:flex;"><span>        std<span style="color:#f92672">::</span>cerr <span style="color:#f92672">&lt;&lt;</span> error;<br/></span></span><span style="display:flex;"><span>        exit(EXIT_FAILURE);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    xyz();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> EXIT_SUCCESS;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li>編譯並執行<br/><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -o test test3.cpp -ldl -Wl,-rpath<span style="color:#f92672">=</span>.<br/></span></span><span style="display:flex;"><span>$ ./test<br/></span></span><span style="display:flex;"><span>xyz<br/></span></span></code></pre></div></div></li></ul><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://aben20807.blogspot.com/2018/08/1070825-c-static-shared.html" target="_blank" rel="noreferrer noopener">107.08.25 C 語言 static 和 shared 函式庫</a></li><li><br/><br/><a href="https://www.quora.com/How-can-I-use-some-C-library-so-in-my-C-code" target="_blank" rel="noreferrer noopener">How can I use some C library (.so) in my C code?</a></li><li><br/><br/><a href="https://iq.opengenus.org/create-shared-library-in-cpp/" target="_blank" rel="noreferrer noopener">How to create shared library (.SO) in C++ (G++)?</a></li><li><br/><br/><a href="https://www.toptal.com/c-plus-plus/c-plus-plus-understanding-compilation" target="_blank" rel="noreferrer noopener">How C++ Works: Understanding Compilation</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://man7.org/linux/man-pages/man3/dlopen.3.html" target="_blank" rel="noreferrer noopener">dlopen(3) — Linux manual page</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Programming on Quantum Computers Chapter 1 Exercises</title><link>https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/</link><pubDate>Mon, 14 Mar 2022 09:52:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/</guid><description><![CDATA[
          <p>寫個修課的作業。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>寫個修課的作業。</p><p>有錯再麻煩指正。</p><p>⭐: 與解答有出入，待確認。</p><br/><br/><h1 id="to-u3-gate" class="article-heading">To U3 gate <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#to-u3-gate"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>本章節作業目標是把常見的 single qubit gate 轉換成用 U3 表達。</p><p>$U3(\theta, \phi, \lambda) = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><br/><br/><h2 id="not-x-" class="article-heading">NOT $X$ ⭐ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#not-x-"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$X = {\small\begin{bmatrix}0 &amp; 1\\1 &amp; 0\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p>$\Rightarrow \cos(\frac{\theta}{2}) = 0$</p><p>$\Rightarrow \theta = \pi, \theta \in [0, \pi] \Rightarrow \sin(\frac{\theta}{2}) = 1$</p><p>$\Rightarrow e^{i\phi} = 1, -e^{i\lambda} = 1 \Rightarrow \phi = 0, \lambda = \pi$</p><p>$\therefore X = U3(\pi, 0, \pi)$</p><br/><br/><h2 id="hadamard-h" class="article-heading">Hadamard $H$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#hadamard-h"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$H = {\small\begin{bmatrix}\frac{1}{\sqrt{2}} &amp; \frac{1}{\sqrt{2}}\\ \frac{1}{\sqrt{2}} &amp; -\frac{1}{\sqrt{2}}\end{bmatrix}}  = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p>$\Rightarrow \cos(\frac{\pi}{4}) = \frac{1}{\sqrt{2}}$</p><p>$\Rightarrow \theta = \frac{\pi}{2} \Rightarrow \sin(\frac{\theta}{2}) = \frac{1}{\sqrt{2}}$</p><p>$\Rightarrow e^{i\phi} = 1, -e^{i\lambda} = 1 \Rightarrow \phi = 0, \lambda = \pi$</p><p>$\therefore H = U3(\frac{\pi}{2}, 0, \pi)$</p><br/><br/><h2 id="z" class="article-heading">$Z$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#z"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$Z = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; -1\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p>$\Rightarrow \cos(\frac{\theta}{2}) = 1$</p><p>$\Rightarrow \theta = 0 \Rightarrow \sin(\frac{\theta}{2}) = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = -1 \Rightarrow \lambda+\phi = \pi$</p><p>$\therefore Z = U3(0, \phi, \lambda), \lambda+\phi = \pi$</p><br/><br/><h2 id="y" class="article-heading">$Y$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#y"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$Y = {\small\begin{bmatrix}0 &amp; -i\\i &amp; 0\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p>$\Rightarrow \cos(\frac{\theta}{2}) = 0$</p><p>$\Rightarrow \theta = \pi \Rightarrow \sin(\frac{\theta}{2}) = 1$</p><p>$\Rightarrow e^{i\phi} = \cos(\phi)+i\sin(\phi) = i, -e^{i\lambda} = -(\cos(\lambda)+i\sin(\lambda)) = -i$</p><p>$\Rightarrow \phi = \frac{\pi}{2}, \lambda = \frac{\pi}{2}$</p><p>$\therefore Y = U3(\pi, \frac{\pi}{2}, \frac{\pi}{2})$</p><br/><br/><h2 id="s" class="article-heading">$S$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#s"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$S = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; i\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = i \Rightarrow \lambda+\phi = \frac{\pi}{2}$</p><p>$\therefore S = U3(0, \phi, \lambda), \lambda+\phi = \frac{\pi}{2}$</p><br/><br/><h2 id="sdagger" class="article-heading">$S^\dagger$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#sdagger"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$S^\dagger = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; -i\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = -i \Rightarrow \lambda+\phi = \frac{3\pi}{2}$</p><p>$\therefore S^\dagger = U3(0, \phi, \lambda), \lambda+\phi = \frac{3\pi}{2}$</p><br/><br/><h2 id="t" class="article-heading">$T$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#t"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$T = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; \frac{1+i}{\sqrt{2}}\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) +i\sin(\lambda+\phi) = \frac{1}{\sqrt{2}} + i\frac{1}{\sqrt{2}} \Rightarrow \lambda+\phi = \frac{\pi}{4}$</p><p>$\therefore T = U3(0, \phi, \lambda), \lambda+\phi = \frac{\pi}{4}$</p><br/><br/><h2 id="tdagger" class="article-heading">$T^\dagger$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tdagger"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$T^\dagger = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; \frac{1-i}{\sqrt{2}}\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = \frac{1}{\sqrt{2}} + i\frac{-1}{\sqrt{2}} \Rightarrow \lambda+\phi = \frac{7\pi}{4}$</p><p>$\therefore T^\dagger = U3(0, \phi, \lambda), \lambda+\phi = \frac{7\pi}{4}$</p><br/><br/><h2 id="identity-" class="article-heading">Identity ⭐ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#identity-"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$ID = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; 1\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = 1 \Rightarrow \lambda+\phi = 0$</p><p>$\therefore ID = U3(0, \phi, \lambda), \lambda+\phi = 0$</p><br/><br/><h2 id="u1lambda" class="article-heading">$U1(\lambda)$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u1lambda"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$U1(\lambda) = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; e^{i\lambda}\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p><br/><a href="#z">同 Z gate</a>, $\theta = 0$</p><p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = e^{i\lambda} \Rightarrow \phi = 0$</p><p>$\therefore U1(\lambda) = U3(0, 0, \lambda)$</p><br/><br/><h2 id="u2phi-lambda" class="article-heading">$U2(\phi, \lambda)$ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u2phi-lambda"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>$U2(\phi, \lambda) = {\small\begin{bmatrix}\frac{1}{\sqrt{2}} &amp; -\frac{e^{i\lambda}}{\sqrt{2}}\\ \frac{e^{i\phi}}{\sqrt{2}} &amp; \frac{e^{i(\lambda+\phi)}}{\sqrt{2}}\end{bmatrix}} = {\small\begin{bmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{bmatrix}}$</p><p>$\Rightarrow \cos(\frac{\pi}{4}) = \frac{1}{\sqrt{2}}$</p><p>$\Rightarrow \theta = \frac{\pi}{2} \Rightarrow \sin(\frac{\theta}{2}) = \frac{1}{\sqrt{2}}$</p><p>$\therefore U2(\phi, \lambda) = U3(\frac{\pi}{2}, \phi, \lambda)$</p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" target="_blank" rel="noreferrer noopener">Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li></ul>
        ]]></description></item><item><title>Markdown 文件轉成 pdf 檔</title><link>https://aben20807.github.io/posts/20220312-typora-alternative/</link><pubDate>Sat, 12 Mar 2022 16:12:28 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220312-typora-alternative/</guid><description><![CDATA[
          <p>Typora 突然要收費了，原先我用這個工具來將一些用 markdown 寫的文件轉換成 pdf 版本，現在要找個替代方案了。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220312-typora-alternative/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220312-typora-alternative/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>Typora 突然要收費了，原先我用這個工具來將一些用 markdown 寫的文件轉換成 pdf 版本，現在要找個替代方案了。</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>老實說，軟體業的商業模式真的頗難。前些陣子 HackMD 也是提出了 Prime 方案  ，主打一些免費版沒有的進階功能，但是免不了的那些免費仔還是佔多數 (包括目前覺得那些功能可有可無的我)。Typora 直接將 stable 版本轉成必須付費才能使用，這兩種我個人覺得都各有優缺，畢竟生存下去的才是贏家。不過使用者付費的意識逐漸抬頭，這類情況應該會越來越常發生，請珍惜目前能使用到的免費服務，若能接受這些收費軟體也歡迎付費支持。延伸閱讀: <br/><br/><a href="https://benson-lee.blog/2019/03/21/%E9%96%8B%E6%BA%90%E8%BB%9F%E9%AB%94%E7%9A%84%E5%95%86%E6%A5%AD%E6%A8%A1%E5%BC%8F%E5%88%86%E6%9E%90-%E4%B8%89/" target="_blank" rel="noreferrer noopener">Benson的跨域商業人生 - 開源軟體的商業模式分析 (三)</a>。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" class="center img-zoomable" alt="https://typora.io/#download" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" class="center img-zoomable lazyload" alt="https://typora.io/#download"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">https://typora.io/#download</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>由於我個人只是懶得為了轉換成 pdf 而用 word 打文件，所以替代方案算是很容易找。本篇將使用 VSCode 的一款 Extension 來達成 markdown 轉 PDF 的功能。</p><br/><br/><h1 id="markdown-in-vscode" class="article-heading">Markdown in VSCode <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#markdown-in-vscode"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>VSCode 中編輯 markdown 雖然不能像 Typora 那樣幾乎所見即所得  ，不過能夠及時渲染算是相當堪用。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWsd8jL4qaNVxdvGSZKS16IpVy60PLtEbgTFoYJVINEIddEb3fWYwBr9Yn_XwYjfJ1H_2GP6jQY5FNYqw2VEPyXA-tjonCI7pUp08a2ouNFbKrHpCNbrBR2PHMkGOf_zg_cpMUvh-lVL0ofCmciyNFKRA=w1898-h731-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWsd8jL4qaNVxdvGSZKS16IpVy60PLtEbgTFoYJVINEIddEb3fWYwBr9Yn_XwYjfJ1H_2GP6jQY5FNYqw2VEPyXA-tjonCI7pUp08a2ouNFbKrHpCNbrBR2PHMkGOf_zg_cpMUvh-lVL0ofCmciyNFKRA=w1898-h731-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWsd8jL4qaNVxdvGSZKS16IpVy60PLtEbgTFoYJVINEIddEb3fWYwBr9Yn_XwYjfJ1H_2GP6jQY5FNYqw2VEPyXA-tjonCI7pUp08a2ouNFbKrHpCNbrBR2PHMkGOf_zg_cpMUvh-lVL0ofCmciyNFKRA=w1898-h731-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="convert-to-pdf" class="article-heading">Convert to PDF <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#convert-to-pdf"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這裡使用的工具是 <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf" target="_blank" rel="noreferrer noopener">yzane.markdown-pdf</a>，下載後可以做一些設定如下使其產生的檔案跟 github 渲染的結果類似。其中 &ldquo;markdown-pdf.styles&rdquo; 所需要的 &ldquo;github.css&rdquo; 可以到 <br/><br/><a href="https://gist.github.com/tuzz/3331384" target="_blank" rel="noreferrer noopener">tuzz/github.css</a> 拿到，並放在跟 &ldquo;.md&rdquo; 同一個路徑。</p><pre tabindex="0"><code class="language-conf" data-lang="conf">{<br/>    &#34;markdown-pdf.highlightStyle&#34;: &#34;github.css&#34;,<br/>    &#34;markdown-pdf.breaks&#34;: true,<br/>    &#34;markdown-pdf.headerTemplate&#34;: &#34;&#34;,<br/>    &#34;markdown-pdf.stylesRelativePathFile&#34;: true,<br/>    &#34;markdown-pdf.styles&#34;: [<br/>        &#34;github.css&#34;<br/>    ]<br/>}<br/></code></pre><ul><li>breaks: 預設 markdown 要兩個空格才換行，設定成 <code>true</code> 可以在 markdown 換行時就在 pdf 產生換行</li><li>headerTemplate 原先會在每一頁的 header 產生檔名，我的設定把它移除</li></ul><p>另外，附上我微調過的 <br/><br/><a href="https://gist.github.com/aben20807/a61a640579fb941546dd831f81b4ed9f" target="_blank" rel="noreferrer noopener">&ldquo;github.css&rdquo;</a>，有以下調整:</p><ul><li>Add support for chinese font</li><li>Force the color of single code block e.g., <code>x</code>, to black</li></ul><p>轉換時使用 <code>Ctrl-Shift-P</code> 使用 <code>markdown pdf: export (pdf)</code></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXpwSFgfVrjoTNVjI4LiXYcW8rGvGIprtycBsKO1t90zWjNBWoVJyQM7hPQv5__-136WJLaKl6ojgsVqcH__6fR_D0Dxrqpt2aXqXMKhmQvl4go8ap-qaPACLpYLQ6CDMxGbWV0zDEVNx2a0YLF0c2agg=w778-h115-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXpwSFgfVrjoTNVjI4LiXYcW8rGvGIprtycBsKO1t90zWjNBWoVJyQM7hPQv5__-136WJLaKl6ojgsVqcH__6fR_D0Dxrqpt2aXqXMKhmQvl4go8ap-qaPACLpYLQ6CDMxGbWV0zDEVNx2a0YLF0c2agg=w778-h115-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXpwSFgfVrjoTNVjI4LiXYcW8rGvGIprtycBsKO1t90zWjNBWoVJyQM7hPQv5__-136WJLaKl6ojgsVqcH__6fR_D0Dxrqpt2aXqXMKhmQvl4go8ap-qaPACLpYLQ6CDMxGbWV0zDEVNx2a0YLF0c2agg=w778-h115-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXuzky495YbRBGdUQjHV_ZfXf3ZRNpkyvZSu4YbtNMOs1zXo1sIMAZ1uacQKs9p4oyKLj0ItEtLAU6Fl5g4VRP_dkwjuHxcWd67KzMCM7g0xWhHnfPjov1BBGhovB3OJCDH47wy1wcrmSCTBTcFH6MTTw=w1857-h918-no" class="center img-zoomable" alt="簡單範例轉換結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXuzky495YbRBGdUQjHV_ZfXf3ZRNpkyvZSu4YbtNMOs1zXo1sIMAZ1uacQKs9p4oyKLj0ItEtLAU6Fl5g4VRP_dkwjuHxcWd67KzMCM7g0xWhHnfPjov1BBGhovB3OJCDH47wy1wcrmSCTBTcFH6MTTw=w1857-h918-no" class="center img-zoomable lazyload" alt="簡單範例轉換結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">簡單範例轉換結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXuzky495YbRBGdUQjHV_ZfXf3ZRNpkyvZSu4YbtNMOs1zXo1sIMAZ1uacQKs9p4oyKLj0ItEtLAU6Fl5g4VRP_dkwjuHxcWd67KzMCM7g0xWhHnfPjov1BBGhovB3OJCDH47wy1wcrmSCTBTcFH6MTTw=w1857-h918-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="注意事項" class="article-heading">注意事項 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>沒有 footnote 功能</li><li>footer 會自動產生頁碼，這點很棒</li><li>螢光筆標示要從 <code>==XXX==</code> 改成 <code>&lt;mark&gt;XXX&lt;/mark&gt;</code></li><li>強制換頁可以使用 <code>&lt;div class=&quot;page&quot;/&gt;</code></li><li>網址部分不會自動產生連結，所以 <code>https://aben20807.github.io/</code> 要改成 <code>[https://aben20807.github.io/](https://aben20807.github.io/)</code></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://hackmd.io/@hackmd/Personal_Prime" target="_blank" rel="noreferrer noopener">HackMD Prime 個人方案 詳細介紹</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://zh.wikipedia.org/wiki/%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97" target="_blank" rel="noreferrer noopener">WYSIWYG</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Fastest Plot by Matplotlib on Large CSV</title><link>https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/</link><pubDate>Fri, 04 Mar 2022 14:56:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/</guid><description><![CDATA[
          <p>畫大量資料發現效能太差，光讀取 CSV 就可以差一百倍，輸出的 pdf 檔案大小也有五倍差距。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>畫大量資料發現效能太差，光讀取 CSV 就可以差一百倍，輸出的 pdf 檔案大小也有五倍差距。</p><h1 id="tldr" class="article-heading">TL;DR <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><a href="#最佳化版本">{{ 最佳化版本 }}</a></p><br/><br/><h1 id="environment" class="article-heading">Environment <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#environment"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>WSL2 Ubuntu 18.04</li></ul><br/><br/><h1 id="資料產生範例" class="article-heading">資料產生範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e6%96%99%e7%94%a2%e7%94%9f%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Fixed point 與 floating point 的乘法絕對誤差 </p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;cstdint&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;fstream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;random&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">constexpr</span> <span style="color:#66d9ef">int</span> N <span style="color:#f92672">=</span> <span style="color:#ae81ff">5&#39;000&#39;000</span>;<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">constexpr</span> <span style="color:#66d9ef">float</span> RANGE <span style="color:#f92672">=</span> <span style="color:#ae81ff">10.0</span>;<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">constexpr</span> <span style="color:#66d9ef">int</span> FRACTION_BITS <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span>;<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">constexpr</span> <span style="color:#66d9ef">int</span> SCALING_FACTOR <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">&lt;&lt;</span> FRACTION_BITS;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>std<span style="color:#f92672">::</span>mt19937 gen(<span style="color:#ae81ff">0</span>);<br/></span></span><span style="display:flex;"><span>std<span style="color:#f92672">::</span>uniform_real_distribution<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">float</span><span style="color:#f92672">&gt;</span> dis(<span style="color:#f92672">-</span>RANGE, RANGE);<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">#define FLOAT_TO_FIXED(x)                                  \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">  (static_cast&lt;uint32_t&gt;(                                  \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">      static_cast&lt;int32_t&gt;(x *                             \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">      static_cast&lt;float&gt;(SCALING_FACTOR))))<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#define FIXED_TO_FLOAT(x)                                  \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">  (static_cast&lt;float&gt;(static_cast&lt;int32_t&gt;(x)) /           \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">   static_cast&lt;float&gt;(SCALING_FACTOR))<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">uint32_t</span> <span style="color:#a6e22e">fixed_point_mul</span>(<span style="color:#66d9ef">uint32_t</span> x, <span style="color:#66d9ef">uint32_t</span> y) {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">static_cast</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">uint32_t</span><span style="color:#f92672">&gt;</span>(<br/></span></span><span style="display:flex;"><span>      (<span style="color:#66d9ef">static_cast</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int32_t</span><span style="color:#f92672">&gt;</span>(x) <span style="color:#f92672">*</span> <span style="color:#66d9ef">static_cast</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">int32_t</span><span style="color:#f92672">&gt;</span>(y))<br/></span></span><span style="display:flex;"><span>      <span style="color:#f92672">&gt;&gt;</span> FRACTION_BITS);<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>  std<span style="color:#f92672">::</span>ofstream out(<span style="color:#e6db74">&#34;data.csv&#34;</span>);<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i{<span style="color:#ae81ff">0</span>}; i <span style="color:#f92672">&lt;</span> N; <span style="color:#f92672">++</span>i) {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">auto</span> x <span style="color:#f92672">=</span> dis(gen);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">auto</span> y <span style="color:#f92672">=</span> dis(gen);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">auto</span> z_float <span style="color:#f92672">=</span> x <span style="color:#f92672">*</span> y;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">auto</span> z_fixed <span style="color:#f92672">=</span><br/></span></span><span style="display:flex;"><span>        FIXED_TO_FLOAT(<br/></span></span><span style="display:flex;"><span>            fixed_point_mul(FLOAT_TO_FIXED(x), <br/></span></span><span style="display:flex;"><span>                            FLOAT_TO_FIXED(y)));<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (i <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">0</span>) {<br/></span></span><span style="display:flex;"><span>      out <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;,&#39;</span>;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    out <span style="color:#f92672">&lt;&lt;</span> std<span style="color:#f92672">::</span>abs(z_float <span style="color:#f92672">-</span> z_fixed);<br/></span></span><span style="display:flex;"><span>  }<br/></span></span><span style="display:flex;"><span>  out.close();<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -std<span style="color:#f92672">=</span>c++1z -o data_gen data_gen.cpp<br/></span></span><span style="display:flex;"><span>$ time ./data_gen<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    0m1.862s<br/></span></span><span style="display:flex;"><span>user    0m1.829s<br/></span></span><span style="display:flex;"><span>sys     0m0.030s<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ ls -lh data.csv<br/></span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name<br/></span></span><span style="display:flex;"><span>.rw-r--r--   54M ben   <span style="color:#ae81ff">4</span> Mar 16:58  data.csv<br/></span></span></code></pre></div></div><br/><br/><h1 id="python-environment" class="article-heading">Python Environment <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#python-environment"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ virtualenv -p python3.7 venv3.7<br/></span></span><span style="display:flex;"><span>$ source venv3.7/bin/activate<br/></span></span><span style="display:flex;"><span>$ pip install matplotlib numpy pandas<br/></span></span></code></pre></div></div><br/><br/><h1 id="read-csv" class="article-heading">Read CSV <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#read-csv"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>首先第一個遇到的困難就是讀取 CSV 太慢，按照網路上找的各種方法 ，其實在小量資料下可以採用，不過我測試了一些方法，最後發現第三種版本可以最快的讀取 CSV 到 numpy array 中。</p><ul><li>v1_read_csv.py</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fin <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;data.csv&#34;</span><br/></span></span><span style="display:flex;"><span>data <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>genfromtxt(fin, delimiter<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;,&#39;</span>)<br/></span></span><span style="display:flex;"><span>print(data)<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ time python3 v1_read_csv.py<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#f92672">]</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    0m38.557s<br/></span></span><span style="display:flex;"><span>user    0m35.961s<br/></span></span><span style="display:flex;"><span>sys     0m2.834s<br/></span></span></code></pre></div></div><ul><li>v2_read_csv.py</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> pandas <span style="color:#66d9ef">as</span> pd<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fin <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;data.csv&#34;</span><br/></span></span><span style="display:flex;"><span>df <span style="color:#f92672">=</span> pd<span style="color:#f92672">.</span>read_csv(fin, sep<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;,&#39;</span>,header<span style="color:#f92672">=</span><span style="color:#66d9ef">None</span>)<br/></span></span><span style="display:flex;"><span>data <span style="color:#f92672">=</span> df<span style="color:#f92672">.</span>to_numpy()[<span style="color:#ae81ff">0</span>]<br/></span></span><span style="display:flex;"><span>print(data)<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ time python3 v2_read_csv.py<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#f92672">]</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    2m44.089s<br/></span></span><span style="display:flex;"><span>user    2m41.911s<br/></span></span><span style="display:flex;"><span>sys     0m2.388s<br/></span></span></code></pre></div></div><ul><li>v3_read_csv.py</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> csv<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fin <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;data.csv&#34;</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> open(fin, newline<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span>) <span style="color:#66d9ef">as</span> csvfile:<br/></span></span><span style="display:flex;"><span>    data <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>asarray([float(x) <span style="color:#66d9ef">for</span> x <span style="color:#f92672">in</span> (list(csv<span style="color:#f92672">.</span>reader(csvfile, delimiter<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;,&#34;</span>))[<span style="color:#ae81ff">0</span>])])<br/></span></span><span style="display:flex;"><span>print(data)<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ time python3 v3_read_csv.py<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#f92672">]</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    0m1.583s<br/></span></span><span style="display:flex;"><span>user    0m1.393s<br/></span></span><span style="display:flex;"><span>sys     0m0.525s<br/></span></span></code></pre></div></div><br/><br/><h1 id="plot" class="article-heading">Plot <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#plot"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>接下來是畫圖的部份。把所有點畫到畫布中會發現產生的 pdf 檔案蠻大，而且開啟時間蠻久。</p><ul><li>v4_plot.py</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> csv<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> matplotlib.pyplot <span style="color:#66d9ef">as</span> plt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fin <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;data.csv&#34;</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> open(fin, newline<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span>) <span style="color:#66d9ef">as</span> csvfile:<br/></span></span><span style="display:flex;"><span>    data <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>asarray([float(x) <span style="color:#66d9ef">for</span> x <span style="color:#f92672">in</span> (list(csv<span style="color:#f92672">.</span>reader(csvfile, delimiter<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;,&#34;</span>))[<span style="color:#ae81ff">0</span>])])<br/></span></span><span style="display:flex;"><span>print(data)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fout <span style="color:#f92672">=</span> fin<span style="color:#f92672">+</span><span style="color:#e6db74">&#34;.pdf&#34;</span><br/></span></span><span style="display:flex;"><span>fig, ax <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots()<br/></span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>boxplot(data)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>autoscale()<br/></span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()<br/></span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(fout, bbox_inches<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;tight&#34;</span>, dpi<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>)<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ time python3 v4_plot.py<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#f92672">]</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    0m5.063s<br/></span></span><span style="display:flex;"><span>user    0m4.875s<br/></span></span><span style="display:flex;"><span>sys     0m2.854s<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ ls -lh data.csv.pdf<br/></span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name<br/></span></span><span style="display:flex;"><span>.rw-r--r--  206k ben   <span style="color:#ae81ff">5</span> Mar 10:25  data.csv.pdf<br/></span></span></code></pre></div></div><br/><br/><h1 id="最佳化版本" class="article-heading">最佳化版本 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e4%bd%b3%e5%8c%96%e7%89%88%e6%9c%ac"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>有很多資料點其實是重複的，我當下覺得應該有辦法可以忽略重複的點，但是又不能對資料做過濾，因為這樣分佈就錯誤了。一個比較好的方法其實是在 python 先計算好分佈 (最大，最小，中位數，第一分位數，第三分位數)。</p><p>不過 matplotlib 提供 box plot 可以根據資料繪製盒狀圖，代表應該可以不用自行計算。因此朝向如何讓重複的點可以不被重複繪製。</p><p>後來查到 rasterized 選項 ，可以將向量圖形轉成點陣圖，很大程度縮小產生的檔案大小。至此完整版的整理如下。</p><ul><li>v5_plot.py</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> csv<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> matplotlib.pyplot <span style="color:#66d9ef">as</span> plt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fin <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;data.csv&#34;</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> open(fin, newline<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;&#34;</span>) <span style="color:#66d9ef">as</span> csvfile:<br/></span></span><span style="display:flex;"><span>    data <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>asarray([<br/></span></span><span style="display:flex;"><span>      float(x) <span style="color:#66d9ef">for</span> x <span style="color:#f92672">in</span> <br/></span></span><span style="display:flex;"><span>        (list(csv<span style="color:#f92672">.</span>reader(csvfile, delimiter<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;,&#34;</span>))[<span style="color:#ae81ff">0</span>])])<br/></span></span><span style="display:flex;"><span>print(data)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fout <span style="color:#f92672">=</span> fin<span style="color:#f92672">+</span><span style="color:#e6db74">&#34;.pdf&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>fig, ax <span style="color:#f92672">=</span> plt<span style="color:#f92672">.</span>subplots()<br/></span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>boxplot(data)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>set_rasterized(<span style="color:#66d9ef">True</span>)<br/></span></span><span style="display:flex;"><span>ax<span style="color:#f92672">.</span>autoscale()<br/></span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>tight_layout()<br/></span></span><span style="display:flex;"><span>plt<span style="color:#f92672">.</span>savefig(fout, bbox_inches<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;tight&#34;</span>, dpi<span style="color:#f92672">=</span><span style="color:#ae81ff">300</span>)<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ time python3 v5_plot.py<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#f92672">]</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>real    0m3.128s<br/></span></span><span style="display:flex;"><span>user    0m3.212s<br/></span></span><span style="display:flex;"><span>sys     0m2.050s<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ ls -lh data.csv.pdf<br/></span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name<br/></span></span><span style="display:flex;"><span>.rw-r--r--   37k ben   <span style="color:#ae81ff">5</span> Mar 11:46  data.csv.pdf<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" class="center img-zoomable" alt="繪製結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" class="center img-zoomable lazyload" alt="繪製結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">繪製結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://medium.com/casual-inference/the-most-time-efficient-ways-to-import-csv-data-in-python-cc159b44063d" target="_blank" rel="noreferrer noopener">The most (time) efficient ways to import CSV data in Python</a></li><li><br/><br/><a href="https://docs.python.org/3/library/csv.html" target="_blank" rel="noreferrer noopener">csv — CSV File Reading and Writing</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Fixed-point_arithmetic" target="_blank" rel="noreferrer noopener">Fixed-point arithmetic</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://stackoverflow.com/questions/3518778/how-do-i-read-csv-data-into-a-record-array-in-numpy" target="_blank" rel="noreferrer noopener">How do I read CSV data into a record array in NumPy?</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://adrian.pw/blog/matplotlib-rasterize/" target="_blank" rel="noreferrer noopener">Rasterize all lines below a layer with Matplotlib</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Quantum Toffoli Gate (CCNOT) IBM Quantum</title><link>https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/</link><pubDate>Thu, 03 Mar 2022 16:05:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/</guid><description><![CDATA[
          <p>使用 IBM Quantum Composer 去執行 CCNOT gate</p>
          
            <p><a href="https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLW7J_uP_OIDxEAQW-kgUL7IN4QvBNhkYIuIhZXlxIYV3AnjbMvXjAYTChJ3zuw2a9zOFLosrTmT9iv6yUI9J4gdlrfIrQ5LHv7L2kZR7JHETDBAbbZn97hWE9Q-bxmPi--2ELMSTTOwCqGYdrU-rUdieg=w1462-h928-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>使用 IBM Quantum Composer 去執行 CCNOT gate</p> <br/><br/><br/><h1 id="執行分解後的-ccnot-步驟" class="article-heading">執行分解後的 CCNOT 步驟 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e5%88%86%e8%a7%a3%e5%be%8c%e7%9a%84-ccnot-%e6%ad%a5%e9%a9%9f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="註冊" class="article-heading">註冊 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e5%86%8a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>IBM Quantum 網站: <br/><br/><a href="https://quantum-computing.ibm.com/" target="_blank" rel="noreferrer noopener">https://quantum-computing.ibm.com/</a></p><p>選擇一種方式註冊並登入</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWEhIyTyin9-Cge_xkB3fYXaKPlZT2nW4ZqwiasvMc9bVF7ibjkaxDuoqit5MFDCSiHEwBVX6xB0yoyAleCEJ9GugJje_CTshi2HDSwKqiXmX-XnPgxbBG8Lr8_OgWeuwTs22w6trcjcckMD8yYdKEeg=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWWEhIyTyin9-Cge_xkB3fYXaKPlZT2nW4ZqwiasvMc9bVF7ibjkaxDuoqit5MFDCSiHEwBVX6xB0yoyAleCEJ9GugJje_CTshi2HDSwKqiXmX-XnPgxbBG8Lr8_OgWeuwTs22w6trcjcckMD8yYdKEeg=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWWEhIyTyin9-Cge_xkB3fYXaKPlZT2nW4ZqwiasvMc9bVF7ibjkaxDuoqit5MFDCSiHEwBVX6xB0yoyAleCEJ9GugJje_CTshi2HDSwKqiXmX-XnPgxbBG8Lr8_OgWeuwTs22w6trcjcckMD8yYdKEeg=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="點選-lunch-composer" class="article-heading">點選 Lunch Composer <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%bb%9e%e9%81%b8-lunch-composer"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVDonbejKxg0UZHiAjt9YQGSFurdzA3PqHGo1a9Pv5DPVRjLAWgK9ywtVJIiIBgUE-DxW1QC-bvw32L40BrciU8-ZgTaEjX3nUSf0JzrUqahCm_EdHuOCK4iOdu0AUQMdau1xITtv-ib2AQr7F6vsWHEw=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVDonbejKxg0UZHiAjt9YQGSFurdzA3PqHGo1a9Pv5DPVRjLAWgK9ywtVJIiIBgUE-DxW1QC-bvw32L40BrciU8-ZgTaEjX3nUSf0JzrUqahCm_EdHuOCK4iOdu0AUQMdau1xITtv-ib2AQr7F6vsWHEw=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVDonbejKxg0UZHiAjt9YQGSFurdzA3PqHGo1a9Pv5DPVRjLAWgK9ywtVJIiIBgUE-DxW1QC-bvw32L40BrciU8-ZgTaEjX3nUSf0JzrUqahCm_EdHuOCK4iOdu0AUQMdau1xITtv-ib2AQr7F6vsWHEw=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="開啟編輯介面後直接開始拉方塊-不需要按左邊的的-new-file我點超久都沒反應結果方塊一放就有新檔案" class="article-heading">開啟編輯介面後直接開始拉方塊 (不需要按左邊的的 New file，我點超久都沒反應，結果方塊一放就有新檔案)。 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e5%95%9f%e7%b7%a8%e8%bc%af%e4%bb%8b%e9%9d%a2%e5%be%8c%e7%9b%b4%e6%8e%a5%e9%96%8b%e5%a7%8b%e6%8b%89%e6%96%b9%e5%a1%8a-%e4%b8%8d%e9%9c%80%e8%a6%81%e6%8c%89%e5%b7%a6%e9%82%8a%e7%9a%84%e7%9a%84-new-file%e6%88%91%e9%bb%9e%e8%b6%85%e4%b9%85%e9%83%bd%e6%b2%92%e5%8f%8d%e6%87%89%e7%b5%90%e6%9e%9c%e6%96%b9%e5%a1%8a%e4%b8%80%e6%94%be%e5%b0%b1%e6%9c%89%e6%96%b0%e6%aa%94%e6%a1%88"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUkLalBYydKF1MqC9IoRuUVN43dHBXrCDMo_Cdq0fduJ2ejewbXMfJXmHYzQWjERhp0_jzPfXwRArAuOmltc3AvN99Br_7Mh0_SZtjOm6JJ7Tte3nHCcZbAM8bFtQs2uS2BV-Jzowheu9LZq0xI_X2drA=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUkLalBYydKF1MqC9IoRuUVN43dHBXrCDMo_Cdq0fduJ2ejewbXMfJXmHYzQWjERhp0_jzPfXwRArAuOmltc3AvN99Br_7Mh0_SZtjOm6JJ7Tte3nHCcZbAM8bFtQs2uS2BV-Jzowheu9LZq0xI_X2drA=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUkLalBYydKF1MqC9IoRuUVN43dHBXrCDMo_Cdq0fduJ2ejewbXMfJXmHYzQWjERhp0_jzPfXwRArAuOmltc3AvN99Br_7Mh0_SZtjOm6JJ7Tte3nHCcZbAM8bFtQs2uS2BV-Jzowheu9LZq0xI_X2drA=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="本次的電路圖跟上一篇相同對應的程式碼會自動生成-綠框機率也有模擬出來-藍框" class="article-heading">本次的電路圖跟上一篇相同，對應的程式碼會自動生成 (綠框)，機率也有模擬出來 (藍框) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%ac%e6%ac%a1%e7%9a%84%e9%9b%bb%e8%b7%af%e5%9c%96%e8%b7%9f%e4%b8%8a%e4%b8%80%e7%af%87%e7%9b%b8%e5%90%8c%e5%b0%8d%e6%87%89%e7%9a%84%e7%a8%8b%e5%bc%8f%e7%a2%bc%e6%9c%83%e8%87%aa%e5%8b%95%e7%94%9f%e6%88%90-%e7%b6%a0%e6%a1%86%e6%a9%9f%e7%8e%87%e4%b9%9f%e6%9c%89%e6%a8%a1%e6%93%ac%e5%87%ba%e4%be%86-%e8%97%8d%e6%a1%86"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLU-oFi2NjE_arGe3wEjOuKgwBPsah6zXAZEQ-rffhT-fvXmSn1A7thBugROYfcxW-11fuQgZXEFmGlmDDpkiQqlZXoR-NpPfozMZNh1ZN7lJHX8l-Q8hCwGuPXgM-dYV6SbqKp8A5SqTDm0upVz4wsj8g=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLU-oFi2NjE_arGe3wEjOuKgwBPsah6zXAZEQ-rffhT-fvXmSn1A7thBugROYfcxW-11fuQgZXEFmGlmDDpkiQqlZXoR-NpPfozMZNh1ZN7lJHX8l-Q8hCwGuPXgM-dYV6SbqKp8A5SqTDm0upVz4wsj8g=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLU-oFi2NjE_arGe3wEjOuKgwBPsah6zXAZEQ-rffhT-fvXmSn1A7thBugROYfcxW-11fuQgZXEFmGlmDDpkiQqlZXoR-NpPfozMZNh1ZN7lJHX8l-Q8hCwGuPXgM-dYV6SbqKp8A5SqTDm0upVz4wsj8g=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="接著可以改檔案名稱並儲存然後按右上角的-setup-and-run" class="article-heading">接著可以改檔案名稱並儲存，然後按右上角的 Setup and run <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a5%e8%91%97%e5%8f%af%e4%bb%a5%e6%94%b9%e6%aa%94%e6%a1%88%e5%90%8d%e7%a8%b1%e4%b8%a6%e5%84%b2%e5%ad%98%e7%84%b6%e5%be%8c%e6%8c%89%e5%8f%b3%e4%b8%8a%e8%a7%92%e7%9a%84-setup-and-run"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLViA5eCyd1j1emYrjoz9JYQqxFheIBhOqO3xF_-t5x0EUEuBaiIK709MJqyAniBzLbUQd71XBu7LUaJgLL8bvIKIr4aaSZn0HiwQLRGjt5eO1--R1At6EhGwKHYs78GhCUjPglsCJHOJbUIRrIL-H6uOg=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLViA5eCyd1j1emYrjoz9JYQqxFheIBhOqO3xF_-t5x0EUEuBaiIK709MJqyAniBzLbUQd71XBu7LUaJgLL8bvIKIr4aaSZn0HiwQLRGjt5eO1--R1At6EhGwKHYs78GhCUjPglsCJHOJbUIRrIL-H6uOg=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLViA5eCyd1j1emYrjoz9JYQqxFheIBhOqO3xF_-t5x0EUEuBaiIK709MJqyAniBzLbUQd71XBu7LUaJgLL8bvIKIr4aaSZn0HiwQLRGjt5eO1--R1At6EhGwKHYs78GhCUjPglsCJHOJbUIRrIL-H6uOg=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="這裡會列出很多可以使用的量子電腦點-see-details-可以看到該量子電腦的設定以及排隊情況如下" class="article-heading">這裡會列出很多可以使用的量子電腦，點 See details 可以看到該量子電腦的設定以及排隊情況如下 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%80%99%e8%a3%a1%e6%9c%83%e5%88%97%e5%87%ba%e5%be%88%e5%a4%9a%e5%8f%af%e4%bb%a5%e4%bd%bf%e7%94%a8%e7%9a%84%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e9%bb%9e-see-details-%e5%8f%af%e4%bb%a5%e7%9c%8b%e5%88%b0%e8%a9%b2%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e7%9a%84%e8%a8%ad%e5%ae%9a%e4%bb%a5%e5%8f%8a%e6%8e%92%e9%9a%8a%e6%83%85%e6%b3%81%e5%a6%82%e4%b8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXLH4FY2CixOQwra1LAy8MKdBbAA_ESjHl8A_HUAgkXFbDjcuQeGF1DQqBerpuiFJzz4gDyF1YThlhxqsP8c77IHSvA34QicJBoSd6FQafIrP93_FwBTKoOyN8CeTlpjQRTzagFJbAUwwSW9J2PdA7AZw=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXLH4FY2CixOQwra1LAy8MKdBbAA_ESjHl8A_HUAgkXFbDjcuQeGF1DQqBerpuiFJzz4gDyF1YThlhxqsP8c77IHSvA34QicJBoSd6FQafIrP93_FwBTKoOyN8CeTlpjQRTzagFJbAUwwSW9J2PdA7AZw=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXLH4FY2CixOQwra1LAy8MKdBbAA_ESjHl8A_HUAgkXFbDjcuQeGF1DQqBerpuiFJzz4gDyF1YThlhxqsP8c77IHSvA34QicJBoSd6FQafIrP93_FwBTKoOyN8CeTlpjQRTzagFJbAUwwSW9J2PdA7AZw=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="挑選一個量子電腦設定-job-名稱後就可以執行" class="article-heading">挑選一個量子電腦、設定 job 名稱後就可以執行 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%91%e9%81%b8%e4%b8%80%e5%80%8b%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e8%a8%ad%e5%ae%9a-job-%e5%90%8d%e7%a8%b1%e5%be%8c%e5%b0%b1%e5%8f%af%e4%bb%a5%e5%9f%b7%e8%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVCva1NqIs-SRZYY3NKZ084nLETp3ybH-HicGbSFIr6LVqrKiTCyQgcH0p0Rvr_M_OrCcrlUT9-FlNkoF4UapM-HINKvDzibFENmIgOiFiYefe8b3b2k-TXRUEwb1vIPU394QPR6C7-esjJZK79eHDx-w=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVCva1NqIs-SRZYY3NKZ084nLETp3ybH-HicGbSFIr6LVqrKiTCyQgcH0p0Rvr_M_OrCcrlUT9-FlNkoF4UapM-HINKvDzibFENmIgOiFiYefe8b3b2k-TXRUEwb1vIPU394QPR6C7-esjJZK79eHDx-w=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVCva1NqIs-SRZYY3NKZ084nLETp3ybH-HicGbSFIr6LVqrKiTCyQgcH0p0Rvr_M_OrCcrlUT9-FlNkoF4UapM-HINKvDzibFENmIgOiFiYefe8b3b2k-TXRUEwb1vIPU394QPR6C7-esjJZK79eHDx-w=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="左邊欄位會顯示目前狀態" class="article-heading">左邊欄位會顯示目前狀態 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b7%a6%e9%82%8a%e6%ac%84%e4%bd%8d%e6%9c%83%e9%a1%af%e7%a4%ba%e7%9b%ae%e5%89%8d%e7%8b%80%e6%85%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWgiP8R-0sTfTTJPBdpOZTw4gN__T-Sh1zEaFYGoFuv6P7CWGDW81QhFCeBXrBazMQhCV99eKSn_GegWJhalOsNed-rmp6svMMCJVDC0e0SiiiruU_0MoFySofVHjSZZUFi4c-YSLFX-Wh-vtUoWYHfjQ=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWgiP8R-0sTfTTJPBdpOZTw4gN__T-Sh1zEaFYGoFuv6P7CWGDW81QhFCeBXrBazMQhCV99eKSn_GegWJhalOsNed-rmp6svMMCJVDC0e0SiiiruU_0MoFySofVHjSZZUFi4c-YSLFX-Wh-vtUoWYHfjQ=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWgiP8R-0sTfTTJPBdpOZTw4gN__T-Sh1zEaFYGoFuv6P7CWGDW81QhFCeBXrBazMQhCV99eKSn_GegWJhalOsNed-rmp6svMMCJVDC0e0SiiiruU_0MoFySofVHjSZZUFi4c-YSLFX-Wh-vtUoWYHfjQ=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="跑完後結果會顯示出來" class="article-heading">跑完後結果會顯示出來 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%91%e5%ae%8c%e5%be%8c%e7%b5%90%e6%9e%9c%e6%9c%83%e9%a1%af%e7%a4%ba%e5%87%ba%e4%be%86"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLX7gbRZ-Kb6TCo3suz7FoIpbcrHigsj5cQs7fxvfPBZURKN_MBmYYufPgf7Kj1T3zuE9sR0VyWqGbcNruMt9DVZCACRrV30QzGMiepfvUdebtqEUKcH2ExGWh9h4XsF39WBJrnwPwomlsy7jc5CMrn_Lw=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLX7gbRZ-Kb6TCo3suz7FoIpbcrHigsj5cQs7fxvfPBZURKN_MBmYYufPgf7Kj1T3zuE9sR0VyWqGbcNruMt9DVZCACRrV30QzGMiepfvUdebtqEUKcH2ExGWh9h4XsF39WBJrnwPwomlsy7jc5CMrn_Lw=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLX7gbRZ-Kb6TCo3suz7FoIpbcrHigsj5cQs7fxvfPBZURKN_MBmYYufPgf7Kj1T3zuE9sR0VyWqGbcNruMt9DVZCACRrV30QzGMiepfvUdebtqEUKcH2ExGWh9h4XsF39WBJrnwPwomlsy7jc5CMrn_Lw=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="也可以選擇-see-more-details-查看執行細節" class="article-heading">也可以選擇 See more details 查看執行細節 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b9%9f%e5%8f%af%e4%bb%a5%e9%81%b8%e6%93%87-see-more-details-%e6%9f%a5%e7%9c%8b%e5%9f%b7%e8%a1%8c%e7%b4%b0%e7%af%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6nFPz2wKvWga5GmfyWsyTviDShyRlLZGqMVUa568rzum_NC1mWmk3sxzXxr9GGYYJL-1temWb6NDk_y5_Dsm3PLGODaj5Pgrd1nx2w0qDYKrbaOk61PBSYdZHpsJnZ6GYYcMO1lN1EsJbZUXWNeB-Fw=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW6nFPz2wKvWga5GmfyWsyTviDShyRlLZGqMVUa568rzum_NC1mWmk3sxzXxr9GGYYJL-1temWb6NDk_y5_Dsm3PLGODaj5Pgrd1nx2w0qDYKrbaOk61PBSYdZHpsJnZ6GYYcMO1lN1EsJbZUXWNeB-Fw=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW6nFPz2wKvWga5GmfyWsyTviDShyRlLZGqMVUa568rzum_NC1mWmk3sxzXxr9GGYYJL-1temWb6NDk_y5_Dsm3PLGODaj5Pgrd1nx2w0qDYKrbaOk61PBSYdZHpsJnZ6GYYcMO1lN1EsJbZUXWNeB-Fw=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="ccnot-不用分解" class="article-heading">CCNOT 不用分解!? <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ccnot-%e4%b8%8d%e7%94%a8%e5%88%86%e8%a7%a3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="後來發現有一個-ccnot-的方塊不過突然要等-9-個小時之後有結果再更新" class="article-heading">後來發現有一個 CCNOT 的方塊，不過突然要等 9 個小時&hellip;之後有結果再更新 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e4%be%86%e7%99%bc%e7%8f%be%e6%9c%89%e4%b8%80%e5%80%8b-ccnot-%e7%9a%84%e6%96%b9%e5%a1%8a%e4%b8%8d%e9%81%8e%e7%aa%81%e7%84%b6%e8%a6%81%e7%ad%89-9-%e5%80%8b%e5%b0%8f%e6%99%82%e4%b9%8b%e5%be%8c%e6%9c%89%e7%b5%90%e6%9e%9c%e5%86%8d%e6%9b%b4%e6%96%b0"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXPlejfwyXhXdO3a3mTJdyzeN-gqRxYUXwl3QL-a6oMUnjMg0LwBZTuntOkBgYGPsdOIxOpOnSkt9aIM0OO6RRa1dvQ6ZgsxITPMRPNwsp94ZweXyflV8siEmoIypUpTDc2qb5kIq9WD277yoP-uXc90Q=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXPlejfwyXhXdO3a3mTJdyzeN-gqRxYUXwl3QL-a6oMUnjMg0LwBZTuntOkBgYGPsdOIxOpOnSkt9aIM0OO6RRa1dvQ6ZgsxITPMRPNwsp94ZweXyflV8siEmoIypUpTDc2qb5kIq9WD277yoP-uXc90Q=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXPlejfwyXhXdO3a3mTJdyzeN-gqRxYUXwl3QL-a6oMUnjMg0LwBZTuntOkBgYGPsdOIxOpOnSkt9aIM0OO6RRa1dvQ6ZgsxITPMRPNwsp94ZweXyflV8siEmoIypUpTDc2qb5kIq9WD277yoP-uXc90Q=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="看起來是有類似-function-的結構" class="article-heading">看起來是有類似 function 的結構 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9c%8b%e8%b5%b7%e4%be%86%e6%98%af%e6%9c%89%e9%a1%9e%e4%bc%bc-function-%e7%9a%84%e7%b5%90%e6%a7%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXWj9WuU0eHjO3jajkSy2caM389G80yHRCmYSbb-8L9TGq18Go2w-wX93v7P4MTpFz1x8fLQGCVUVdph21NEaeprGDeTkhp8PnEAQzsYZoX7Oukn-DiNsaZ2mSQqp-haieinvxbiJQPdGnCcvu8Wh51UA=w390-h451-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXWj9WuU0eHjO3jajkSy2caM389G80yHRCmYSbb-8L9TGq18Go2w-wX93v7P4MTpFz1x8fLQGCVUVdph21NEaeprGDeTkhp8PnEAQzsYZoX7Oukn-DiNsaZ2mSQqp-haieinvxbiJQPdGnCcvu8Wh51UA=w390-h451-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXWj9WuU0eHjO3jajkSy2caM389G80yHRCmYSbb-8L9TGq18Go2w-wX93v7P4MTpFz1x8fLQGCVUVdph21NEaeprGDeTkhp8PnEAQzsYZoX7Oukn-DiNsaZ2mSQqp-haieinvxbiJQPdGnCcvu8Wh51UA=w390-h451-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="更新-執行結果" class="article-heading">更新: 執行結果 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9b%b4%e6%96%b0-%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUwSRM1ZhZzSnMHaiIQu1Gw1sx-6w3TARRjK6a2W-ar97ZKlhMRjSb4EqRAkS7v7lVNozvJDPhV-anIEQEUR3ySG1OG-eKqw_OStSMOORM_lcn-duowKLDslw9XdyfnRo-yy6CIEANs9pRdJ7kj9XB_JQ=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUwSRM1ZhZzSnMHaiIQu1Gw1sx-6w3TARRjK6a2W-ar97ZKlhMRjSb4EqRAkS7v7lVNozvJDPhV-anIEQEUR3ySG1OG-eKqw_OStSMOORM_lcn-duowKLDslw9XdyfnRo-yy6CIEANs9pRdJ7kj9XB_JQ=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUwSRM1ZhZzSnMHaiIQu1Gw1sx-6w3TARRjK6a2W-ar97ZKlhMRjSb4EqRAkS7v7lVNozvJDPhV-anIEQEUR3ySG1OG-eKqw_OStSMOORM_lcn-duowKLDslw9XdyfnRo-yy6CIEANs9pRdJ7kj9XB_JQ=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUMeBqpCAf4XH3ZfmVM3LOiBb3L5N4XRv15cVdEVrfPeBRugq9AEtgupEDAbVVl0V3D0Kw0uDFglOzHnx17A9upCg7swAy-BPug8h44tw2a79NbytBkfSiuI2yz_M7RtkQOdEJsg2C2mH3C6XIu8LJ7aw=w2560-h1267-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUMeBqpCAf4XH3ZfmVM3LOiBb3L5N4XRv15cVdEVrfPeBRugq9AEtgupEDAbVVl0V3D0Kw0uDFglOzHnx17A9upCg7swAy-BPug8h44tw2a79NbytBkfSiuI2yz_M7RtkQOdEJsg2C2mH3C6XIu8LJ7aw=w2560-h1267-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUMeBqpCAf4XH3ZfmVM3LOiBb3L5N4XRv15cVdEVrfPeBRugq9AEtgupEDAbVVl0V3D0Kw0uDFglOzHnx17A9upCg7swAy-BPug8h44tw2a79NbytBkfSiuI2yz_M7RtkQOdEJsg2C2mH3C6XIu8LJ7aw=w2560-h1267-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>Quantum Toffoli Gate (CCNOT) Decomposition</title><link>https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/</link><pubDate>Wed, 02 Mar 2022 09:12:55 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/</guid><description><![CDATA[
          <p>在課堂 &ldquo;量子電腦程式設計&rdquo; 學到的推導過程。<br><br/>主要是將一個 CCNOT 分解成使用 6 個 CNOT。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>在課堂 &ldquo;量子電腦程式設計&rdquo; 學到的推導過程。<br><br/>主要是將一個 CCNOT 分解成使用 6 個 CNOT。</p> <br/><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>算是很久沒上課了，而更久沒體會到數學推導的有趣。剛好本學期修到這堂課，老師半強迫要我們搞懂整個流程，意外找回國高中時寫數學的樂趣。在此附上我認為最詳盡易懂的推導過程。</p><p>gif 來自 cduck/bloch_sphere，references 中有附上連結。<br><br/>另外，公式繁多可能有錯，再麻煩指正。</p><br/><br/><h1 id="先備知識" class="article-heading">先備知識 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%88%e5%82%99%e7%9f%a5%e8%ad%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Gate 只會介紹本篇用到的。</p><br/><br/><h2 id="math" class="article-heading">Math <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#math"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>複數 ($\mathbb{C}$ ): 實部 (real part) + 虛部 (imaginary part), e.g., $x + yi, i = \sqrt{-1}$.</li><li>Euler&rsquo;s identity: $e^{i\pi} + 1 = 0$.  </li></ul><br/><br/><h2 id="quantum-bit-qubit" class="article-heading">Quantum bit (Qubit) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-bit-qubit"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>Quantum state <br/><ul><li>Classical state 0: $\lvert 0\rangle = {\small\begin{bmatrix}1 \\ 0\end{bmatrix}}$ (0 的機率為 100%)</li><li>Classical state 1: $\lvert 1\rangle = {\small\begin{bmatrix}0 \\ 1\end{bmatrix}}$ (1 的機率為 100%)</li><li>Arbitrary state: $\lvert\Phi \rangle= \alpha\lvert 0\rangle + \beta\lvert 1\rangle = {\small\begin{bmatrix}\alpha \\ \beta\end{bmatrix}}, \alpha, \beta\in\mathbb{C}$<br/><ul><li>(0 的機率為 $\lvert \alpha\lvert^2$, 1 的機率為 $\lvert \beta\lvert^2$)</li></ul></li></ul></li></ul><br/><br/><h2 id="1-bit-gate" class="article-heading">1-bit Gate <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-bit-gate"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>Hadamard gate: $H = \frac{1}{\sqrt{2}}{\small\begin{bmatrix}1 &amp; 1\\ 1 &amp; -1\end{bmatrix}}$<br/><ul><li>最常用作將 classical state 轉為疊加態 (superposition)。E.g.,</li><li>$H\lvert 0\rangle = \frac{1}{\sqrt{2}}{\small\begin{bmatrix}1 &amp; 1\\ 1 &amp; -1\end{bmatrix}}{\small\begin{bmatrix}1 \\ 0\end{bmatrix}} = \frac{1}{\sqrt{2}}{\small\begin{bmatrix}1 \\ 1\end{bmatrix}} = \frac{\lvert 0\rangle+\lvert 1\rangle}{\sqrt{2}}$</li><li>$H\lvert 1\rangle = \frac{1}{\sqrt{2}}{\small\begin{bmatrix}1 &amp; 1\\ 1 &amp; -1\end{bmatrix}}{\small\begin{bmatrix}0 \\ 1\end{bmatrix}} = \frac{1}{\sqrt{2}}{\small\begin{bmatrix}1 \\ -1\end{bmatrix}} = \frac{\lvert 0\rangle-\lvert 1\rangle}{\sqrt{2}}$</li><li>解釋: $\lvert 0\rangle, \lvert 1\rangle$ 經過 $H$ 後其 $0, 1$ 的機率皆各為 $\lvert \frac{1}{\pm\sqrt{2}}\lvert^2 = \frac{1}{2} = $ 50%</li></ul></li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/hh_gate.gif" class="center img-zoomable" alt="Z 軸與 X 軸交換" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/hh_gate.gif" class="center img-zoomable lazyload" alt="Z 軸與 X 軸交換"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Z 軸與 X 軸交換</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/hh_gate.gif" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ul><li>Phase shift gate: $T = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; e^{i\frac{\pi}{4}}\end{bmatrix}}$</li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" class="center img-zoomable" alt="$T$ 轉 $\frac{\pi}{4}$；$S$ 轉 $\frac{\pi}{2}$，不過後者在本篇不會使用到" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" class="center img-zoomable lazyload" alt="$T$ 轉 $\frac{\pi}{4}$；$S$ 轉 $\frac{\pi}{2}$，不過後者在本篇不會使用到"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">$T$ 轉 $\frac{\pi}{4}$；$S$ 轉 $\frac{\pi}{2}$，不過後者在本篇不會使用到</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ul><li>$T$&rsquo;s conjugate transpose : $T^\dagger = {\small\begin{bmatrix}1 &amp; 0\\0 &amp; e^{-i\frac{\pi}{4}}\end{bmatrix}}$</li></ul><br/><br/><h2 id="2-bit-gate" class="article-heading">2-bit Gate <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#2-bit-gate"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>Controlled NOT gate ($CNOT, CX, U_{CN}$): $U_{CN} ={\small\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{bmatrix}}$<br/><ul><li>control qubit ($\lvert C\rangle$) 為 1 時，target qubit ($\lvert T\rangle$) 會翻轉 (flip)。E.g.,</li><li>$U_{CN}(\frac{\lvert 0\rangle+\lvert 1\rangle}{\sqrt{2}})\lvert 0\rangle = {\small\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{bmatrix}} \frac{\lvert 00\rangle+\lvert 10\rangle}{\sqrt{2}} = {\small\begin{bmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{bmatrix}} \frac{1}{\sqrt{2}} {\small\begin{bmatrix}1\\0\\1\\0\end{bmatrix}} = \frac{1}{\sqrt{2}} {\small\begin{bmatrix}1\\0\\0\\1\end{bmatrix}} = \frac{\lvert 00\rangle+\lvert 11\rangle}{\sqrt{2}}$</li><li>解釋: 用 control bit 經過 $H$ 後會有 50-50 的機率，target bit 輸入為 0。則在 control bit 為 1 時，target bit 會轉為 1。因此輸出僅有兩種可能: 00 或 11。</li></ul></li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV7c8ZHg0TZh0i7yFMz1EgAktYeO6iW22d53R47cDyiGwrG0XyUs0SrKqENSw5UlQt_Fvw1HBulxV5AxQTcPpLddQLFG784UHvn-Hx7DU_K8yqGUD5Q9U9JjbE44G2HAHpBR2tf_QWw0zZeh-TN1dnxYA=w422-h232-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV7c8ZHg0TZh0i7yFMz1EgAktYeO6iW22d53R47cDyiGwrG0XyUs0SrKqENSw5UlQt_Fvw1HBulxV5AxQTcPpLddQLFG784UHvn-Hx7DU_K8yqGUD5Q9U9JjbE44G2HAHpBR2tf_QWw0zZeh-TN1dnxYA=w422-h232-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV7c8ZHg0TZh0i7yFMz1EgAktYeO6iW22d53R47cDyiGwrG0XyUs0SrKqENSw5UlQt_Fvw1HBulxV5AxQTcPpLddQLFG784UHvn-Hx7DU_K8yqGUD5Q9U9JjbE44G2HAHpBR2tf_QWw0zZeh-TN1dnxYA=w422-h232-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="toffoli-gate-ccnot" class="article-heading">Toffoli Gate (CCNOT) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#toffoli-gate-ccnot"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>顧名思義，有兩個 control bit，不過是兩個同時為 1 時才會影響 target bit。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWN7STxJXBZjouz7ERqxJBegn9wendBx2BgUMt9o6fL-xTPRUGUZXhnbpV-7V7eOWj4RHZW2rZiICvfFPA576n29fpOGU5NTvWYgURwY5IVFAt2qIsiVHikDv7Vz-2KCq-R8laieVOM8LTlWjHwLjhSsA=w472-h252-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWN7STxJXBZjouz7ERqxJBegn9wendBx2BgUMt9o6fL-xTPRUGUZXhnbpV-7V7eOWj4RHZW2rZiICvfFPA576n29fpOGU5NTvWYgURwY5IVFAt2qIsiVHikDv7Vz-2KCq-R8laieVOM8LTlWjHwLjhSsA=w472-h252-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWN7STxJXBZjouz7ERqxJBegn9wendBx2BgUMt9o6fL-xTPRUGUZXhnbpV-7V7eOWj4RHZW2rZiICvfFPA576n29fpOGU5NTvWYgURwY5IVFAt2qIsiVHikDv7Vz-2KCq-R8laieVOM8LTlWjHwLjhSsA=w472-h252-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>不過它其實等價於下面的形式:</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUHKHYDE_SeNuNya8Pu1S9gh28MSlVVunxK6mYbhTsKQgKaK2p0sLmhGUTMnYH4Lw4nz3LJpjvnCOoWt8hiux9hsoHmQS50H8ODd4FHsIRlJlbHwdpxQ9aCuCsUIDOQC2GnPdYOH4kqYe8kllJ_dBRrcw=w1156-h262-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUHKHYDE_SeNuNya8Pu1S9gh28MSlVVunxK6mYbhTsKQgKaK2p0sLmhGUTMnYH4Lw4nz3LJpjvnCOoWt8hiux9hsoHmQS50H8ODd4FHsIRlJlbHwdpxQ9aCuCsUIDOQC2GnPdYOH4kqYe8kllJ_dBRrcw=w1156-h262-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUHKHYDE_SeNuNya8Pu1S9gh28MSlVVunxK6mYbhTsKQgKaK2p0sLmhGUTMnYH4Lw4nz3LJpjvnCOoWt8hiux9hsoHmQS50H8ODd4FHsIRlJlbHwdpxQ9aCuCsUIDOQC2GnPdYOH4kqYe8kllJ_dBRrcw=w1156-h262-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="推導過程" class="article-heading">推導過程 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a8%e5%b0%8e%e9%81%8e%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這邊要先注意，輸入的兩個 control bit 有經過 $H$ 變成疊加態，也就是下圖。不同階段的狀態使用不同符號 ($\lvert\Phi_i\rangle, i = 1&hellip;16$) 以便對應。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLX4-2YX3so43rmOGPzHAGCXdjqjG6Zb5OPkPGRijQCv09nAq-rJMoezlZFq5Si_3ItjAUVkfjGjgE7Tkar7VwH5y1nyOvNpzk4vGJ8Nh7DiyP24r8aNuIGstBdgXALjNXj_HJv1xOy6EjYHQOV5GwKjPg=w1203-h372-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLX4-2YX3so43rmOGPzHAGCXdjqjG6Zb5OPkPGRijQCv09nAq-rJMoezlZFq5Si_3ItjAUVkfjGjgE7Tkar7VwH5y1nyOvNpzk4vGJ8Nh7DiyP24r8aNuIGstBdgXALjNXj_HJv1xOy6EjYHQOV5GwKjPg=w1203-h372-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLX4-2YX3so43rmOGPzHAGCXdjqjG6Zb5OPkPGRijQCv09nAq-rJMoezlZFq5Si_3ItjAUVkfjGjgE7Tkar7VwH5y1nyOvNpzk4vGJ8Nh7DiyP24r8aNuIGstBdgXALjNXj_HJv1xOy6EjYHQOV5GwKjPg=w1203-h372-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>$$<br/>\def\TT{i\frac{\pi}{4}}<br/>\begin{equation*}<br/>\small<br/>\begin{split}<br/>\lvert\Phi_1\rangle =&amp; \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \lvert 0\rangle \\ =&amp; \frac{1}{2}(\lvert 000\rangle+\lvert 010\rangle+\lvert 100\rangle+\lvert 110\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_2\rangle =&amp; \frac{1}{2} \Biggr(\lvert 00\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 01\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 10\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 11\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\Biggr)\newline =&amp; \frac{1}{2\sqrt{2}}(\lvert 000\rangle+\lvert 001\rangle+\lvert 010\rangle+\lvert 011\rangle+\lvert 100\rangle+\lvert 101\rangle+\lvert 110\rangle+\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_3\rangle =&amp; \frac{1}{2\sqrt{2}}(\lvert 000\rangle+\lvert 001\rangle+\lvert 011\rangle+\lvert 010\rangle+\lvert 100\rangle+\lvert 101\rangle+\lvert 111\rangle+\lvert 110\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_4\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>e^{-\TT}\lvert 001\rangle+<br/>e^{-\TT}\lvert 011\rangle+<br/>\lvert 010\rangle+<br/>\lvert 100\rangle+<br/>e^{-\TT}\lvert 101\rangle+<br/>e^{-\TT}\lvert 111\rangle+<br/>\lvert 110\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_5\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>e^{-\TT}\lvert 001\rangle+<br/>e^{-\TT}\lvert 011\rangle+<br/>\lvert 010\rangle+<br/>\lvert 101\rangle+<br/>e^{-\TT}\lvert 100\rangle+<br/>e^{-\TT}\lvert 110\rangle+<br/>\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_6\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>e^{\TT}e^{-\TT}\lvert 001\rangle+<br/>e^{\TT}e^{-\TT}\lvert 011\rangle+<br/>\lvert 010\rangle\newline &amp;\qquad+<br/>e^{\TT}\lvert 101\rangle+<br/>e^{-\TT}\lvert 100\rangle+<br/>e^{-\TT}\lvert 110\rangle+<br/>e^{\TT}\lvert 111\rangle)\newline<br/>=&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+\lvert 001\rangle+<br/>\lvert 011\rangle+\lvert 010\rangle+e^{\TT}\lvert 101\rangle+<br/>e^{-\TT}\lvert 100\rangle+<br/>e^{-\TT}\lvert 110\rangle+<br/>e^{\TT}\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_7\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+\lvert 001\rangle+<br/>\lvert 010\rangle+\lvert 011\rangle+e^{\TT}\lvert 101\rangle+<br/>e^{-\TT}\lvert 100\rangle+<br/>e^{-\TT}\lvert 111\rangle+<br/>e^{\TT}\lvert 110\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_8\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>e^{-\TT}\lvert 001\rangle+<br/>\lvert 010\rangle+<br/>e^{-\TT}\lvert 011\rangle+<br/>\lvert 101\rangle+<br/>e^{-\TT}\lvert 100\rangle+<br/>e^{-2\TT}\lvert 111\rangle+<br/>e^{\TT}\lvert 110\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{9}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>e^{-\TT}\lvert 001\rangle+<br/>\lvert 010\rangle+<br/>e^{-\TT}\lvert 011\rangle+<br/>\lvert 100\rangle+<br/>e^{-\TT}\lvert 101\rangle+<br/>e^{-2\TT}\lvert 110\rangle+<br/>e^{\TT}\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{10}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>\lvert 001\rangle+<br/>\lvert 010\rangle+<br/>\lvert 011\rangle+<br/>\lvert 100\rangle+<br/>\lvert 101\rangle+<br/>e^{-2\TT}\lvert 110\rangle+<br/>e^{2\TT}\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{11}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br/>\lvert 000\rangle+<br/>\lvert 001\rangle+<br/>e^{\TT}\lvert 010\rangle+<br/>e^{\TT}\lvert 011\rangle+<br/>\lvert 100\rangle+<br/>\lvert 101\rangle+<br/>e^{-\TT}\lvert 110\rangle+<br/>e^{3\TT}\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{12}\rangle =&amp; \frac{1}{2\sqrt{2}}\Biggr(<br/>\lvert 00\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\qquad+<br/>\lvert 00\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)\newline &amp;\qquad+<br/>\lvert 01\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)e^{\TT}\newline &amp;\qquad+<br/>\lvert 01\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)e^{\TT}\newline &amp;\qquad+<br/>\lvert 10\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\newline &amp;\qquad+<br/>\lvert 10\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)\newline &amp;\qquad+<br/>\lvert 11\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)e^{-\TT}\newline &amp;\qquad+<br/>\lvert 11\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)e^{3\TT}\Biggr)\newline<br/>=&amp; \frac{1}{2\sqrt{2}}(<br/>\frac{2}{\sqrt{2}}\lvert 000\rangle+<br/>e^{\TT}\frac{2}{\sqrt{2}}\lvert 010\rangle+<br/>\frac{2}{\sqrt{2}}\lvert 100\rangle+<br/>e^{-\TT}\frac{2}{\sqrt{2}}\lvert 111\rangle<br/>)\newline<br/>=&amp; \frac{1}{2}(\lvert 000\rangle + e^{\TT}\lvert 010\rangle + \lvert 100\rangle + e^{-\TT}\lvert 111\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{13}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + e^{\TT}\lvert 010\rangle + \lvert 110\rangle + e^{-\TT}\lvert 101\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{14}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + e^{-\TT}\lvert 110\rangle + e^{-\TT}\lvert 101\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{15}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + \lvert 110\rangle + \lvert 101\rangle)<br/>\newline<br/>\newline<br/>\lvert\Phi_{16}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + \lvert 100\rangle + \lvert 111\rangle)<br/>\end{split}<br/>\end{equation*}<br/>$$</p><br/><br/><h1 id="解釋" class="article-heading">解釋 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a7%a3%e9%87%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最終結果推出這樣的輸入下 (前兩位元疊加態，第三位元 0) 只有四種輸出可能 (000, 010, 100, 111) 各佔 25%，前三種因為前兩位元不全為 1 所以第三位元維持 0。第四種因為前兩位元皆為 1，第三位元因此翻轉成 1。</p><br/><br/><h1 id="補充說明" class="article-heading">補充說明 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a3%9c%e5%85%85%e8%aa%aa%e6%98%8e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>其中我認為最精采的是 $\lvert\Phi_{12}\rangle$，在這步驟中，原先 8 個狀態透過 $H$ 作用後可以抵消掉 4 個狀態。比較需要注意的是 $e^{-\TT} = -1 \cdot e^{3\TT}$ 因此會消掉 $\lvert 11\rangle\lvert 0\rangle$ 這項。</p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://en.wikipedia.org/wiki/Quantum_logic_gate" target="_blank" rel="noreferrer noopener">Quantum logic gate - wiki</a></li><li><br/><br/><a href="https://github.com/cduck/bloch_sphere" target="_blank" rel="noreferrer noopener">Qubit Bloch Sphere Visualization: cduck/bloch_sphere - github</a></li><li><br/><br/><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" target="_blank" rel="noreferrer noopener">Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Complex_number" target="_blank" rel="noreferrer noopener">complex number - wiki</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Euler%27s_identity" target="_blank" rel="noreferrer noopener">Euler&rsquo;s identity - wiki</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://en.wikipedia.org/wiki/Quantum_state" target="_blank" rel="noreferrer noopener">Quantum state - wiki</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://zh.wikipedia.org/zh-tw/%E5%85%B1%E8%BB%9B%E8%BD%89%E7%BD%AE" target="_blank" rel="noreferrer noopener">共軛轉置 - wiki</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Vscode Latex Workshop Pdf Viewer Auto Refresh</title><link>https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/</link><pubDate>Sun, 23 Jan 2022 11:20:21 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/</guid><description><![CDATA[
          <p>每次要重開 pdf viewer 很麻煩，而且最近突然無法在編譯好 pdf 後自動更新 viewer 了，很惱人。找了方法來解決，雖然不夠完美，不過很夠用了。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/"><img src="https://images.unsplash.com/photo-1638164570687-28edd5f0a124?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>每次要重開 pdf viewer 很麻煩，而且最近突然無法在編譯好 pdf 後自動更新 viewer 了，很惱人。找了方法來解決，雖然不夠完美，不過很夠用了。</p><p>Related post: <br/><br/><a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/">[Use VSCode to Write LaTeX Paper]</a></p><br/><br/><h1 id="environment" class="article-heading">Environment <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#environment"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>Win10</li><li>VSCode Version: 1.63.2</li><li>Latex Workshop: v8.23.0</li><li>Trigger Task on Save: v0.2.17</li></ul><br/><br/><h1 id="steps" class="article-heading">Steps <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#steps"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ol><li><p>Install <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.triggertaskonsave" target="_blank" rel="noreferrer noopener">Trigger Task on Save</a> (ID: gruntfuggly.triggertaskonsave)</p></li><li><p><code>settings.json</code> (global):</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">// your other settings...<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#f92672">&#34;latex-workshop.latex.autoBuild.run&#34;</span>: <span style="color:#e6db74">&#34;onSave&#34;</span>,<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;latex-workshop.view.pdf.viewer&#34;</span>: <span style="color:#e6db74">&#34;tab&#34;</span>,<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;triggerTaskOnSave.tasks&#34;</span>: {<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;update pdf&#34;</span>: [<br/></span></span><span style="display:flex;"><span>            <span style="color:#e6db74">&#34;*.tex&#34;</span><br/></span></span><span style="display:flex;"><span>        ]<br/></span></span><span style="display:flex;"><span>    },<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li><li><p><code>.vscode/tasks.json</code> (local):</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;version&#34;</span>: <span style="color:#e6db74">&#34;2.0.0&#34;</span>,<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;tasks&#34;</span>: [<br/></span></span><span style="display:flex;"><span>        {<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;label&#34;</span>: <span style="color:#e6db74">&#34;build&#34;</span>,<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;command&#34;</span>: <span style="color:#e6db74">&#34;${command:latex-workshop.build}&#34;</span>,<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;problemMatcher&#34;</span>: [],<br/></span></span><span style="display:flex;"><span>        },<br/></span></span><span style="display:flex;"><span>        {<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;label&#34;</span>: <span style="color:#e6db74">&#34;update pdf&#34;</span>,<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;command&#34;</span>: <span style="color:#e6db74">&#34;${command:latex-workshop.refresh-viewer}&#34;</span>,<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;dependsOn&#34;</span>:[<span style="color:#e6db74">&#34;build&#34;</span>],<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;problemMatcher&#34;</span>: [],<br/></span></span><span style="display:flex;"><span>            <span style="color:#f92672">&#34;group&#34;</span>: {<br/></span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;kind&#34;</span>: <span style="color:#e6db74">&#34;build&#34;</span>,<br/></span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;isDefault&#34;</span>: <span style="color:#66d9ef">true</span><br/></span></span><span style="display:flex;"><span>            }<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    ]<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div></li></ol><br/><br/><h1 id="說明" class="article-heading">說明 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%aa%e6%98%8e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>會需要 Trigger Task on Save 是因為要在儲存 *.tex 的檔案時觸發 &ldquo;update pdf&rdquo; 的 task，由於 &ldquo;update pdf&rdquo; 依賴 (dependsOn) &ldquo;build&rdquo;，所以會先執行 &ldquo;build&rdquo; 的 task，結束後呼叫 refresh-viewer。</p><br/><br/><h1 id="不完美之處" class="article-heading">不完美之處 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8d%e5%ae%8c%e7%be%8e%e4%b9%8b%e8%99%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>可以看到整個流程會呼叫兩次 build (一次是 onSave、一次是 triggerTaskOnSave)，取消其中一者會導致 pdf viewer 在 pdf 還沒編譯好時就更新。兩個都存在就會等第一次編譯好才更新 (真是奇怪的 bug)，因此缺點就是會編譯兩次，不過第二次因為是重複所以速度很快幾乎不影響使用。</p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://www.reddit.com/r/vscode/comments/dhsff9/comment/f8fmdhj/?utm_source=share&amp;utm_medium=web2x&amp;context=3" target="_blank" rel="noreferrer noopener">Auto-update pdf-viewer - reddit</a></li><li><br/><br/><a href="https://code.visualstudio.com/docs/editor/tasks" target="_blank" rel="noreferrer noopener">Integrate with External Tools via Tasks - vscode</a></li></ul>
        ]]></description></item><item><title>本週回顧</title><link>https://aben20807.github.io/posts/20220115-weekly-review/</link><pubDate>Sat, 15 Jan 2022 12:04:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220115-weekly-review/</guid><description><![CDATA[
          <p>沒有要固定更新，不過分享一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220115-weekly-review/"><img src="https://images.unsplash.com/photo-1639977299489-a3d5a8f78811?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220115-weekly-review/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>沒有要固定更新，不過分享一下。</p> <br/><br/><br/><h1 id="機車漏油" class="article-heading">機車漏油 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a9%9f%e8%bb%8a%e6%bc%8f%e6%b2%b9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>原本星期三預計要跟女友去看奈良美智特展  ，結果出發前發現機車發不動，然後有很重的汽油味，才看到地板已經一堆油，好險沒燒起來。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVXRncFYR27ZhH-JmvDJItbkexsy3cd2FosFso81s8Hjr6BWjMOrqzABmpwRYVRA-ujzz6gJHvPZq7hpz9e6pIDie_lZssKWGgjWsZOFo4rIZf-Il_HIjq1koM_z1dVx1ZIEZYoc_thnvLzFr2zeVwiIw=w1692-h1268-no" class="center img-zoomable" alt="漏油" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVXRncFYR27ZhH-JmvDJItbkexsy3cd2FosFso81s8Hjr6BWjMOrqzABmpwRYVRA-ujzz6gJHvPZq7hpz9e6pIDie_lZssKWGgjWsZOFo4rIZf-Il_HIjq1koM_z1dVx1ZIEZYoc_thnvLzFr2zeVwiIw=w1692-h1268-no" class="center img-zoomable lazyload" alt="漏油"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">漏油</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVXRncFYR27ZhH-JmvDJItbkexsy3cd2FosFso81s8Hjr6BWjMOrqzABmpwRYVRA-ujzz6gJHvPZq7hpz9e6pIDie_lZssKWGgjWsZOFo4rIZf-Il_HIjq1koM_z1dVx1ZIEZYoc_thnvLzFr2zeVwiIw=w1692-h1268-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>記得上次一樣跟女友去漁光島的時候就有聞到，以為只是一般廢氣。所以只好先放棄 (之後再預約)，然後我就找了附近評價最好的機車行，直接把車牽過去。老闆人蠻好的，又修得算快，說之後有問題可以叫他過去不用自己牽過來，在此推薦。</p><ul><li>駿陞機車行:<br/>   <br/></li></ul><br/><br/><h1 id="重訓肌肉拉傷" class="article-heading">重訓肌肉拉傷 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8d%e8%a8%93%e8%82%8c%e8%82%89%e6%8b%89%e5%82%b7"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>女友之前抽到動滋券 ，結果這次似乎只能用在健身房或是去看球賽，剛好附近健身房有優惠用動滋券體驗一個月，我有時候會陪她去，結果這禮拜去練二頭肌後疼痛感蠻明顯，感覺是拉傷。幸好沒有到很嚴重，休息幾天後有逐漸恢復。</p><br/><br/><h1 id="放棄-evernote" class="article-heading">放棄 Evernote <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%be%e6%a3%84-evernote"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Evernote 突然說網頁版的也算是一個裝置，而又只限定兩個裝置，所以感覺不夠用了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV5EoUg9_j5f9U7mhWHfeFug8mZQTQ6MCuObaJVUJy8KqcNkXSIjNUxwx3MF1Ar3MkjamrwyCIC13uUQXQ9CDQdbsRWhQpCIQVG0WSjTZJBzXEWyTkwUgwqDUAKUfehtCCWEK9rqeHIYRY83tjPKBCagA=w994-h746-no" class="center img-zoomable" alt="撤銷裝置" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV5EoUg9_j5f9U7mhWHfeFug8mZQTQ6MCuObaJVUJy8KqcNkXSIjNUxwx3MF1Ar3MkjamrwyCIC13uUQXQ9CDQdbsRWhQpCIQVG0WSjTZJBzXEWyTkwUgwqDUAKUfehtCCWEK9rqeHIYRY83tjPKBCagA=w994-h746-no" class="center img-zoomable lazyload" alt="撤銷裝置"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">撤銷裝置</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV5EoUg9_j5f9U7mhWHfeFug8mZQTQ6MCuObaJVUJy8KqcNkXSIjNUxwx3MF1Ar3MkjamrwyCIC13uUQXQ9CDQdbsRWhQpCIQVG0WSjTZJBzXEWyTkwUgwqDUAKUfehtCCWEK9rqeHIYRY83tjPKBCagA=w994-h746-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>我就直接把所有筆記移植到 Notion (我用 enex2notion  ，不過上傳蠻花時間)，過程中才發現我的筆記太雜亂，分類又直接用記事本。總之目前轉用 Notion，教育版還可以免費使用 pro 的功能。我之前多少有用過 Notion，不過當時的效能不太好，現在使用感覺進步許多。</p><br/><br/><h1 id="新玩具" class="article-heading">新玩具 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e7%8e%a9%e5%85%b7"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>新手機沒有 3.5mm 耳機孔了，剛好被打廣告，所以就腦波弱下單，品質不錯 (應該是我耳機太爛聽不出差異)。另外不知道為何 S21U 預設會把高音調弱，進到 Adapt Sound 裡面測試一下耳朵狀態後才能全開。</p><p>這樣我的 LG V30+ 連當隨身聽的機會都沒有了，算是真的退休了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVp8y_S4KSi2nWJ11u9V_-Uhxp_aqNH9cGEqXsoylkQ5Live_hbpq7uOaWH14FZCyLCxrNAgxI-jG8T0zk2OBsNX0n_WX2wWV0aP_PDNb-3HzLLsOEQLpz-89_BSppon7H7pucofsRYo7U9h5D1pGvLvg=w1692-h1268-no" class="center img-zoomable" alt="BGVP T01s" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVp8y_S4KSi2nWJ11u9V_-Uhxp_aqNH9cGEqXsoylkQ5Live_hbpq7uOaWH14FZCyLCxrNAgxI-jG8T0zk2OBsNX0n_WX2wWV0aP_PDNb-3HzLLsOEQLpz-89_BSppon7H7pucofsRYo7U9h5D1pGvLvg=w1692-h1268-no" class="center img-zoomable lazyload" alt="BGVP T01s"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">BGVP T01s</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVp8y_S4KSi2nWJ11u9V_-Uhxp_aqNH9cGEqXsoylkQ5Live_hbpq7uOaWH14FZCyLCxrNAgxI-jG8T0zk2OBsNX0n_WX2wWV0aP_PDNb-3HzLLsOEQLpz-89_BSppon7H7pucofsRYo7U9h5D1pGvLvg=w1692-h1268-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="實驗室尾牙火鍋" class="article-heading">實驗室尾牙火鍋 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%a9%97%e5%ae%a4%e5%b0%be%e7%89%99%e7%81%ab%e9%8d%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>結果沒有開瓶器，後來把螺絲釘鎖進去後靠剪刀把軟木塞取出。</p><blockquote><p>酒後不開車，安全有保障。</p></blockquote><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXw18ZuSfFzLaOsBzMMoLZhsW-3uo5Ky17tXpM_HWZRyKLZpciZlvKPEzoIt83BLLby6pXb2lv8eCtfIPtOq4yAmD8WDXYW6Ilx8jEG2OcjLHCwoP3Di_kyNygdDsp7Phk9RH-qMknK6uoiljZMvR3q-w=w1692-h1268-no" class="center img-zoomable" alt="用螺絲釘開紅酒" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXw18ZuSfFzLaOsBzMMoLZhsW-3uo5Ky17tXpM_HWZRyKLZpciZlvKPEzoIt83BLLby6pXb2lv8eCtfIPtOq4yAmD8WDXYW6Ilx8jEG2OcjLHCwoP3Di_kyNygdDsp7Phk9RH-qMknK6uoiljZMvR3q-w=w1692-h1268-no" class="center img-zoomable lazyload" alt="用螺絲釘開紅酒"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">用螺絲釘開紅酒</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXw18ZuSfFzLaOsBzMMoLZhsW-3uo5Ky17tXpM_HWZRyKLZpciZlvKPEzoIt83BLLby6pXb2lv8eCtfIPtOq4yAmD8WDXYW6Ilx8jEG2OcjLHCwoP3Di_kyNygdDsp7Phk9RH-qMknK6uoiljZMvR3q-w=w1692-h1268-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="網站更新" class="article-heading">網站更新 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b6%b2%e7%ab%99%e6%9b%b4%e6%96%b0"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>Add footnote tooltip popup bubble (不用再移到下方看 footnote 了)<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUJV1Q7aqI_GNiL8wsHQTekjz6A_BDWydsh9cETtlyogcNSMviTfJo03hyY23JOAogkIlJMMyp7BZGNlL5zPC9M_yC-VfKTdzzjxOAaa4uIvNyuEkJFl_BVyYn89MYA53-4sk7qjsEu5o1c5DALYSrx8g=w373-h121-no" class="center img-zoomable" alt="footnote tooltip" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUJV1Q7aqI_GNiL8wsHQTekjz6A_BDWydsh9cETtlyogcNSMviTfJo03hyY23JOAogkIlJMMyp7BZGNlL5zPC9M_yC-VfKTdzzjxOAaa4uIvNyuEkJFl_BVyYn89MYA53-4sk7qjsEu5o1c5DALYSrx8g=w373-h121-no" class="center img-zoomable lazyload" alt="footnote tooltip"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">footnote tooltip</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUJV1Q7aqI_GNiL8wsHQTekjz6A_BDWydsh9cETtlyogcNSMviTfJo03hyY23JOAogkIlJMMyp7BZGNlL5zPC9M_yC-VfKTdzzjxOAaa4uIvNyuEkJFl_BVyYn89MYA53-4sk7qjsEu5o1c5DALYSrx8g=w373-h121-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li><li>Reduce the size of the image from unsplash on homepage</li><li>Improve media print</li></ul><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>我比較懶惰，目前還沒有打算定時更新，請見諒。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVbwAyRINy95lOA0baTwPlePUx0Z8wE3arMsvOr9lpB4H3xrumk95bqkDxbtQjayRiHcnywbzoWSMgCc2YUYpXDDUVPj_VT3F4m56eTSnyqUPcVZhHYuruEXKP2R-WhJ1fdB3U_9Tw72Uj_6iFErocqeg=w1692-h1268-no" class="center img-zoomable" alt="用實驗室老鼠結束這回合" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVbwAyRINy95lOA0baTwPlePUx0Z8wE3arMsvOr9lpB4H3xrumk95bqkDxbtQjayRiHcnywbzoWSMgCc2YUYpXDDUVPj_VT3F4m56eTSnyqUPcVZhHYuruEXKP2R-WhJ1fdB3U_9Tw72Uj_6iFErocqeg=w1692-h1268-no" class="center img-zoomable lazyload" alt="用實驗室老鼠結束這回合"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">用實驗室老鼠結束這回合</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVbwAyRINy95lOA0baTwPlePUx0Z8wE3arMsvOr9lpB4H3xrumk95bqkDxbtQjayRiHcnywbzoWSMgCc2YUYpXDDUVPj_VT3F4m56eTSnyqUPcVZhHYuruEXKP2R-WhJ1fdB3U_9Tw72Uj_6iFErocqeg=w1692-h1268-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://www.tnam.museum/exhibition/detail/278" target="_blank" rel="noreferrer noopener">奈良美智特展YOSHITOMO NARA - 臺南市美術館</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://hpm.5000.gov.tw/cp.aspx?n=207" target="_blank" rel="noreferrer noopener">動滋券 - 行政院振興五倍券</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://github.com/vzhd1701/enex2notion" target="_blank" rel="noreferrer noopener">vzhd1701/enex2notion</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>cmake + gdb 簡易流程</title><link>https://aben20807.github.io/posts/20211208-cmake-gdb/</link><pubDate>Wed, 08 Dec 2021 16:33:26 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211208-cmake-gdb/</guid><description><![CDATA[
          
          
            <p><a href="https://aben20807.github.io/posts/20211208-cmake-gdb/"><img src="https://images.unsplash.com/photo-1582845512747-e42001c95638?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2070&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211208-cmake-gdb/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <br/><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>使用教材: <br/><br/><a href="https://github.com/aben20807/learn_cmake" target="_blank" rel="noreferrer noopener">aben20807/learn_cmake</a></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone https://github.com/aben20807/learn_cmake.git<br/></span></span><span style="display:flex;"><span>$ cd learn_cmake<br/></span></span></code></pre></div></div><br/><br/><h1 id="基本編譯及執行" class="article-heading">基本編譯及執行 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%ba%e6%9c%ac%e7%b7%a8%e8%ad%af%e5%8f%8a%e5%9f%b7%e8%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir build<br/></span></span><span style="display:flex;"><span>$ cd build<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ cmake ..<br/></span></span><span style="display:flex;"><span>$ make<br/></span></span><span style="display:flex;"><span>$ ./bin/exec<br/></span></span><span style="display:flex;"><span>hello<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ls<br/></span></span><span style="display:flex;"><span>bin/  CMakeFiles/  extern/  lib/  src/  cmake_install.cmake  CMakeCache.txt  Makefile<br/></span></span></code></pre></div></div><br/><br/><h1 id="改用-ninja-來取代-make-可跳過" class="article-heading">改用 ninja 來取代 make [可跳過] <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%b9%e7%94%a8-ninja-%e4%be%86%e5%8f%96%e4%bb%a3-make-%e5%8f%af%e8%b7%b3%e9%81%8e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><a href="https://ninja-build.org/" target="_blank" rel="noreferrer noopener">Ninja</a>，跟 make 相同地位，但號稱是更快速的建置系統，主要可以善用平行化編譯，且沒有 make 那樣的歷史包袱導致過於複雜，ninja 生來就是用來被產生，沒錯，cmake 也可以產生 ninja 使用的編譯腳本。目前相當多大型專案 (Google Chrome, parts of Android, LLVM) 都仰賴 ninja。</p><p>因為用不同工具編譯的指令不同 make 用 <code>make</code>， ninja 用 <code>ninja</code>，所以 cmake 有一個指令 (<code>$ cmake --build .</code>) 是可以依照當初產生的來自動呼叫對應的指令，後面章節會用到。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install ninja-build<br/></span></span></code></pre></div></div><p>刪除使用 make 的版本並指定使用 ninja</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cd ..<br/></span></span><span style="display:flex;"><span>$ rm -r build<br/></span></span><span style="display:flex;"><span>$ mkdir build<br/></span></span><span style="display:flex;"><span>$ cd build<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ cmake -G Ninja ..<br/></span></span><span style="display:flex;"><span>$ ninja<br/></span></span><span style="display:flex;"><span>$ ./bin/exec<br/></span></span><span style="display:flex;"><span>hello<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ls<br/></span></span><span style="display:flex;"><span>bin/  CMakeFiles/  extern/  lib/  src/  build.ninja  cmake_install.cmake  CMakeCache.txt  rules.ninja<br/></span></span></code></pre></div></div><br/><br/><h1 id="使用-gdb" class="article-heading">使用 gdb <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-gdb"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>建議可以先參考舊文 <br/><br/><a href="https://aben20807.blogspot.com/2018/06/1070618-gdb-gdb-dashboard.html" target="_blank" rel="noreferrer noopener">107.06.18 好看的 gdb, gdb-dashboard</a> 來提升 gdb 的顏值 (x</p><p>使用 gdb 主要原因就是因為程式只有印出 Segmentation fault 然後就沒有其他了，不會通靈的話基本上無法解決。不過本篇使用的是最簡單的例子，一般會更複雜，不過使用 gdb 還是比通靈實在多了。</p><p>為了演示，我將 <code>../src/main.cpp</code> 改為下面內容，當前目錄都在 <code>learn_cmake/build/</code> 中:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;say_hello_util/hello.hpp&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;sum_header/sum.hpp&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdlib.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Foo</span> {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> x;<br/></span></span><span style="display:flex;"><span>};<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() {<br/></span></span><span style="display:flex;"><span>    hh<span style="color:#f92672">::</span>hello();<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> ss<span style="color:#f92672">::</span>sum(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">2</span>) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    Foo<span style="color:#f92672">*</span> ptr <span style="color:#f92672">=</span> (Foo<span style="color:#f92672">*</span>)malloc(<span style="color:#66d9ef">sizeof</span>(Foo));<br/></span></span><span style="display:flex;"><span>    ptr<span style="color:#f92672">-&gt;</span>x <span style="color:#f92672">=</span> <span style="color:#ae81ff">42</span>;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> ptr<span style="color:#f92672">-&gt;</span>x;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    free(ptr);<br/></span></span><span style="display:flex;"><span>    ptr <span style="color:#f92672">=</span> NULL;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> ptr<span style="color:#f92672">-&gt;</span>x;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h2 id="使用流程" class="article-heading">使用流程: <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8%e6%b5%81%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ol><li>發現問題</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cmake --build . <span style="color:#75715e"># 呼叫 make 或 ninja</span><br/></span></span><span style="display:flex;"><span>$ ./bin/exec<br/></span></span><span style="display:flex;"><span>hello<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span><span style="display:flex;"><span>Segmentation fault<br/></span></span></code></pre></div></div><ol start="2"><br/><li>利用 cmake 產生 debug 專用的編譯指令，讓額外的程式碼資訊一起編譯到執行檔中 (稍後可以試試不經過這一步會如何，需要先 <code>$ rm CMakeCache.txt</code>)，此步驟在 ninja 或 make 都可以適用。</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cmake -G Ninja -DCMAKE_BUILD_TYPE<span style="color:#f92672">=</span>Debug ..<br/></span></span><span style="display:flex;"><span>$ cmake --build .<br/></span></span></code></pre></div></div><ol start="3"><br/><li>使用 gdb 開啟並執行編譯好的檔案</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gdb -q -ex run --args ./bin/exec<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWzgME7xChueCMU3Du2i7Rbwpf7NkaItrB81ASPPNCKofxcG3b6Z7KSkXvjpEZW-J_2JOr4R4ifWxuMIoFaWdHLElryG6pdftZmFlYXaDvnMWUU6dkxM7jauDN2rK2MIN8brp5V24JqpoNZ_naFX35KOg=w959-h516-no" class="center img-zoomable" alt="顯示出錯位置，第 19 行 ptr 已經不可用" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWzgME7xChueCMU3Du2i7Rbwpf7NkaItrB81ASPPNCKofxcG3b6Z7KSkXvjpEZW-J_2JOr4R4ifWxuMIoFaWdHLElryG6pdftZmFlYXaDvnMWUU6dkxM7jauDN2rK2MIN8brp5V24JqpoNZ_naFX35KOg=w959-h516-no" class="center img-zoomable lazyload" alt="顯示出錯位置，第 19 行 ptr 已經不可用"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">顯示出錯位置，第 19 行 ptr 已經不可用</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWzgME7xChueCMU3Du2i7Rbwpf7NkaItrB81ASPPNCKofxcG3b6Z7KSkXvjpEZW-J_2JOr4R4ifWxuMIoFaWdHLElryG6pdftZmFlYXaDvnMWUU6dkxM7jauDN2rK2MIN8brp5V24JqpoNZ_naFX35KOg=w959-h516-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="參考資料" class="article-heading">參考資料 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://ithelp.ithome.com.tw/articles/10221101" target="_blank" rel="noreferrer noopener">Day 11: 中場休息 CMake 教學 - renewang</a></li><li><br/><br/><a href="https://stackoverflow.com/questions/7724569/debug-vs-release-in-cmake/7725055#7725055" target="_blank" rel="noreferrer noopener">Debug vs Release in CMake</a></li><li><br/><br/><a href="https://ithelp.ithome.com.tw/articles/10241563" target="_blank" rel="noreferrer noopener">拯救資工系學生的基本素養—使用 GDB 除錯基本教學 - 微中子</a></li></ul>
        ]]></description></item><item><title>安裝 Ubuntu 後必做的事</title><link>https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/</link><pubDate>Wed, 08 Dec 2021 11:39:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/</guid><description><![CDATA[
          <p>大幅提高方便性</p>
          
            <p><a href="https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/"><img src="https://images.unsplash.com/photo-1638874992371-55c089919a2d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1974&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>大幅提高方便性</p> <br/><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>本篇不包含如何安裝作業系統，而是在作業系統 (不限於直接安裝，大部分在虛擬機、WSL2 也適用) 上調整設定或安裝一些工具</p><br/><br/><h1 id="inputrc" class="article-heading">inputrc <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#inputrc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1> <p>[如果稍後會安裝 oh-my-bash 可以跳過]</p><p>在 home 下編輯 <code>vim ~/.inputrc</code>，內容如下，儲存後關閉重開終端機，就可以實現打前幾個字按&quot;上&quot;然後搜尋歷史紀錄了。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#e6db74">&#34;\e[A&#34;</span>: history-search-backward<br/></span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;\e[B&#34;</span>: history-search-forward<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWN4ATYRzzDi5CeNZORHf-lg_CvoTXD8j-xeBkRUBpb3hiwrQssYIFZcZhAcwwXiXI1S4vMLzEyFCPN4PsqEP19NXX5Nhidyoyakp9BMtMgJP3yZNUVVHnwiu-_oeXpeZfvtetLI9ogCwPYgCb6JBb9wA=w600-h338-no" class="center img-zoomable" alt="使用前" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWN4ATYRzzDi5CeNZORHf-lg_CvoTXD8j-xeBkRUBpb3hiwrQssYIFZcZhAcwwXiXI1S4vMLzEyFCPN4PsqEP19NXX5Nhidyoyakp9BMtMgJP3yZNUVVHnwiu-_oeXpeZfvtetLI9ogCwPYgCb6JBb9wA=w600-h338-no" class="center img-zoomable lazyload" alt="使用前"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">使用前</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWN4ATYRzzDi5CeNZORHf-lg_CvoTXD8j-xeBkRUBpb3hiwrQssYIFZcZhAcwwXiXI1S4vMLzEyFCPN4PsqEP19NXX5Nhidyoyakp9BMtMgJP3yZNUVVHnwiu-_oeXpeZfvtetLI9ogCwPYgCb6JBb9wA=w600-h338-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXdjWL35yAlAOv87Lmc-C1ZZHx_nOCSDyvk0a59wfAa2BTexFNKZiMjfGrX-bRERbenem4CsOT7-er0uUCKID4KbNcCOWVBXBzPPspjeRzRc_C5gj4gTc-frKTT1RIZK7M9MCRoYrk2kn-b_lKTjb6ynw=w600-h338-no" class="center img-zoomable" alt="使用後" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXdjWL35yAlAOv87Lmc-C1ZZHx_nOCSDyvk0a59wfAa2BTexFNKZiMjfGrX-bRERbenem4CsOT7-er0uUCKID4KbNcCOWVBXBzPPspjeRzRc_C5gj4gTc-frKTT1RIZK7M9MCRoYrk2kn-b_lKTjb6ynw=w600-h338-no" class="center img-zoomable lazyload" alt="使用後"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">使用後</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXdjWL35yAlAOv87Lmc-C1ZZHx_nOCSDyvk0a59wfAa2BTexFNKZiMjfGrX-bRERbenem4CsOT7-er0uUCKID4KbNcCOWVBXBzPPspjeRzRc_C5gj4gTc-frKTT1RIZK7M9MCRoYrk2kn-b_lKTjb6ynw=w600-h338-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>進階參考: <br/><br/><a href="https://www.topbug.net/blog/2017/07/31/inputrc-for-humans/" target="_blank" rel="noreferrer noopener">A ~/.inputrc for Humans</a></p><br/><br/><h1 id="oh-my-bash" class="article-heading">oh-my-bash <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#oh-my-bash"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1> <p>先前我有試用過 Fish shell  ，真的蠻人性化的，不過因為後來大部分要跑實驗，主流還是使用 bash，fish 也無法支援部分 bash 的功能，因此就放棄使用了。也因此就研究 bash 相關的內容，也沒有機會使用 Zsh  。</p><p><br/><a href="https://github.com/ohmybash/oh-my-bash" target="_blank" rel="noreferrer noopener">ohmybash/oh-my-bash</a> 提供了許多功能，雖然無法到達 fish 那樣提供視覺化的指令補全  ，不過跟原生的 bash 比較還是方便許多。</p><ul><li>oh-my-bash 安裝方式: <br/><br/><a href="https://github.com/ohmybash/oh-my-bash#basic-installation" target="_blank" rel="noreferrer noopener">https://github.com/ohmybash/oh-my-bash#basic-installation</a></li></ul><p>我也有設計一個主題，不過沒有 PR，所以要使用的話在安裝完 oh-my-bash 後再透過下面連結提供的指令安裝:</p><ul><li>oh-my-ouo 主題安裝方式: <br/><br/><a href="https://github.com/aben20807/oh-my-ouo#install" target="_blank" rel="noreferrer noopener">https://github.com/aben20807/oh-my-ouo#install</a></li></ul><br/><br/><h2 id="方便的功能" class="article-heading">方便的功能 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b9%e4%be%bf%e7%9a%84%e5%8a%9f%e8%83%bd"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ol><li><code>mcd</code> 可以取代 <code>mkdir</code> + <code>cd</code></li><li>git 會顯示修改狀態</li><li>bashmarks (<code>bm</code>) 可以提供書籤功能，快速到達指定資料夾</li><li>virtualenv 會標註目前在虛擬 python 環境 (ouo 主題)</li><li>不需要修改 <code>~/.inputrc</code> 就可以搜尋歷史紀錄</li></ol><br/><br/><h1 id="file-manager-nautilus-copy-file-path" class="article-heading">file manager (nautilus) copy file path <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#file-manager-nautilus-copy-file-path"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1> <p>[WSL2 不適用]</p><p>有時候透過 GUI 找檔案時要複製它的路徑，這個套件就有點類似 VSCode 的功能，讓檔案管理員也可以直接複製檔案路徑。</p><ul><li>安裝步驟: <br/><br/><a href="https://github.com/chr314/nautilus-copy-path#manual-installation" target="_blank" rel="noreferrer noopener">https://github.com/chr314/nautilus-copy-path#manual-installation</a></li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://raw.githubusercontent.com/chr314/nautilus-copy-path/master/screenshot.png" class="center img-zoomable" alt="效果，圖片來源: chr314/nautilus-copy-path" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://raw.githubusercontent.com/chr314/nautilus-copy-path/master/screenshot.png" class="center img-zoomable lazyload" alt="效果，圖片來源: chr314/nautilus-copy-path"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">效果，圖片來源: chr314/nautilus-copy-path</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://raw.githubusercontent.com/chr314/nautilus-copy-path/master/screenshot.png" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="ag---silver-searcher" class="article-heading">Ag - silver searcher <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ag---silver-searcher"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1> <p>搜尋文字檔案內容用，在找程式碼時下頗方便的。有時候在 GitHub 網頁內的搜尋結果找不到的用 ag 就對了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVA4aVBfYPy0w7cWmFGLsqf3HZ0NPTrfys01Gb50uV1_Bww1PAZKqNUPpDubcBstAHK2Xl5kDZTp-qSnlvo3b7SoOtYK5g6tiCj0p7ncpcMer9-XHzW2qpW023SYlB6zKTK8-tI2ESJk1OV5ISiuZw7lw=w959-h723-no" class="center img-zoomable" alt="找出有 &amp;ldquo;hugo &amp;ldquo;，內容及在哪個檔案裡" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVA4aVBfYPy0w7cWmFGLsqf3HZ0NPTrfys01Gb50uV1_Bww1PAZKqNUPpDubcBstAHK2Xl5kDZTp-qSnlvo3b7SoOtYK5g6tiCj0p7ncpcMer9-XHzW2qpW023SYlB6zKTK8-tI2ESJk1OV5ISiuZw7lw=w959-h723-no" class="center img-zoomable lazyload" alt="找出有 &amp;ldquo;hugo &amp;ldquo;，內容及在哪個檔案裡"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">找出有 &ldquo;hugo &ldquo;，內容及在哪個檔案裡</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVA4aVBfYPy0w7cWmFGLsqf3HZ0NPTrfys01Gb50uV1_Bww1PAZKqNUPpDubcBstAHK2Xl5kDZTp-qSnlvo3b7SoOtYK5g6tiCj0p7ncpcMer9-XHzW2qpW023SYlB6zKTK8-tI2ESJk1OV5ISiuZw7lw=w959-h723-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="rust-相關工具" class="article-heading">Rust 相關工具 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#rust-%e7%9b%b8%e9%97%9c%e5%b7%a5%e5%85%b7"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Rust 最近越來越穩定，也有許多工具都用 Rust 重寫且使用起來更為友善，不過要使用這些工具前要先安裝 Rust。</p><ul><li>Rust 環境安裝方式: <br/><br/><a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer noopener">https://www.rust-lang.org/tools/install</a></li><li>另外要將下方內容放到 <code>~/.bashrc</code> 中</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Rust</span><br/></span></span><span style="display:flex;"><span>export RUST_HOME<span style="color:#f92672">=</span>$HOME/.cargo/<br/></span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>$PATH:$RUST_HOME/bin<br/></span></span></code></pre></div></div><br/><br/><h2 id="exahttpsgithubcomoghamexa-取代-ls" class="article-heading"><br/><br/><a href="https://github.com/ogham/exa" target="_blank" rel="noreferrer noopener">exa</a> 取代 ls <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#exahttpsgithubcomoghamexa-%e5%8f%96%e4%bb%a3-ls"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2> <p>因為我們已經有 Rust 環境了，所以可以使用 <code>$ cargo install exa</code> 安裝。</p><p><code>~/.bashrc</code> 中可以加入以下來取代 <code>ls</code></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>alias ls<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;exa -F --group-directories-first&#39;</span><br/></span></span><span style="display:flex;"><span>alias ll<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;exa -alF&#39;</span><br/></span></span><span style="display:flex;"><span>alias lls<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;exa --sort=size -l&#39;</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="bathttpsgithubcomsharkdpbat-取代-cat" class="article-heading"><br/><br/><a href="https://github.com/sharkdp/bat" target="_blank" rel="noreferrer noopener">bat</a> 取代 cat <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#bathttpsgithubcomsharkdpbat-%e5%8f%96%e4%bb%a3-cat"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>安裝:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cargo install --locked bat<br/></span></span></code></pre></div></div><p>alias:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>alias cat<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;bat&#39;</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="dusthttpsgithubcombootandydust-取代-du" class="article-heading"><br/><br/><a href="https://github.com/bootandy/dust" target="_blank" rel="noreferrer noopener">dust</a> 取代 du <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#dusthttpsgithubcombootandydust-%e5%8f%96%e4%bb%a3-du"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>安裝:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cargo install du-dust<br/></span></span></code></pre></div></div><p>alias:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>alias disk<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;dust&#39;</span><br/></span></span></code></pre></div></div><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://fishshell.com/" target="_blank" rel="noreferrer noopener">https://fishshell.com/</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://zsh.sourceforge.io/" target="_blank" rel="noreferrer noopener">https://zsh.sourceforge.io/</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://fishshell.com/assets/img/screenshots/autosuggestion.png" target="_blank" rel="noreferrer noopener">https://fishshell.com/assets/img/screenshots/autosuggestion.png</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Human Resource Machine</title><link>https://aben20807.github.io/posts/20211205-human-resource-machine/</link><pubDate>Sun, 05 Dec 2021 14:23:22 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211205-human-resource-machine/</guid><description><![CDATA[
          <p>[非業配] 最近 (12/7 前) <br/><br/><a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" target="_blank" rel="noreferrer noopener">steam</a> 特價中 (Human Resource Machine + 7 Billion Humans 兩款合併只需要 NT$114)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20211205-human-resource-machine/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211205-human-resource-machine/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>[非業配] 最近 (12/7 前) <br/><br/><a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" target="_blank" rel="noreferrer noopener">steam</a> 特價中 (Human Resource Machine + 7 Billion Humans 兩款合併只需要 NT$114)。</p> <p>如果是寫程式寫到走火入魔，連玩遊戲也要找一款可以鍛鍊邏輯的，那我推薦這款 <br/><br/><a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" target="_blank" rel="noreferrer noopener">Human Resource Machine</a>。遊戲做畫蠻精緻的，也有大量跟程式相關的內容。另外此遊戲有續作 <br/><br/><a href="https://store.steampowered.com/app/792100/7_Billion_Humans/" target="_blank" rel="noreferrer noopener">7 Billion Humans</a>，同樣也是相關的內容。我玩前幾關發現前者是低階 (low-level) 指令，遊戲過程像是用 instructions  、assembly code   去解決問題，例如費波那契數列  、排序  ；後者有出現 if-else 等高階語言特性，可能會比較像 Scratch   或是 MIT App Inventor   那樣拉方塊寫程式的感覺。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" class="center img-zoomable" alt="Human Resource Machine 真實遊戲畫面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" class="center img-zoomable lazyload" alt="Human Resource Machine 真實遊戲畫面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Human Resource Machine 真實遊戲畫面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUB52uq9J-F1T9pIypzlABm0adH8l2GlMoXo5UYRZwIcxN7ZScCIv_L1I170cngeM8-QHgC2YOp1jn-aGkp6zDPh5gaslk59E58SFIXNE8M1VruOk22tBECKcST4bMwnkMyUAGBoHiwUFsoOGuCr-3R7g=w2560-h1440-no" class="center img-zoomable" alt="7 Billion Humans 真實遊戲畫面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUB52uq9J-F1T9pIypzlABm0adH8l2GlMoXo5UYRZwIcxN7ZScCIv_L1I170cngeM8-QHgC2YOp1jn-aGkp6zDPh5gaslk59E58SFIXNE8M1VruOk22tBECKcST4bMwnkMyUAGBoHiwUFsoOGuCr-3R7g=w2560-h1440-no" class="center img-zoomable lazyload" alt="7 Billion Humans 真實遊戲畫面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">7 Billion Humans 真實遊戲畫面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUB52uq9J-F1T9pIypzlABm0adH8l2GlMoXo5UYRZwIcxN7ZScCIv_L1I170cngeM8-QHgC2YOp1jn-aGkp6zDPh5gaslk59E58SFIXNE8M1VruOk22tBECKcST4bMwnkMyUAGBoHiwUFsoOGuCr-3R7g=w2560-h1440-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>判定方式除了是否解決問題外還有針對指令數量以及執行速度當作可以最佳化的面向。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVYEQctI5PEqAfa_n6y0kgIHndEyhXGLvjqFrLv2jCt9panxRbicj1ciZhjtJTBN9jX_A0V7Rn1OtNJuAvFK4uWCByl_0bvfyQKF7KjnYQ2cyKICopWnXdWqexJ2FJI88Fg5uKUDozI8Gl04k7HGbRAUQ=w1737-h1337-no" class="center img-zoomable" alt="Human Resource Machine 真實遊戲畫面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVYEQctI5PEqAfa_n6y0kgIHndEyhXGLvjqFrLv2jCt9panxRbicj1ciZhjtJTBN9jX_A0V7Rn1OtNJuAvFK4uWCByl_0bvfyQKF7KjnYQ2cyKICopWnXdWqexJ2FJI88Fg5uKUDozI8Gl04k7HGbRAUQ=w1737-h1337-no" class="center img-zoomable lazyload" alt="Human Resource Machine 真實遊戲畫面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Human Resource Machine 真實遊戲畫面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVYEQctI5PEqAfa_n6y0kgIHndEyhXGLvjqFrLv2jCt9panxRbicj1ciZhjtJTBN9jX_A0V7Rn1OtNJuAvFK4uWCByl_0bvfyQKF7KjnYQ2cyKICopWnXdWqexJ2FJI88Fg5uKUDozI8Gl04k7HGbRAUQ=w1737-h1337-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Machine_code" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Machine_code</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Assembly_language" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Assembly_language</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://en.wikipedia.org/wiki/Fibonacci_number" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Fibonacci_number</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://en.wikipedia.org/wiki/Sorting_algorithm" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Sorting_algorithm</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://scratch.mit.edu/" target="_blank" rel="noreferrer noopener">https://scratch.mit.edu/</a>&#160; </p></li><li id="fn:6"><p><br/><a href="https://appinventor.mit.edu/" target="_blank" rel="noreferrer noopener">https://appinventor.mit.edu/</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Find and Count Words Using Vim</title><link>https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/</link><pubDate>Sat, 04 Dec 2021 16:54:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/</guid><description><![CDATA[
           <br/><p>用 vim 計算出現次數</p>
          
            <p><a href="https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/"><img src="https://images.unsplash.com/photo-1586769852836-bc069f19e1b6?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2670&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>用 vim 計算出現次數</p><p>因為我預設的搜尋是大小寫無關 (Case insensitive, 可自行用 <code>:echo &amp;ignorecase</code> 確認)，因此搜尋有時候會包含非目標的字，若要區分大小寫可以使用下方的指令。把 <code>target word</code> 換成你想找的字或句子即可。</p><p>Command 模式下執行：</p><ul><li>Case insensitive:</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:%<span style="color:#a6e22e">s</span><span style="color:#e6db74">/target word/</span>/<span style="color:#a6e22e">ng</span><span style="color:#960050;background-color:#1e0010"><br/></span></span></span></code></pre></div></div><ul><li>Case sensitive:</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:%<span style="color:#a6e22e">s</span><span style="color:#e6db74">/target word/</span>/<span style="color:#a6e22e">ngI</span><span style="color:#960050;background-color:#1e0010"><br/></span></span></span></code></pre></div></div><p>執行完會顯示類似 <code>4 matches on 4 lines</code> 來呈現搜尋結果。</p>
        ]]></description></item><item><title>大 大 大更新</title><link>https://aben20807.github.io/posts/20211203-huge-update-on-this-website/</link><pubDate>Fri, 03 Dec 2021 09:50:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211203-huge-update-on-this-website/</guid><description><![CDATA[
           <br/><p>本網站最近的更新項目</p>
          
            <p><a href="https://aben20807.github.io/posts/20211203-huge-update-on-this-website/"><img src="https://images.unsplash.com/photo-1588671789988-d0c186cb9e84?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211203-huge-update-on-this-website/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>本網站最近的更新項目</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近做了許多大更新，果然還是有一個自己的主題 (theme) 比較自由，但是缺點就是會一直改來改去，似乎沒有盡頭。</p><p><del>哎呀，昨天 20211202 沒發到文。</del></p><p>寫完發現太長了，所以右邊有開啟 toc。</p><br/><br/><h1 id="auto-deploy-from-the-private-repo" class="article-heading">Auto deploy from the private repo <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#auto-deploy-from-the-private-repo"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="private-repo" class="article-heading">Private repo <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#private-repo"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>本網站已經從原先開源發文內容的方式改為把該 repo 設定為私人，主要原因是為了防止別人輕易拿到原始內容進而能夠輕鬆盜取。先前我也已經檢舉了一堆內容農場，雖然防不勝防，不過我看到有些討論是建議把原始內容隱藏起來。再來私人模式下我也比較能夠控制一些內容何時可以公開發佈，這大概可以適用在鐵人賽預先囤文 (雖然我還不知道會不會參加)。原先舊的因為星星數頗多，所以維持公開並改為純記錄 issue (發文靈感)。</p><br/><br/><h2 id="github-action" class="article-heading">GitHub Action <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#github-action"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>此外，為了發文方便性，佈署方式已經從原先在本地端編譯好網站再推上去改為利用 GitHub Action。也就是我只要將內容更新推上 private repo，則 GitHub 那邊會自動幫忙編譯及推到<br/><br/><a href="https://github.com/aben20807/aben20807.github.io" target="_blank" rel="noreferrer noopener">目標 repo</a>。因此整理一下，為了這個網站我現在有4個 repo：</p><ul><li><br/><br/><a href="https://github.com/aben20807/hugOuO" target="_blank" rel="noreferrer noopener">aben20807/hugOuO</a>：主題</li><li><br/><br/><a href="https://github.com/aben20807/blog-post" target="_blank" rel="noreferrer noopener">aben20807/blog-post (private)</a>：發文內容</li><li><br/><br/><a href="https://github.com/aben20807/blog-post-issues" target="_blank" rel="noreferrer noopener">aben20807/blog-post-issues</a>：記錄靈感，<del>收集星星</del></li><li><br/><br/><a href="https://github.com/aben20807/aben20807.github.io" target="_blank" rel="noreferrer noopener">aben20807/aben20807.github.io</a>：渲染成此網站的目標 repo</li></ul><p>為了使用 GitHub Action 完成自動佈署，我用了以下工具：</p><ul><li><br/><br/><a href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noreferrer noopener">peaceiris/actions-hugo</a>：用於使用 hugo 編譯網站</li><li><br/><br/><a href="https://github.com/cpina/github-action-push-to-another-repository" target="_blank" rel="noreferrer noopener">cpina/github-action-push-to-another-repository-directory</a>：因為我的內容跟渲染 repo 分離，所以需要這個工具推到另外一個 repo，需要按照教學申請 <code>API_TOKEN_GITHUB</code></li><li><br/><br/><a href="https://github.com/nektos/act" target="_blank" rel="noreferrer noopener">nektos/act</a>：用於本地端測試 yaml 可不可以動</li></ul><p>另外有一些小技巧會用到：</p><ul><li><code>set-output</code>: <br/><br/><a href="https://stackoverflow.com/a/65616499" target="_blank" rel="noreferrer noopener">https://stackoverflow.com/a/65616499</a></li><li>Multiple lines for git message in yaml: <br/><br/><a href="https://stackoverflow.com/a/5064653" target="_blank" rel="noreferrer noopener">https://stackoverflow.com/a/5064653</a></li></ul> <br/><br/><details><br/>  <summary><span>完整 <code>blog-post/.github/workflows/deploy.yml</code> 內容 </span></summary><br/>  <div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">name</span>: <span style="color:#ae81ff">Deploy</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">on</span>:<br/></span></span><span style="display:flex;"><span>  <span style="color:#f92672">push</span>:<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">branches</span>:<br/></span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">master</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">jobs</span>:<br/></span></span><span style="display:flex;"><span>  <span style="color:#f92672">deploy</span>:<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">runs-on</span>: <span style="color:#ae81ff">ubuntu-18.04</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">concurrency</span>:<br/></span></span><span style="display:flex;"><span>      <span style="color:#f92672">group</span>: <span style="color:#ae81ff">${{ github.workflow }}-${{ github.ref }}</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">steps</span>:<br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Dump GitHub context</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">env</span>:<br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">GITHUB_CONTEXT</span>: <span style="color:#ae81ff">${{ toJson(github) }}</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">echo &#34;$GITHUB_CONTEXT&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">actions/checkout@v2</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:<br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">submodules</span>: <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># Fetch Hugo themes (true OR recursive)</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">fetch-depth</span>: <span style="color:#ae81ff">0</span>    <span style="color:#75715e"># Fetch all history for .GitInfo and .Lastmod</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Setup Hugo</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">peaceiris/actions-hugo@v2</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:<br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">hugo-version</span>: <span style="color:#e6db74">&#39;0.89.4&#39;</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">extended</span>: <span style="color:#66d9ef">true</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Build</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">hugo --gc --minify --cleanDestinationDir</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Copy README.md</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">cp README_web.md public/README.md</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Retrieve commit message</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">run</span>: <span style="color:#ae81ff">|</span> <span style="color:#75715e"># https://trstringer.com/github-actions-multiline-strings/</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">CMT_MSG_STR=$(cat &lt;&lt; EOF</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">Deploy site `date &#39;+%Y-%m-%d %H:%M:%S&#39;`</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">by `hugo version`</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">from ORIGIN_COMMIT</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">EOF</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">)</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">CMT_MSG_STR=&#34;${CMT_MSG_STR//$&#39;\n&#39;/&#39;%0A&#39;}&#34;</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">echo &#34;::set-output name=CMT_MSG::$CMT_MSG_STR&#34;</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">id</span>: <span style="color:#ae81ff">message</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>      - <span style="color:#f92672">name</span>: <span style="color:#ae81ff">Deploy</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">uses</span>: <span style="color:#ae81ff">cpina/github-action-push-to-another-repository@main</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">env</span>:<br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">API_TOKEN_GITHUB</span>: <span style="color:#ae81ff">${{ secrets.API_TOKEN_GITHUB }}</span><br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">with</span>:<br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">source-directory</span>: <span style="color:#e6db74">&#39;public&#39;</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">destination-github-username</span>: <span style="color:#e6db74">&#39;aben20807&#39;</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">destination-repository-name</span>: <span style="color:#e6db74">&#39;aben20807.github.io&#39;</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">commit-message</span>: <span style="color:#ae81ff">${{ steps.message.outputs.CMT_MSG }}</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">user-email</span>: <span style="color:#ae81ff">aben20807@gmail.com</span><br/></span></span><span style="display:flex;"><span>          <span style="color:#f92672">target-branch</span>: <span style="color:#ae81ff">master</span><br/></span></span></code></pre></div></div><br/></details><br/><br/><br/><h1 id="dark-mode" class="article-heading">Dark mode <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#dark-mode"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近流行深色模式，主要可能是因為 OLED 螢幕比較省電，另外是可以減低藍光對眼睛的傷害。原先我打算跳槽到其他炫炮主題 (e.g., <br/><br/><a href="https://github.com/dillonzq/LoveIt" target="_blank" rel="noreferrer noopener">LoveIt</a>)，不過後來查到深色模式可能沒有很複雜，所以就自己用了。我直接從 <br/><br/><a href="https://yonkov.github.io/post/add-dark-mode-toggle-to-hugo/" target="_blank" rel="noreferrer noopener">SWITCHING OFF THE LIGHTS PART TWO - ADDING DARK MODE TO HUGO</a> 複製過來，比較麻煩的是 CSS 的控制。因為我原先都是手動硬改，所以這裡也需要比較多功 (細節可以去<br/><br/><a href="https://github.com/aben20807/hugOuO/blob/75d26d4f0eae8e796d0c781b3fd6cbd9641149fc/static/css/hugouo.css#L545-L622" target="_blank" rel="noreferrer noopener">主題 repo</a> 看)。不過算是有完成，最右上角有一個切換的按鈕，也是因為這次機會我才知道原來有 <code>localStorage</code> 可以用。</p><br/><br/><h1 id="go-top-button" class="article-heading">Go top button <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#go-top-button"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>捲動一段距離後，右下角會出現一個前往最上面的按鈕。我的舊網站其實有這個功能，不過一直沒有移植過來，所以就趁這個更新的機會順便。這樣之後手機版就不用再手動滑到最上面。</p><br/><br/><h1 id="prevnext-post" class="article-heading">Prev/Next post <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#prevnext-post"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>偶然發現有這個技巧，所以順便&hellip;，我是從 <br/><br/><a href="https://brianli.com/adding-next-previous-post-links-in-hugo/" target="_blank" rel="noreferrer noopener">Adding Next and Previous Post Links in Hugo</a> 直接複製，然後加上一些 CSS 的 class 以便符合主題。因此回覆的上面就會有上、下一篇的連結。</p><br/><br/><h1 id="series" class="article-heading">Series <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#series"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>後來發現還是需要有一個分類來管理系列文章，這跟原先的分類、標籤不同，主要針對同一高度相關的議題 (會標記 ep 幾)。例如：<br/><br/><a href="https://aben20807.github.io/series/build-a-simple-compiler/" target="_blank" rel="noreferrer noopener">Build a simple compiler</a>。</p><br/><br/><h1 id="license-section" class="article-heading">License section <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#license-section"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>發現還不錯的設計：<br/><br/><a href="https://jdhao.github.io/2021/11/28/how_i_write_blog/" target="_blank" rel="noreferrer noopener">jdhao&rsquo;s blog</a>，不過我是自己找如何讓分號對齊：<br/><br/><a href="https://stackoverflow.com/a/9891619" target="_blank" rel="noreferrer noopener">How to align about the colon in each line of text like movie credits often do</a></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://user-images.githubusercontent.com/14831545/143805190-77ad75c9-f91c-40cd-b220-587446c9cee2.png" class="center img-zoomable" alt="成果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://user-images.githubusercontent.com/14831545/143805190-77ad75c9-f91c-40cd-b220-587446c9cee2.png" class="center img-zoomable lazyload" alt="成果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">成果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://user-images.githubusercontent.com/14831545/143805190-77ad75c9-f91c-40cd-b220-587446c9cee2.png" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="與網站無關" class="article-heading">與網站無關 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%87%e7%b6%b2%e7%ab%99%e7%84%a1%e9%97%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="new-phone" class="article-heading">New phone <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#new-phone"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>本人換新手機了，雖然已經過一個多月，不過還是無法適應這個重量，可能是原先 LG V30+ 實在是太輕。這3年的區間感覺最大升級是相機的軟體部份。螢幕雖然有 120Hz 但是實在是太耗電所以我預設是關閉。螢幕下指紋比起實體辨識還是有準確率問題。內建喇叭有立體感我蠻喜歡的。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://images.unsplash.com/photo-1637924681501-458bb899b071?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" class="center img-zoomable" alt="S21U 拍攝滿月" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://images.unsplash.com/photo-1637924681501-458bb899b071?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" class="center img-zoomable lazyload" alt="S21U 拍攝滿月"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">S21U 拍攝滿月</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://images.unsplash.com/photo-1637924681501-458bb899b071?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="instagram" class="article-heading">Instagram <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#instagram"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>已斷捨離，聯絡請用 messenger，近況更新暫用 FB 或本網站，如果是最近拍了什麼可以去我的 <br/><br/><a href="https://unsplash.com/@aben20807" target="_blank" rel="noreferrer noopener">unsplash</a>。</p><br/><br/><h1 id="最後來一段-ouo" class="article-heading">最後來一段 OuO <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e5%be%8c%e4%be%86%e4%b8%80%e6%ae%b5-ouo"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>雖然我沒玩，也沒業配&hellip;</p><br/><br/><br/><br/><br/><br/><br/> 
        ]]></description></item><item><title>Ubuntu 中文輸入法 Hime</title><link>https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/</link><pubDate>Mon, 18 Oct 2021 09:28:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/</guid><description><![CDATA[
           <br/><p>更新一下設定部分</p>
          
            <p><a href="https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/"><img src="https://images.unsplash.com/photo-1524668951403-d44b28200ce0?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>更新一下設定部分</p><blockquote><p>輸入法編輯器（英語：input method editor，縮寫為IME），是指鍵盤擊鍵或滑鼠移動翻譯成字符來輸入的作業系統組件。 &ndash; <br/><br/><a href="https://zh.wikipedia.org/wiki/%E8%BE%93%E5%85%A5%E6%B3%95" target="_blank" rel="noreferrer noopener">wiki</a></p></blockquote><p>舊文: <br/><br/><a href="https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html" target="_blank" rel="noreferrer noopener">https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html</a></p><br/><br/><h1 id="安裝" class="article-heading">安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install hime<br/></span></span></code></pre></div></div><br/><br/><h1 id="設定系統預設輸入法" class="article-heading">設定系統預設輸入法 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e5%ae%9a%e7%b3%bb%e7%b5%b1%e9%a0%90%e8%a8%ad%e8%bc%b8%e5%85%a5%e6%b3%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ im-config<br/></span></span></code></pre></div></div> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUbOang03O8QLfNgCt31S1uKjZAMzZVEsBZM_oLGP8AaOp_A1uIFTM4mLf3_zBCgi7P536M6mot8rC11ELl27ZXPIplKNTyLvmE8iM8DwejJppStaBawybZFzg2pvaKowYVTmeWGX5xeJThZL_vJQsJGg=w600-h430-no" class="center img-zoomable" alt="Step 1" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUbOang03O8QLfNgCt31S1uKjZAMzZVEsBZM_oLGP8AaOp_A1uIFTM4mLf3_zBCgi7P536M6mot8rC11ELl27ZXPIplKNTyLvmE8iM8DwejJppStaBawybZFzg2pvaKowYVTmeWGX5xeJThZL_vJQsJGg=w600-h430-no" class="center img-zoomable lazyload" alt="Step 1"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Step 1</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUbOang03O8QLfNgCt31S1uKjZAMzZVEsBZM_oLGP8AaOp_A1uIFTM4mLf3_zBCgi7P536M6mot8rC11ELl27ZXPIplKNTyLvmE8iM8DwejJppStaBawybZFzg2pvaKowYVTmeWGX5xeJThZL_vJQsJGg=w600-h430-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW71pHLSR-juKxKpiKl71wc1Twd0hAh7BDLLkY5_R2p5Z6ckd_n6DdnXXTUHwUX_iwjHmpKfVogN3hERJbqYG8DU2bvWY2YualojziwUMk5sePNVnmz9SprmCPcv1rglo-60TcI1MCH6rFxVoqbIYBaXw=w683-h430-no" class="center img-zoomable" alt="Step 2" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW71pHLSR-juKxKpiKl71wc1Twd0hAh7BDLLkY5_R2p5Z6ckd_n6DdnXXTUHwUX_iwjHmpKfVogN3hERJbqYG8DU2bvWY2YualojziwUMk5sePNVnmz9SprmCPcv1rglo-60TcI1MCH6rFxVoqbIYBaXw=w683-h430-no" class="center img-zoomable lazyload" alt="Step 2"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Step 2</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW71pHLSR-juKxKpiKl71wc1Twd0hAh7BDLLkY5_R2p5Z6ckd_n6DdnXXTUHwUX_iwjHmpKfVogN3hERJbqYG8DU2bvWY2YualojziwUMk5sePNVnmz9SprmCPcv1rglo-60TcI1MCH6rFxVoqbIYBaXw=w683-h430-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWDFFlbFkxs4pIvIuMFOiXQVwnz6sDFWR9OMvaVQf5uu0XLsLntDtm6D6ZcNscv9qGJ3AO9SirvZ7QNYUWnpaGGp3b623GQBuSexsZvFuahTce7inE1w7Pl6ZIazEacK20I_a9eBSSQFKHseh0_qPnqbQ=w635-h435-no" class="center img-zoomable" alt="Step 3" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWDFFlbFkxs4pIvIuMFOiXQVwnz6sDFWR9OMvaVQf5uu0XLsLntDtm6D6ZcNscv9qGJ3AO9SirvZ7QNYUWnpaGGp3b623GQBuSexsZvFuahTce7inE1w7Pl6ZIazEacK20I_a9eBSSQFKHseh0_qPnqbQ=w635-h435-no" class="center img-zoomable lazyload" alt="Step 3"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Step 3</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWDFFlbFkxs4pIvIuMFOiXQVwnz6sDFWR9OMvaVQf5uu0XLsLntDtm6D6ZcNscv9qGJ3AO9SirvZ7QNYUWnpaGGp3b623GQBuSexsZvFuahTce7inE1w7Pl6ZIazEacK20I_a9eBSSQFKHseh0_qPnqbQ=w635-h435-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h1 id="輸入法設定" class="article-heading">輸入法設定 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bc%b8%e5%85%a5%e6%b3%95%e8%a8%ad%e5%ae%9a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUSWO732Q9q6vSsG9Lm9V3XJHIYbLTls36rcHG9vNaLty9LRYOtG4tEDbO7-0zulzbuUnxIR7H6eJl8cUhOcIi6lMEtQ2JOxQFeV8Yo2JWklozOVJWTY_LZz5OHhcULsLvwk1M-bmwFw_20B8rWvi_Vpw=w124-h134-no" class="center img-zoomable" alt="點擊圖示" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUSWO732Q9q6vSsG9Lm9V3XJHIYbLTls36rcHG9vNaLty9LRYOtG4tEDbO7-0zulzbuUnxIR7H6eJl8cUhOcIi6lMEtQ2JOxQFeV8Yo2JWklozOVJWTY_LZz5OHhcULsLvwk1M-bmwFw_20B8rWvi_Vpw=w124-h134-no" class="center img-zoomable lazyload" alt="點擊圖示"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">點擊圖示</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUSWO732Q9q6vSsG9Lm9V3XJHIYbLTls36rcHG9vNaLty9LRYOtG4tEDbO7-0zulzbuUnxIR7H6eJl8cUhOcIi6lMEtQ2JOxQFeV8Yo2JWklozOVJWTY_LZz5OHhcULsLvwk1M-bmwFw_20B8rWvi_Vpw=w124-h134-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUt_uTDW10lidV_mFZNoSTne7Qi8PlBQ7bg2Vw27vO150iQc9RoBF1No-194kN37mRlDeKCaJ4GFPmXkoJnM2TS7uTkhkltHFdJ1vV60rTEQFHv8DnmU5yBTkDmpcMklEevPc65cAJQQORfyxFnLBu20g=w1178-h1135-no" class="center img-zoomable" alt="分頁 1" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUt_uTDW10lidV_mFZNoSTne7Qi8PlBQ7bg2Vw27vO150iQc9RoBF1No-194kN37mRlDeKCaJ4GFPmXkoJnM2TS7uTkhkltHFdJ1vV60rTEQFHv8DnmU5yBTkDmpcMklEevPc65cAJQQORfyxFnLBu20g=w1178-h1135-no" class="center img-zoomable lazyload" alt="分頁 1"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">分頁 1</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUt_uTDW10lidV_mFZNoSTne7Qi8PlBQ7bg2Vw27vO150iQc9RoBF1No-194kN37mRlDeKCaJ4GFPmXkoJnM2TS7uTkhkltHFdJ1vV60rTEQFHv8DnmU5yBTkDmpcMklEevPc65cAJQQORfyxFnLBu20g=w1178-h1135-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVKtjanJ9oPB1XNoLpuGb0mw1Dx5mXJhJRdCOaPK69GG-Hj3hmHQLzNGzvSIu8mzuGeYYt9_na2GZbjtKW40S8_k46WzuA2riE3EwwDQ1vvxoLhjpIMYRbC4dau9kmD1ZoPaoGpjiHXO59pIfRbPWm79A=w1176-h1134-no" class="center img-zoomable" alt="分頁 2" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVKtjanJ9oPB1XNoLpuGb0mw1Dx5mXJhJRdCOaPK69GG-Hj3hmHQLzNGzvSIu8mzuGeYYt9_na2GZbjtKW40S8_k46WzuA2riE3EwwDQ1vvxoLhjpIMYRbC4dau9kmD1ZoPaoGpjiHXO59pIfRbPWm79A=w1176-h1134-no" class="center img-zoomable lazyload" alt="分頁 2"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">分頁 2</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVKtjanJ9oPB1XNoLpuGb0mw1Dx5mXJhJRdCOaPK69GG-Hj3hmHQLzNGzvSIu8mzuGeYYt9_na2GZbjtKW40S8_k46WzuA2riE3EwwDQ1vvxoLhjpIMYRbC4dau9kmD1ZoPaoGpjiHXO59pIfRbPWm79A=w1176-h1134-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWFCgJUi1ONy8R7c8zXUKKk7UfrTdfgJylwTmPD_aSa4caaIuL1RkA17BW-TGyoGOIjS31YEQRR3i_CtOsRAmUQUQ1yDslFNaWrTkWNgaa_tD5B-dBd9y0fgD-Hu4jTLRaZyfq66skqCa-d6-4VrmaGCQ=w1179-h1133-no" class="center img-zoomable" alt="分頁 3" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWFCgJUi1ONy8R7c8zXUKKk7UfrTdfgJylwTmPD_aSa4caaIuL1RkA17BW-TGyoGOIjS31YEQRR3i_CtOsRAmUQUQ1yDslFNaWrTkWNgaa_tD5B-dBd9y0fgD-Hu4jTLRaZyfq66skqCa-d6-4VrmaGCQ=w1179-h1133-no" class="center img-zoomable lazyload" alt="分頁 3"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">分頁 3</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWFCgJUi1ONy8R7c8zXUKKk7UfrTdfgJylwTmPD_aSa4caaIuL1RkA17BW-TGyoGOIjS31YEQRR3i_CtOsRAmUQUQ1yDslFNaWrTkWNgaa_tD5B-dBd9y0fgD-Hu4jTLRaZyfq66skqCa-d6-4VrmaGCQ=w1179-h1133-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6pS9SMeM6Y36SAJTF2emFj0nQyGNF5Wy2yu0fAaN2W0DzHIVIzRB0hq24bWDq0grqYV9MiSyrCpS5lLJPa5mAkIxZDuA59R5cDtvAK3vWhLX0jwVPoyaaMa0l8DmUzJPrES0yuV6auSvpe4f6E0Xicw=w1176-h1135-no" class="center img-zoomable" alt="分頁 4" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW6pS9SMeM6Y36SAJTF2emFj0nQyGNF5Wy2yu0fAaN2W0DzHIVIzRB0hq24bWDq0grqYV9MiSyrCpS5lLJPa5mAkIxZDuA59R5cDtvAK3vWhLX0jwVPoyaaMa0l8DmUzJPrES0yuV6auSvpe4f6E0Xicw=w1176-h1135-no" class="center img-zoomable lazyload" alt="分頁 4"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">分頁 4</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW6pS9SMeM6Y36SAJTF2emFj0nQyGNF5Wy2yu0fAaN2W0DzHIVIzRB0hq24bWDq0grqYV9MiSyrCpS5lLJPa5mAkIxZDuA59R5cDtvAK3vWhLX0jwVPoyaaMa0l8DmUzJPrES0yuV6auSvpe4f6E0Xicw=w1176-h1135-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>Ubuntu Multiple Audio Devices</title><link>https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/</link><pubDate>Sat, 14 Aug 2021 15:08:12 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/</guid><description><![CDATA[
           <br/><p>聲音同時輸出多個裝置 (藍芽、喇叭、螢幕)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/"><img src="https://images.unsplash.com/photo-1535406208535-1429839cfd13?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1655&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>聲音同時輸出多個裝置 (藍芽、喇叭、螢幕)</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>假日用電腦看電影，找不到 win10 可以設定同時多個音訊輸出 (網路提供的都不能用)。所以就看看 Ubuntu 可不可以，結果只需要安裝 paprefs 這個套件就好，也太簡單了吧 👍</p><br/><br/><h1 id="使用-paprefs" class="article-heading">使用 paprefs <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-paprefs"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install paprefs <span style="color:#75715e"># 安裝</span><br/></span></span><span style="display:flex;"><span>$ paprefs <span style="color:#75715e"># 開啟設定視窗</span><br/></span></span></code></pre></div></div><p>選擇 Simultaneous Output 頁面，並勾選如下圖</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV-ZBr1zarhENeHCexK-1txjCCnWoW16_nWJrJxFUCq3g4aSuAbNjyNa4BvtgbsqvITH4FkCYHadg9nm0ctVw6xdijpSHL363TYp3GC5_QU4pQ0N9DRa_XLsDsLp2REkckaXh1IApGrL0fFKSO8kBKZyg=w757-h339-no" class="center img-zoomable" alt="virtual output device" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV-ZBr1zarhENeHCexK-1txjCCnWoW16_nWJrJxFUCq3g4aSuAbNjyNa4BvtgbsqvITH4FkCYHadg9nm0ctVw6xdijpSHL363TYp3GC5_QU4pQ0N9DRa_XLsDsLp2REkckaXh1IApGrL0fFKSO8kBKZyg=w757-h339-no" class="center img-zoomable lazyload" alt="virtual output device"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">virtual output device</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV-ZBr1zarhENeHCexK-1txjCCnWoW16_nWJrJxFUCq3g4aSuAbNjyNa4BvtgbsqvITH4FkCYHadg9nm0ctVw6xdijpSHL363TYp3GC5_QU4pQ0N9DRa_XLsDsLp2REkckaXh1IApGrL0fFKSO8kBKZyg=w757-h339-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ pulseaudio -k <span style="color:#75715e"># 重新整理音訊卡</span><br/></span></span></code></pre></div></div><p>接著就會出現一個新的輸出卡如下圖，選擇這個就會在所有裝置輸出聲音了，個別聲音的音量在個別去設定，或是關閉螢幕聲音即可。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVmz3mgDsg5iz7CVmmL2qDpR_QwR4u6u2nRCP-X4GVkBesON9AFMESBPVEapnZ4n3hGTjyKWOSrvy6IVlgzfCoAxi2r3cZsqLnR9rEerj5OzLZfV1xnYSdSP0cE9CHGxbbJNQx3tdujqm498DmMDlp9zg=w1291-h713-no" class="center img-zoomable" alt="音效輸出卡" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVmz3mgDsg5iz7CVmmL2qDpR_QwR4u6u2nRCP-X4GVkBesON9AFMESBPVEapnZ4n3hGTjyKWOSrvy6IVlgzfCoAxi2r3cZsqLnR9rEerj5OzLZfV1xnYSdSP0cE9CHGxbbJNQx3tdujqm498DmMDlp9zg=w1291-h713-no" class="center img-zoomable lazyload" alt="音效輸出卡"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">音效輸出卡</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVmz3mgDsg5iz7CVmmL2qDpR_QwR4u6u2nRCP-X4GVkBesON9AFMESBPVEapnZ4n3hGTjyKWOSrvy6IVlgzfCoAxi2r3cZsqLnR9rEerj5OzLZfV1xnYSdSP0cE9CHGxbbJNQx3tdujqm498DmMDlp9zg=w1291-h713-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="回復" class="article-heading">回復 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9b%9e%e5%be%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>取消勾選後執行 <code>pulseaudio -k</code> 即可。</p><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><blockquote><p>大哥沒有輸 QuQ</p></blockquote><br/><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://askubuntu.com/a/78179" target="_blank" rel="noreferrer noopener">Play sound through two or more outputs/devices</a></li></ul>
        ]]></description></item><item><title>Use Matplotlib to Plot Academic Figures</title><link>https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/</link><pubDate>Thu, 12 Aug 2021 13:18:37 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/</guid><description><![CDATA[
           <br/><p>輕鬆畫出有學術質感的圖表</p>
          
            <p><a href="https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLWQU7NG5P2FICQUsbsbsSnd4OvpK-J5gAkHa9oU5S-lsJ7sKXktgA6WWqHpPY90VfQLGi9XvBid3PoGZ6kM0Bfdu8Q9V8E4H_mG3flfFYzpYX2xUKvOgck0jmvXV8Thaoq7sNv4pY3K2PCWUlrF-Ft2ow=w1891-h1112-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>輕鬆畫出有學術質感的圖表</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>本篇示範一個用 matplotlib 畫一個基本的折線圖，在 ubuntu 跟 windows 10 都有試過，不過本篇以 windows 10 的指令為主。</p><p>雖然有想過寫成一個工具，使用者只要提供資料，就可以自動畫出圖。不過後來發現這個想法是不實際，因為每張圖幾乎都需要客製化，所以就改成提供一個模板，要做任何調整會比較方便。</p><br/><br/><h1 id="安裝套件" class="article-heading">安裝套件 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%a5%97%e4%bb%b6"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="python39" class="article-heading">Python3.9 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#python39"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Windows 直接到官網下載即可，Ubuntu 需要使用 PPA 。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXjOlfhfiQNgWI02_rZb4Wb574Fu4Wur9o6OKhoyNMjexMuCOxm0CCZcVHN_2J3unY1gLHsXw-brNYZcu-_ZTs391zX9dh568EJUTUZevMF626zka1_CuOirPByW0xVteY8pA5Wj3hcah8FtnX_cDPFsQ=w1705-h1291-no" class="center img-zoomable" alt="windows python3.9" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXjOlfhfiQNgWI02_rZb4Wb574Fu4Wur9o6OKhoyNMjexMuCOxm0CCZcVHN_2J3unY1gLHsXw-brNYZcu-_ZTs391zX9dh568EJUTUZevMF626zka1_CuOirPByW0xVteY8pA5Wj3hcah8FtnX_cDPFsQ=w1705-h1291-no" class="center img-zoomable lazyload" alt="windows python3.9"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">windows python3.9</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXjOlfhfiQNgWI02_rZb4Wb574Fu4Wur9o6OKhoyNMjexMuCOxm0CCZcVHN_2J3unY1gLHsXw-brNYZcu-_ZTs391zX9dh568EJUTUZevMF626zka1_CuOirPByW0xVteY8pA5Wj3hcah8FtnX_cDPFsQ=w1705-h1291-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h3 id="安裝-virtualenv-並進入虛擬環境" class="article-heading">安裝 virtualenv 並進入虛擬環境 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d-virtualenv-%e4%b8%a6%e9%80%b2%e5%85%a5%e8%99%9b%e6%93%ac%e7%92%b0%e5%a2%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; pip install virtualenv<br/></span></span></code></pre></div></div><p>要進入虛擬環境時需要執行 active 的腳本，在 Ubuntu 就很方便執行 <code>$ source venv/bin/activate</code>，但是 powershell 有權限問題，所以要先設定 。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; mkdir matplotlib_test<br/></span></span><span style="display:flex;"><span>&gt; cd matplotlib_test<br/></span></span><span style="display:flex;"><span>&gt; virtualenv --python python3.9 venv<br/></span></span><span style="display:flex;"><span>&gt; Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope <span style="color:#66d9ef">Process</span> -Force<br/></span></span><span style="display:flex;"><span>&gt; .\venv\Scripts\activate.ps1<br/></span></span><span style="display:flex;"><span>(venv)&gt; pip list<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV60iyL8ezSo7VKOvo5mleP9Ur5NEK2nNV2ABbdR9zMWJZGaaqMQYJLTaQNxPHcPQ56avYFMRh1-cZFBRqFOPDMJbhZ_lMI_UL4ZdddicANA6fAitgOUyzkxRt7ncqv9vVcZuKrkQuuXns2epiRY7NDvw=w624-h148-no" class="center img-zoomable" alt="pip list of a clear venv" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV60iyL8ezSo7VKOvo5mleP9Ur5NEK2nNV2ABbdR9zMWJZGaaqMQYJLTaQNxPHcPQ56avYFMRh1-cZFBRqFOPDMJbhZ_lMI_UL4ZdddicANA6fAitgOUyzkxRt7ncqv9vVcZuKrkQuuXns2epiRY7NDvw=w624-h148-no" class="center img-zoomable lazyload" alt="pip list of a clear venv"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">pip list of a clear venv</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV60iyL8ezSo7VKOvo5mleP9Ur5NEK2nNV2ABbdR9zMWJZGaaqMQYJLTaQNxPHcPQ56avYFMRh1-cZFBRqFOPDMJbhZ_lMI_UL4ZdddicANA6fAitgOUyzkxRt7ncqv9vVcZuKrkQuuXns2epiRY7NDvw=w624-h148-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h3 id="matplotlib-and-scienceplots" class="article-heading">Matplotlib and SciencePlots <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#matplotlib-and-scienceplots"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>圖表樣式主要靠 SciencePlots  來完成，所以我們只要專注使用 Matplotlib 來製作圖表即可。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>(venv)&gt; pip install matplotlib==3.4.2<br/></span></span><span style="display:flex;"><span>(venv)&gt; pip install SciencePlots==1.0.8<br/></span></span><span style="display:flex;"><span>(venv)&gt; pip list <span style="color:#75715e"># 詳細版本資訊參考用</span><br/></span></span><span style="display:flex;"><span>Package         Version<br/></span></span><span style="display:flex;"><span>--------------- -------<br/></span></span><span style="display:flex;"><span>cycler          0.10.0<br/></span></span><span style="display:flex;"><span>kiwisolver      1.3.1<br/></span></span><span style="display:flex;"><span>matplotlib      3.4.2<br/></span></span><span style="display:flex;"><span>numpy           1.21.1<br/></span></span><span style="display:flex;"><span>Pillow          8.3.1<br/></span></span><span style="display:flex;"><span>pip             21.2.3<br/></span></span><span style="display:flex;"><span>pyparsing       2.4.7<br/></span></span><span style="display:flex;"><span>python-dateutil 2.8.2<br/></span></span><span style="display:flex;"><span>SciencePlots    1.0.8<br/></span></span><span style="display:flex;"><span>setuptools      57.4.0<br/></span></span><span style="display:flex;"><span>six             1.16.0<br/></span></span><span style="display:flex;"><span>wheel           0.37.0<br/></span></span></code></pre></div></div><br/><br/><h1 id="畫圖技巧" class="article-heading">畫圖技巧 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%95%ab%e5%9c%96%e6%8a%80%e5%b7%a7"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>強烈建議先去看一下這篇 <br/><br/><a href="https://zhuanlan.zhihu.com/p/93423829" target="_blank" rel="noreferrer noopener">matplotlib：先搞明白plt. /ax./ fig再画</a>。我原先用 matplotlib 也是亂用，看過之後了解大概的區塊是哪個模組在控制。</p><p>下圖的各個部位的名稱可以大概記一下，這樣在搜尋時會比較方便。主要中心思想就是關於實際畫圖的都使用 <code>ax</code>，只有在建立跟輸出時才用 <code>plt</code>。下方會有範例。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV39YBiIYsdoJnTbBEfB23amAIXrpG65S-cq4ozucbJ13wlQNkKfsV7w0pWLeCnIDAYgVkj6tTpEv1tIPdm_v5S2Vv8n_Uvw1102twnZMG9OZhC2yxgNj6-c-hFpnRggyEL4nNPjpwzf5-fUcWH0ZUHBg=w385-h401-no" class="center img-zoomable" alt="Parts of a Figure" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV39YBiIYsdoJnTbBEfB23amAIXrpG65S-cq4ozucbJ13wlQNkKfsV7w0pWLeCnIDAYgVkj6tTpEv1tIPdm_v5S2Vv8n_Uvw1102twnZMG9OZhC2yxgNj6-c-hFpnRggyEL4nNPjpwzf5-fUcWH0ZUHBg=w385-h401-no" class="center img-zoomable lazyload" alt="Parts of a Figure"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Parts of a Figure</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV39YBiIYsdoJnTbBEfB23amAIXrpG65S-cq4ozucbJ13wlQNkKfsV7w0pWLeCnIDAYgVkj6tTpEv1tIPdm_v5S2Vv8n_Uvw1102twnZMG9OZhC2yxgNj6-c-hFpnRggyEL4nNPjpwzf5-fUcWH0ZUHBg=w385-h401-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure>  </p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLX_WJxX_h8KTZjCPicenrC56Y2v4B4Trd6ft1DHJDG_YxycOsar94WCx073O9GWS7wSZZKH0QSSEQrWRAosK3zz16F73MvbT3J0O6ERQB0U2dCbhSis7RlQdWDSG95_TQmYua9DBi3kdTFpw4DmqwtHSA=s800-no" class="center img-zoomable" alt="components of a Matplotlib figure" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLX_WJxX_h8KTZjCPicenrC56Y2v4B4Trd6ft1DHJDG_YxycOsar94WCx073O9GWS7wSZZKH0QSSEQrWRAosK3zz16F73MvbT3J0O6ERQB0U2dCbhSis7RlQdWDSG95_TQmYua9DBi3kdTFpw4DmqwtHSA=s800-no" class="center img-zoomable lazyload" alt="components of a Matplotlib figure"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">components of a Matplotlib figure</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLX_WJxX_h8KTZjCPicenrC56Y2v4B4Trd6ft1DHJDG_YxycOsar94WCx073O9GWS7wSZZKH0QSSEQrWRAosK3zz16F73MvbT3J0O6ERQB0U2dCbhSis7RlQdWDSG95_TQmYua9DBi3kdTFpw4DmqwtHSA=s800-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure>  </p><br/><br/><h1 id="實際範例" class="article-heading">實際範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%9a%9b%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>data.csv</code>:</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>n,A,B,C,D<br/></span></span><span style="display:flex;"><span>10,1,2,1,6<br/></span></span><span style="display:flex;"><span>100,3,3,6,6<br/></span></span><span style="display:flex;"><span>1000,2,9,1,6<br/></span></span><span style="display:flex;"><span>10000,3,7,7,6<br/></span></span><span style="display:flex;"><span>100000,3,10,8,6<br/></span></span><span style="display:flex;"><span>1000000,16,19,2,6<br/></span></span><span style="display:flex;"><span>10000000,125,86,41,6<br/></span></span></code></pre></div></div><ul><li><code>plot.py</code>:</li></ul><div style="border: 1px solid #888888;"></div><ul><li>程式碼解釋<br/><ul><li>[10], [11] 會有兩個 name 主要是因為讀取時的欄位名稱不能有特殊符號，所以在繪製時才綁定顯示名稱 [31]</li><li>[12] 某些資料要跳過但是檔案裡還是會有</li><li>[13] 哪些需要標出資料標籤的數值</li><li>[14] 哪些資料點需要特別用圓點標記</li><li>[37] <code>f&quot;{y:.1f}&quot;</code> 可設定資料標籤輸出格式，例如: 取到小數點第一位。<code>x-0.0*x, y-0.2*y</code> 後方有減去一個位移是用來避免線段與資料標籤重疊</li><li>[46] 一般論文中的圖表標題是用 Latex 語法 (caption) 來定義，所以生成時不需要，不過若是要拿來做簡報的話有標題會比較好。</li><li>[48] ~ [56] 設定 x、y 軸資訊</li><li>[61] 存成 pdf</li></ul></li><li>成果<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXIabK6jEA9LyeJs0waYEXbROoY0OIfFGN8i2JckUubn_eMd6YrGWZsLjEnhiH0_oym_7TYHVlbima_KBLsDxEQhmB_tYKyDcAI0pPFcQkJKsxVrcHxbMcuxaARAGxk9kaNiI3HA_nRXbia5RuxmjnJLQ=w1738-h1301-no" class="center img-zoomable" alt="折線圖" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXIabK6jEA9LyeJs0waYEXbROoY0OIfFGN8i2JckUubn_eMd6YrGWZsLjEnhiH0_oym_7TYHVlbima_KBLsDxEQhmB_tYKyDcAI0pPFcQkJKsxVrcHxbMcuxaARAGxk9kaNiI3HA_nRXbia5RuxmjnJLQ=w1738-h1301-no" class="center img-zoomable lazyload" alt="折線圖"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">折線圖</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXIabK6jEA9LyeJs0waYEXbROoY0OIfFGN8i2JckUubn_eMd6YrGWZsLjEnhiH0_oym_7TYHVlbima_KBLsDxEQhmB_tYKyDcAI0pPFcQkJKsxVrcHxbMcuxaARAGxk9kaNiI3HA_nRXbia5RuxmjnJLQ=w1738-h1301-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></li></ul><p>[2021.08.13] 修正 linestyle</p><br/><br/><h1 id="其他" class="article-heading">其他 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>用 Matplotlib 在一個 Figure 中塞入多個 Axes 是可以的，不過我目前遇到的都是用 Latex 的 minipage 來完成，這樣就可以有各自的 label 可以分開 ref。如下，不過這就有點離題了。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#66d9ef">\begin</span>{table}[tbh!]<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\centering</span><br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\begin</span>{minipage}[t]{.47<span style="color:#66d9ef">\linewidth</span>}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\includegraphics</span><span style="color:#a6e22e">[width=\linewidth]</span>{figures/A.pdf}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\captionof</span>{figure}{AAA}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\label</span>{fig:A}<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\end</span>{minipage}<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\qquad</span><br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\begin</span>{minipage}[t]{.47<span style="color:#66d9ef">\linewidth</span>}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\includegraphics</span><span style="color:#a6e22e">[width=\linewidth]</span>{figures/B.pdf}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\captionof</span>{figure}{BBB}<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">\label</span>{fig:B}<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">\end</span>{minipage}<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">\end</span>{table}<br/></span></span></code></pre></div></div><br/><br/><h1 id="錯誤排除" class="article-heading">錯誤排除 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8c%af%e8%aa%a4%e6%8e%92%e9%99%a4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="filenotfounderror-missing-font-metrics-file-rsfs10" class="article-heading"><code>FileNotFoundError: missing font metrics file: rsfs10</code> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#filenotfounderror-missing-font-metrics-file-rsfs10"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Solution  </p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; miktex-maketfm.exe rsfs10<br/></span></span></code></pre></div></div><br/><br/><h2 id="permissionerror-errno-13-permission-denied-resultpdf" class="article-heading"><code>PermissionError: [Errno 13] Permission denied: 'result.pdf'</code> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#permissionerror-errno-13-permission-denied-resultpdf"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>輸出覆寫 pdf 時有視窗開著該檔案，把 result.pdf 關掉即可。</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://tecadmin.net/how-to-install-python-3-9-on-ubuntu-18-04/" target="_blank" rel="noreferrer noopener">https://tecadmin.net/how-to-install-python-3-9-on-ubuntu-18-04/</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://stackoverflow.com/a/59815372" target="_blank" rel="noreferrer noopener">virtualenv in PowerShell?</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://github.com/garrettj403/SciencePlots" target="_blank" rel="noreferrer noopener">https://github.com/garrettj403/SciencePlots</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://matplotlib.org/1.5.1/faq/usage_faq.html#parts-of-a-figure" target="_blank" rel="noreferrer noopener">https://matplotlib.org/1.5.1/faq/usage_faq.html#parts-of-a-figure</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://matplotlib.org/stable/tutorials/introductory/usage.html#parts-of-a-figure" target="_blank" rel="noreferrer noopener">https://matplotlib.org/stable/tutorials/introductory/usage.html#parts-of-a-figure</a>&#160; </p></li><li id="fn:6"><p><br/><a href="https://stackoverflow.com/a/65965075" target="_blank" rel="noreferrer noopener">https://stackoverflow.com/a/65965075</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Use VSCode to Write LaTeX Paper</title><link>https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/</link><pubDate>Wed, 11 Aug 2021 13:50:05 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/</guid><description><![CDATA[
           <br/><p>記錄一下如何用 VSCode 寫 paper</p>
          
            <p><a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/"><img src="https://images.unsplash.com/photo-1532153975070-2e9ab71f1b14?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>記錄一下如何用 VSCode 寫 paper</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>為了測完整的安裝流程，我用 virtualbox 裝了一個乾淨的 windows 10。記錄到可以編譯 latex 的最簡化流程就好，所以本篇的終端機使用的是 powershell 而不是 WSL。在 Ubuntu 理論上也可以套用這個方法，不過安裝的套件就不同，例如: MikTex 就要換成 Tex Live  。</p><p>本篇範例使用 ACM 釋出的模板  ，因此 IEEE 或是學校畢業論文的模板可能會有所不同。</p><p>因為圖太多了，所以使用 &ldquo;示意圖&rdquo; 按鈕來隱藏圖片，想參考時打開即可。</p><br/><br/><h2 id="latex-cheat-sheet" class="article-heading">LaTeX Cheat sheet <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#latex-cheat-sheet"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><br/><br/><a href="https://www.andy-roberts.net/writing/latex/formatting" target="_blank" rel="noreferrer noopener">Getting to Grips with LaTeX</a></li><li><br/><br/><a href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols" target="_blank" rel="noreferrer noopener">List of LaTeX mathematical symbols</a></li><li><br/><br/><a href="https://www.tablesgenerator.com/latex_tables#" target="_blank" rel="noreferrer noopener">Latex Tables Generator</a></li></ul><br/><br/><h1 id="安裝套件" class="article-heading">安裝套件 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%a5%97%e4%bb%b6"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>安裝順序應該沒關係，本篇測試順序是 VSCode → MikTex → Perl。</p><br/><br/><h2 id="perl" class="article-heading">Perl <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#perl"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這裡直接安裝推薦的版本: <br/><br/><a href="https://strawberryperl.com/" target="_blank" rel="noreferrer noopener">Strawberry Perl</a>，選 64-bit 版本。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXs_PdqsqpM2mkMvhICdIe37zPtDQsvKfVtuWNfwjcUk2SnzbBnOkSrtPApkKZjIJonrr2POWGVmwTJLCj-BbRQA5z_ZakRrts1mL_9yUm4woKKtn6sO9ivljF58cjZaaZEaOmZ8-lhTREJW6uBRxV4BQ=w1600-h1200-no" class="center img-zoomable" alt="Strawberry Perl" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXs_PdqsqpM2mkMvhICdIe37zPtDQsvKfVtuWNfwjcUk2SnzbBnOkSrtPApkKZjIJonrr2POWGVmwTJLCj-BbRQA5z_ZakRrts1mL_9yUm4woKKtn6sO9ivljF58cjZaaZEaOmZ8-lhTREJW6uBRxV4BQ=w1600-h1200-no" class="center img-zoomable lazyload" alt="Strawberry Perl"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Strawberry Perl</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXs_PdqsqpM2mkMvhICdIe37zPtDQsvKfVtuWNfwjcUk2SnzbBnOkSrtPApkKZjIJonrr2POWGVmwTJLCj-BbRQA5z_ZakRrts1mL_9yUm4woKKtn6sO9ivljF58cjZaaZEaOmZ8-lhTREJW6uBRxV4BQ=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h2 id="miktex" class="article-heading">MikTex <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#miktex"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這個是 Latex 編譯器包，安裝網址: <br/><br/><a href="https://miktex.org/download" target="_blank" rel="noreferrer noopener">https://miktex.org/download</a>。</p><p>安裝完後會跳出提醒來安裝所有更新。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUyFhHoqLOl0ud9GfH2YxuUAQGRPdyNVWIaO4NB9AhaxmKnLUdBhxyiW7750RNHiqIlYTj1IUAzfDFqPOy_XDyvvF3Lb4XW8hv5JOo2tm4L-UI6Q0tvlyaUe_G_SIobWkL8FLf_VFUHu70ZCP1kQE8aBQ=w1600-h1200-no" class="center img-zoomable" alt="安裝所有更新" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUyFhHoqLOl0ud9GfH2YxuUAQGRPdyNVWIaO4NB9AhaxmKnLUdBhxyiW7750RNHiqIlYTj1IUAzfDFqPOy_XDyvvF3Lb4XW8hv5JOo2tm4L-UI6Q0tvlyaUe_G_SIobWkL8FLf_VFUHu70ZCP1kQE8aBQ=w1600-h1200-no" class="center img-zoomable lazyload" alt="安裝所有更新"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">安裝所有更新</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUyFhHoqLOl0ud9GfH2YxuUAQGRPdyNVWIaO4NB9AhaxmKnLUdBhxyiW7750RNHiqIlYTj1IUAzfDFqPOy_XDyvvF3Lb4XW8hv5JOo2tm4L-UI6Q0tvlyaUe_G_SIobWkL8FLf_VFUHu70ZCP1kQE8aBQ=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><p>打開 powershell 輸入 <code>latexmk.exe</code> 確認安裝正確。可能會先跳出一個視窗要安裝新套件，點選 install 即可。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV2gfq28ff0fnfv74PB_m6DHG-hl9a4wgEfxOdrQ2idrQoNu52LWlBXMjtmngSETOVxsKiHrFO4YI0npZ5UMw_FRvyMkzYdd3AIIa3oBGazrXP1hJqwL2PYAGh4tOV9SS-iUhMq5zZZu-N8ofNGYn0W6w=w1600-h1200-no" class="center img-zoomable" alt="powershell" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV2gfq28ff0fnfv74PB_m6DHG-hl9a4wgEfxOdrQ2idrQoNu52LWlBXMjtmngSETOVxsKiHrFO4YI0npZ5UMw_FRvyMkzYdd3AIIa3oBGazrXP1hJqwL2PYAGh4tOV9SS-iUhMq5zZZu-N8ofNGYn0W6w=w1600-h1200-no" class="center img-zoomable lazyload" alt="powershell"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">powershell</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV2gfq28ff0fnfv74PB_m6DHG-hl9a4wgEfxOdrQ2idrQoNu52LWlBXMjtmngSETOVxsKiHrFO4YI0npZ5UMw_FRvyMkzYdd3AIIa3oBGazrXP1hJqwL2PYAGh4tOV9SS-iUhMq5zZZu-N8ofNGYn0W6w=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h2 id="vscode" class="article-heading">VSCode <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vscode"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>建議安裝時打開 &ldquo;以 Code 開啟&rdquo; 的功能。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXlBw7vOU2XUjDrJR7KfMSu416nevszajoo2n9NAHIKO58wgb7xrkPdbewM3lvoXGzCZTZXAx7cGxIdlEDYWqXAv4TcdkvhjOCFKXt-aA8jpgvXWcovW56py_GJD2jvhNkNCV4KcZEAJxBOeRPdmdwmqg=w1600-h1200-no" class="center img-zoomable" alt="以 Code 開啟" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXlBw7vOU2XUjDrJR7KfMSu416nevszajoo2n9NAHIKO58wgb7xrkPdbewM3lvoXGzCZTZXAx7cGxIdlEDYWqXAv4TcdkvhjOCFKXt-aA8jpgvXWcovW56py_GJD2jvhNkNCV4KcZEAJxBOeRPdmdwmqg=w1600-h1200-no" class="center img-zoomable lazyload" alt="以 Code 開啟"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">以 Code 開啟</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXlBw7vOU2XUjDrJR7KfMSu416nevszajoo2n9NAHIKO58wgb7xrkPdbewM3lvoXGzCZTZXAx7cGxIdlEDYWqXAv4TcdkvhjOCFKXt-aA8jpgvXWcovW56py_GJD2jvhNkNCV4KcZEAJxBOeRPdmdwmqg=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h3 id="外掛" class="article-heading">外掛 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%96%e6%8e%9b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>理論上必要的只有 latex-workshop，其他的選用。</p><ul><li>james-yu.latex-workshop</li><li>mhutchie.git-graph</li><li>coenraads.bracket-pair-colorizer</li><li>valentjn.vscode-ltex: 英文文法檢查，需要安裝 Java</li><li>vscode-icons-team.vscode-icons</li></ul> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLUhazz8sW9uiCIu6fkCbTaBQXRJu2-a2Il_r6qWN_EjoWCqvqxHrP-DY_e7JQ8GITghx60BCYwzQ5eamEfv2ni1zbVps5rT2CV_y9CkRgEAuPwJCrZFv4j9g0VC7PO3IiAmeCo-gQyuNX04jEhRX76kIg=w1600-h1200-no" class="center img-zoomable" alt="vscode 外掛" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLUhazz8sW9uiCIu6fkCbTaBQXRJu2-a2Il_r6qWN_EjoWCqvqxHrP-DY_e7JQ8GITghx60BCYwzQ5eamEfv2ni1zbVps5rT2CV_y9CkRgEAuPwJCrZFv4j9g0VC7PO3IiAmeCo-gQyuNX04jEhRX76kIg=w1600-h1200-no" class="center img-zoomable lazyload" alt="vscode 外掛"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">vscode 外掛</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLUhazz8sW9uiCIu6fkCbTaBQXRJu2-a2Il_r6qWN_EjoWCqvqxHrP-DY_e7JQ8GITghx60BCYwzQ5eamEfv2ni1zbVps5rT2CV_y9CkRgEAuPwJCrZFv4j9g0VC7PO3IiAmeCo-gQyuNX04jEhRX76kIg=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h3 id="針對-latex-文字顯示設定" class="article-heading">針對 latex 文字顯示設定 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%9d%e5%b0%8d-latex-%e6%96%87%e5%ad%97%e9%a1%af%e7%a4%ba%e8%a8%ad%e5%ae%9a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>使用 <code>Ctrl-Shift-P</code>，輸入 setting，打開 json 檔。可加入如下設定，這樣只會針對 latex 設定，而不會影響程式編輯。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;[latex]&#34;</span>: {<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.fontSize&#34;</span>: <span style="color:#ae81ff">18</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.fontFamily&#34;</span>: <span style="color:#e6db74">&#34;&#39;Georgia&#39;&#34;</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.lineNumbers&#34;</span>: <span style="color:#e6db74">&#34;on&#34;</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.wordWrap&#34;</span>: <span style="color:#e6db74">&#34;bounded&#34;</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.letterSpacing&#34;</span>: <span style="color:#ae81ff">0.1</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.lineHeight&#34;</span>: <span style="color:#ae81ff">38</span>,<br/></span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;editor.formatOnSave&#34;</span>: <span style="color:#66d9ef">false</span>,<br/></span></span><span style="display:flex;"><span>    },<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVyoAzzgE5xs4JLPpuXtcx8_CPKlIfKZmtu-an-S94W5TUdBtUJ_A904RSGZEK0G4JZMC9gD4C9GOO4tiZnXs-lU3qfuwiAcE303UhtyN7cunSkswmlUwiPsSLkrvnt1DribaWwWPFAFX_U-kP-I1sy8Q=w1600-h1200-no" class="center img-zoomable" alt="setting.json" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVyoAzzgE5xs4JLPpuXtcx8_CPKlIfKZmtu-an-S94W5TUdBtUJ_A904RSGZEK0G4JZMC9gD4C9GOO4tiZnXs-lU3qfuwiAcE303UhtyN7cunSkswmlUwiPsSLkrvnt1DribaWwWPFAFX_U-kP-I1sy8Q=w1600-h1200-no" class="center img-zoomable lazyload" alt="setting.json"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">setting.json</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVyoAzzgE5xs4JLPpuXtcx8_CPKlIfKZmtu-an-S94W5TUdBtUJ_A904RSGZEK0G4JZMC9gD4C9GOO4tiZnXs-lU3qfuwiAcE303UhtyN7cunSkswmlUwiPsSLkrvnt1DribaWwWPFAFX_U-kP-I1sy8Q=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLV1YqPWPVOaUPtlh4ZeC4j4SrbcJKeRRDDVnk9MT4627oJVYfFIxPVpmICFv8-EQg1lyCv76dN0cIA8HtSdbmyp6rgTQ6ESejTwpxXoiJSnY9oUqo0mwo43U-dS6U_quVyzinCgdVcj7yY7suNaXAL5HA=w1600-h1200-no" class="center img-zoomable" alt="latex setting" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLV1YqPWPVOaUPtlh4ZeC4j4SrbcJKeRRDDVnk9MT4627oJVYfFIxPVpmICFv8-EQg1lyCv76dN0cIA8HtSdbmyp6rgTQ6ESejTwpxXoiJSnY9oUqo0mwo43U-dS6U_quVyzinCgdVcj7yY7suNaXAL5HA=w1600-h1200-no" class="center img-zoomable lazyload" alt="latex setting"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">latex setting</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLV1YqPWPVOaUPtlh4ZeC4j4SrbcJKeRRDDVnk9MT4627oJVYfFIxPVpmICFv8-EQg1lyCv76dN0cIA8HtSdbmyp6rgTQ6ESejTwpxXoiJSnY9oUqo0mwo43U-dS6U_quVyzinCgdVcj7yY7suNaXAL5HA=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><br/><br/><br/><h1 id="範例" class="article-heading">範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這裡直接使用 git 來拉範例 (使用 ACM 模板)，因此會需要用到 git，可直接安裝 <br/><br/><a href="https://gitforwindows.org/" target="_blank" rel="noreferrer noopener">git for windows</a>，或直接上 github 下載也可以。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVzP-_HMuTJhu1eGgAI1OJVBik9t1idYqKj9GdBjiBIuRgPaVohradkWO3RzPDmIpTVodYZ6_S2T9OJ64XYorCieaPqS3DCEmfw6LZkEPBEEbLyD3KRIWd_qeQmLjVYkMVCcbTqZakB5v29B8qR3ZMaCQ=w1600-h1200-no" class="center img-zoomable" alt="git for windows" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVzP-_HMuTJhu1eGgAI1OJVBik9t1idYqKj9GdBjiBIuRgPaVohradkWO3RzPDmIpTVodYZ6_S2T9OJ64XYorCieaPqS3DCEmfw6LZkEPBEEbLyD3KRIWd_qeQmLjVYkMVCcbTqZakB5v29B8qR3ZMaCQ=w1600-h1200-no" class="center img-zoomable lazyload" alt="git for windows"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">git for windows</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVzP-_HMuTJhu1eGgAI1OJVBik9t1idYqKj9GdBjiBIuRgPaVohradkWO3RzPDmIpTVodYZ6_S2T9OJ64XYorCieaPqS3DCEmfw6LZkEPBEEbLyD3KRIWd_qeQmLjVYkMVCcbTqZakB5v29B8qR3ZMaCQ=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><p>直接在 powershell 執行下面指令 (前方 <code>&gt;</code> 不需要複製)，就會看到 vscode 打開範例資料夾。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; git clone https<span style="color:#960050;background-color:#1e0010">:</span>//github.com/aben20807/paper-template.git<br/></span></span><span style="display:flex;"><span>&gt; code .\paper-template\<br/></span></span></code></pre></div></div><p>點開 paper.tex 檔案後，左方會出現 TEX 的圖示，點開後執行編譯的 recipe (最長那個)。這時候會跳出安裝套件的視窗。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLWp9ZNMNj-yePUCWIj1AvQquVNlK6QYqXWTje1vL6U7JN8fC4OuqhFdhyIIgDlD4ydMI-x_Gvu2hqWEE49NDhQgIbmJoLqsM8VAkiz5Q5eaBCBCMSU-z1EX6KiJfcX-WomSZokxHHJNZhgnZrSUAE9kSg=w1600-h1200-no" class="center img-zoomable" alt="編譯" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLWp9ZNMNj-yePUCWIj1AvQquVNlK6QYqXWTje1vL6U7JN8fC4OuqhFdhyIIgDlD4ydMI-x_Gvu2hqWEE49NDhQgIbmJoLqsM8VAkiz5Q5eaBCBCMSU-z1EX6KiJfcX-WomSZokxHHJNZhgnZrSUAE9kSg=w1600-h1200-no" class="center img-zoomable lazyload" alt="編譯"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">編譯</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLWp9ZNMNj-yePUCWIj1AvQquVNlK6QYqXWTje1vL6U7JN8fC4OuqhFdhyIIgDlD4ydMI-x_Gvu2hqWEE49NDhQgIbmJoLqsM8VAkiz5Q5eaBCBCMSU-z1EX6KiJfcX-WomSZokxHHJNZhgnZrSUAE9kSg=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><p>如果不想要一個一個點的話可以從開始選單中找 &ldquo;MiKTex Console&rdquo;，在 setting 中把自動安裝套件改成 Always。</p> <br/><br/><details><br/>  <summary><span>示意圖 </span></summary><br/>  <p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLXm4NBSLxHqiFM2ISIUKqJ-p8IFzCb9wQRMBwxU1VCrCUqRTNFpc8zwqWGonri1KFM0uQY7WNGgBMVwolb4dYcpMWBbFiSrjtOmaAKbM0ImvtpnmcpOoW8515RVAH9nRgZVWySfY0eBe_pzi16mM6mh0w=w1600-h1200-no" class="center img-zoomable" alt="MiKTex Console" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLXm4NBSLxHqiFM2ISIUKqJ-p8IFzCb9wQRMBwxU1VCrCUqRTNFpc8zwqWGonri1KFM0uQY7WNGgBMVwolb4dYcpMWBbFiSrjtOmaAKbM0ImvtpnmcpOoW8515RVAH9nRgZVWySfY0eBe_pzi16mM6mh0w=w1600-h1200-no" class="center img-zoomable lazyload" alt="MiKTex Console"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">MiKTex Console</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLXm4NBSLxHqiFM2ISIUKqJ-p8IFzCb9wQRMBwxU1VCrCUqRTNFpc8zwqWGonri1KFM0uQY7WNGgBMVwolb4dYcpMWBbFiSrjtOmaAKbM0ImvtpnmcpOoW8515RVAH9nRgZVWySfY0eBe_pzi16mM6mh0w=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/></details><p>最後就成功把範例編譯完成</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVawO6vCeLTqrKvREekjNGd0G-Ogq9g4OBBtJlNmtsNcA_C75WBFS5qPZgrVK97JjQO05GU9HPMIrLMQpINWsLKDDczZayHama0igM0yuOJqkbp7GXE9Lz3IihhuCRfivOfhvtI6jpUfcXWmkcz60BJLg=w1600-h1200-no" class="center img-zoomable" alt="完成" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVawO6vCeLTqrKvREekjNGd0G-Ogq9g4OBBtJlNmtsNcA_C75WBFS5qPZgrVK97JjQO05GU9HPMIrLMQpINWsLKDDczZayHama0igM0yuOJqkbp7GXE9Lz3IihhuCRfivOfhvtI6jpUfcXWmkcz60BJLg=w1600-h1200-no" class="center img-zoomable lazyload" alt="完成"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">完成</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVawO6vCeLTqrKvREekjNGd0G-Ogq9g4OBBtJlNmtsNcA_C75WBFS5qPZgrVK97JjQO05GU9HPMIrLMQpINWsLKDDczZayHama0igM0yuOJqkbp7GXE9Lz3IihhuCRfivOfhvtI6jpUfcXWmkcz60BJLg=w1600-h1200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="錯誤排除" class="article-heading">錯誤排除 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8c%af%e8%aa%a4%e6%8e%92%e9%99%a4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>有時候 pdf viewer 在編譯後不會自動更新，這時候要先關閉那個分頁，再重新打開即可。</li><li>編譯失敗時會出現打開錯誤訊息的視窗，或是可以直接開啟 LaTeX Compiler 的 Output，如上圖 (完成) 下方視窗所示。</li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://linuxconfig.org/how-to-install-latex-on-ubuntu-18-04-bionic-beaver-linux" target="_blank" rel="noreferrer noopener">How to install LaTex on Ubuntu 18.04 Bionic Beaver Linux</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://www.acm.org/publications/taps/word-template-workflow#h-2.-the-workflow-and-templates" target="_blank" rel="noreferrer noopener">ACM Primary Article Templates AND Publication Workflow</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>使用 FileLocator 在資料夾中搜尋文件內容</title><link>https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/</link><pubDate>Fri, 06 Aug 2021 15:20:27 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/</guid><description><![CDATA[
           <br/><p>知識實在不容易累積</p>
          
            <p><a href="https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>知識實在不容易累積</p><p>這其實是我個人覺得，不知道其他人感覺?</p><p>為何不容易累積?</p><p>最主要原因就是沒有一個好的管理系統來整理這些知識，而時間一久自然就逐漸忘記，自已最近就很常遇到明明就看過且解決過，但是臨時遇到相同問題時無法找到當時解決的方法，只好再重新來一遍，來來回回已經耗費許多時間。</p><p>因此我現在遇到問題時，在解決過程我就盡量把所有步驟都寫起來，但是不是很完整的整理，就僅是將使用到的參考網址、指令流程複製下來放到文件或報告投影片 (利用隱藏投影片)，這樣做法一來快速方便，二來與報告放在一起可以做最大化的連結效果。</p><p>然而，時間一久就會發現要在這些報告中搜尋內容不太容易，因為這些檔案大多不是純文字檔，例如: word、ppt，最暴力的方法就一個一個檔案開起來然後用 Ctrl-F 輸入關鍵字搜尋，真的不太方便。如果是純文字檔 (txt, md) 可以用 <code>ag</code> (silversearcher-ag  ) 或是直接用 vscode 開啟資料夾來搜尋。</p><p>也是因為這樣我某些時段就會想把這些報告改成用 markdown，但是做投影片又離不開 ppt、google slide，所以後來才找到這個可以直接搜尋資料夾內所有檔案的方法。我所使用的是 FileLocator Lite  (雖然有 pro 的試用期，但是我選 Lite，不過不確定是否被迫強制試用，希望不要 QuQ)。</p><p>這裡示範一下在資料夾中找出有提及 &ldquo;memcheck&rdquo; 的文件，可以限制文件的種類，但注意要用分號 <code>;</code> 隔開，目標資料夾也同理。比較可惜是搜尋字串不能用正規表達式。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" class="center img-zoomable" alt="搜尋範例" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" class="center img-zoomable lazyload" alt="搜尋範例"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">搜尋範例</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>找出檔案後，我還是點開然後用 Ctrl-F 搜尋，不過比原先的 &ldquo;遍歷搜尋法&rdquo; 快多了。</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://github.com/ggreer/the_silver_searcher" target="_blank" rel="noreferrer noopener">https://github.com/ggreer/the_silver_searcher</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://www.mythicsoft.com/filelocatorlite/download/" target="_blank" rel="noreferrer noopener">https://www.mythicsoft.com/filelocatorlite/download/</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Build a Simple Compiler Ep3</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/</link><pubDate>Thu, 22 Jul 2021 20:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/</guid><description><![CDATA[
           <br/><p>指令生成 (Codegen)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/"><img src="https://images.unsplash.com/photo-1534631615537-d8f2af94b6ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>指令生成 (Codegen)</p><ul><li>Series: <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">[ep0]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">[ep1]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">[ep2]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">[ep3]</a></li><li>Source code: <br/><br/><a href="https://github.com/aben20807/learn_compiler" target="_blank" rel="noreferrer noopener">aben20807/learn_compiler</a></li></ul><br/><br/><h1 id="指令生成-codegen" class="article-heading">指令生成 (Codegen) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%87%e4%bb%a4%e7%94%9f%e6%88%90-codegen"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><del>由於是簡化版的編譯器</del>，我們不產生中間的表達式 (Intermediate representation, IR)  ，也不會有 Abstract syntax tree (AST)  ，而是直接利用上一篇的螢幕輸出改成對應的 Java bytecode 指令  。有興趣的可以去參考完整列表   看有支援什麼神奇功能。會寫 Java 的也可以參考如何使用反組譯的方式   找出對應的 bytecode 來觀察行為。</p><br/><br/><h1 id="jasmin" class="article-heading">Jasmin <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#jasmin"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Jasmin   為一 JVM 的組譯器，其會將可讀指令形式的 bytecode 轉換成 .class 的形式 (可執行的 bytecode)。</p><br/><br/><h2 id="j-檔格式" class="article-heading"><code>.j</code> 檔格式 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#j-%e6%aa%94%e6%a0%bc%e5%bc%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>開頭及結尾如下，只需要在一開始開檔時就寫入開頭，等到全部指令產生完畢，離開前再寫入結尾即可。</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#a6e22e">.source</span> <span style="color:#66d9ef">bytecode.j</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.class</span> <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">Main</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.super</span> <span style="color:#66d9ef">java</span><span style="color:#960050;background-color:#1e0010">/</span><span style="color:#66d9ef">lang</span><span style="color:#960050;background-color:#1e0010">/</span><span style="color:#66d9ef">Object</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.method</span> <span style="color:#66d9ef">public</span> <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">main</span>([<span style="color:#66d9ef">Ljava</span><span style="color:#960050;background-color:#1e0010">/</span><span style="color:#66d9ef">lang</span><span style="color:#960050;background-color:#1e0010">/</span><span style="color:#66d9ef">String</span><span style="color:#75715e">;)V<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">.limit</span> <span style="color:#66d9ef">stack</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.limit</span> <span style="color:#66d9ef">locals</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span>    <br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">; generated instructions<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<br/></span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">return</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.end</span> <span style="color:#66d9ef">method</span><br/></span></span></code></pre></div></div><br/><br/><h1 id="完整程式碼" class="article-heading">完整程式碼 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>仔細看的話就會發現跟 ep2 的程式碼幾乎差不多，只有加了寫檔把對應操作的指令寫入 bytecode.j。</p><br/><br/>  <div class="alert error-msg"><br/>    <i class="fa fa-times-circle"></i><br/>    下方程式碼的 symbol table 為求簡單所以使用一維陣列實作，僅適用於本範例，容易造成記憶體錯誤且無法套用至多層級的 scope，所以請勿學習。<br/>  </div><br/><br/><ul><li><code>mycompiler.y</code>:</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">/*	Definition section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">//Extern variables that communicate with lex<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">#include</span> <span style="color:#75715e">&#34;common.h&#34; </span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">// #define YYDEBUG 1<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">// int yydebug = 1;<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">int</span> yylineno;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">yylex</span>();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> FILE <span style="color:#f92672">*</span>yyin;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">yyerror</span> (<span style="color:#66d9ef">char</span> <span style="color:#66d9ef">const</span> <span style="color:#f92672">*</span>s)<br/></span></span><span style="display:flex;"><span>    {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;error:%d: %s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, yylineno, s);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">#define codegen(...) \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">        do { \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">            for (int i = 0; i &lt; indent_cnt; i++) { \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">                fprintf(fout, &#34;\t&#34;); \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">            } \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">            fprintf(fout, __VA_ARGS__); \<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">        } while (0)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Symbol table function */</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">create_symbol</span>(<span style="color:#75715e">/* ... */</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">insert_symbol</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">lookup_symbol</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">dump_symbol</span>();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">get_op_name</span>(op_t op) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">switch</span> (op) {<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_ADD:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;ADD&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_SUB:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;SUB&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_MUL:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;MUL&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_DIV:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;DIV&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">default</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;unknown&#34;</span>;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">get_op_instruction</span>(op_t op) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">switch</span> (op) {<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_ADD:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;iadd&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_SUB:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;isub&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_MUL:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;imul&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_DIV:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;idiv&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">default</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;unknown&#34;</span>;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Global variables */</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> example_symbol_cnt <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">#define MAX_SYMBOL_NUM 10<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>example_symbol[MAX_SYMBOL_NUM] <span style="color:#f92672">=</span> {};<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> indent_cnt <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; <span style="color:#75715e">// control the number of ident in bytecode<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    FILE<span style="color:#f92672">*</span> fout <span style="color:#f92672">=</span> NULL;<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>error<span style="color:#f92672">-</span>verbose<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Use variable or self-defined structure to represent<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"> * nonterminal and token type<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"> */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span><span style="color:#66d9ef">union</span> {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> val;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>id_name;<br/></span></span><span style="display:flex;"><span>    op_t op;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Token without return */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token DECL PRINT NEWLINE<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Token with return, which need to sepcify type */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token <span style="color:#f92672">&lt;</span>val<span style="color:#f92672">&gt;</span> NUMLIT<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token <span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span> IDENT<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Nonterminal with return, which need to sepcify type */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>type <span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span> AddOp MulOp<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Yacc will start at this nonterminal */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>start Program<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Grammar section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%%</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Program<br/></span></span><span style="display:flex;"><span>    : StatementList<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>StatementList<br/></span></span><span style="display:flex;"><span>    : Statement StatementList<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span><br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Statement<br/></span></span><span style="display:flex;"><span>    : DeclStmt<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> PrintStmt<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>DeclStmt<br/></span></span><span style="display:flex;"><span>    : DECL IDENT <span style="color:#e6db74">&#39;=&#39;</span> Expression NEWLINE {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">int</span> ref <span style="color:#f92672">=</span> insert_symbol(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;IDENT %s, ref: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>, ref);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;STORE</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        free(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;istore %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, ref);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>PrintStmt<br/></span></span><span style="display:flex;"><span>    : PRINT Expression NEWLINE {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;PRINT</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;getstatic java/lang/System/out Ljava/io/PrintStream;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;swap</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;invokevirtual java/io/PrintStream/print(I)V</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Expression<br/></span></span><span style="display:flex;"><span>    : AddExpr<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>AddExpr<br/></span></span><span style="display:flex;"><span>    : AddExpr AddOp MulExpr {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_name(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_instruction(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> MulExpr<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>AddOp<br/></span></span><span style="display:flex;"><span>    : <span style="color:#e6db74">&#39;+&#39;</span>  {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_ADD;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;-&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_SUB;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>MulExpr<br/></span></span><span style="display:flex;"><span>    : MulExpr MulOp Operand {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_name(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_instruction(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> Operand<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>MulOp<br/></span></span><span style="display:flex;"><span>    : <span style="color:#e6db74">&#39;*&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_MUL;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;/&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_DIV;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Operand<br/></span></span><span style="display:flex;"><span>    : NUMLIT {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;NUMLIT %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>val<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;ldc %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>val<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> IDENT {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">int</span> ref <span style="color:#f92672">=</span> lookup_symbol(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;IDENT %s, ref: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>, ref);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;LOAD</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        free(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>        codegen(<span style="color:#e6db74">&#34;iload %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, ref);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;(&#39;</span> Expression <span style="color:#e6db74">&#39;)&#39;</span><br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%%</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* C code section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> main(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[])<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (argc <span style="color:#f92672">==</span> <span style="color:#ae81ff">2</span>) {<br/></span></span><span style="display:flex;"><span>        yyin <span style="color:#f92672">=</span> fopen(argv[<span style="color:#ae81ff">1</span>], <span style="color:#e6db74">&#34;r&#34;</span>);<br/></span></span><span style="display:flex;"><span>    } <span style="color:#66d9ef">else</span> {<br/></span></span><span style="display:flex;"><span>        yyin <span style="color:#f92672">=</span> stdin;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Codegen output init */</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>bytecode_filename <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;bytecode.j&#34;</span>;<br/></span></span><span style="display:flex;"><span>    fout <span style="color:#f92672">=</span> fopen(bytecode_filename, <span style="color:#e6db74">&#34;w&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.source bytecode.j</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.class public Main</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.super java/lang/Object</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.method public static main([Ljava/lang/String;)V</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.limit stack 10</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.limit locals 10</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    indent_cnt<span style="color:#f92672">++</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    create_symbol();<br/></span></span><span style="display:flex;"><span>    yyparse();<br/></span></span><span style="display:flex;"><span>    dump_symbol();<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Codegen end */</span><br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;return</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    indent_cnt<span style="color:#f92672">--</span>;<br/></span></span><span style="display:flex;"><span>    codegen(<span style="color:#e6db74">&#34;.end method</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    fclose(fout);<br/></span></span><span style="display:flex;"><span>    fclose(yyin);<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;Total lines: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, yylineno);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> create_symbol()<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Create symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">// do nothing...<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> insert_symbol(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name)<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Insert {%s} into symbol table; assign it as ref {%d}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <br/></span></span><span style="display:flex;"><span>        id_name, example_symbol_cnt);<br/></span></span><span style="display:flex;"><span>    example_symbol[example_symbol_cnt] <span style="color:#f92672">=</span> strdup(id_name);<br/></span></span><span style="display:flex;"><span>    example_symbol_cnt<span style="color:#f92672">++</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> example_symbol_cnt <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> lookup_symbol(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name)<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Lookup in symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> example_symbol_cnt; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (strcmp(id_name, example_symbol[i]) <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) {<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span> i;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;{%s} not found in symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> dump_symbol()<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Dump symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> example_symbol_cnt; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>        free(example_symbol[i]);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h1 id="測試範例" class="article-heading">測試範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>input/in01.lc</code>:</li></ul><pre tabindex="0"><code>decl x = 1 + 4<br/>decl y = 2<br/>decl num = x + y * (3 + 5)<br/>print num<br/></code></pre><ul><li>Result (其他檔案，如 Makefile 請參考 Source code):</li></ul><pre tabindex="0"><code>$ make<br/>$ ./mycompiler &lt; input/in01.lc<br/>$ java -jar jasmin.jar -g bytecode.j<br/>Generated: Main.class<br/>$ java Main<br/>21<br/></code></pre><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Intermediate_representation" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Intermediate_representation</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Abstract_syntax_tree" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Abstract_syntax_tree</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://en.wikipedia.org/wiki/Java_bytecode" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Java_bytecode</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://en.wikipedia.org/wiki/Java_bytecode_instruction_listings" target="_blank" rel="noreferrer noopener">Java bytecode instruction listings</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://github.com/aben20807/blog-post/issues/105" target="_blank" rel="noreferrer noopener">https://github.com/aben20807/blog-post/issues/105</a>&#160; </p></li><li id="fn:6"><p><br/><a href="http://jasmin.sourceforge.net/guide.html" target="_blank" rel="noreferrer noopener">http://jasmin.sourceforge.net/guide.html</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Build a Simple Compiler Ep2</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/</link><pubDate>Thu, 22 Jul 2021 19:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/</guid><description><![CDATA[
           <br/><p>語法剖析器 (Parser)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/"><img src="https://images.unsplash.com/photo-1445294211564-3ca59d999abd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>語法剖析器 (Parser)</p><ul><li>Series: <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">[ep0]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">[ep1]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">[ep2]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">[ep3]</a></li><li>Source code: <br/><br/><a href="https://github.com/aben20807/learn_compiler" target="_blank" rel="noreferrer noopener">aben20807/learn_compiler</a></li></ul><br/><br/>  <div class="info-msg"><br/>    <i class="fa fa-info-circle"></i><br/>    從文章長度跟作業繳交期限就可以知道 parser 的難度遠大於 scanner，所以請提早動手開始，<del>雖然不斷宣導下還是一定有人會不信邪前一個禮拜才開始</del>。<br/>  </div><br/><br/><br/><br/><h1 id="語法剖析器-parser" class="article-heading">語法剖析器 (Parser) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%9e%e6%b3%95%e5%89%96%e6%9e%90%e5%99%a8-parser"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>與詞法分析器 (Scanner) 相同，這裡我們仰賴語法剖析器產生器來建構符合我們定義文法的語法剖析器。</p><p>由於我們再來會使用到的 JVM 功能是屬於 stack-based 的 virtual machine  ，所以在語法剖析時就要預先考慮產生對應的指令順序。</p><br/><br/><h2 id="bison-yacc-三大區塊" class="article-heading">bison (yacc) 三大區塊 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#bison-yacc-%e4%b8%89%e5%a4%a7%e5%8d%80%e5%a1%8a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這裡其實與上一篇幾乎相同 (用 <code>%%</code> 切了三個區塊出來)，只是中間區塊從 Rules section 換成 Grammar section，用來定義文法。</p><p>寫法如下，其實跟課本學到的文法表示差不多只是換個符號表示。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Parent<br/></span></span><span style="display:flex;"><span>    : Child1 Child2 Child3<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> Child4<br/></span></span><span style="display:flex;"><span>;<br/></span></span></code></pre></div></div><br/><br/><h2 id="action" class="article-heading">Action <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#action"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Action   可以在 parse 過程中插入某些定義的動作，如下方程式範例中大括號部分。可以看到並不限於在最後方加上，也可以在 child 間加上 action。所以在建構不同層的 symbol table 時可以利用這個特性。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Parent<br/></span></span><span style="display:flex;"><span>    : Child1 {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;after reducing Child1; before reducing Parent&#34;</span>);<br/></span></span><span style="display:flex;"><span>    } Child2 Child3 {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;reduce Parent!&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> Child4 {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;reduce Parent from Child4&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span></code></pre></div></div><br/><br/><h2 id="利用-semantic-value-將下方資訊向上傳遞" class="article-heading">利用 Semantic value 將下方資訊向上傳遞 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%a9%e7%94%a8-semantic-value-%e5%b0%87%e4%b8%8b%e6%96%b9%e8%b3%87%e8%a8%8a%e5%90%91%e4%b8%8a%e5%82%b3%e9%81%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>為了向上傳遞資訊，bison (yacc) 提供了這項功能，讓下方的 action 可以用 <code>$$</code> 來作為回傳值，而上方的 action 可以用 <code>$1</code>, <code>$2</code> 來存取對應來自下方的回傳值。要使用這項功能需要注意需要在 Definition section 宣告相關的型別 (包含 <code>%union</code>, <code>%token</code>, <code>%type</code>)   。另外，數字所表示的位子需要把 action 也計算進去，如下方範例第一個 rule <code>$1</code> 來自 <code>Child1</code>; <code>$2</code> 來自 <code>Child1</code> 的 action, <code>$3</code> 來自 <code>Child2</code>, <code>$4</code> 來自 <code>Child3</code>。換 rule 則再從 1 開始，如 <code>$1</code> 來自 <code>Child4</code>。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Parent<br/></span></span><span style="display:flex;"><span>    : Child1 {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;after reducing Child1; before reducing Parent&#34;</span>);<br/></span></span><span style="display:flex;"><span>    } Child2 Child3 {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$$</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">123</span> <span style="color:#f92672">+</span> <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">1</span> <span style="color:#f92672">+</span> <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">3</span> <span style="color:#f92672">+</span> <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">4</span>;<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;reduce Parent!&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> Child4 {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$$</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">4</span> <span style="color:#f92672">+</span> <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;reduce Parent from Child4&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span></code></pre></div></div><br/><br/><h1 id="symbol-table" class="article-heading">Symbol table <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#symbol-table"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>由於硬體 (或是虛擬機器) 是看不懂你程式所寫的 <code>x</code>, <code>y</code> 變數，所以編譯器需要給這些變數一個位址 (address) 或是參考 (reference) 來代表不同的變數 (因為 JVM 常用參考來說明，所以這裡以後者來表示這個專有名詞)，因此 symbol table 最大用意就在生成 &ldquo;變數&rdquo; 與 &ldquo;參考&rdquo; 的一對一對應表，當有 scope 的概念時必須考慮變數是否在外層已經被定義並且從中獲取對應的參考，再來就是作業會遇到的內容就不多加贅述，不過可以提示: 是要利用 linked list 來實作 (沒意外大二資料結構就教過)。</p><br/><br/><h1 id="stack-based" class="article-heading">Stack-based <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#stack-based"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="運算範例" class="article-heading">運算範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>利用 Stack-based 的運算可以大幅減少硬體的相依性，也因為 JVM 採用這個運算模式，所以我們產生的指令需要符合可執行的順序。下圖簡單示範一個加法的運作流程，左方為對應的虛擬指令，①: 第 1,2 行會把 x 變數存放的值放入 stack；②: y 也放入後遇到第 5 行的加法運算，因此將 stack 中兩個值 pop 出來進行加法運算；③: 最後將運算結果放回。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVeUXwOtg_rkDa19Jd4yQ7AT2_7Ijf_6iQhaDiplgQf4-ZrvVvvl50lP0o2d3aime409KsaCtxmeyr4VN5_jZNaiFm0fBwazef5yNccep0_4hCuYok2BtO8qH9eMgOF_za2GpGjZONQGY-C6f40kMuFhQ=w611-h332-no" class="center img-zoomable" alt="Stack 版本的運算" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVeUXwOtg_rkDa19Jd4yQ7AT2_7Ijf_6iQhaDiplgQf4-ZrvVvvl50lP0o2d3aime409KsaCtxmeyr4VN5_jZNaiFm0fBwazef5yNccep0_4hCuYok2BtO8qH9eMgOF_za2GpGjZONQGY-C6f40kMuFhQ=w611-h332-no" class="center img-zoomable lazyload" alt="Stack 版本的運算"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Stack 版本的運算</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVeUXwOtg_rkDa19Jd4yQ7AT2_7Ijf_6iQhaDiplgQf4-ZrvVvvl50lP0o2d3aime409KsaCtxmeyr4VN5_jZNaiFm0fBwazef5yNccep0_4hCuYok2BtO8qH9eMgOF_za2GpGjZONQGY-C6f40kMuFhQ=w611-h332-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><strong>進階版本</strong> <code>decl num = x + y * (3 + 5)</code> 應該要產生如下的指令順序，則在 JVM 執行流程會是: 第一個遇到的運算是 <code>ADD</code>，所以 <code>3</code>、<code>5</code> 做完後放回 <code>8</code>，再來是 <code>MUL</code>，就是剛剛放回的 <code>8</code> 與 <code>y</code>，依此類推，最後才將結果存到 <code>num</code> 中</p><pre tabindex="0"><code>IDENT x, ref: 0<br/>LOAD<br/>IDENT y, ref: 1<br/>LOAD<br/>NUMLIT 3<br/>NUMLIT 5<br/>ADD<br/>MUL<br/>ADD<br/>IDENT num, ref: 2<br/>STORE<br/></code></pre><br/><br/><h2 id="轉成-stack-based-順序" class="article-heading">轉成 stack-based 順序 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bd%89%e6%88%90-stack-based-%e9%a0%86%e5%ba%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這裡就不包含詳細的從頭教學，這裡示範怎麼透過 action 來將原先的順序轉換成 stack-baced 順序。根據輸入的字串 <code>x * 2</code>，parser 會以同樣的順序跑過，符合可以 reduce 時才會向上合併，例如，<code>MulExpr</code> (從 <code>IDENT</code> ① 來), <code>MulOp</code>, <code>Operand</code> (從 <code>NUMLIT</code> ② 來) 都走過就會 reduce 成 <code>MulExpr</code> 接著執行它的 action ③。為了在 ③ 才印出運算子，這裡我們需要在 ③ 時知道下方上來的運算子是哪一個，因此利用上面提到的 <br/><br/><a href="#%e5%88%a9%e7%94%a8-semantic-value-%e5%b0%87%e4%b8%8b%e6%96%b9%e8%b3%87%e8%a8%8a%e5%90%91%e4%b8%8a%e5%82%b3%e9%81%9e">Semantic value</a> 來傳遞 (注意 <code>%union</code> 中有 <code>op</code> 這個欄位，中間使用到 <code>\$&lt;op&gt;\$</code> 代表指定的回傳型別) 讓 ③ 的 <code>\$2</code> 獲得運算子資訊。所以就會達到先印出 <code>x</code> 的參考及數字 <code>2</code> 後再印出運算子類型。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6ZMC2XfsnZg8jHI64e3dKCSezHqXX3QGtvRlmC9ZN2z8isdz0fU7BpkalJRei9VrdiOMPcYX1J_cacpu3iiXN3EZaQPNdEoc72iKKLKHpykzNxfMX7wjvUHBtGh18vRx389qK2SxuOU-028GIcUStCw=w1371-h821-no" class="center img-zoomable" alt="action 被執行的步驟" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLW6ZMC2XfsnZg8jHI64e3dKCSezHqXX3QGtvRlmC9ZN2z8isdz0fU7BpkalJRei9VrdiOMPcYX1J_cacpu3iiXN3EZaQPNdEoc72iKKLKHpykzNxfMX7wjvUHBtGh18vRx389qK2SxuOU-028GIcUStCw=w1371-h821-no" class="center img-zoomable lazyload" alt="action 被執行的步驟"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">action 被執行的步驟</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLW6ZMC2XfsnZg8jHI64e3dKCSezHqXX3QGtvRlmC9ZN2z8isdz0fU7BpkalJRei9VrdiOMPcYX1J_cacpu3iiXN3EZaQPNdEoc72iKKLKHpykzNxfMX7wjvUHBtGh18vRx389qK2SxuOU-028GIcUStCw=w1371-h821-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="程式碼除錯" class="article-heading">程式碼除錯 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a8%8b%e5%bc%8f%e7%a2%bc%e9%99%a4%e9%8c%af"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>有時候想要確認 shift、reduce 的中間過程可以加入下方兩行程式，不過就需要自行簡化輸入的程式不然會資訊量過多難以觀察。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#define YYDEBUG 1<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> yydebug <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>;<br/></span></span></code></pre></div></div><br/><br/><h2 id="測試範例" class="article-heading">測試範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><pre tabindex="0"><code>decl x = 2<br/></code></pre> <br/><br/><details><br/>  <summary><span>輸出內容太多請點擊查看 </span></summary><br/>  <pre tabindex="0"><code>$ ./mycompiler &lt; input/in02.cl<br/>&gt; Create symbol table<br/>Starting parse<br/>Entering state 0<br/>Reading a token: Next token is token DECL ()<br/>Shifting token DECL ()<br/>Entering state 1<br/>Reading a token: Next token is token IDENT ()<br/>Shifting token IDENT ()<br/>Entering state 8<br/>Reading a token: Next token is token &#39;=&#39; ()<br/>Shifting token &#39;=&#39; ()<br/>Entering state 18<br/>Reading a token: Next token is token NUMLIT ()<br/>Shifting token NUMLIT ()<br/>Entering state 9<br/>Reducing stack by rule 17 (line 166):<br/>   $1 = token NUMLIT ()<br/>NUMLIT 2<br/>-&gt; $$ = nterm Operand ()<br/>Stack now 0 1 8 18<br/>Entering state 15<br/>Reducing stack by rule 14 (line 153):<br/>   $1 = nterm Operand ()<br/>-&gt; $$ = nterm MulExpr ()<br/>Stack now 0 1 8 18<br/>Entering state 14<br/>Reading a token: Next token is token NEWLINE ()<br/>Reducing stack by rule 10 (line 136):<br/>   $1 = nterm MulExpr ()<br/>-&gt; $$ = nterm AddExpr ()<br/>Stack now 0 1 8 18<br/>Entering state 13<br/>Next token is token NEWLINE ()<br/>Reducing stack by rule 8 (line 128):<br/>   $1 = nterm AddExpr ()<br/>-&gt; $$ = nterm Expression ()<br/>Stack now 0 1 8 18<br/>Entering state 27<br/>Next token is token NEWLINE ()<br/>Shifting token NEWLINE ()<br/>Entering state 31<br/>Reducing stack by rule 6 (line 109):<br/>   $1 = token DECL ()<br/>   $2 = token IDENT ()<br/>   $3 = token &#39;=&#39; ()<br/>   $4 = nterm Expression ()<br/>   $5 = token NEWLINE ()<br/>&gt; Insert {x} into symbol table; assign it as ref {0}<br/>IDENT x, ref: 0<br/>STORE<br/>-&gt; $$ = nterm DeclStmt ()<br/>Stack now 0<br/>Entering state 6<br/>Reducing stack by rule 4 (line 104):<br/>   $1 = nterm DeclStmt ()<br/>-&gt; $$ = nterm Statement ()<br/>Stack now 0<br/>Entering state 5<br/>Reading a token: Now at end of input.<br/>Reducing stack by rule 3 (line 100):<br/>-&gt; $$ = nterm StatementList ()<br/>Stack now 0 5<br/>Entering state 17<br/>Reducing stack by rule 2 (line 99):<br/>   $1 = nterm Statement ()<br/>   $2 = nterm StatementList ()<br/>-&gt; $$ = nterm StatementList ()<br/>Stack now 0<br/>Entering state 4<br/>Reducing stack by rule 1 (line 95):<br/>   $1 = nterm StatementList ()<br/>-&gt; $$ = nterm Program ()<br/>Stack now 0<br/>Entering state 3<br/>Now at end of input.<br/>Shifting token $end ()<br/>Entering state 16<br/>Stack now 0 3 16<br/>Cleanup: popping token $end ()<br/>Cleanup: popping nterm Program ()<br/>&gt; Dump symbol table<br/>Total lines: 2<br/></code></pre><br/></details><br/><br/><br/><h1 id="完整程式碼" class="article-heading">完整程式碼 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/>  <div class="alert error-msg"><br/>    <i class="fa fa-times-circle"></i><br/>    下方程式碼的 symbol table 為求簡單所以使用一維陣列實作，僅適用於本範例，容易造成記憶體錯誤且無法套用至多層級的 scope，所以請勿學習。<br/>  </div><br/><br/><ul><li><code>mycompiler.y</code>:</li></ul><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">/*	Definition section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">// Extern variables that communicate with lex<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">#include</span> <span style="color:#75715e">&#34;common.h&#34; </span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">// #define YYDEBUG 1<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#75715e">// int yydebug = 1;<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">int</span> yylineno;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">yylex</span>();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">extern</span> FILE <span style="color:#f92672">*</span>yyin;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">yyerror</span> (<span style="color:#66d9ef">char</span> <span style="color:#66d9ef">const</span> <span style="color:#f92672">*</span>s)<br/></span></span><span style="display:flex;"><span>    {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;error:%d: %s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, yylineno, s);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Symbol table function */</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">create_symbol</span>(<span style="color:#75715e">/* ... */</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">insert_symbol</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> <span style="color:#a6e22e">lookup_symbol</span>(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">dump_symbol</span>();<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">/* Global variables */</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> example_symbol_cnt <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">#define MAX_SYMBOL_NUM 10<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>example_symbol[MAX_SYMBOL_NUM] <span style="color:#f92672">=</span> {};<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#a6e22e">get_op_name</span>(op_t op) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">switch</span> (op) {<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_ADD:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;ADD&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_SUB:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;SUB&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_MUL:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;MUL&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">case</span> OP_DIV:<br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;DIV&#34;</span>;<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">default</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>                <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;unknown&#34;</span>;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>error<span style="color:#f92672">-</span>verbose<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Use variable or self-defined structure to represent<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"> * nonterminal and token type<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"> */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span><span style="color:#66d9ef">union</span> {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> val;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>id_name;<br/></span></span><span style="display:flex;"><span>    op_t op;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Token without return */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token DECL PRINT NEWLINE<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Token with return, which need to sepcify type */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token <span style="color:#f92672">&lt;</span>val<span style="color:#f92672">&gt;</span> NUMLIT<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>token <span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span> IDENT<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Nonterminal with return, which need to sepcify type */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>type <span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span> AddOp MulOp<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Yacc will start at this nonterminal */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%</span>start Program<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* Grammar section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%%</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Program<br/></span></span><span style="display:flex;"><span>    : StatementList<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>StatementList<br/></span></span><span style="display:flex;"><span>    : Statement StatementList<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span><br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Statement<br/></span></span><span style="display:flex;"><span>    : DeclStmt<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> PrintStmt<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>DeclStmt<br/></span></span><span style="display:flex;"><span>    : DECL IDENT <span style="color:#e6db74">&#39;=&#39;</span> Expression NEWLINE {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">int</span> ref <span style="color:#f92672">=</span> insert_symbol(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;IDENT %s, ref: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>, ref);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;STORE</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        free(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>PrintStmt<br/></span></span><span style="display:flex;"><span>    : PRINT Expression NEWLINE {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;PRINT</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Expression<br/></span></span><span style="display:flex;"><span>    : AddExpr<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>AddExpr<br/></span></span><span style="display:flex;"><span>    : AddExpr AddOp MulExpr {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_name(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> MulExpr<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>AddOp<br/></span></span><span style="display:flex;"><span>    : <span style="color:#e6db74">&#39;+&#39;</span>  {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_ADD;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;-&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_SUB;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>MulExpr<br/></span></span><span style="display:flex;"><span>    : MulExpr MulOp Operand {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;%s</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, get_op_name(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">2</span>));<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> Operand<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>MulOp<br/></span></span><span style="display:flex;"><span>    : <span style="color:#e6db74">&#39;*&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_MUL;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;/&#39;</span> {<br/></span></span><span style="display:flex;"><span>        <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>op<span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">$</span> <span style="color:#f92672">=</span> OP_DIV;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>Operand<br/></span></span><span style="display:flex;"><span>    : NUMLIT {<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;NUMLIT %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>val<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> IDENT {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">int</span> ref <span style="color:#f92672">=</span> lookup_symbol(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;IDENT %s, ref: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>, ref);<br/></span></span><span style="display:flex;"><span>        printf(<span style="color:#e6db74">&#34;LOAD</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>        free(<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&lt;</span>id_name<span style="color:#f92672">&gt;</span><span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">|</span> <span style="color:#e6db74">&#39;(&#39;</span> Expression <span style="color:#e6db74">&#39;)&#39;</span><br/></span></span><span style="display:flex;"><span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">%%</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* C code section */</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> main(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[])<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (argc <span style="color:#f92672">==</span> <span style="color:#ae81ff">2</span>) {<br/></span></span><span style="display:flex;"><span>        yyin <span style="color:#f92672">=</span> fopen(argv[<span style="color:#ae81ff">1</span>], <span style="color:#e6db74">&#34;r&#34;</span>);<br/></span></span><span style="display:flex;"><span>    } <span style="color:#66d9ef">else</span> {<br/></span></span><span style="display:flex;"><span>        yyin <span style="color:#f92672">=</span> stdin;<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    create_symbol();<br/></span></span><span style="display:flex;"><span>    yyparse();<br/></span></span><span style="display:flex;"><span>    dump_symbol();<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    fclose(yyin);    <br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;Total lines: %d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, yylineno);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> create_symbol()<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Create symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">// do nothing...<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> insert_symbol(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name)<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Insert {%s} into symbol table; assign it as ref {%d}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, <br/></span></span><span style="display:flex;"><span>        id_name, example_symbol_cnt);<br/></span></span><span style="display:flex;"><span>    example_symbol[example_symbol_cnt] <span style="color:#f92672">=</span> strdup(id_name);<br/></span></span><span style="display:flex;"><span>    example_symbol_cnt<span style="color:#f92672">++</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> example_symbol_cnt <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">int</span> lookup_symbol(<span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> id_name)<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Lookup in symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> example_symbol_cnt; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (strcmp(id_name, example_symbol[i]) <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) {<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">return</span> i;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;{%s} not found in symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, id_name);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> dump_symbol()<br/></span></span><span style="display:flex;"><span>{<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;&gt; Dump symbol table</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> example_symbol_cnt; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>        free(example_symbol[i]);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h1 id="測試範例-1" class="article-heading">測試範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b-1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>input/in01.lc</code>:</li></ul><pre tabindex="0"><code>decl x = 1 + 4<br/>decl y = 2<br/>decl num = x + y * (3 + 5)<br/>print num<br/></code></pre><ul><li>Result (其他檔案，如 Makefile 請參考 Source code):</li></ul><pre tabindex="0"><code>$ make<br/>$ ./myparser &lt; input/in01.lc<br/>&gt; Create symbol table<br/>NUMLIT 1<br/>NUMLIT 4<br/>ADD<br/>&gt; Insert {x} into symbol table; assign it as ref {0}<br/>IDENT x, ref: 0<br/>STORE<br/>NUMLIT 2<br/>&gt; Insert {y} into symbol table; assign it as ref {1}<br/>IDENT y, ref: 1<br/>STORE<br/>&gt; Lookup in symbol table<br/>IDENT x, ref: 0<br/>LOAD<br/>&gt; Lookup in symbol table<br/>IDENT y, ref: 1<br/>LOAD<br/>NUMLIT 3<br/>NUMLIT 5<br/>ADD<br/>MUL<br/>ADD<br/>&gt; Insert {num} into symbol table; assign it as ref {2}<br/>IDENT num, ref: 2<br/>STORE<br/>&gt; Lookup in symbol table<br/>IDENT num, ref: 2<br/>LOAD<br/>PRINT<br/>&gt; Dump symbol table<br/>Total lines: 5<br/></code></pre><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://thiagoh.github.io/bison/" target="_blank" rel="noreferrer noopener">Bison 3.0.4 Manual</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/Stack_machine#Virtual_stack_machines" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Stack_machine#Virtual_stack_machines</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://thiagoh.github.io/bison/#Actions" target="_blank" rel="noreferrer noopener">https://thiagoh.github.io/bison/#Actions</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://thiagoh.github.io/bison/#Action-Types" target="_blank" rel="noreferrer noopener">https://thiagoh.github.io/bison/#Action-Types</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://thiagoh.github.io/bison/#Action-Features" target="_blank" rel="noreferrer noopener">https://thiagoh.github.io/bison/#Action-Features</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Build a Simple Compiler Ep1</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/</link><pubDate>Thu, 22 Jul 2021 18:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/</guid><description><![CDATA[
           <br/><p>詞法分析器 (Scanner)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/"><img src="https://images.unsplash.com/photo-1582899973294-9851630b69ec?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>詞法分析器 (Scanner)</p><ul><li>Series: <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">[ep0]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">[ep1]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">[ep2]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">[ep3]</a></li><li>Source code: <br/><br/><a href="https://github.com/aben20807/learn_compiler" target="_blank" rel="noreferrer noopener">aben20807/learn_compiler</a></li></ul><br/><br/><h1 id="詞法分析器-scanner" class="article-heading">詞法分析器 (Scanner) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a9%9e%e6%b3%95%e5%88%86%e6%9e%90%e5%99%a8-scanner"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這裡我們不需要像編譯系統的課本或課程中提到的演算法來用 C 語言寫一個詞法分析器，而是利用 flex (lex) 這個詞法分析器產生器，它讓使用者可以用一些高階的定義詞法分析的模式，接著自動產生對應的詞法分析器。</p><p>使用這類工具的原因如下:</p><ul><li>減少人工撰寫造成的錯誤</li><li>開發快速且方便除錯</li><li><del>修課學生不是每一個都對編譯器有興趣，但這是必修課</del></li></ul><p>然而實際上真實的複雜語言，如 C++、Rust、Go       大多都是手寫來達到更高的設計彈性。</p><br/><br/><h1 id="flex-lex-三大區塊" class="article-heading">flex (lex) 三大區塊 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#flex-lex-%e4%b8%89%e5%a4%a7%e5%8d%80%e5%a1%8a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>用兩個 <code>%%</code> 來作為區隔:</p><ul><li>Definition section: 又分作兩個小區塊 (可對照下方完整程式碼): %{ 定義標頭檔、全域變數 %}、正規表達式標籤、condition (<code>%x</code>)  、選項 (<code>%option</code>)  </li><li>Rules section: 定義判斷為 token 的規則。定義的順序會影響優先度所以要考慮是否會覆蓋其他規則，例如關鍵字應該要優先於變數名，否則像是 <code>decl</code>, <code>print</code> 會被判定為 ident。這同時也是為何 <code>.</code> (匹配所有字元) 會放在最下面</li><li>C Code section: 定義 main 函式、其他函式</li></ul><pre tabindex="0"><code>&lt;&lt; Definition section &gt;&gt;<br/><br/>%%<br/><br/>&lt;&lt; Rules section &gt;&gt;<br/><br/>%%<br/><br/>&lt;&lt; C Code section &gt;&gt;<br/></code></pre><br/><br/><h1 id="正規表達式" class="article-heading">正規表達式 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e8%a6%8f%e8%a1%a8%e9%81%94%e5%bc%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這裡主要利用正規表達式 (Regular Expression, regex, regexp, RE) 來判斷一個輸入中有那些 token，例如 <code>apple</code> 不是任何一個保留關鍵字，所以就是一般的變數名稱。由於本系列所採用的是簡化版的語言，變數只有大小寫字母組成，所以這裡就直接定義 <code>ident</code> 個標籤負責對應 <code>{letter}+</code> 其中 <code>letter</code> 對應 a~z 或是 A~Z 其中一個字元。</p><br/><br/><h1 id="完整程式碼" class="article-heading">完整程式碼 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>mycompiler.l</code>:</li></ul><div style="border: 1px solid #888888;"></div><br/><br/><h1 id="測試範例" class="article-heading">測試範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><code>input/in01.lc</code>:</li></ul><pre tabindex="0"><code>decl x = 1 + 4<br/>decl y = 2<br/>decl num = x + y * (3 + 5)<br/>print num<br/></code></pre><ul><li>Result (其他檔案，如 Makefile 請參考 Source code):</li></ul><pre tabindex="0"><code>$ make<br/>$ ls<br/>input/  lex.yy.c  Makefile  mycompiler.l  myscanner*<br/>$ ./myscanner &lt; input/in01.lc<br/>decl             DECL<br/>x                IDENT<br/>=                ASSIGN<br/>1                NUMLIT<br/>+                ADD<br/>4                NUMLIT<br/>\n               NEWLINE<br/>decl             DECL<br/>y                IDENT<br/>=                ASSIGN<br/>2                NUMLIT<br/>\n               NEWLINE<br/>decl             DECL<br/>num              IDENT<br/>=                ASSIGN<br/>x                IDENT<br/>+                ADD<br/>y                IDENT<br/>*                MUL<br/>(                LPAR<br/>3                NUMLIT<br/>+                ADD<br/>5                NUMLIT<br/>)                RPAR<br/>\n               NEWLINE<br/>print            PRINT<br/>num              IDENT<br/>\n               NEWLINE<br/><br/>Finish scanning.<br/></code></pre><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://westes.github.io/flex/manual/" target="_blank" rel="noreferrer noopener">Lexical Analysis With Flex, for Flex 2.6.2</a></li><li><br/><br/><a href="https://www.cs.virginia.edu/~cr4bd/flex-manual/index.html#Top" target="_blank" rel="noreferrer noopener">Lexical Analysis With Flex, for Flex 2.6.3</a></li><li><br/><br/><a href="https://github.com/westes/flex" target="_blank" rel="noreferrer noopener">westes/flex</a></li><li><br/><br/><a href="https://stackoverflow.com/questions/39075510/option-noinput-nounput-what-are-they-for" target="_blank" rel="noreferrer noopener">YY_NO_UNPUT, YY_NO_INPUT</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.wikipedia.org/wiki/GNU_Bison#Use" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/GNU_Bison#Use</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_lexer/lib.rs.html" target="_blank" rel="noreferrer noopener">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_lexer/lib.rs.html</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_parse/lib.rs.html" target="_blank" rel="noreferrer noopener">https://doc.rust-lang.org/nightly/nightly-rustc/src/rustc_parse/lib.rs.html</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://www.cs.virginia.edu/~cr4bd/flex-manual/Start-Conditions.html" target="_blank" rel="noreferrer noopener">https://www.cs.virginia.edu/~cr4bd/flex-manual/Start-Conditions.html</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://www.cs.virginia.edu/~cr4bd/flex-manual/Scanner-Options.html#Scanner-Options" target="_blank" rel="noreferrer noopener">https://www.cs.virginia.edu/~cr4bd/flex-manual/Scanner-Options.html#Scanner-Options</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Build a Simple Compiler Ep0</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/</link><pubDate>Thu, 22 Jul 2021 17:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/</guid><description><![CDATA[
           <br/><p>說明及事前準備</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/"><img src="https://images.unsplash.com/photo-1466692476868-aef1dfb1e735?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>說明及事前準備</p><ul><li>Series: <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">[ep0]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">[ep1]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">[ep2]</a>, <br/><br/><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">[ep3]</a></li><li>Source code: <br/><br/><a href="https://github.com/aben20807/learn_compiler" target="_blank" rel="noreferrer noopener">aben20807/learn_compiler</a></li></ul><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>雖然好像很多相關資料了，但我覺得還是欠缺完整性，所以就寫了這個系列來補全。儘管還是有少數人無論如何都選擇直接抄襲同學這條路，但還是希望透過本系列能夠清楚完整的帶領完全沒概念的人走一遍，藉此降低這些行為。</p><p>雖然我算是蠻常使用本系列所介紹的這套工具了，不過可能還是會有錯誤的地方，還請各位不吝指教。</p><br/><br/><h1 id="本篇所建構的編譯器" class="article-heading">本篇所建構的編譯器 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%ac%e7%af%87%e6%89%80%e5%bb%ba%e6%a7%8b%e7%9a%84%e7%b7%a8%e8%ad%af%e5%99%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>本系列內容為使用 flex/bison (lex/yacc) 建構一個簡易的編譯器，並使其產生的 jasmin 指令可在 JVM 執行。完整執行流程如下。我們會利用 flex 產生 scanner，利用 bison 產生 parser。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/AM-JKLVfavnVca_5BLSfCjR9c4-qX2B3aClIeT0xi-dKP7OA3I6YQ6wpE7Xpesp1-TiV7scUERknJm54uRRowNcFRd1vm7irZP_97aKpwDJMTSH8d5B0bcyF6whs077_llSwlHZyCey4jSwH4XqjpQ8O2vJ5pQ=w551-h281-no" class="center img-zoomable" alt="流程，橘色區塊為本系列需要寫程式的部分" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/AM-JKLVfavnVca_5BLSfCjR9c4-qX2B3aClIeT0xi-dKP7OA3I6YQ6wpE7Xpesp1-TiV7scUERknJm54uRRowNcFRd1vm7irZP_97aKpwDJMTSH8d5B0bcyF6whs077_llSwlHZyCey4jSwH4XqjpQ8O2vJ5pQ=w551-h281-no" class="center img-zoomable lazyload" alt="流程，橘色區塊為本系列需要寫程式的部分"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">流程，橘色區塊為本系列需要寫程式的部分</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/AM-JKLVfavnVca_5BLSfCjR9c4-qX2B3aClIeT0xi-dKP7OA3I6YQ6wpE7Xpesp1-TiV7scUERknJm54uRRowNcFRd1vm7irZP_97aKpwDJMTSH8d5B0bcyF6whs077_llSwlHZyCey4jSwH4XqjpQ8O2vJ5pQ=w551-h281-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="環境設定" class="article-heading">環境設定 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83%e8%a8%ad%e5%ae%9a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="作業系統" class="article-heading">作業系統 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%9c%e6%a5%ad%e7%b3%bb%e7%b5%b1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>OS: Ubuntu 18.04 (我使用 WSL2)</li></ul><br/><br/><h2 id="軟體安裝" class="article-heading">軟體安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bb%9f%e9%ab%94%e5%ae%89%e8%a3%9d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>gcc: 7.5.0 (<code>gcc -v</code>)</li><li>gnu make: 4.1 (<code>make -v</code>)</li><li>flex: 2.6.4 (<code>flex --version</code>)</li><li>bison: 3.0.4 (<code>bison --version</code>)</li><li>java: openjdk 11.0.10 (<code>java --version</code>)</li><li>安裝指令: <code>$ sudo apt install gcc make flex bison default-jre</code></li></ul><br/><br/><h1 id="定義本次教學的語言" class="article-heading">定義本次教學的語言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%9a%e7%be%a9%e6%9c%ac%e6%ac%a1%e6%95%99%e5%ad%b8%e7%9a%84%e8%aa%9e%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>主要特性: 包含賦值、基本四則運算、輸出。</p><br/><br/><h2 id="型別-type" class="article-heading">型別 type <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9e%8b%e5%88%a5-type"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>整數 (num_lit), e.g., <code>1</code>, <code>2</code></li><li>變數 (ident), e.g., <code>x</code>, <code>y</code>, <code>num</code></li></ul><br/><br/><h2 id="運算子-operator" class="article-heading">運算子 operator <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e5%ad%90-operator"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><code>+</code>: 加</li><li><code>-</code>: 減</li><li><code>*</code>: 乘</li><li><code>/</code>: 除</li><li><code>=</code>: 宣告時賦值</li></ul><br/><br/><h2 id="其他符號" class="article-heading">其他符號 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96%e7%ac%a6%e8%99%9f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><code>(</code> <code>)</code>: 運算有最高優先度</li><li><code>\n</code> (newline): 換行作為結尾</li></ul><br/><br/><h2 id="關鍵字-keyword" class="article-heading">關鍵字 keyword <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e9%8d%b5%e5%ad%97-keyword"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><code>decl</code></li><li><code>print</code></li></ul><br/><br/><h2 id="簡化的文法-grammar" class="article-heading">簡化的文法 grammar <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b0%a1%e5%8c%96%e7%9a%84%e6%96%87%e6%b3%95-grammar"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>未標示運算子優先順序，但是符合先乘除後加減，括號優先度最高。</li></ul><pre tabindex="0"><code>Statement -&gt; DeclStmt<br/>          | PrintStmt<br/><br/>DeclStmt -&gt; &#34;decl&#34; ident &#34;=&#34; Expression newline<br/><br/>PrintStmt -&gt; &#34;print&#34; Expression newline<br/><br/>Expression -&gt; Expression BinaryOp Expression<br/>           | Operand<br/>           <br/>Operand -&gt; num_lit<br/>        | ident<br/>        | &#34;(&#34; Expression &#34;)&#34;<br/><br/>BinaryOp -&gt; &#34;+&#34; | &#34;-&#34; | &#34;*&#34; | &#34;/&#34;<br/></code></pre><br/><br/><h2 id="範例輸入" class="article-heading">範例輸入 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b%e8%bc%b8%e5%85%a5"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><pre tabindex="0"><code>decl x = 1 + 4<br/>decl y = 2<br/>decl num = x + y * (3 + 5)<br/>print num<br/></code></pre><br/><br/><h1 id="qa-僅代表本人意見" class="article-heading">Q&amp;A (僅代表本人意見) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qa-%e5%83%85%e4%bb%a3%e8%a1%a8%e6%9c%ac%e4%ba%ba%e6%84%8f%e8%a6%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1> <br/><br/><details><br/>  <summary><span>建議心理素質強健者再行觀看 </span></summary><br/>  <ul><li><strong>Q</strong> 為何編譯系統<del>目前</del>為必修?</li><li><strong>A</strong> 這需要回顧一下整個資訊工程的範疇，一般這個科系會有一些硬體課程以及多數的軟體課程 (包含數學、理論)，編譯系統是連接兩大領域的科學，因此在這堂課會用到幾乎所有在大學的所學 (例如，程式設計、資料結構、演算法、作業系統、計算理論)，雖然沒有到使用硬體指令 (否則會太難，想學可以參考 Jserv 的課)，不過可以說是整個大學的總整理。</li><li><strong>Q</strong> 為何編譯系統這麼難?</li><li><strong>A</strong> 其實課程部分一點也不難，每年超過100分的大概都有 20 個已經超過修課人數的一成，要不及格只可能是上課都沒在聽、考試沒複習、作業有問題都沒有問幾乎每次都沒交。如果是編譯器領域的話的確是難，但相對的會的人就少。</li><li><strong>Q</strong> 為何作業沒有部份給分?</li><li><strong>A</strong> 試想你之後出社會，老闆要你開發產品而你只能寫出屍體，連執行都不行，這樣你覺得老闆要給你多少薪水。你總不能跟他說我寫了哪些功能只是不能跑，所以應該要部份給薪吧。</li></ul><br/></details>
        ]]></description></item><item><title>Google Sheet Grouping</title><link>https://aben20807.github.io/posts/20210529-google-sheet-grouping/</link><pubDate>Sat, 29 May 2021 11:16:15 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210529-google-sheet-grouping/</guid><description><![CDATA[
           <br/><p>Proficient programming language:</p><br/><ul><br/><li>Google sheet</li><br/></ul>
          
            <p><a href="https://aben20807.github.io/posts/20210529-google-sheet-grouping/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210529-google-sheet-grouping/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>Proficient programming language:</p><ul><li>Google sheet</li></ul><p>善用工具的心法很簡單：</p><blockquote><p>我相信有這個功能</p></blockquote><p>不過還是需要拆解一下：需求 -&gt; 功能分解 -&gt; 合併</p><br/><br/><h1 id="需求" class="article-heading">需求 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9c%80%e6%b1%82"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>以這次功能為例，我想要針對所有同學進行分組，但是不需要隨機，只要按照順序分 A, B, C 就好。</p><br/><br/><h1 id="功能分解逐漸合併" class="article-heading">功能分解、逐漸合併 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%9f%e8%83%bd%e5%88%86%e8%a7%a3%e9%80%90%e6%bc%b8%e5%90%88%e4%bd%b5"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>三個一個循環很容易想到取餘數 (modulo) 。接著到 Google sheet function list   搜尋看看有沒有：</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3eHskvbWonxNnPntuPoVU-BB5frZRuSWBseEPPHvhg16rNbOLr23yhb2Tuz85f7vYaXiwlkgFMsTjsSitPAAevG904AnSEQLgyMMEghKFwomt81AQKUzU-Cv67Q451GlAUpLWxmeoHNrMmOykGNJMUO3A=w1199-h776-no" class="center img-zoomable" alt="搜尋結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3eHskvbWonxNnPntuPoVU-BB5frZRuSWBseEPPHvhg16rNbOLr23yhb2Tuz85f7vYaXiwlkgFMsTjsSitPAAevG904AnSEQLgyMMEghKFwomt81AQKUzU-Cv67Q451GlAUpLWxmeoHNrMmOykGNJMUO3A=w1199-h776-no" class="center img-zoomable lazyload" alt="搜尋結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">搜尋結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3eHskvbWonxNnPntuPoVU-BB5frZRuSWBseEPPHvhg16rNbOLr23yhb2Tuz85f7vYaXiwlkgFMsTjsSitPAAevG904AnSEQLgyMMEghKFwomt81AQKUzU-Cv67Q451GlAUpLWxmeoHNrMmOykGNJMUO3A=w1199-h776-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>我們大概可以知道 <code>MOD(x, y)</code> 得到的是 <code>x/y</code> 的餘數，因此 <code>x</code> 是對應到列數，而 <code>y</code> 是分組的數量。</p><p>再來比較抽象。我們有了餘數功能，要怎麼對應到每一列 (row)? 所以就找到 <code>ROW()</code> 可以取得目前的列數，這樣我們就得到 <code>x</code> 了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fiUAHHbCsaBpyvclBHNlMa57_1-JlrEAxSMRP3BVX071SZnn_ORcsEhZtnJHOuKy4HK67yw_JdbdKocrBhJwjWvqgLf5GxGDsakCLbiTZJdNWIicGirct-YQ-ddVNbS58h_rayFvi4zN9yi041gG4zaQ=w307-h386-no" class="center img-zoomable" alt="每個人的列數" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fiUAHHbCsaBpyvclBHNlMa57_1-JlrEAxSMRP3BVX071SZnn_ORcsEhZtnJHOuKy4HK67yw_JdbdKocrBhJwjWvqgLf5GxGDsakCLbiTZJdNWIicGirct-YQ-ddVNbS58h_rayFvi4zN9yi041gG4zaQ=w307-h386-no" class="center img-zoomable lazyload" alt="每個人的列數"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">每個人的列數</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fiUAHHbCsaBpyvclBHNlMa57_1-JlrEAxSMRP3BVX071SZnn_ORcsEhZtnJHOuKy4HK67yw_JdbdKocrBhJwjWvqgLf5GxGDsakCLbiTZJdNWIicGirct-YQ-ddVNbS58h_rayFvi4zN9yi041gG4zaQ=w307-h386-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><code>y</code> 用 <code>3</code> 代入</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fEda2LS9FQLpGcan6rweZctvXTwK1q-OsEA-kjdmbCe6u0L40y0W2deC-sJb0sreCOLIrhbHIjJZnaSofjM0YcA6TgpQd7DauHQy5-FalhW0LMzRniLvSulgd21t9MxtSjjYiN1UdP0KBHHbPw-wdfCw=w308-h387-no" class="center img-zoomable" alt="2,0,1 重複出現" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fEda2LS9FQLpGcan6rweZctvXTwK1q-OsEA-kjdmbCe6u0L40y0W2deC-sJb0sreCOLIrhbHIjJZnaSofjM0YcA6TgpQd7DauHQy5-FalhW0LMzRniLvSulgd21t9MxtSjjYiN1UdP0KBHHbPw-wdfCw=w308-h387-no" class="center img-zoomable lazyload" alt="2,0,1 重複出現"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">2,0,1 重複出現</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fEda2LS9FQLpGcan6rweZctvXTwK1q-OsEA-kjdmbCe6u0L40y0W2deC-sJb0sreCOLIrhbHIjJZnaSofjM0YcA6TgpQd7DauHQy5-FalhW0LMzRniLvSulgd21t9MxtSjjYiN1UdP0KBHHbPw-wdfCw=w308-h387-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>如果分組編號就是 0,1,2 的話就可以在這邊停止，不過如果要重新取代號 (A,B,C) 或是分配不同內容給各個組別時就需要繼續下去。</p><p>再來的思考方向，就是用剛剛的 0,1,2 當作索引值 (index)，查看看如何用索引值取得其他格子的內容。我們選擇使用 <code>INDEX()</code>，其使用方法就是先選擇一個區塊 <code>reference</code> 接著用 <code>row</code>, <code>column</code> 去選擇。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fSOGvhxqM_OW94b9zA6qbLl1QGMXiLcMS-4wcQgOTPUiaXnA1PIOUqcfRX39GNuWDQDAycJXlsi1vvnI_uHAMqTd4MRD8le7oTlrBVVII1nJ_oyE07eYf-GL8cyEuqhAZ2t28PFZQ6iwBqmtftOAK_wA=w1174-h900-no" class="center img-zoomable" alt="選一個功能最不複雜的" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fSOGvhxqM_OW94b9zA6qbLl1QGMXiLcMS-4wcQgOTPUiaXnA1PIOUqcfRX39GNuWDQDAycJXlsi1vvnI_uHAMqTd4MRD8le7oTlrBVVII1nJ_oyE07eYf-GL8cyEuqhAZ2t28PFZQ6iwBqmtftOAK_wA=w1174-h900-no" class="center img-zoomable lazyload" alt="選一個功能最不複雜的"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">選一個功能最不複雜的</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fSOGvhxqM_OW94b9zA6qbLl1QGMXiLcMS-4wcQgOTPUiaXnA1PIOUqcfRX39GNuWDQDAycJXlsi1vvnI_uHAMqTd4MRD8le7oTlrBVVII1nJ_oyE07eYf-GL8cyEuqhAZ2t28PFZQ6iwBqmtftOAK_wA=w1174-h900-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>套用進去會長這樣，<code>INDEX(\$E\$1:\$E\$3, MOD(ROW(), 3))</code> (<code>\$</code> 是鎖定用，不會因為下拉導致列或欄改變，因為 <code>E1:E3</code> 是固定放我們的代號)。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3djn5Tqfhr3O1GH6SALCCahCihSID6m0RbA_4VYXGqNU61yoL5Lk6bRp81gsIVOj8tevLHv0-w-0RihTdeAv6UfDQtqwE4CTepk71mYrFmztiTzwjMSvtxqcXrEo8y2Wu2t4K81R18gRBF1VkY41F3K7Q=w506-h385-no" class="center img-zoomable" alt="目前的成果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3djn5Tqfhr3O1GH6SALCCahCihSID6m0RbA_4VYXGqNU61yoL5Lk6bRp81gsIVOj8tevLHv0-w-0RihTdeAv6UfDQtqwE4CTepk71mYrFmztiTzwjMSvtxqcXrEo8y2Wu2t4K81R18gRBF1VkY41F3K7Q=w506-h385-no" class="center img-zoomable lazyload" alt="目前的成果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">目前的成果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3djn5Tqfhr3O1GH6SALCCahCihSID6m0RbA_4VYXGqNU61yoL5Lk6bRp81gsIVOj8tevLHv0-w-0RihTdeAv6UfDQtqwE4CTepk71mYrFmztiTzwjMSvtxqcXrEo8y2Wu2t4K81R18gRBF1VkY41F3K7Q=w506-h385-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>會發生上面的錯誤是因為 <code>INDEX</code> 使用的列起始是從 <code>1</code> 開始，所以我們來加 <code>1</code>。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dsrRA-9kdsJrtANswZ01XvsoSW3UdUn8UyjgTCqihHAq_QH7Dm65y9P0616XASNuCcVu2Np_ZR9Z5ZiobW-by36NZT-U87j3eO_EK1LYqoxrmN_m-vSOUD5OETzm_7CtQ6IoWfkwzDz0arxbha-QTmDQ=w506-h385-no" class="center img-zoomable" alt="完成" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dsrRA-9kdsJrtANswZ01XvsoSW3UdUn8UyjgTCqihHAq_QH7Dm65y9P0616XASNuCcVu2Np_ZR9Z5ZiobW-by36NZT-U87j3eO_EK1LYqoxrmN_m-vSOUD5OETzm_7CtQ6IoWfkwzDz0arxbha-QTmDQ=w506-h385-no" class="center img-zoomable lazyload" alt="完成"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">完成</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dsrRA-9kdsJrtANswZ01XvsoSW3UdUn8UyjgTCqihHAq_QH7Dm65y9P0616XASNuCcVu2Np_ZR9Z5ZiobW-by36NZT-U87j3eO_EK1LYqoxrmN_m-vSOUD5OETzm_7CtQ6IoWfkwzDz0arxbha-QTmDQ=w506-h385-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>如果想要 A 開始的會只要將右邊 E 欄換個順序即可。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" class="center img-zoomable" alt="換順序" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" class="center img-zoomable lazyload" alt="換順序"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">換順序</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p>(<br/><br/><a href="https://en.wikipedia.org/wiki/Modulo_operation" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Modulo_operation</a>)。&#160; </p></li><li id="fn:2"><p>(<br/><br/><a href="https://support.google.com/docs/table/25273?hl=en" target="_blank" rel="noreferrer noopener">https://support.google.com/docs/table/25273?hl=en</a>)&#160; </p></li></ol></div>
        ]]></description></item><item><title>Hugo on WSL2 (Ubuntu18.04)</title><link>https://aben20807.github.io/posts/20210215-hugo-on-wsl2/</link><pubDate>Mon, 15 Feb 2021 10:56:01 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210215-hugo-on-wsl2/</guid><description><![CDATA[
           <br/><p>漸漸變成老闆的樣子 (?)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210215-hugo-on-wsl2/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3dz0JI6eOlA0KVRH15KQGVdaa5_NwujRTRNGtgyJMhM0RwFOQ95GUou8cjNdH4g7Bjg3N4yjfr085yg-IIUa_mOAxgBEkUwVRNTe_r_ZE3nv1whJfAyP5Xb9LSqQQ2eTUVyOlKAJktv0CXH2UFHUncbQw=w587-h422-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210215-hugo-on-wsl2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>漸漸變成老闆的樣子 (?)</p><h1 id="tldr" class="article-heading">TL;DR <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cd /tmp<br/></span></span><span style="display:flex;"><span>$ wget https://github.com/gohugoio/hugo/releases/download/v0.80.0/hugo_extended_0.80.0_Linux-64bit.tar.gz<br/></span></span><span style="display:flex;"><span>$ tar xvf hugo_extended_0.80.0_Linux-64bit.tar.gz<br/></span></span><span style="display:flex;"><span>$ sudo mv hugo /usr/local/bin<br/></span></span><span style="display:flex;"><span>$ hugo version<br/></span></span><span style="display:flex;"><span>Hugo Static Site Generator v0.80.0-792EF0F4/extended linux/amd64 BuildDate: 2020-12-31T13:46:18Z<br/></span></span></code></pre></div></div><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>筆電系統演進:</p><ul><li>國小~國中 (Windows)</li><li>高中 (VirtualBox, Wubi)</li><li>大一~三 (Cygwin, VirtualBox)</li><li>大四~研一 (Dual system)</li><li>研二~??? (Windows)</li></ul><p>雖然開發還是在 Linux 上，不過文書的處理會越來越多，所以筆電如果用雙系統會頻繁的切換，相當麻煩。因此目前是用遠端軟體連到 Linux 做開發 (需要的話。</p><p>最近 Win10 已經可以支援 WSL2 了，雖然要經過一些步驟，不過已經相對穩定，目前用的很多簡單指令都有支援，所以像 VSCode 用的 git 也可以直接用 WSL2 內的 git 了  </p><p>因此目前的文書作業，包括計畫書 (Word)、論文 (Latex)，我都轉移到 Win10。</p><p>為了檢驗相容性，也嘗試在 WSL2 中用 hugo 寫個東西。找很久才發現，原來可以直接下載編譯好的執行檔。詳細就請看最前面的指令。</p><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>結果每次都是過年在寫文章&hellip;</p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://aozaki-kuro.com/tech/hugo-deployment-debugging/#wsl2%E5%86%85%E9%83%A8%E7%BD%B2hugo" target="_blank" rel="noreferrer noopener">Hugo部署与踩坑记</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p>(<br/><br/><a href="https://github.com/andy-5/wslgit" target="_blank" rel="noreferrer noopener">https://github.com/andy-5/wslgit</a>)&#160; </p></li></ol></div>
        ]]></description></item><item><title>寫一個記帳程式有多難？</title><link>https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/</link><pubDate>Sat, 15 Aug 2020 17:17:26 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/</guid><description><![CDATA[
           <br/><p>靈機一動，想說可以用表單來記帳，一查果然有人做過 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>靈機一動，想說可以用表單來記帳，一查果然有人做過 OuO</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>又被 Google play 發了60元禮金，想說看一下工具類的 APP 付費情況，發現前幾名有兩個記帳 APP，原本想說要買來用養成一下記帳，可是我對現有的記帳程式沒有啥好感，之前也用過兩三種，後來也都放棄。結果後來想想還是不要拿來買工具，所以又買了一個 Rusty lake 的遊戲，燒腦的解謎遊戲，多多支持 (無業配XD)</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fMBGVal6Y6qmf0-CSh-AfKoWtWNqvCUI-60lPR7C9ZAgDbE0CNwlqPyAdjm-Q1uLbExDxLR14b6K2AtJJZLBcHftF0fZ3gblRscO7kjQBQ0DP74gCnNbiFOOOdxHri-Zqcay_gKsUCyi_Y7hkR49XQ=w646-h1041-no" class="center img-zoomable" alt="Rusty Lake Paradise" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fMBGVal6Y6qmf0-CSh-AfKoWtWNqvCUI-60lPR7C9ZAgDbE0CNwlqPyAdjm-Q1uLbExDxLR14b6K2AtJJZLBcHftF0fZ3gblRscO7kjQBQ0DP74gCnNbiFOOOdxHri-Zqcay_gKsUCyi_Y7hkR49XQ=w646-h1041-no" class="center img-zoomable lazyload" alt="Rusty Lake Paradise"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Rusty Lake Paradise</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fMBGVal6Y6qmf0-CSh-AfKoWtWNqvCUI-60lPR7C9ZAgDbE0CNwlqPyAdjm-Q1uLbExDxLR14b6K2AtJJZLBcHftF0fZ3gblRscO7kjQBQ0DP74gCnNbiFOOOdxHri-Zqcay_gKsUCyi_Y7hkR49XQ=w646-h1041-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="使用表單記帳" class="article-heading">使用表單記帳 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8%e8%a1%a8%e5%96%ae%e8%a8%98%e5%b8%b3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>靈機一動，想說可以用表單來記帳，一查果然有人做過 </p><p>不過我也只是採用了簡單部份，後面那個對帳有點複雜啊。所以我就建了兩個表單：消費記錄、轉帳記錄。</p><ul><li>消費記錄：記錄平常花費</li><li>轉帳記錄：領錢、悠遊卡或是點點卡儲值</li></ul><p>用表單記帳好處：</p><ul><li>雲端化，即時更新</li><li>自動時間戳記</li><li>超客制化，問題選項及流程都自行設計</li><li>統計圖表功能完整</li></ul><p>可能缺點：</p><ul><li>一定要有網路才能記帳</li><li>複雜統計功能要花時間設計</li><li>某些表單沒有的可能就無法提供，例如，顯示表格，另外我發現手機無法上傳圖片 QuQ</li></ul><br/><br/><h2 id="表單設計" class="article-heading">表單設計 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a1%a8%e5%96%ae%e8%a8%ad%e8%a8%88"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>表單有一個很有用的功能，就是區段，可以針對回答跳轉到不同的問題</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dtUNadoaEi6qkB0o9GKiDL1uZLqi7ZtRLBbOshWrIMFbIkF5MYjICopOKcSXLBjJldZudGT87f5hrf02RASGct7YaMXLHAphLohzBmlMlNjxhetEQ54pa7bwIqhv150zbY_sxdVIuaM3zGVSDU6XmB=w859-h579-no" class="center img-zoomable" alt="根據回答跳轉區段" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dtUNadoaEi6qkB0o9GKiDL1uZLqi7ZtRLBbOshWrIMFbIkF5MYjICopOKcSXLBjJldZudGT87f5hrf02RASGct7YaMXLHAphLohzBmlMlNjxhetEQ54pa7bwIqhv150zbY_sxdVIuaM3zGVSDU6XmB=w859-h579-no" class="center img-zoomable lazyload" alt="根據回答跳轉區段"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">根據回答跳轉區段</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dtUNadoaEi6qkB0o9GKiDL1uZLqi7ZtRLBbOshWrIMFbIkF5MYjICopOKcSXLBjJldZudGT87f5hrf02RASGct7YaMXLHAphLohzBmlMlNjxhetEQ54pa7bwIqhv150zbY_sxdVIuaM3zGVSDU6XmB=w859-h579-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>所以大概就是這樣設計，如此便可以快速方便記錄細節。其實這就是一個狀態機，Compiler DFA 回憶起來~ 針對自己的情況加選項或是問題，超級客制化。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3e_fQr9GGaMQHlG1-JLvQpCmzcuImufjPFuqtFlugwb9QRj9VCHhpGle_-A-zICRSk6ZQ9PqXyftjUV1piJdzm5mz2syYiKMI6LbS5gocIyS4fSv-Z_GdTWehkdEVe13kp35NYO7MdXNYTFKzvdeJya=w892-h422-no" class="center img-zoomable" alt="我沒畫完整版的喔" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3e_fQr9GGaMQHlG1-JLvQpCmzcuImufjPFuqtFlugwb9QRj9VCHhpGle_-A-zICRSk6ZQ9PqXyftjUV1piJdzm5mz2syYiKMI6LbS5gocIyS4fSv-Z_GdTWehkdEVe13kp35NYO7MdXNYTFKzvdeJya=w892-h422-no" class="center img-zoomable lazyload" alt="我沒畫完整版的喔"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">我沒畫完整版的喔</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3e_fQr9GGaMQHlG1-JLvQpCmzcuImufjPFuqtFlugwb9QRj9VCHhpGle_-A-zICRSk6ZQ9PqXyftjUV1piJdzm5mz2syYiKMI6LbS5gocIyS4fSv-Z_GdTWehkdEVe13kp35NYO7MdXNYTFKzvdeJya=w892-h422-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="預先填入表單" class="article-heading">預先填入表單 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%90%e5%85%88%e5%a1%ab%e5%85%a5%e8%a1%a8%e5%96%ae"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>某些選項可能超常用，比方說消費記錄大部份都是現金，可以將它用作選項預設值，可以參考  </p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3c51lQNqFVCSqjAn2XVkDt0xZSs9PSqt2S623mTXkh-oTcmLdcNJd5Qh59cDiUALwe4EnGx1oO94vTn9O8AasjwZOfFwG8IkdblaSR4643XjYfozFOT5h1bJpxScbVyPMBXMlYAH0tlZd6irq7jWtyc=w692-h403-no" class="center img-zoomable" alt="新版在右上角" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3c51lQNqFVCSqjAn2XVkDt0xZSs9PSqt2S623mTXkh-oTcmLdcNJd5Qh59cDiUALwe4EnGx1oO94vTn9O8AasjwZOfFwG8IkdblaSR4643XjYfozFOT5h1bJpxScbVyPMBXMlYAH0tlZd6irq7jWtyc=w692-h403-no" class="center img-zoomable lazyload" alt="新版在右上角"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">新版在右上角</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3c51lQNqFVCSqjAn2XVkDt0xZSs9PSqt2S623mTXkh-oTcmLdcNJd5Qh59cDiUALwe4EnGx1oO94vTn9O8AasjwZOfFwG8IkdblaSR4643XjYfozFOT5h1bJpxScbVyPMBXMlYAH0tlZd6irq7jWtyc=w692-h403-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="如何使用表單" class="article-heading">如何使用表單 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8%e8%a1%a8%e5%96%ae"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>一開始想法很簡單，就是建立記錄用的表單，然後將連結用書籤的型式存在手機桌面，這樣就可以直接點來記帳。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dBfRoc4yz-m2ciB1uy1WiY5NUFUdHZZ7Us8HWtZPVZviemG2keYD56E0Ujo-00380KveIxeQcQ2l5AqRjHYrVejcxQESoC6lR43QtZGwsSKjyX-m_0rdqzzg8hE0Y9NEUjzPRe7L4t3R4J5TTtrmwQ=w1272-h836-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dBfRoc4yz-m2ciB1uy1WiY5NUFUdHZZ7Us8HWtZPVZviemG2keYD56E0Ujo-00380KveIxeQcQ2l5AqRjHYrVejcxQESoC6lR43QtZGwsSKjyX-m_0rdqzzg8hE0Y9NEUjzPRe7L4t3R4J5TTtrmwQ=w1272-h836-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dBfRoc4yz-m2ciB1uy1WiY5NUFUdHZZ7Us8HWtZPVZviemG2keYD56E0Ujo-00380KveIxeQcQ2l5AqRjHYrVejcxQESoC6lR43QtZGwsSKjyX-m_0rdqzzg8hE0Y9NEUjzPRe7L4t3R4J5TTtrmwQ=w1272-h836-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3frXOytq3We7pyNsglA69vKcVR3mFoV0nQbihbk8mqR5ebdj-gxlvXPhxQ7oNByjdtlwTQ9Szj1TTxC4mWJ0ty7SLGr5LpJIJKMmpWzBGlyHuK-26TGR8A2rgkBn4nUv_ODDaC1FUCxQDjO51t8dUrE=w1272-h903-no" class="center img-zoomable" alt="出現在桌面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3frXOytq3We7pyNsglA69vKcVR3mFoV0nQbihbk8mqR5ebdj-gxlvXPhxQ7oNByjdtlwTQ9Szj1TTxC4mWJ0ty7SLGr5LpJIJKMmpWzBGlyHuK-26TGR8A2rgkBn4nUv_ODDaC1FUCxQDjO51t8dUrE=w1272-h903-no" class="center img-zoomable lazyload" alt="出現在桌面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">出現在桌面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3frXOytq3We7pyNsglA69vKcVR3mFoV0nQbihbk8mqR5ebdj-gxlvXPhxQ7oNByjdtlwTQ9Szj1TTxC4mWJ0ty7SLGr5LpJIJKMmpWzBGlyHuK-26TGR8A2rgkBn4nUv_ODDaC1FUCxQDjO51t8dUrE=w1272-h903-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="app" class="article-heading">APP <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#app"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>用書籤有一個很大的缺點，就是一定要放在桌面，多表單的話很麻煩。再來就是每次點開就需要開啟瀏覽器，而我的瀏覽器頁面常駐超過 99 個分頁 (<code>:D</code>) 所以載入要花費一定的記憶體及時間。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fljY1Lx9qYXtjq8dfqx-dSbDyjz9IMmU5DAMkDUivBFwupJQSODbQxBZD3NEQqxt0v8dZhQKk1COJQDHHgtNnIawzdwr5WEJZjZvyh2Tgq31R2aY3cLObAA2ELveNItMXgpRmasztoSxK93Le0--3X=w1272-h1239-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fljY1Lx9qYXtjq8dfqx-dSbDyjz9IMmU5DAMkDUivBFwupJQSODbQxBZD3NEQqxt0v8dZhQKk1COJQDHHgtNnIawzdwr5WEJZjZvyh2Tgq31R2aY3cLObAA2ELveNItMXgpRmasztoSxK93Le0--3X=w1272-h1239-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fljY1Lx9qYXtjq8dfqx-dSbDyjz9IMmU5DAMkDUivBFwupJQSODbQxBZD3NEQqxt0v8dZhQKk1COJQDHHgtNnIawzdwr5WEJZjZvyh2Tgq31R2aY3cLObAA2ELveNItMXgpRmasztoSxK93Le0--3X=w1272-h1239-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>於是我就想說找看看有沒有將表單變成 APP 的方法，不過看來沒有簡單的方法，<br/><br/><a href="https://play.google.com/store/apps/details?id=x1Trackmaster.x1Trackmaster&amp;hl=zh_TW" target="_blank" rel="noreferrer noopener">AppSheet</a> 好像可以不過似乎之後要收費。接著我就打算自己用一個簡單的 APP。</p><p>Android Studio 過於肥大是不得已才會採用。查了一下發現 App Inventer 2 (AI2) 也有支援 WebView 的元件所以我的想法應該可行，基本概念就是用 WebView 來載入我們的表單，用按鈕控制開啟哪個表單這樣。</p><br/><br/><h2 id="版面設計" class="article-heading">版面設計 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%89%88%e9%9d%a2%e8%a8%ad%e8%a8%88"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>兩個畫面，左邊主畫面作為一開始進入的畫面；右邊用來開啟網頁也就是表單，放一個 WebViewer 然後大小用最大。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dV5Gn101vL3GfVWY6yecntkVd0UP_vDgzZGqd0tjoA8k9V87nX7zlF2EbEFGxqcDrn8icutYcE4SV7-tv9eCHWX3qc8Mez--FxVkzNpoQmtH-IbD-Vu0iVv4sIKCEPKIw8KLvQYWBwdJnK8PfNJZoG=w1272-h554-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dV5Gn101vL3GfVWY6yecntkVd0UP_vDgzZGqd0tjoA8k9V87nX7zlF2EbEFGxqcDrn8icutYcE4SV7-tv9eCHWX3qc8Mez--FxVkzNpoQmtH-IbD-Vu0iVv4sIKCEPKIw8KLvQYWBwdJnK8PfNJZoG=w1272-h554-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dV5Gn101vL3GfVWY6yecntkVd0UP_vDgzZGqd0tjoA8k9V87nX7zlF2EbEFGxqcDrn8icutYcE4SV7-tv9eCHWX3qc8Mez--FxVkzNpoQmtH-IbD-Vu0iVv4sIKCEPKIw8KLvQYWBwdJnK8PfNJZoG=w1272-h554-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="開始寫-code咦是拉-code" class="article-heading">開始寫 code，咦，是拉 code <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e5%a7%8b%e5%af%ab-code%e5%92%a6%e6%98%af%e6%8b%89-code"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>先展示一下完整的模樣</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" class="center img-zoomable" alt="Screen1" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" class="center img-zoomable lazyload" alt="Screen1"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Screen1</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3e2vKJQmuKlTVEAJ88cMpwZBqYB05bvn23YiBIITp8wQ4EKct_hx56i0QFq6Fhhx1novqwDOLs0kyxpPMnU0UkKL9-PeN5MnMBSLV9HCkuzJT3g47X_jkz-a_E2_BzZqZvWJrEKl-TR1NbEGyd-QOYg=w1272-h640-no" class="center img-zoomable" alt="Screen2" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3e2vKJQmuKlTVEAJ88cMpwZBqYB05bvn23YiBIITp8wQ4EKct_hx56i0QFq6Fhhx1novqwDOLs0kyxpPMnU0UkKL9-PeN5MnMBSLV9HCkuzJT3g47X_jkz-a_E2_BzZqZvWJrEKl-TR1NbEGyd-QOYg=w1272-h640-no" class="center img-zoomable lazyload" alt="Screen2"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Screen2</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3e2vKJQmuKlTVEAJ88cMpwZBqYB05bvn23YiBIITp8wQ4EKct_hx56i0QFq6Fhhx1novqwDOLs0kyxpPMnU0UkKL9-PeN5MnMBSLV9HCkuzJT3g47X_jkz-a_E2_BzZqZvWJrEKl-TR1NbEGyd-QOYg=w1272-h640-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol><li>首先是畫面進入及離開，因為在 AI2 中對 TextBox 作修改是無法儲存的，關閉 App 重開後會恢復，所以這裡採用建議的方式：用 TinyDB 當作儲存空間。那紫色的兩個 procedure 將在稍候提到。主要就是用來讓設定可以被儲存。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dZJnlJPYoM8IWlwit56aajeQJuqncIQu5uY5sh1pZIxoxaCayShM1Ay7BmT2j6S5MxmrNmMAf7BGEfBvJaglWr6GqP_vE4eu3d8eVXRie1sVBmiwzBVQJ3knwwkcTK-V7lrddQ4lIuC7PrbM9Og8vz=w285-h219-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dZJnlJPYoM8IWlwit56aajeQJuqncIQu5uY5sh1pZIxoxaCayShM1Ay7BmT2j6S5MxmrNmMAf7BGEfBvJaglWr6GqP_vE4eu3d8eVXRie1sVBmiwzBVQJ3knwwkcTK-V7lrddQ4lIuC7PrbM9Og8vz=w285-h219-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dZJnlJPYoM8IWlwit56aajeQJuqncIQu5uY5sh1pZIxoxaCayShM1Ay7BmT2j6S5MxmrNmMAf7BGEfBvJaglWr6GqP_vE4eu3d8eVXRie1sVBmiwzBVQJ3knwwkcTK-V7lrddQ4lIuC7PrbM9Og8vz=w285-h219-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="2"><br/><li>點擊按鈕後傳送對應的連結給 Screen 2 當作瀏覽連結，這裡我有點懶所以命名就大致上不更改@@，值得注意的是，這裡看到傳入 TextBox 的值，可是剛剛畫面上沒看到 TextBox 啊，其實是我隱藏起來了，將 visiable 設定為 false，按下設定才會顯示。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3cNajTDVEms6BWCGBHIX63Fd96YTILkirW2p1q-3ZP_hStceuVfYwJaYOU5hTqFINqrGtgCQfCPL0ggoefHZNOnq5bQMG4QdZdPCoPtc-3NVfHMrlOabF64OWSOJLnnsoRCA3XgfSDlXf3VXROB5GxR=w592-h299-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3cNajTDVEms6BWCGBHIX63Fd96YTILkirW2p1q-3ZP_hStceuVfYwJaYOU5hTqFINqrGtgCQfCPL0ggoefHZNOnq5bQMG4QdZdPCoPtc-3NVfHMrlOabF64OWSOJLnnsoRCA3XgfSDlXf3VXROB5GxR=w592-h299-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3cNajTDVEms6BWCGBHIX63Fd96YTILkirW2p1q-3ZP_hStceuVfYwJaYOU5hTqFINqrGtgCQfCPL0ggoefHZNOnq5bQMG4QdZdPCoPtc-3NVfHMrlOabF64OWSOJLnnsoRCA3XgfSDlXf3VXROB5GxR=w592-h299-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="3"><br/><li>Screen 2 接收剛剛傳的連結後當作首頁畫面，Screen 2 也就只有這個方塊。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3e6D9aJTo3gFXSJfGY-iZRUp-u_KXDHUEJFF8QUDn5Jldo8X0lMhkwOa8x4xL3KqFa4kSqFbCDj7PzP-P_-UNhxP5EtyR0DqAEk67CtIQOMSGOa6OMOCo9euneoXM1NScigiOmUBofdCfifTklbz5uT=w521-h200-no" class="center img-zoomable" alt="Screen2" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3e6D9aJTo3gFXSJfGY-iZRUp-u_KXDHUEJFF8QUDn5Jldo8X0lMhkwOa8x4xL3KqFa4kSqFbCDj7PzP-P_-UNhxP5EtyR0DqAEk67CtIQOMSGOa6OMOCo9euneoXM1NScigiOmUBofdCfifTklbz5uT=w521-h200-no" class="center img-zoomable lazyload" alt="Screen2"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Screen2</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3e6D9aJTo3gFXSJfGY-iZRUp-u_KXDHUEJFF8QUDn5Jldo8X0lMhkwOa8x4xL3KqFa4kSqFbCDj7PzP-P_-UNhxP5EtyR0DqAEk67CtIQOMSGOa6OMOCo9euneoXM1NScigiOmUBofdCfifTklbz5uT=w521-h200-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="4"><br/><li>這裡就是我在 2. 中提到的，按設定的按鈕會顯示設定</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3f_jBNSwSu_p9eWDv0JXn71OjRa06_utd5xEswjfv0jJzZ37yEsERkJhZWAF8dZjET5kNbGcIPxv69s5IJ3yi-zi0bhSXjBuRZeXrjV8LpzEZ-j0R-kDJC6gMraE-fKY-1B9SvYuK-ACQN2biQz7gCe=w465-h160-no" class="center img-zoomable" alt="Setting section" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3f_jBNSwSu_p9eWDv0JXn71OjRa06_utd5xEswjfv0jJzZ37yEsERkJhZWAF8dZjET5kNbGcIPxv69s5IJ3yi-zi0bhSXjBuRZeXrjV8LpzEZ-j0R-kDJC6gMraE-fKY-1B9SvYuK-ACQN2biQz7gCe=w465-h160-no" class="center img-zoomable lazyload" alt="Setting section"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Setting section</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3f_jBNSwSu_p9eWDv0JXn71OjRa06_utd5xEswjfv0jJzZ37yEsERkJhZWAF8dZjET5kNbGcIPxv69s5IJ3yi-zi0bhSXjBuRZeXrjV8LpzEZ-j0R-kDJC6gMraE-fKY-1B9SvYuK-ACQN2biQz7gCe=w465-h160-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="5"><br/><li>在 4. 中設定的部份會需要儲存到 TinyDB 中。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3ctSw-g3InpKnt1QyfG7yu4i5nKUx_671d5lJf6lmI4rxnGNUPmnw0iZNa7TZHgvS3nbeRoQc3muMyjZhg6K1iyHWZ2jpAjMt7jyZ2hwX5my6GPAUpH3TW48aaNVq1gcDnAfyDWo0fcgZnbwWdLTG1s=w449-h290-no" class="center img-zoomable" alt="Set button" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3ctSw-g3InpKnt1QyfG7yu4i5nKUx_671d5lJf6lmI4rxnGNUPmnw0iZNa7TZHgvS3nbeRoQc3muMyjZhg6K1iyHWZ2jpAjMt7jyZ2hwX5my6GPAUpH3TW48aaNVq1gcDnAfyDWo0fcgZnbwWdLTG1s=w449-h290-no" class="center img-zoomable lazyload" alt="Set button"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Set button</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3ctSw-g3InpKnt1QyfG7yu4i5nKUx_671d5lJf6lmI4rxnGNUPmnw0iZNa7TZHgvS3nbeRoQc3muMyjZhg6K1iyHWZ2jpAjMt7jyZ2hwX5my6GPAUpH3TW48aaNVq1gcDnAfyDWo0fcgZnbwWdLTG1s=w449-h290-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="6"><br/><li>最後，把 TextBox 存取 TinyDB 的動作寫成 procedure，這樣比較清楚。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fuQeIoXDp-C0TvgNpIznR4JRc9DS0LNSmCg0kfnQbSz3r_FlL3sxPNhAg4PG_OWO0tixY_v9-p9tlfMDECuiPBbu3HDHNDPLFsoXp_3S2Zduhvrc4Q24jfEasuM55IkriY7mdfDjI5nVVFbK_6ywRR=w668-h1038-no" class="center img-zoomable" alt="" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fuQeIoXDp-C0TvgNpIznR4JRc9DS0LNSmCg0kfnQbSz3r_FlL3sxPNhAg4PG_OWO0tixY_v9-p9tlfMDECuiPBbu3HDHNDPLFsoXp_3S2Zduhvrc4Q24jfEasuM55IkriY7mdfDjI5nVVFbK_6ywRR=w668-h1038-no" class="center img-zoomable lazyload" alt=""<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fuQeIoXDp-C0TvgNpIznR4JRc9DS0LNSmCg0kfnQbSz3r_FlL3sxPNhAg4PG_OWO0tixY_v9-p9tlfMDECuiPBbu3HDHNDPLFsoXp_3S2Zduhvrc4Q24jfEasuM55IkriY7mdfDjI5nVVFbK_6ywRR=w668-h1038-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><ol start="7"><br/><li>額外功能。開啟相機掃描 QRcode 並複製到剪貼簿，這裡需要安裝一個外掛套件 <br/><br/><a href="https://puravidaapps.com/clipboard.php" target="_blank" rel="noreferrer noopener">Clipboard Extension</a>，另外記得取消勾選BarcodeScanner1 的 UseExternalScanner 直接使用內建的即可。會多這個功能主要是可以用在電子發票上，在記帳前可以先掃描，之後直接複製到備註那邊即可。</li></ol><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3c-baXvN_ippYf4tCbROQDqkwHjfknfbXDqdElVdxzrL59g3gnELs3BUf2Ep_xsxMGlpB9Hv7SCx8oWR5wzQ8ERxKR8UTf7qtScZWZwMu9pbp4PmYYVQavRyFq_JKcg6vFP5bARTyCiu73obddk6AJC=w401-h272-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3c-baXvN_ippYf4tCbROQDqkwHjfknfbXDqdElVdxzrL59g3gnELs3BUf2Ep_xsxMGlpB9Hv7SCx8oWR5wzQ8ERxKR8UTf7qtScZWZwMu9pbp4PmYYVQavRyFq_JKcg6vFP5bARTyCiu73obddk6AJC=w401-h272-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3c-baXvN_ippYf4tCbROQDqkwHjfknfbXDqdElVdxzrL59g3gnELs3BUf2Ep_xsxMGlpB9Hv7SCx8oWR5wzQ8ERxKR8UTf7qtScZWZwMu9pbp4PmYYVQavRyFq_JKcg6vFP5bARTyCiu73obddk6AJC=w401-h272-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="成品" class="article-heading">成品 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%90%e5%93%81"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>感覺我也不算是做一個記帳 App，反而像是將書籤或是網址合併變成一個 App，所我雖然取這個名子不過我還是找一個沒有跟錢相關的 icon。我也增加設定頁面可以設定的東西，包括按鈕的文字也可以換，所以也就不限於記帳了。</p><p>Icons made by <br/><br/><a href="https://smashicons.com/" target="_blank" rel="noreferrer noopener">Smashicons</a> from <br/><br/><a href="https://www.flaticon.com/" target="_blank" rel="noreferrer noopener">www.flaticon.com</a></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dCHkhaKSt4Pe-t7pRfxzxIkU9A_MWEyLR0svdl1wfinZR2ZWCTHdPAPFcmO0ZvBb8zNxEeMLkDC8hIWSV3dGmKY_CWAYZmojmgoma500tOE_9fMUyDH3nY0faL-9rCjL-91-TE52bD_NTjXlzn55CU=w660-h1319-no" class="center img-zoomable" alt=" " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dCHkhaKSt4Pe-t7pRfxzxIkU9A_MWEyLR0svdl1wfinZR2ZWCTHdPAPFcmO0ZvBb8zNxEeMLkDC8hIWSV3dGmKY_CWAYZmojmgoma500tOE_9fMUyDH3nY0faL-9rCjL-91-TE52bD_NTjXlzn55CU=w660-h1319-no" class="center img-zoomable lazyload" alt=" "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dCHkhaKSt4Pe-t7pRfxzxIkU9A_MWEyLR0svdl1wfinZR2ZWCTHdPAPFcmO0ZvBb8zNxEeMLkDC8hIWSV3dGmKY_CWAYZmojmgoma500tOE_9fMUyDH3nY0faL-9rCjL-91-TE52bD_NTjXlzn55CU=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3er9oo-dAdEogzgXc41sHDxnVwKEkUQc0l36X0jxzWBpb92QlXhWG6E7__NLzf9SarSWnkUIMytNOhLRCXg5ur5F9_DcTGqRs6pYsgzE7htPymKKSPlUigLhhJbOe5KgmmHm2vRSf3gAodtYE0m83Dh=w660-h1319-no" class="center img-zoomable" alt="主頁面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3er9oo-dAdEogzgXc41sHDxnVwKEkUQc0l36X0jxzWBpb92QlXhWG6E7__NLzf9SarSWnkUIMytNOhLRCXg5ur5F9_DcTGqRs6pYsgzE7htPymKKSPlUigLhhJbOe5KgmmHm2vRSf3gAodtYE0m83Dh=w660-h1319-no" class="center img-zoomable lazyload" alt="主頁面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">主頁面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3er9oo-dAdEogzgXc41sHDxnVwKEkUQc0l36X0jxzWBpb92QlXhWG6E7__NLzf9SarSWnkUIMytNOhLRCXg5ur5F9_DcTGqRs6pYsgzE7htPymKKSPlUigLhhJbOe5KgmmHm2vRSf3gAodtYE0m83Dh=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3ev0_9UxWRs2TNPcc947ntp3ncr_Tkl8E_mYhJWHBTOlMeWi9GEbFH0H_j7iXEQyYsnGhu2-hxX2t12ktLjV0-tB5RKV9M292ZcbKR9-KMBRa-nCNzV5QxBkpHGM4-bc5B3pHNr0EPA1DOuaOB2pzog=w660-h1319-no" class="center img-zoomable" alt="設定頁面" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3ev0_9UxWRs2TNPcc947ntp3ncr_Tkl8E_mYhJWHBTOlMeWi9GEbFH0H_j7iXEQyYsnGhu2-hxX2t12ktLjV0-tB5RKV9M292ZcbKR9-KMBRa-nCNzV5QxBkpHGM4-bc5B3pHNr0EPA1DOuaOB2pzog=w660-h1319-no" class="center img-zoomable lazyload" alt="設定頁面"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">設定頁面</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3ev0_9UxWRs2TNPcc947ntp3ncr_Tkl8E_mYhJWHBTOlMeWi9GEbFH0H_j7iXEQyYsnGhu2-hxX2t12ktLjV0-tB5RKV9M292ZcbKR9-KMBRa-nCNzV5QxBkpHGM4-bc5B3pHNr0EPA1DOuaOB2pzog=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3cg3mhLJEIYy3tIRsOxqJr3PiOjmWaEc6ho6npj1Q69AgaCnIbU073VmOqbA2DULN1r9mfN7CI57ZOW_9ZrDKhtEkyU65zBAy9lu7i7gaNUr8e1f2Vo3QodWIKZDBjKHeCMgC1GNwcuh_yJxr-sR7k6=w660-h1319-no" class="center img-zoomable" alt="消費記錄，連額頭網址列都消失了，舒服 OuO" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3cg3mhLJEIYy3tIRsOxqJr3PiOjmWaEc6ho6npj1Q69AgaCnIbU073VmOqbA2DULN1r9mfN7CI57ZOW_9ZrDKhtEkyU65zBAy9lu7i7gaNUr8e1f2Vo3QodWIKZDBjKHeCMgC1GNwcuh_yJxr-sR7k6=w660-h1319-no" class="center img-zoomable lazyload" alt="消費記錄，連額頭網址列都消失了，舒服 OuO"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">消費記錄，連額頭網址列都消失了，舒服 OuO</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3cg3mhLJEIYy3tIRsOxqJr3PiOjmWaEc6ho6npj1Q69AgaCnIbU073VmOqbA2DULN1r9mfN7CI57ZOW_9ZrDKhtEkyU65zBAy9lu7i7gaNUr8e1f2Vo3QodWIKZDBjKHeCMgC1GNwcuh_yJxr-sR7k6=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3fEqBTRnMchjOpS4SqzjifLk05CXdQuQQ-9I0Ve_quNnRtTz07Cv6rdSh2s5R4H5B08zy1eEEJsJoyEVkaep0PZ4upa1D5eyteMM1A1-aXwAlLYymFscg2z73dx4UDiAq4kn3EOkbHVwVNi7SHK5VXZ=w660-h1319-no" class="center img-zoomable" alt="轉帳記錄" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3fEqBTRnMchjOpS4SqzjifLk05CXdQuQQ-9I0Ve_quNnRtTz07Cv6rdSh2s5R4H5B08zy1eEEJsJoyEVkaep0PZ4upa1D5eyteMM1A1-aXwAlLYymFscg2z73dx4UDiAq4kn3EOkbHVwVNi7SHK5VXZ=w660-h1319-no" class="center img-zoomable lazyload" alt="轉帳記錄"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">轉帳記錄</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3fEqBTRnMchjOpS4SqzjifLk05CXdQuQQ-9I0Ve_quNnRtTz07Cv6rdSh2s5R4H5B08zy1eEEJsJoyEVkaep0PZ4upa1D5eyteMM1A1-aXwAlLYymFscg2z73dx4UDiAq4kn3EOkbHVwVNi7SHK5VXZ=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3dMfTlxaQfdxv0wXs3JRymXiUE9ZYfW6e-fUDP2N7ABITWv_f0aULXvR8NrLMLjPRDDH9HqAKd5OvDxGjP7auQG6-lwY60N5a2h1L-m9loZD2VU3-yFNFALtn4Jq0q648kG2oHz3xZB2U5lhew98PKa=w660-h1319-no" class="center img-zoomable" alt="報表，就是畫幾張圖用手機開的感覺" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3dMfTlxaQfdxv0wXs3JRymXiUE9ZYfW6e-fUDP2N7ABITWv_f0aULXvR8NrLMLjPRDDH9HqAKd5OvDxGjP7auQG6-lwY60N5a2h1L-m9loZD2VU3-yFNFALtn4Jq0q648kG2oHz3xZB2U5lhew98PKa=w660-h1319-no" class="center img-zoomable lazyload" alt="報表，就是畫幾張圖用手機開的感覺"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">報表，就是畫幾張圖用手機開的感覺</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3dMfTlxaQfdxv0wXs3JRymXiUE9ZYfW6e-fUDP2N7ABITWv_f0aULXvR8NrLMLjPRDDH9HqAKd5OvDxGjP7auQG6-lwY60N5a2h1L-m9loZD2VU3-yFNFALtn4Jq0q648kG2oHz3xZB2U5lhew98PKa=w660-h1319-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://leadingmrk.com/google-sheet-form-account-book/" target="_blank" rel="noreferrer noopener">【Google表單記帳術】史上最完整雲端記帳本打造教學！1小時內開始用表單記帳，免費又方便！</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://blog.miniasp.com/post/2014/07/17/Create-Google-Forms-with-Pre-filled-Responses" target="_blank" rel="noreferrer noopener">Google 表單如何設定欄位預設值（可從網址列變更預設值）</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>C++ Get Pretty Type Name</title><link>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</link><pubDate>Fri, 10 Jul 2020 13:36:58 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</guid><description><![CDATA[
           <br/><p>最近狂看 C++ 的東西，明明這麼複雜，可是真香 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>最近狂看 C++ 的東西，明明這麼複雜，可是真香 OuO</p><h1 id="tldr" class="article-heading">tl;dr <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;typeinfo&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;cxxabi.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> T<span style="color:#f92672">&gt;</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>string get_type_name(<span style="color:#66d9ef">const</span> T variable) {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> name <span style="color:#f92672">=</span> <span style="color:#66d9ef">typeid</span>(variable).name();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> status <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> demangled_name <span style="color:#f92672">=</span> abi<span style="color:#f92672">::</span>__cxa_demangle(name, NULL, NULL, <span style="color:#f92672">&amp;</span>status);<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>string ret{name};<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (status <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) {<br/></span></span><span style="display:flex;"><span>        ret <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>string(demangled_name);<br/></span></span><span style="display:flex;"><span>        free(demangled_name);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> ret;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h1 id="typeid-operator" class="article-heading">typeid operator <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#typeid-operator"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>在 <code>typeinfo</code> 中有提供 <code>typeid()</code> 可以取得 type 或是 expression (variable) 的名字  </p><br/><br/><h2 id="example" class="article-heading">Example <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;typeinfo&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span> () {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> a;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#66d9ef">typeid</span>(<span style="color:#66d9ef">int</span>).name() <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#66d9ef">typeid</span>(a).name() <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><p><br/><a href="https://godbolt.org/#g:!%28%28g:!%28%28g:!%28%28h:codeEditor,i:%28fontScale:14,j:1,lang:c%2B%2B,selection:%28endColumn:2,endLineNumber:8,positionColumn:1,positionLineNumber:1,selectionStartColumn:2,selectionStartLineNumber:8,startColumn:1,startLineNumber:1%29,source:%27%23include&#43;%3Ciostream%3E%0A%23include&#43;%3Ctypeinfo%3E%0A%0Aint&#43;main&#43;%28%29&#43;%7B%0A&#43;&#43;&#43;&#43;int&#43;a%3B%0A&#43;&#43;&#43;&#43;std::cout&#43;%3C%3C&#43;typeid%28int%29.name%28%29&#43;%3C%3C&#43;!%27%5Cn!%27%3B%0A&#43;&#43;&#43;&#43;std::cout&#43;%3C%3C&#43;typeid%28a%29.name%28%29&#43;%3C%3C&#43;!%27%5Cn!%27%3B%0A%7D%27%29,l:%275%27,n:%270%27,o:%27C%2B%2B&#43;source&#43;%231%27,t:%270%27%29%29,k:50,l:%274%27,n:%270%27,o:%27%27,s:0,t:%270%27%29,%28g:!%28%28g:!%28%28h:compiler,i:%28compiler:g83,filters:%28b:%270%27,binary:%271%27,commentOnly:%270%27,demangle:%270%27,directives:%270%27,execute:%270%27,intel:%270%27,libraryCode:%271%27,trim:%271%27%29,fontScale:14,j:1,lang:c%2B%2B,libs:!%28%29,options:%27-Ofast%27,selection:%28endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1%29,source:1%29,l:%275%27,n:%270%27,o:%27x86-64&#43;gcc&#43;8.3&#43;%28Editor&#43;%231,&#43;Compiler&#43;%231%29&#43;C%2B%2B%27,t:%270%27%29%29,k:50,l:%274%27,m:78.34710743801652,n:%270%27,o:%27%27,s:0,t:%270%27%29,%28g:!%28%28h:output,i:%28compiler:1,editor:1,fontScale:14,wrap:%271%27%29,l:%275%27,n:%270%27,o:%27%231&#43;with&#43;x86-64&#43;gcc&#43;8.3%27,t:%270%27%29%29,header:%28%29,l:%274%27,m:21.65289256198347,n:%270%27,o:%27%27,s:0,t:%270%27%29%29,k:50,l:%273%27,n:%270%27,o:%27%27,t:%270%27%29%29,l:%272%27,n:%270%27,o:%27%27,t:%270%27%29%29,version:4" target="_blank" rel="noreferrer noopener">[run]</a></p><p>不過像是 int 只能顯示 i，其他複雜的顯示也不直觀，主要是因為 C++ 會對於型別做修飾 (Name mangling  )，這也是為何 C++ 能夠支援 function overloading，因為編譯過程中型別都會轉成獨一無二的表達方式所以不會造成衝突。</p><br/><br/><h1 id="demangle" class="article-heading">Demangle <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#demangle"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>在 <code>&lt;cxxabi.h&gt;</code> 中有提供方法可以讓經過 mangle 的型別轉回可讀性較高的字串。以下範例與上述提到的方法進行比較。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;iostream&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;string&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;typeinfo&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;cxxabi.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">template</span><span style="color:#f92672">&lt;</span><span style="color:#66d9ef">typename</span> T<span style="color:#f92672">&gt;</span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">const</span> std<span style="color:#f92672">::</span>string get_type_name(<span style="color:#66d9ef">const</span> T variable) {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> name <span style="color:#f92672">=</span> <span style="color:#66d9ef">typeid</span>(variable).name();<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> status <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> demangled_name <span style="color:#f92672">=</span> abi<span style="color:#f92672">::</span>__cxa_demangle(name, NULL, NULL, <span style="color:#f92672">&amp;</span>status);<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>string ret{name};<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (status <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) {<br/></span></span><span style="display:flex;"><span>        ret <span style="color:#f92672">=</span> std<span style="color:#f92672">::</span>string(demangled_name);<br/></span></span><span style="display:flex;"><span>        free(demangled_name);<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> ret;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">namespace</span> OuO<span style="color:#f92672">::</span>QuQ {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Foo</span> { };<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">template</span> <span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> size<span style="color:#f92672">&gt;</span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">Bar</span> { };<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">using</span> Foo <span style="color:#f92672">=</span> OuO<span style="color:#f92672">::</span>QuQ<span style="color:#f92672">::</span>Foo;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span> () {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> a;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#66d9ef">typeid</span>(a).name() <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> get_type_name(a) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    Foo b;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#66d9ef">typeid</span>(b).name() <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> get_type_name(b) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    OuO<span style="color:#f92672">::</span>QuQ<span style="color:#f92672">::</span>Bar<span style="color:#f92672">&lt;</span><span style="color:#ae81ff">99</span><span style="color:#f92672">&gt;</span> c;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> <span style="color:#66d9ef">typeid</span>(c).name() <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span>    std<span style="color:#f92672">::</span>cout <span style="color:#f92672">&lt;&lt;</span> get_type_name(c) <span style="color:#f92672">&lt;&lt;</span> <span style="color:#e6db74">&#39;\n&#39;</span>;<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><p><br/><a href="https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAM1QDsCBlZAQwBtMQBGAFlICsupVs1qhkAUgBMAISnTSAZ0ztkBPHUqZa6AMKpWAVwC2tQVvQAZPLUwA5YwCNMxEAGYA7KQAOqBYXW0eoYmgj5%2BanRWNvZGTi4eisqYqgEMBMzEBEHGppyJKhG0aRkEUXaOzm6eCumZ2SF5NSVlMXFVAJSKqAbEyBwA5FKu1siGWADU4q466jXEmMxGU9jiAAwAgkMjY5iT03PWwMtrm5LDtKMGE1M6BACeXpjWNMcbWxc7ezrIAB4/zA48AA6BCvTZvDYETBGLzCKE3e6PWiLXYAFTBaFoNXGNXQIBAB1E42AmAIAH1EZgycijJgIJjsajxgA3DJ4AHsdqTdyyDbjfnjBkEQUIDIAKkFdGxNN2UwAIuNKXh0BBWcR2Q5OUCZRB2lNeesBeNrMKmgQDAo9gqALTcfUnI3IUXECVC8ZYIwiYDsdDUlFW8YAiggMlk37MMker3sCAy0jjWwAVQsFnjSZT8akADYzRa9a4DUbcfjCcBxvMCOIeTKq3L7XyBXgqOMILnLfL5eNVlyq4WjQKKwHiwSCOrRBAo6IfX7afm%2B/3xlR5nTJ97ML6ZXOHQLa9v%2BRWerRy6T65t3HWIesZQovMw%2BuMAPIGB/4gCKBlf3PnONHBlU4wAMVQVAv25OsCxOPdFWhWFmChL4DCxPBgBsdBjXoHE8AAL0wMEi1/f9pAyUDdwgt5zxOC1DkA4CAyfF8QHfV98SA1BT0gjYTXGT1rBbHseSgrjmFPfC8RQbphRuG5FQeJ4VWYdptRRXUvmksBBgAVh0Wh1JEgVhzQAxJOmaSSXJSkZzpBTVOmcZdK0nTBjI8FDQFVjxgcPT%2BQMiSbJ0GTHmVCAHEUnUexM2z7O03TnNE/FDOMnRTNJClZMs4LwqSyLNOipyDSg%2Bi3w/fEiOIG4AE5yuWQUvJ/MSEr8gK5PpULlMytScsc2qfKMxqzNSx50uQdrsvEByYvyht91JQ8u3Y89%2Bk6VgQH6DT%2BlIUx%2BlWdbUBWpKZDkHFul6WUzk4daCBW7b2k6ABrEANNWIQVu4dbNu20hdv6daFBAJ7Lq2xbSDgWAYEQcSYTwdgyAoelUEh6GQGAAAOVxSCoKGoWIX7gqu9bAWRYg7hW87SDQIxaXoB9aFYYnAdIVd2Dxhm8HmFJmUwX76cwH5kiMgYPpNZRmdYPAHGIDI7j0LASYu9UjFlzoaHoJg2A4Hh%2BEEYRRBQOQ5CEMXfsgTpUC8QouetXF5QkA6ZE4dxxmtB9XB%2BpIUg0CBzHqXJSHMFoKhcPIwn8OhvdCXwQ9of3YkqRo3cKYo6n0HJBCUApUlqUprHKGPA8UTOw8aTPo7aThOgUY6%2Bi4JaVrWjbma%2Bn5kaza0s24YlkGQcZkaBVwW1wQgSEmM74z0BHnGH1wy/GfbZBkC68Zu0h7se57%2Ble0gFazHv3CzVZXFcVYNPcZGNM4SReHenaVp%2Bv7SAB67gbBiAkAkrwjPIShya8KHY99/AiB52VowFgTMNYAHcJZeEVmvOuV9PorSGJwcY4DCAIHGE3FubcO5dx7i7e%2Bi9OgIAWFgFwuo14bwVlPIEZxypZizOVbgkgeDI13kfeu9Mvq33%2BoQ5eD0nrLX6Pg%2BBXCCGAyXoIyQb0G43zEddToHNsYBBANwIAA%3D" target="_blank" rel="noreferrer noopener">[run]</a></p><p>可以從結果看到後者可讀性較高</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" class="center img-zoomable" alt="封面照片 - 執行結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" class="center img-zoomable lazyload" alt="封面照片 - 執行結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">封面照片 - 執行結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>我發佈後才被 YouTube 推薦&hellip;，不過我最近也看一堆他的影片。<br/><br/><br/><br/><br/><br/><br/><br/> </p><br/><br/><h1 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://stackoverflow.com/a/19123821" target="_blank" rel="noreferrer noopener">C++ Get name of type in template</a></li><li><br/><br/><a href="https://stackoverflow.com/a/4541470" target="_blank" rel="noreferrer noopener">Unmangling the result of std::type_info::name</a></li></ul><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://en.cppreference.com/w/cpp/language/typeid" target="_blank" rel="noreferrer noopener">typeid operator</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://en.wikipedia.org/wiki/Name_mangling" target="_blank" rel="noreferrer noopener">Name mangling</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200508-miscellaneous0508/</link><pubDate>Fri, 08 May 2020 23:06:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200508-miscellaneous0508/</guid><description><![CDATA[
           <br/><p>考完囉，還有好多事@@</p>
          
            <p><a href="https://aben20807.github.io/posts/20200508-miscellaneous0508/"><img src="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200508-miscellaneous0508/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>考完囉，還有好多事@@</p><h1 id="天氣" class="article-heading">天氣 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>我是每天都要洗熱水澡的人，今天竟然不用開電熱水器就有熱水，賺。</p><p>天氣雖然熱，但是這幾天傍晚天空都很美 OuO</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" class="center img-zoomable" alt="封面照片 - 5/6" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" class="center img-zoomable lazyload" alt="封面照片 - 5/6"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">封面照片 - 5/6</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="考後反省" class="article-heading">考後反省 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%80%83%e5%be%8c%e5%8f%8d%e7%9c%81"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>有一題 NPDA 確定錯，不過其他也不保證對 QuQ</p><p>題目跟答案如下：</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://gateoverflow.in/?qa=blob&amp;qa_blobid=15483797651626709437" class="center img-zoomable" alt="來源" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://gateoverflow.in/?qa=blob&amp;qa_blobid=15483797651626709437" class="center img-zoomable lazyload" alt="來源"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">來源</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://gateoverflow.in/?qa=blob&amp;qa_blobid=15483797651626709437" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure>  </p><p>我真的沒想到可以 push 任意 1~3 個這種作法，我的回答就說不能同時存 n 跟 3n 的資訊所以不是 Context Free 因此找不到 NPDA，寫這種答案都會很懷疑自己，因為推翻題目的解法之前考古都沒有過。有人可能只 push 3 個，這樣無法保證大於 n，可是這種應該會被部份給分吧。寫過題目的人可能才會意識到寫我這種的可能要給更多部份分 (自己講XDD)，可是我這種想的比較周全啊，結果卻是全錯 QuQ</p><br/><br/><h1 id="鋼琴推薦-ludovico-einaudi---nuvole-bianche" class="article-heading">鋼琴推薦 Ludovico Einaudi - Nuvole Bianche <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8b%bc%e7%90%b4%e6%8e%a8%e8%96%a6-ludovico-einaudi---nuvole-bianche"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>我忘記之前有沒有分享過。這是我小時候 (大一 or 大二) 在 C++ 助教的 FB 發現他有分享，真的很耐聽，我可以重複這首邊做事一整天。歌名是義大利文，翻譯是 white clouds，不過若是翻成中文就變成白雲，雖然這個梗可能有年紀了，不過我這輩的應該都還是有聽過這個藝人，之後可能就可以直接用中文說歌名而不會有其他聯想了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/nGdLDnNyT3t-GAiJLcxPfNVIuoEl_EelGs9VBAgRQ6s0K37bK5cYnNc3UA5uY6fv98fC5VbQ96jzo5jtNJJDG-WenPQc-EaJdegb9xDOxDG2A8QvX-stQDuPKj5oGm6e-MQGrYc9jBU=w1292-h229-no" class="center img-zoomable" alt="Ludovico Einaudi - Nuvole Bianche" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/nGdLDnNyT3t-GAiJLcxPfNVIuoEl_EelGs9VBAgRQ6s0K37bK5cYnNc3UA5uY6fv98fC5VbQ96jzo5jtNJJDG-WenPQc-EaJdegb9xDOxDG2A8QvX-stQDuPKj5oGm6e-MQGrYc9jBU=w1292-h229-no" class="center img-zoomable lazyload" alt="Ludovico Einaudi - Nuvole Bianche"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">Ludovico Einaudi - Nuvole Bianche</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/nGdLDnNyT3t-GAiJLcxPfNVIuoEl_EelGs9VBAgRQ6s0K37bK5cYnNc3UA5uY6fv98fC5VbQ96jzo5jtNJJDG-WenPQc-EaJdegb9xDOxDG2A8QvX-stQDuPKj5oGm6e-MQGrYc9jBU=w1292-h229-no" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><br/><br/><br/><br/><br/> <br/><br/><br/><h1 id="圖床" class="article-heading">圖床 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%96%e5%ba%8a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>昨天突然發現，我可以把圖片用學校 google 帳號備份啊，這樣我可以直接傳原圖而且無限空間，之後的圖床也會改用 google photo 了，解釋起來麻煩，總之各種面向來說都比較方便 OuO</p><p>話說好像太多影片檔所以到現在還沒備份完，我都用長鏡頭拍老鼠，考驗演技 (x</p><br/><br/><h1 id="雜" class="article-heading">雜 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%9c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近晚上實驗試都剩下我一個，突然覺得有點孤單XDD</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://gateoverflow.in/174614/identify-the-language?show=174677#c174677" target="_blank" rel="noreferrer noopener">https://gateoverflow.in/174614/identify-the-language?show=174677#c174677</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200505-miscellaneous0505/</link><pubDate>Tue, 05 May 2020 21:33:50 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200505-miscellaneous0505/</guid><description><![CDATA[
           <br/><p>要考試了好不想寫考古 (x</p>
          
            <p><a href="https://aben20807.github.io/posts/20200505-miscellaneous0505/"><img src="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200505-miscellaneous0505/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>要考試了好不想寫考古 (x</p><h1 id="天氣" class="article-heading">天氣 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>五月突然變得超熱，這樣六、七、八月要怎麼過？QuQ</p><br/><br/><h1 id="人生好難xd" class="article-heading">人生好難XD <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%ba%ba%e7%94%9f%e5%a5%bd%e9%9b%a3xd"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>人真的是頗複雜的動物，思想難以輕易被解讀，內心會自己額外腦補一段，但是又怕是自己過度解讀造成的誤解。</p><p>會變成木頭不是沒有道理，因為感覺大家好像都想說什麼卻又沒說出來，我不太想製造不必要的麻煩，所以盡量不要去過度解讀，就算有也只放在心裡當做腦補區塊就是。但是好像又需要把握什麼。老實講這是我在住宿公寓看到一個長的算漂亮的女生卻把整包回收丟到一般垃圾之後突然產生的感想，若是不把握之後遇到都是這種的怎麼辦? 有這個聯想是有些奇怪XDD</p><p>高中班導曾經在上課提到挑情人的數學問題 <br/><br/><a href="https://en.m.wikipedia.org/wiki/Secretary_problem" target="_blank" rel="noreferrer noopener">Secretary problem</a>，就像是當你放棄了目前的，那有一定機率再也遇不到更好的。</p><p>真是煩</p><blockquote><p>人生好難XD</p></blockquote><p>終於漸漸知道前室友為什麼每天掛在嘴邊了，原來是每天都在取捨的部份 OuO</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" class="center img-zoomable" alt="封面照片 - 5/3 全家爬員林藤山步道隨手拍" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" class="center img-zoomable lazyload" alt="封面照片 - 5/3 全家爬員林藤山步道隨手拍"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">封面照片 - 5/3 全家爬員林藤山步道隨手拍</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>這代表我現在是有這個煩惱？果然是因為事情都擠在一起不想做，喜歡胡思亂想的部份啊。</p><br/><br/><h1 id="資格考的意義" class="article-heading">資格考的意義？ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e6%a0%bc%e8%80%83%e7%9a%84%e6%84%8f%e7%be%a9"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>或許有這個疑慮代表我還是屁孩。</p><p>到底為什麼博士班需要考資格考，而且是筆試基礎科目。若是為了在就讀期間確認有一定能力或許是最好的解答，但我不太能認可，沒有能力還能讀嗎？這些考科都算是系上的必修科目，而且老實說，課堂的考試可能都還比資格考難。</p><p>必修的考試會出的繁瑣 (至少 compiler 是這樣)，主要是讓學生能夠靜下心在考試當下思考所學，雖然多但是會發現慢慢寫還是寫得完，除非是沒讀書。</p><p>但是資格考好像不是這樣，而是流於寫考古題來通過考試的形式，這讓我非常好奇資格考的意義。不過也沒管道可以反應，也只能繼續考下去。</p><p>我算是蠻會考試的，但都讀到這裡了還要考，對我來說只是複習一下，但不是說臺灣教育就是敗在考試制度嗎？真的都沒有人懷疑？好吧，我還只是個屁孩 OuO</p><p>希望這次考試順利通過 (被揍</p><br/><br/><h1 id="手機成癮" class="article-heading">手機成癮 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%89%8b%e6%a9%9f%e6%88%90%e7%99%ae"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>有點嚴重，前幾天睡前都在重新整理 YouTube 看有什麼沒看過的影片。覺得這樣不行，所以最近晚上會更早把手機開飛航，早上時也會起床一段時間再關飛航，聯絡不到先不要緊張，我還活著的機率頗大 OuO</p><br/><br/><h1 id="舊部落格" class="article-heading">舊部落格 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%8a%e9%83%a8%e8%90%bd%e6%a0%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>話說我的<br/><br/><a href="https://aben20807.blogspot.com/" target="_blank" rel="noreferrer noopener">舊部落格</a>竟然已經破20萬瀏覽，每天還是會有超過100人造訪，可能是因為我持續透過 IFTTT 更新，所以 SEO 還沒放棄我的網站，相較之下，這個網站觀看人數慘不忍睹XD</p><p>前幾天，去維護了一下那個網站，至少有把 LikeCoin 的按鈕修好，該貢獻一下了吧 (x</p>
        ]]></description></item><item><title>Shutil</title><link>https://aben20807.github.io/posts/20200420-shutil/</link><pubDate>Mon, 20 Apr 2020 16:20:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200420-shutil/</guid><description><![CDATA[
           
          
            <p><a href="https://aben20807.github.io/posts/20200420-shutil/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200420-shutil/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>在 <br/><br/><a href="https://github.com/aben20807/local-judge" target="_blank" rel="noreferrer noopener">local-judge</a> 中遇到一個關於檔案權限 (Filemode) 的問題，因為檔案權限不同導致 git 比對的結果會顯示兩個輸入不同：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>old mode <span style="color:#ae81ff">100644</span><br/></span></span><span style="display:flex;"><span>new mode <span style="color:#ae81ff">100755</span><br/></span></span></code></pre></div></div><p>原本我是用 subprocess 在比對之前執行 <code>chmod</code>，效果跟我想的是一樣的。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>chmod <span style="color:#f92672">--</span>reference<span style="color:#f92672">=</span>answer_filepath output_filepath<br/></span></span></code></pre></div></div><p>但是在解決另外一個複製的問題時，意外找到 <br/><br/><a href="https://docs.python.org/3/library/shutil.html#module-shutil" target="_blank" rel="noreferrer noopener">shutil</a>，這個工具提供一些檔案複製的函式，其中就有複製檔案權限的，而且竟然是 build-in module，因此我後來改用這個了。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>copymode(answer_filepath, output_filepath)<br/></span></span></code></pre></div></div><p>感覺雖然自己已經算是很會找現有的工具了，但是還是很多東西沒看過呢 OuO</p>
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200413-miscellaneous/</link><pubDate>Mon, 13 Apr 2020 21:06:45 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200413-miscellaneous/</guid><description><![CDATA[
           <br/><p>明明事情很多，卻無所事事游手好閒。</p>
          
            <p><a href="https://aben20807.github.io/posts/20200413-miscellaneous/"><img src="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200413-miscellaneous/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>明明事情很多，卻無所事事游手好閒。</p><h1 id="天氣" class="article-heading">天氣 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近天氣很常太陽很大，但卻感覺不到熱，只有陽光刺眼，可能是因為在同時冷風狂吹。這種天氣老實說很像之前去的美西那樣，但我又深怕是因為時過多年，大腦已經擅自將記憶修改成這樣的天氣會讓我想到那裡。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" class="center img-zoomable" alt="封面圖片 4/13 9:07 AM" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" class="center img-zoomable lazyload" alt="封面圖片 4/13 9:07 AM"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">封面圖片 4/13 9:07 AM</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>近期看到 FB 上許多認識的人去國外讀研究所，說認識其實是不算熟的人，僅僅是我們互相知道有對方這樣。感覺當初我沒有考慮是因為我太膽小了，害怕失敗，現在讀博之後這些問題又再一次出現，或許連留在成大也是上述那些問題，想自己未來要幹麻真難。</p><p>也許因為教別人是我逃不開的舒適圈，習慣不了被人拯救的自己，相對的也限制我成長的速度。不過世界上的強者太多，就拿 Google Code Jam 2020 Round 1A 來說，在兩個半小時中我好不容易才擠出兩題的最小測資的暴力解，結束後以為我再也不會碰這個了 (x)，結果因為近期無力做事，所以去找了一下別人的講解，我只有聽邏輯的部份沒有看他的程式碼，他邏輯解釋蠻清晰的，所以我就照著這個邏輯寫，結果兩題就都拿到全對了。附上<br/><br/><a href="https://www.youtube.com/watch?v=OlpC2d1Odrs" target="_blank" rel="noreferrer noopener">講解影片連結</a></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/Ft2HHye-9TCm-aHoORISDTXKbT8zaO1enDNm2jwl201gfX62yQafxhT1239-uQ7u_n7bpNujZ6u7LFJtrTLd-5hx0CF1Rw_XS4BfKhLqjHivSVMWJB7MjmNdWEjEZqDfLfhT1yr3Kec=w2400" class="center img-zoomable" alt="實力差距" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/Ft2HHye-9TCm-aHoORISDTXKbT8zaO1enDNm2jwl201gfX62yQafxhT1239-uQ7u_n7bpNujZ6u7LFJtrTLd-5hx0CF1Rw_XS4BfKhLqjHivSVMWJB7MjmNdWEjEZqDfLfhT1yr3Kec=w2400" class="center img-zoomable lazyload" alt="實力差距"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">實力差距</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/Ft2HHye-9TCm-aHoORISDTXKbT8zaO1enDNm2jwl201gfX62yQafxhT1239-uQ7u_n7bpNujZ6u7LFJtrTLd-5hx0CF1Rw_XS4BfKhLqjHivSVMWJB7MjmNdWEjEZqDfLfhT1yr3Kec=w2400" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>讓我想起這幾天實驗室學長再跟新生面試時提到</p><blockquote><p>重要的是想法，用什麼工具來實現都是其次</p></blockquote><br/><br/><br/><h1 id="手遊-非業配" class="article-heading">手遊 (非業配) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%89%8b%e9%81%8a-%e9%9d%9e%e6%a5%ad%e9%85%8d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>老實說，可能是因為最近沈迷新手遊，不過這款真的是我目前玩到我覺得最可以的手機遊戲，跟現在大部分都已經免洗化一兩年就砍掉的那種不一樣。它就是「明日方舟 Arknights」，老實說去年吧就看到另外一個學長在玩，那時候覺得塔防遊戲就都那樣，結果現在玩起來真的有驚豔到，界面流暢度一流 (可能是因為我之前都玩雷亞的每個都卡到爆炸)，玩法真的充滿變化，完全突破我的想像。</p><p>最令我印象深刻的是它的自動打怪模式可以中途接手，所以如果玩到一半發現有更快的解法可以臨時接手改變陣行。</p><p>可惜的是沒有掛機。但是，這遊戲讓我重新思考掛機的必要性，老實說掛機已經不算是遊玩的一部分，或許這是因為現在大家時間越來越零碎的產物，但是它犧牲了遊戲的體驗，玩家變成玩的是掛機模擬後的結果，中間的過程變得不再重要。是這遊戲讓我意識到過程的重要性。(雖然我是因為刪了不能掛機的 Evil Hunter Tycoon 才找到這款&hellip;)</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://lh3.googleusercontent.com/8Hr9P9sQx12ty-3wFnjoatYcOlEngUYxyikB0FZOEaCinXu1okPH-8PiGvob4PP5_PouZ-elcnFTTuUUjpp8rKiDVZt11ZPsxMLugX5SuD68t2-uKchZpfRvdXAhTrmGl7qavQsiPBk=w2400" class="center img-zoomable" alt="兩隻能天使 OuO" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://lh3.googleusercontent.com/8Hr9P9sQx12ty-3wFnjoatYcOlEngUYxyikB0FZOEaCinXu1okPH-8PiGvob4PP5_PouZ-elcnFTTuUUjpp8rKiDVZt11ZPsxMLugX5SuD68t2-uKchZpfRvdXAhTrmGl7qavQsiPBk=w2400" class="center img-zoomable lazyload" alt="兩隻能天使 OuO"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">兩隻能天使 OuO</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://lh3.googleusercontent.com/8Hr9P9sQx12ty-3wFnjoatYcOlEngUYxyikB0FZOEaCinXu1okPH-8PiGvob4PP5_PouZ-elcnFTTuUUjpp8rKiDVZt11ZPsxMLugX5SuD68t2-uKchZpfRvdXAhTrmGl7qavQsiPBk=w2400" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="結語" class="article-heading">結語 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>總之這幾天算是都在回課程的 email，然後主要進度都沒啥進展，paper 頗難寫，太多次都是手邊在忙時有想法，可是動筆時又卡住，可能跟兩個東西有關，第一，英文太爛，第二，太久沒寫東西，基於這些理由想到乾脆之後不定期發一下雜記 (雖然原本就是不定期 OuO)</p>
        ]]></description></item><item><title>20200202</title><link>https://aben20807.github.io/posts/20200202-20200202/</link><pubDate>Sun, 02 Feb 2020 11:14:20 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200202-20200202/</guid><description><![CDATA[
           <br/><p>Palindrome!</p>
          
            <p><a href="https://aben20807.github.io/posts/20200202-20200202/"><img src="https://drive.google.com/uc?export=view&amp;id=12Y9AlAEvGKF87LKqiDW_5waH4inUmwQN" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200202-20200202/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>Palindrome!</p><p>想當年，高中程式設計上機考最後一題就是迴文，當時能帶大抄，剛好有迴文所以就直接貼上了，<br/>記得打了一堆自己不太懂的程式碼。當時我左邊的同學霸氣不帶大抄，雖然他最後一題沒寫出來，不過卻令我相當佩服呢。</p><p>啊，完蛋，是字串反轉還是迴文判斷啊@@，算了，小時候的事了(x</p><p>因應時節(?)，所以寫了一個簡單的迴文檢測程式。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdlib.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;string.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">int</span> argc, <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>argv[]) {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>s <span style="color:#f92672">=</span> strdup(argv[<span style="color:#ae81ff">1</span>]);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> len <span style="color:#f92672">=</span> strlen(s);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> mid <span style="color:#f92672">=</span> len <span style="color:#f92672">/</span> <span style="color:#ae81ff">2</span>;<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> mid; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">if</span> (s[i] <span style="color:#f92672">!=</span> s[len <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">-</span> i]) {<br/></span></span><span style="display:flex;"><span>            printf(<span style="color:#e6db74">&#34;Not Palindrome QuQ</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">goto</span> exit;<br/></span></span><span style="display:flex;"><span>        }<br/></span></span><span style="display:flex;"><span>    }<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;Palindrome! OuO</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>exit:<br/></span></span><span style="display:flex;"><span>    free(s);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o palindrome palindrome.c<br/></span></span><span style="display:flex;"><span>$ ./palindrome <span style="color:#ae81ff">20200202</span><br/></span></span><span style="display:flex;"><span>Palindrome! OuO<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>$ ./palindrome <span style="color:#ae81ff">20200203</span><br/></span></span><span style="display:flex;"><span>Not Palindrome QuQ<br/></span></span></code></pre></div></div><p>下次迴文，要等到 20211202。再下一次，20300302。</p>
        ]]></description></item><item><title>Hugo v0.60</title><link>https://aben20807.github.io/posts/20191201-hugo-0-60/</link><pubDate>Sun, 01 Dec 2019 17:26:34 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191201-hugo-0-60/</guid><description><![CDATA[
           <br/><p>記錄一下 hugo 的改變 QuQ</p>
          
            <p><a href="https://aben20807.github.io/posts/20191201-hugo-0-60/"><img src="https://drive.google.com/uc?export=view&amp;id=1jp6mt3-fx1CAz5SIe5UPlUTuQTdAku9l" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191201-hugo-0-60/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>記錄一下 hugo 的改變 QuQ</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>因為實在改的有點多東西，直接在 FB 發(抱)文(怨)又有點沒架構，所以乾脆來個小整理。另外這也不是全部，主要是我有遇到的 QuQ</p><p>這裡主要是從 0.59 到 0.60   的一些記錄。</p><br/><br/><h1 id="不同之處" class="article-heading">不同之處 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8d%e5%90%8c%e4%b9%8b%e8%99%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="parser" class="article-heading">Parser <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#parser"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>最大不同就是 markdown parser 從原本的 <br/><br/><a href="https://github.com/russross/blackfriday" target="_blank" rel="noreferrer noopener">Blackfriday</a> 換成使用 <br/><br/><a href="https://github.com/yuin/goldmark/" target="_blank" rel="noreferrer noopener">Goldmark</a> 為預設了。所以有一堆是用 regex 改的內容全都要再改規則＠＠，例如 <code>&lt;img xxx /&gt;</code> 這類的 self-closing tags   把最後的 <code>/</code> 去掉了變成 <code>&lt;img xxx&gt;</code>，所以剛剛是看不到圖片的。我已經改成讓 <code>/</code> 可有可無了&hellip;</p><br/><br/><h2 id="footnote" class="article-heading">Footnote <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#footnote"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Footnote 的部份被大改了，產生的 html 跟原本的不太一樣，然後 0.60.1 好像有一些修改   ，所以可能還要再等等 QuQ，目前 snap 最新還在 0.60.0 所以還不能返回 (<code>footnoteAnchorPrefix</code>, <code>footnoteReturnLinkContents</code> 也還沒看到實作 )。之後還要加入 smooth scroll 讓捲動有動畫而不是直接跳 (這邊我也是用 regex)。</p><br/><br/><h2 id="預設不可以在-markdown-中使用-html" class="article-heading">預設不可以在 markdown 中使用 html <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%90%e8%a8%ad%e4%b8%8d%e5%8f%af%e4%bb%a5%e5%9c%a8-markdown-%e4%b8%ad%e4%bd%bf%e7%94%a8-html"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>如果有加一些非 markdown 語法的 html 的話預設會變成 <code>&lt;!-- raw HTML omitted --&gt;</code><br/>(例如從 google 雲端嵌入 pdf 檔案之類的)，如果想要修改這個預設   的話可以在 config.tmol 裡面加入</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-toml" data-lang="toml"><span style="display:flex;"><span>[<span style="color:#a6e22e">markup</span>]<br/></span></span><span style="display:flex;"><span>[<span style="color:#a6e22e">markup</span>.<span style="color:#a6e22e">goldmark</span>]<br/></span></span><span style="display:flex;"><span>[<span style="color:#a6e22e">markup</span>.<span style="color:#a6e22e">goldmark</span>.<span style="color:#a6e22e">renderer</span>]<br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">unsafe</span> = <span style="color:#66d9ef">true</span><br/></span></span></code></pre></div></div><br/><br/><h1 id="後記" class="article-heading">後記 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>J 個改變的速度其實有點小惱人，每次都想棄用 snap，但換個想法，這是走在世界的尖端啊 (x</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://github.com/gohugoio/hugo/releases/tag/v0.60.0" target="_blank" rel="noreferrer noopener">hugo v0.60.0 release</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://discuss.codecademy.com/t/no-ending-for-self-closing-link-element/201099" target="_blank" rel="noreferrer noopener">No ending &lsquo;/&rsquo; for self-closing link element?</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://github.com/gohugoio/hugo/issues/6551" target="_blank" rel="noreferrer noopener">Support footnote return links #6551</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://github.com/yuin/goldmark/blob/54fc7c3/extension/footnote.go#L236-L247" target="_blank" rel="noreferrer noopener">yuin/goldmark:236-247</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://gohugo.io/getting-started/configuration-markup/" target="_blank" rel="noreferrer noopener">Configure Markup</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Programming Sense (2)</title><link>https://aben20807.github.io/posts/20191118-programming-sense-2/</link><pubDate>Mon, 18 Nov 2019 11:36:33 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191118-programming-sense-2/</guid><description><![CDATA[
           <br/><p>結果因為太多項了導致右邊的目錄超出邊界，所以還是要拆成兩篇。QuQ</p>
          
            <p><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/"><img src="https://images.unsplash.com/photo-1539392253103-78d190be0116?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=2689&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>結果因為太多項了導致右邊的目錄超出邊界，所以還是要拆成兩篇。QuQ</p><p><br/><a href="https://aben20807.github.io/posts/20191116-programming-sense/">{{ 上一篇傳送門：Programming Sense (1) }}</a></p><br/><br/><h1 id="抽像化-abstractionhttpsenwikipediaorgwikiabstraction_computer_science" class="article-heading">抽像化 (<br/><br/><a href="https://en.wikipedia.org/wiki/Abstraction_%28computer_science%29" target="_blank" rel="noreferrer noopener">Abstraction</a>) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8a%bd%e5%83%8f%e5%8c%96-abstractionhttpsenwikipediaorgwikiabstraction_computer_science"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>盡量的抽象化自己的程式，最簡單的方式就是把相關的程式碼包成一塊，而不是散在主函式中，包起來的動作通常稱作封裝 (<br/><br/><a href="https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29" target="_blank" rel="noreferrer noopener">Encapsulation</a>)，也有實作成 ADT (<br/><br/><a href="https://en.wikipedia.org/wiki/Abstract_data_type" target="_blank" rel="noreferrer noopener">Abstract data type</a>) 一說。</p><p>主要目的就是讓程式碼可重複使用，並讓簡化主函式的流程。抽象化過程要想著如何讓別人 (包括未來的自己) 使用自己的程式碼。可以透過將函式切成一個函式只做一件事讓可重複利用率提高。</p><p>例如實作一個 Queue 時，可以將存放的結構 (陣列)、操作指標 (front, rear) 放在同一個 <code>struct</code> 中，甚至將 enqueue 和 dequeue 做成函式指標 (function pointer) 一起放入 <code>struct</code> 中。注意，以下程式碼尚未測試過&hellip;</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// 結構定義<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">struct</span> Queue {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">char</span> que[<span style="color:#ae81ff">26</span>];<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">int</span> front;<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">int</span> rear;<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">void</span> (<span style="color:#f92672">*</span>enque)(<span style="color:#66d9ef">struct</span> Queue <span style="color:#f92672">*</span>, <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> a);<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">void</span> (<span style="color:#f92672">*</span>deque)(<span style="color:#66d9ef">struct</span> Queue <span style="color:#f92672">*</span>);<br/></span></span><span style="display:flex;"><span>};<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// 初始化<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">struct</span> Queue <span style="color:#f92672">*</span><span style="color:#a6e22e">init_queue</span>() {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">struct</span> Queue <span style="color:#f92672">*</span>ret <span style="color:#f92672">=</span> calloc(<span style="color:#66d9ef">sizeof</span>(<span style="color:#66d9ef">struct</span> Queue), <span style="color:#ae81ff">1</span>);<br/></span></span><span style="display:flex;"><span>  ret<span style="color:#f92672">-&gt;</span>front <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>  ret<span style="color:#f92672">-&gt;</span>rear <span style="color:#f92672">=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>  ret<span style="color:#f92672">-&gt;</span>enque <span style="color:#f92672">=</span> enque; <span style="color:#75715e">// 須另外定義 enque 函式<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  ret<span style="color:#f92672">-&gt;</span>deque <span style="color:#f92672">=</span> deque; <span style="color:#75715e">// 須另外定義 deque 函式<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  <span style="color:#66d9ef">return</span> ret;<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// 使用<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">struct</span> Queue <span style="color:#f92672">*</span>q <span style="color:#f92672">=</span> init_queue();<br/></span></span><span style="display:flex;"><span>  q<span style="color:#f92672">-&gt;</span>enque(q, <span style="color:#e6db74">&#39;A&#39;</span>);<br/></span></span><span style="display:flex;"><span>  q<span style="color:#f92672">-&gt;</span>deque(q);<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h1 id="寫程式的過程" class="article-heading">寫程式的過程 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%ab%e7%a8%8b%e5%bc%8f%e7%9a%84%e9%81%8e%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="思考" class="article-heading">思考 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%80%9d%e8%80%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>不先思考就直接寫程式的話是很危險的，通常最後很容易落得需要打掉重練的情況，預先思考可以避免掉一些盲點。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1uYiTbRQ-bmFDkJE-MC_z-HyemZzzz6kA" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1uYiTbRQ-bmFDkJE-MC_z-HyemZzzz6kA" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1uYiTbRQ-bmFDkJE-MC_z-HyemZzzz6kA" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h3 id="待解決的問題" class="article-heading">待解決的問題 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%85%e8%a7%a3%e6%b1%ba%e7%9a%84%e5%95%8f%e9%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>首先得理解題目或問題的要求，如果有提供範例輸入輸出的話請一定要按照給定的格式，不能多也不能少。不過這在現實中比較少見，很多情況是要去設計防呆的。</p><p>直覺的解法一定有，但是通常會有大量的迴圈拖慢程式執行，儘管現在的硬體好到讓我們感覺不出差異，但是還是需要正視這個問題，因為當需求一擴大，效能瓶頸就會是一個大問題。</p><p>以下題目來自 108-1 成大資工 資料結構作業三 (這裡放上題目，不過我不打算解它，雖然這樣會比較完整，可是我真的沒空 QuQ)</p> <br/><br/><br/><h3 id="是否能簡化" class="article-heading">是否能簡化 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%98%af%e5%90%a6%e8%83%bd%e7%b0%a1%e5%8c%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>以範例問題來說，題目會給定 N 個團體，每個群體的人數不定。最直觀的方法是使用二維陣列存放這 N 個團體各自的成員，要檢查 A 是否屬於某個群體時使用雙層迴圈去搜尋這個二維陣列，都找不到則代表不屬於任何團體。</p><p>然而這樣每次搜尋都要耗費不少資源，甚至需要不少程式碼。更好的作法可以對題目的細節做解讀，題目提到成員只會有 A~Z 所以我們可以直接產生一個長度為 26 的整數陣列 <code>people_group_ids</code> (更好的方式是使用 dict 不過 C 沒有內建) 來存放這 26 的人的團體編號，為了方便初始化，可以讓 0 代表沒有團體接著往上累加，讀取到範例輸入讀取到 3 A B C 時，在陣列的 0 1 2 位置上填入 1，等到要查詢 A 的團體編號時就可以使用 <code>people_group_ids[0]</code> 來查詢了，原本 $O(nm)$ 的複雜度直接降為 $O(1)$，程式碼上也較為清楚。另外關於 A 對應 0 要怎麼寫，這就需要對字元有一些了解，可以觀察一下 <br/><br/><a href="https://en.wikipedia.org/wiki/ASCII" target="_blank" rel="noreferrer noopener">ASCII 表格</a>，<code>person = 'B';</code> 的話我們只需要使用 <code>person - 'A'</code>; 就可以得到 <code>1</code> 了，把這個操作放到函式中增加可讀性的話更棒如下。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">get_group_id</span>(<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> people_group_ids,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> person) {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">return</span> people_group_ids[person <span style="color:#f92672">-</span> <span style="color:#e6db74">&#39;A&#39;</span>];<br/></span></span><span style="display:flex;"><span>}<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">set_group_id</span>(<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> people_group_ids,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> person,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">int</span> group_id) {<br/></span></span><span style="display:flex;"><span>  people_group_ids[person <span style="color:#f92672">-</span> <span style="color:#e6db74">&#39;A&#39;</span>] <span style="color:#f92672">=</span> group_id;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><p>插隊的話只需要從 queue 的頭找 <code>group_id</code> 相同的人即可。</p><br/><br/><h3 id="事前設計" class="article-heading">事前設計 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%ba%8b%e5%89%8d%e8%a8%ad%e8%a8%88"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>這裡表達的不是一定要畫出 UML 或是先做好完整架構圖，而是有一點架構就可以，有簡易的流程圖當然更棒，但是我自己通常會在腦中進行，遇到比較大型的才會拿一張紙畫一下流程，這裡推薦 <br/><br/><a href="https://www.draw.io/" target="_blank" rel="noreferrer noopener">draw.io</a> 這個完美的應用程式，可以應付各種圖。</p><br/><br/><h2 id="小步前進持續驗證" class="article-heading">小步前進，持續驗證 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b0%8f%e6%ad%a5%e5%89%8d%e9%80%b2%e6%8c%81%e7%ba%8c%e9%a9%97%e8%ad%89"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><blockquote><p>寫大程式要像西敏寺那樣的大教堂一樣，先從一個功能完整的小教堂開始，然後把小部分拆掉蓋個更大更豪華的；如果一次就想蓋個超大的教堂，最後可能弄成一團廢墟，連禮拜的功能都沒有。<br><br/>&mdash; Yoda 生活筆記 (Lee You Tang)  </p></blockquote><p>等萬事俱備只欠打扣時我們就可以開始寫程式囉，最有效率的流程就是小步前進逐步驗證，不要一次就把程式打完，這樣執行發現跟結果不一樣時，問題就會非常難找，是輸入錯誤還是中間的邏輯錯誤或是輸出錯誤，若沒有逐步驗證的話，哪個階段出問題真的很難定位。</p><p>我的做法會先將輸入部分完成，並且印出結果確認是否跟想像中的結果一模一樣，這裡必須要注意是否有奇怪的換行，或是輸出的順序不對等等問題，因為 C 的輸入會有許多隱藏的陷阱，也許是把空格也當成一個成員之類的。操作的指令也是把讀到的直接印出來確認。驗證完畢才繼續往下一步走。 細心檢查每一個魔鬼細節才能達到最終目的。</p><p>強烈建議每一次的驗證完後搭配 git commit 把階段性成果記錄下來。</p><p>enque 跟 deque 一樣分開驗證，這時候我們需要加上一些輔助的程式碼幫助我們印出 queue 的內容，來保證每次的操作都是正確的。例如：<code>print_queue()</code>。</p><br/><br/><h1 id="除錯-debug" class="article-heading">除錯 (Debug) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%99%a4%e9%8c%af-debug"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="編譯訊息" class="article-heading">編譯訊息 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b7%a8%e8%ad%af%e8%a8%8a%e6%81%af"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>編譯器產生的訊息相當重要，而且不是只有 Error 重要，Warning 也是一大關鍵，所以千萬不要忽略這些警告，反而要將這些警告視為錯誤，這裡推薦在編譯的時候加上 <code>-Wall -Werror</code> 這樣那些警告就會導致編譯錯誤了。</p><br/><br/><h2 id="設計測資" class="article-heading">設計測資 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e8%a8%88%e6%b8%ac%e8%b3%87"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>題目給的測資一定很少，但是實際會遇到的情況相當多，所以一定要多設計幾組測試資料，可以利用上一篇提到的重新導向 (Redirection) 的方式才不用每次都要重新手打，照理說可以再加上 Makefile 來幫忙，可以參考我的另外一篇  。</p><br/><br/><h2 id="註解大法" class="article-heading">註解大法 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e8%a7%a3%e5%a4%a7%e6%b3%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>用註解部份程式碼來找出錯誤是最簡單的方式，但這我通常是用來幫別人抓錯的時候會用，因為我不確定其是否使用逐步驗證的方式，因此只有結果錯誤，但是中間的過程無法直接看出是哪邊有問題，利用註解的方式隔離未驗證的程式碼來逐步比對。</p><br/><br/><h2 id="printf-好夥伴" class="article-heading"><code>printf</code> 好夥伴 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#printf-%e5%a5%bd%e5%a4%a5%e4%bc%b4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p><code>printf()</code> 是一個相當神奇且好用的函式，其底層非常複雜歡迎有興趣的人可以參考  。我的習慣是在實作不同資料結構時都會做一個對應的函式來印出其內容以方便驗證。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">print_queue</span>(<span style="color:#66d9ef">struct</span> Queue <span style="color:#66d9ef">const</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> q) {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">26</span>; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;%c &#34;</span>, q<span style="color:#f92672">-&gt;</span>que[i]);<br/></span></span><span style="display:flex;"><span>  }<br/></span></span><span style="display:flex;"><span>  printf(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h2 id="gdb" class="article-heading">GDB <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#gdb"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>GDB (<br/><br/><a href="https://www.gnu.org/software/gdb/" target="_blank" rel="noreferrer noopener">The GNU Project Debugger</a>) 是 segmentation fault 發生時的好夥伴，它可以幫助你找出程式是在哪裡發生錯誤，這樣就可以去找出對應的解決方法。關於原生的 GDB 有點樸素這點我之前有寫過一篇介紹 <br/><br/><a href="https://github.com/cyrus-and/gdb-dashboard" target="_blank" rel="noreferrer noopener">GDB dashboard</a> 可以參考  。</p><br/><br/><h1 id="後記" class="article-heading">後記 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>突然發現自己好像也不是這麼悠閒，不過還是把這些趕出來了，可能會有錯 (範例打錯或錯字) 再請大家幫忙抓漏 了，感恩 QuQ。很多部份也都沒有附上範例，這可能之後有需要的話可以補上。歡迎討論也歡迎在我有空的時候找我幫忙 review 程式碼，這對我來說也是一種成長的來源吧。身邊如果有人願意幫你 review 的話請盡量把握，也在此感謝曾經幫我看過程式碼的貴人們。</p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://yodalee.blogspot.com/2019/11/rust-visitor.html" target="_blank" rel="noreferrer noopener">把一顆樹寫出來是會有多難</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://aben20807.github.io/posts/20190216-makefile-for-testing/" target="_blank" rel="noreferrer noopener">Makefile for Testing</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://www.maizure.org/projects/printf/index.html?fbclid=IwAR2fPTM7CxfIWD7pC_crmp-UFDPG2RZ7BH-62e-TCjPmxhzwLyT_D7oEYak" target="_blank" rel="noreferrer noopener">Tearing apart printf()</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://aben20807.blogspot.com/2018/06/1070618-gdb-gdb-dashboard.html" target="_blank" rel="noreferrer noopener">107.06.18 好看的 gdb, gdb-dashboard</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Programming Sense (1)</title><link>https://aben20807.github.io/posts/20191116-programming-sense/</link><pubDate>Sat, 16 Nov 2019 08:53:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191116-programming-sense/</guid><description><![CDATA[
           <br/><p>主要是我自己編寫邊學慢慢累積的，說真的也找不太到相關的資源，要搜尋也不知道下什麼關鍵字，問別人其實也很難在一時半刻裡解釋清楚，所以就拿來發一篇吧 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20191116-programming-sense/"><img src="https://images.unsplash.com/photo-1539392156992-268f1e62f111?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=2689&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191116-programming-sense/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>主要是我自己編寫邊學慢慢累積的，說真的也找不太到相關的資源，要搜尋也不知道下什麼關鍵字，問別人其實也很難在一時半刻裡解釋清楚，所以就拿來發一篇吧 OuO</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>期中加資格考的爆炸禮拜終於結束，其實比我想得還要容易，雖然我都很沒把握，因為我幾乎不狂寫考古題，而是以觀念取勝，有沒有取到就不確定了。</p><p>寫程式很簡單，拿來解決問題就有些難度，最難的是用優雅易懂且嚴謹的程式碼來解決問題，寫得好絕對遠遠好過寫得快。</p><p>關於這個主題，其實很早就打算寫了，只是一直擱置連架構都沒出來，直到最近有幫同學看一下程式碼，所以覺得這個觀念還是頗為重要，所以整理一下發個文，主要也希望可以幫助比較沒經驗的人，但也不限於此，我相信也會有畢業於資訊工程相關科系而沒有這些觀念。</p><p>當然在整個程式界我也不是老手，幾乎沒在開源貢獻，更沒參與過業界，所以很多的概念是我在大學時期慢慢累積起來的，主要來源就是一些開源的專案還有自身的經驗，不能說涵蓋得很全面，也不是說我這套最棒了大家看了之後一定要照這些規則，這篇從來就不是規則，而是我在寫了幾年程式後整理出來讓自己開發更為流暢的一些想法，希望大家能夠來互相討論給與意見。</p><p>架構會以不同的主題當作探討，雖然全部都是在講 programming sense，內容因為相當廣泛，切成不同文章又會讓某些部分零碎化，所以請善用標題跟右方的目錄來幫助閱讀。順序以 &ldquo;工具&rdquo;，&ldquo;coding style&rdquo;，&ldquo;習慣養成&rdquo;，&ldquo;抽像化&rdquo;，&ldquo;寫程式的過程&rdquo;，&ldquo;除錯&rdquo;。並主要以 C 語言當作講解範例。</p><p>雖然雜但是請記得一個中心思想：</p><blockquote><p>用程式碼來溝通 (Communication Through Code)</p></blockquote><br/><br/><br/><h1 id="工具" class="article-heading">工具 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b7%a5%e5%85%b7"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>「工欲善其事，必先利其器」《論語·衛靈公》 善用工具真的頗為重要，使用得當可以大量減少重複性的動作，如果是寫一般的小程式的話我會建議可以玩看看 <br/><br/><a href="https://en.wikipedia.org/wiki/Vim_%28text_editor%29" target="_blank" rel="noreferrer noopener">VIM</a> 設定可以參考<br/><br/><a href="https://github.com/aben20807/aben20807.vim" target="_blank" rel="noreferrer noopener">我的設定</a>或直接問我，可以大量減少手部的負擔。大型一點的我會推薦 <br/><br/><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer noopener">VSCode</a>，因為內容會偏多所以我就用一個副標題來說明了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1kYWGLrrnkeQaVo2OwbMZQddDu6iIn-do" class="center img-zoomable" alt="google-vi&amp;hellip; " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1kYWGLrrnkeQaVo2OwbMZQddDu6iIn-do" class="center img-zoomable lazyload" alt="google-vi&amp;hellip; "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">vi&hellip; </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1kYWGLrrnkeQaVo2OwbMZQddDu6iIn-do" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure>  </p><br/><br/><h2 id="vscode" class="article-heading">VSCode <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vscode"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>VSCode 其實不太像一般的 IDE，它更像一個單純的文字編輯器，只是有相當多好用的外掛功能，基本的包含了對各種語言的程式碼的關鍵字 highlight、檔案架構樹、搜尋取代功能、編碼轉換、coding style 自動重新排版。以下附上一些我目前服役中的外掛功能，使用方法就請各位自己前往查看了：</p><ul><li><code>alefragnani.bookmarks</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks" target="_blank" rel="noreferrer noopener">🔗</a>： 可以在想要標記的程式碼上加入書籤，這個在瀏覽大型專案需要跳來跳去 trace 程式碼下可以幫很大的忙，至少不用再記是第幾行了。</li><li><code>coenraads.bracket-pair-colorizer</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer" target="_blank" rel="noreferrer noopener">🔗</a>：連結對應的括號，這在括號一堆的語言 (C, C++, Java, Lisp) 相當有幫助，可以一眼就看出在哪個有效範圍 (scope)。</li><li><code>streetsidesoftware.code-spell-checker</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noreferrer noopener">🔗</a>：幫忙檢查英文拼字。</li><li><code>tabnine.tabnine-vscode</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode" target="_blank" rel="noreferrer noopener">🔗</a>：程式碼補全建議。</li><li><code>gruntfuggly.todo-tree</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree" target="_blank" rel="noreferrer noopener">🔗</a>：收集註解中有 <code>TODO</code> 標籤的地方。</li><li><code>donjayamanne.githistory</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory" target="_blank" rel="noreferrer noopener">🔗</a>：Git 系列。</li><li><code>eamodio.gitlens</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" target="_blank" rel="noreferrer noopener">🔗</a>：Git 系列。</li><li><code>zhuangtongfa.material-theme</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme" target="_blank" rel="noreferrer noopener">🔗</a>：耐看主題。</li><li><code>vscode-icons-team.vscode-icons</code> <br/><br/><a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" target="_blank" rel="noreferrer noopener">🔗</a>：美美的檔案圖示。</li></ul><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1YrpZ2ktFpMxR3Y7MZM0zBrt4DtRFNmga" class="center img-zoomable" alt="google-名稱拿去搜尋即可" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1YrpZ2ktFpMxR3Y7MZM0zBrt4DtRFNmga" class="center img-zoomable lazyload" alt="google-名稱拿去搜尋即可"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">名稱拿去搜尋即可</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1YrpZ2ktFpMxR3Y7MZM0zBrt4DtRFNmga" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="shell" class="article-heading">Shell <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#shell"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>很多指令都是可以幫助懶惰的人，目前我還沒有遇過我想要但是沒有的指令。</p><br/><br/><h3 id="重新導向-redirection" class="article-heading">重新導向 (Redirection) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8d%e6%96%b0%e5%b0%8e%e5%90%91-redirection"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>寫程式時會常使用重新導向 (Redirection) 的方式來減少標準輸入 (stdin) 的次數，用法也相當直觀，只需要先將測試輸入先打在一份文檔 (例如：input.txt) 中，再使用以下指令執行程式即可。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./queue &lt; input.txt<br/></span></span></code></pre></div></div><p>若要把標準輸出 (stdout) 存到另一份文件時呢，當然也是使用重新導向。這適合在輸出很多時或是需要搜尋結果時使用。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./queue &lt; input.txt &gt; output.txt<br/></span></span></code></pre></div></div><br/><br/><h1 id="coding-style" class="article-heading">Coding Style <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#coding-style"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這是一個看似微小卻非常重要的細節，尤其是需要別人幫忙 review 甚至是合作時都需要事先講好共用的 coding style，一來格式統一閱讀時不需要轉換，二來可以避免因為工具自動調整造成不必要的程式改動紀錄。</p><p>看別人的程式碼時最怕遇到沒有縮排的&hellip;</p><p>這裡涵蓋的範圍包括了縮排、空格、括號、命名。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1srj3r8VaQ4_csG69Lr3vQD_ENvjEXmJH" class="center img-zoomable" alt="google-pythonize &amp;hellip; 別亂學 XDD" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1srj3r8VaQ4_csG69Lr3vQD_ENvjEXmJH" class="center img-zoomable lazyload" alt="google-pythonize &amp;hellip; 別亂學 XDD"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">pythonize &hellip; 別亂學 XDD</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1srj3r8VaQ4_csG69Lr3vQD_ENvjEXmJH" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure>  </p><br/><br/><h2 id="google-coding-style" class="article-heading">Google Coding Style <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#google-coding-style"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>若要偷懶，強烈建議就直接用最多人使用的就好，很多工具都有辦法幫忙重新排版程式碼，這裡展示如何用 VSCode 來設定 Google 使用的 coding style，規定的格式細節可參考 <br/><br/><a href="https://google.github.io/styleguide/cppguide.html" target="_blank" rel="noreferrer noopener">Google C++ Style Guide</a>。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1lCoOvNF61c1WaNoZ2MhO9QioANQS3HUS" class="center img-zoomable" alt="google-開啟設定" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1lCoOvNF61c1WaNoZ2MhO9QioANQS3HUS" class="center img-zoomable lazyload" alt="google-開啟設定"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">開啟設定</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1lCoOvNF61c1WaNoZ2MhO9QioANQS3HUS" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1RCaxBhfaLrVM84FoD3ekeu4AmtBhnxLJ" class="center img-zoomable" alt="google-搜尋 format style，將欄位改成 Google" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1RCaxBhfaLrVM84FoD3ekeu4AmtBhnxLJ" class="center img-zoomable lazyload" alt="google-搜尋 format style，將欄位改成 Google"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">搜尋 format style，將欄位改成 Google</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1RCaxBhfaLrVM84FoD3ekeu4AmtBhnxLJ" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1rALSINyYBW1JuCiWsj1IVSLhiI_-_rXd" class="center img-zoomable" alt="google-使用格式化可以用右鍵或是直接按對應的快捷鍵" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1rALSINyYBW1JuCiWsj1IVSLhiI_-_rXd" class="center img-zoomable lazyload" alt="google-使用格式化可以用右鍵或是直接按對應的快捷鍵"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">使用格式化可以用右鍵或是直接按對應的快捷鍵</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1rALSINyYBW1JuCiWsj1IVSLhiI_-_rXd" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="習慣養成" class="article-heading">習慣養成 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%bf%92%e6%85%a3%e9%a4%8a%e6%88%90"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><blockquote><p>傻瓜都可以寫出機器能讀懂的代碼，但只有專業程序員才能寫出人能讀懂的代碼。<br><br/>&mdash; 李先靜 《系統程序員成長計劃》 </p></blockquote><br/><br/><br/><h2 id="coding-style-again" class="article-heading">Coding Style Again <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#coding-style-again"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>用工具是很方便沒錯，不過盡量還是養成習慣而不依賴工具，這裡介紹幾個比較常見的格式：</p><br/><br/><h3 id="空行-blank" class="article-heading">空行 (Blank) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a9%ba%e8%a1%8c-blank"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>把所有操作寫在同一個函式裡面通常不容易辦到，因此不免會有某些區塊在做相關的事，合理使用空行能夠讓讀者很容易就看出程式碼的這些區塊的用途。</p><br/><br/><h3 id="縮排-indent" class="article-heading">縮排 (Indent) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b8%ae%e6%8e%92-indent"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>我以前偏好 4 個空格，但是最近有往兩個空格移動的趨勢，另外 Google 也是以 2 個空格為主。然而 Linux kernel 是使用 tab，這裡其實只要跟合作的夥伴們講好統一使用一種即可，就不提有統計指出用 space 賺的錢比用 tab 的人多了  。</p><br/><br/><h3 id="if-statement" class="article-heading">If Statement <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#if-statement"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><br/><br/><h4 id="加上空格們" class="article-heading">加上空格們 <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e7%a9%ba%e6%a0%bc%e5%80%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">if</span>(condition) {   <span style="color:#75715e">// Bad<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">if</span> (condition){   <span style="color:#75715e">// Bad<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">if</span>(condition){    <span style="color:#75715e">// Doubly bad<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">if</span> (condition) {  <span style="color:#75715e">// Good<br/></span></span></span></code></pre></div></div><br/><br/><h4 id="加上大括號們" class="article-heading">加上大括號們 <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e5%a4%a7%e6%8b%ac%e8%99%9f%e5%80%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><p>這裡我會比較嚴格規定自己，就算是只有一行也要加，這樣比較方便擴充，例如臨時要加上 <code>printf</code> 時就不用再加。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (condition) {<br/></span></span><span style="display:flex;"><span>  foo;<br/></span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">else</span> {<br/></span></span><span style="display:flex;"><span>  bar;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h3 id="loop-statement" class="article-heading">Loop Statement <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#loop-statement"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><br/><br/><h4 id="加上空格們-1" class="article-heading">加上空格們 <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e7%a9%ba%e6%a0%bc%e5%80%91-1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><p>注意 <code>;</code> 前不要後要。<br><br/>這裡用 <code>i++</code> 或 <code>++i</code> 其實基本上沒有效能差異  ，編譯器會幫你最佳化，我更喜歡 <code>i++</code> 因為要改成 <code>i+=2</code> 之類的比較方便，另外也是有 <code>i-=-1</code>   這種邪教&hellip;</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> some_number; i<span style="color:#f92672">++</span>) {<br/></span></span><span style="display:flex;"><span>  printf(<span style="color:#e6db74">&#34;OuO</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h3 id="pointer-變數宣告" class="article-heading">Pointer 變數宣告 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#pointer-%e8%ae%8a%e6%95%b8%e5%ae%a3%e5%91%8a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p><code>int*x;</code>、<code>int *x;</code>、<code>int* x</code>、<code>int * x</code> 都是可編譯的寫法，在 C 中 <code>int *x;</code> 更為常用。C++ 中反而是 <code>int* x;</code>  。</p><br/><br/><h3 id="命名-naming-convention" class="article-heading">命名 (Naming Convention) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%91%bd%e5%90%8d-naming-convention"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><br/><br/><h4 id="檔案名稱變數-variable函式-function" class="article-heading">檔案名稱、變數 (Variable)、函式 (Function) <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e5%90%8d%e7%a8%b1%e8%ae%8a%e6%95%b8-variable%e5%87%bd%e5%bc%8f-function"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><p>使用 <br/><br/><a href="https://en.wikipedia.org/wiki/Snake_case" target="_blank" rel="noreferrer noopener">snake_case</a> 並取有上下文關係的名字，例如 <code>flag</code>、<code>count</code> 就沒有上下文，會不知道這個變數要用來存放什麼東西。<br><br/>e.g., <code>http_server_logs.h</code>、<code>table_name</code></p><p>Google 的函式也可用 UpperCamelCase，但我個人比較習慣 snake_case，另外函式須以動詞開頭以表明動作。<br><br/>e.g., <code>add_table_entry</code></p><br/><br/><h4 id="struct-class" class="article-heading">Struct, Class <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#struct-class"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><p>使用 <br/><br/><a href="https://en.wikipedia.org/wiki/Camel_case" target="_blank" rel="noreferrer noopener">UpperCamelCase</a><br><br/>e.g., <code>UrlTableProperties</code>, <code>TableInfo</code></p><br/><br/><h4 id="常數-constant" class="article-heading">常數 (Constant) <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b8%b8%e6%95%b8-constant"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><p>使用全大寫並以 <code>_</code> 連接。<br><br/>e.g., <code>MAX_ROW_SIZE</code></p><br/><br/><h2 id="初始化-initialize" class="article-heading">初始化 (Initialize) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%9d%e5%a7%8b%e5%8c%96-initialize"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>寫 C 語言時要注意變數的初始化，以免結果跟自己所想的不一樣，這是因為在規格書中的定義中提到，只有全域變數或是靜態 (static) 變數會被初始化，其他未初始化的則不會有明確的初始值。 C99 §6.7.8.10  。在陣列的初始化若要全部定義為 <code>\0</code>，我們可以直接在宣告中使用 <code>{}</code> 即可，因為規格書中有規定若初始化的個數不足則會比照靜態變數 C99 §6.7.8.21  :</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// 每個變數宣告時搭配初始化<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> n <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span><span style="color:#75715e">// 陣列初始化以下都可以<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">char</span> que[<span style="color:#ae81ff">26</span>] <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#39;\0&#39;</span>};<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">char</span> que[<span style="color:#ae81ff">26</span>] <span style="color:#f92672">=</span> {<span style="color:#ae81ff">0</span>};<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">char</span> que[<span style="color:#ae81ff">26</span>] <span style="color:#f92672">=</span> {};<br/></span></span></code></pre></div></div><br/><br/><h2 id="註解-comment" class="article-heading">註解 (Comment) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e8%a7%a3-comment"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>請盡量使用英文來註解，因為英文比較不像中文那樣一詞多義，可以較明確的敘述，若執意要用中文就需要注意編碼，目前主流應該是使用 UTF8。內容部份可以多記錄一點上下文而不是僅僅該行程式碼做了什麼事，通常註解會拿來說明整個函式，會需要一行一行註解的情況比較少並會用高可讀性的程式馬來替代。我之前有找到一篇非常詳盡的指南   可以參考看看 (雖然我也沒有仔細讀完就是了＠＠</p><p>寫法上注意空格即可。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// OuO<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">/* OuO */</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="副作用-side-effect" class="article-heading">副作用 (Side Effect) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%af%e4%bd%9c%e7%94%a8-side-effect"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>副作用 (<br/><br/><a href="https://en.wikibooks.org/wiki/C_Programming/Side_effects_and_sequence_points" target="_blank" rel="noreferrer noopener">Side Effect</a>) 聽起來好像很不妙，簡單來說就是會在函式內部修改到參數的情況。其實這在一般程式語言中頗為常見，沒有這項功能的話程式會變得相當難寫，例如 Functional language 寫起來就頗耗費腦力。</p><br/><br/><h3 id="在函式宣告時點出副作用" class="article-heading">在函式宣告時點出副作用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%a8%e5%87%bd%e5%bc%8f%e5%ae%a3%e5%91%8a%e6%99%82%e9%bb%9e%e5%87%ba%e5%89%af%e4%bd%9c%e7%94%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>但是在開發過程需要適時隔離變化，C 語言提供了 <code>const</code> 修飾字來標示該參數在函式中不會被修改。以下範例中的 <code>rear</code> 和 <code>orig</code>  不會被修改到內容，所以可以利用 <code>const</code> 來提醒函式呼叫者該參數不會被改動，反之 <code>front</code> 就有機會被改動。詳細的排列組合可以參考  。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">deque</span>(<span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>orig, <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>front, <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>rear) {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (<span style="color:#f92672">*</span>front <span style="color:#f92672">==</span> <span style="color:#f92672">*</span>rear) {<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;Empty&#34;</span>);<br/></span></span><span style="display:flex;"><span>  } <span style="color:#66d9ef">else</span> {<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;%c</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, orig[<span style="color:#f92672">*</span>front]);<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">*</span>front <span style="color:#f92672">=</span> <span style="color:#f92672">*</span>front <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>  }<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// rear, orig 皆是指向一個唯讀參數 (read-only parameter)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 的唯讀指標 (read-only location)<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 若嘗試在函式中修改 `rear` 或 `*rear` 就會得到編譯錯誤<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">deque</span>(<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> orig,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>front,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> rear) {<br/></span></span></code></pre></div></div><br/><br/><h3 id="需要修改的才傳入其指標-pointer" class="article-heading">需要修改的才傳入其指標 (Pointer) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9c%80%e8%a6%81%e4%bf%ae%e6%94%b9%e7%9a%84%e6%89%8d%e5%82%b3%e5%85%a5%e5%85%b6%e6%8c%87%e6%a8%99-pointer"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>這裡要先宣導一個觀念就是 C 語言只有 Pass By Value，也就是只會複製傳入變數的數值，傳入指標也是一樣，我們只是傳入了指標這個數值，而透過這個指標的取值 (dereference) 可以改動對應的記憶體位置 C99 §6.5.2.2.4  。而因為 C 的函式回傳值只限一個，所以大部分會使用修改參數的方式來回傳數值，而真正的回傳值就用來表示函式是否正確執行，否則就回傳對應的錯誤碼。</p><p>上面那樣改起來好像太奇葩，更好的解決方式是要先思考，把將要在函式內部更動變數在傳入其指標，其餘的只須把數值傳進去即可。當然若是傳入陣列就還是需要指標就像 <code>orig</code>。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// 因為最後一個參數不會變動而且只需要其數值<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 所以直接以常數傳入，當然函式內部就不需要取值了<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">deque</span>(<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span> <span style="color:#66d9ef">const</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">const</span> orig,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>front,<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">const</span> <span style="color:#66d9ef">int</span> rear_value) {<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> (<span style="color:#f92672">*</span>front <span style="color:#f92672">==</span> rear_value) {<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;Empty&#34;</span>);<br/></span></span><span style="display:flex;"><span>  } <span style="color:#66d9ef">else</span> {<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;%c</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, orig[<span style="color:#f92672">*</span>front]);<br/></span></span><span style="display:flex;"><span>    <span style="color:#f92672">*</span>front <span style="color:#f92672">=</span> <span style="color:#f92672">*</span>front <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>;<br/></span></span><span style="display:flex;"><span>  }<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h2 id="多檔案" class="article-heading">多檔案 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%9a%e6%aa%94%e6%a1%88"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="避免重複-include" class="article-heading">避免重複 include <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%bf%e5%85%8d%e9%87%8d%e8%a4%87-include"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>專案擴張下，必然會用到多檔案，這時候就會拆成很多的 <code>.h</code>, <code>.c</code> 檔，<code>.h</code> 用來作為界面的溝通，這時候一定要使用 macro (<br/><br/><a href="https://en.wikipedia.org/wiki/Include_guard" target="_blank" rel="noreferrer noopener">Include guard</a>) 防止重複 include。以下為檔名為 <code>file.h</code> 的內容範例：<code>FILE_H</code>, <code>_FILE_H</code>, <code>__FILE_H__</code> 都有人用，但一般以第一種為主即可。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#ifndef FILE_H<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#define FILE_H<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">/* ... Declarations etc here ... */</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e">#endif </span><span style="color:#75715e">/* FILE_H */</span><span style="color:#75715e"><br/></span></span></span></code></pre></div></div><br/><br/><h3 id="用-static-修飾內部函數" class="article-heading">用 <code>static</code> 修飾內部函數 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a8-static-%e4%bf%ae%e9%a3%be%e5%85%a7%e9%83%a8%e5%87%bd%e6%95%b8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p>如果在多檔案下函數並不是要開放給其他檔案呼叫時，請加上 <code>static</code> 來保證只有當前檔案內部可以看到那個函數。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">static</span> <span style="color:#66d9ef">void</span> <span style="color:#a6e22e">my_local_function</span>() {<br/></span></span><span style="display:flex;"><span>  printf(<span style="color:#e6db74">&#34;OuO</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h2 id="避免使用危險的函式們" class="article-heading">避免使用危險的函式們 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%bf%e5%85%8d%e4%bd%bf%e7%94%a8%e5%8d%b1%e9%9a%aa%e7%9a%84%e5%87%bd%e5%bc%8f%e5%80%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>C 語言給予使用者相當大的彈性但用起來需要知道自己在做什麼，否則會有許多安全性漏洞，有一些函式很容易造成誤用，連資深工程師也常用錯，因此蠻多專案直接把不安全的函式禁用，例如 Git  ，Intel 的 safestringlib 也有一個完整列表  。以下給出一些較常見的。</p><ul><li><code>gets()</code>   C11 已經不支援，請改用 <code>fgets()</code></li><li><code>strcpy()</code> 沒有長度偵測。</li><li><code>strncpy()</code> 有長度但是不會在結尾補上 <code>\0</code>  。</li><li><code>ato*()</code> 改用 <code>strto*()</code> 利於錯誤處理 C99 §7.20.1  。</li></ul><br/><br/><h2 id="其他習慣" class="article-heading">其他習慣 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96%e7%bf%92%e6%85%a3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>盡量不使用全域變數</li></ul><p><br/><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/">{{ 下一篇傳送門：Programming Sense (2) }}</a></p><div class="footnotes" role="doc-endnotes"><br/><hr><br/><ol><li id="fn:1"><p><br/><a href="https://twitter.com/tpope/status/1172743697315835904" target="_blank" rel="noreferrer noopener">Tim Pope: when people ask me to recommend a text editor</a>&#160; </p></li><li id="fn:2"><p><br/><a href="https://www.reddit.com/r/ProgrammerHumor/comments/2wrxyt/a_python_programmer_attempting_java/" target="_blank" rel="noreferrer noopener">A Python programmer attempting Java</a>&#160; </p></li><li id="fn:3"><p><br/><a href="https://blog.csdn.net/absurd/article/details/3181222" target="_blank" rel="noreferrer noopener">系統程序員成長計劃-走近專業程序員(下)</a>&#160; </p></li><li id="fn:4"><p><br/><a href="https://stackoverflow.blog/2017/06/15/developers-use-spaces-make-money-use-tabs/" target="_blank" rel="noreferrer noopener">Developers Who Use Spaces Make More Money Than Those Who Use Tabs</a>&#160; </p></li><li id="fn:5"><p><br/><a href="https://stackoverflow.com/a/24887/6734174" target="_blank" rel="noreferrer noopener">Is there a performance difference between i++ and ++i in C?</a>&#160; </p></li><li id="fn:6"><p><br/><a href="https://twitter.com/DasSurma/status/1192736235447619584" target="_blank" rel="noreferrer noopener"><code>i-=-1</code> is hipster, expressive and symmetric</a>&#160; </p></li><li id="fn:7"><p><br/><a href="http://www.stroustrup.com/bs_faq2.html#whitespace" target="_blank" rel="noreferrer noopener">Is <code>int* p;</code> right or is <code>int *p;</code> right?</a>&#160; </p></li><li id="fn:8"><p><br/><a href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf" target="_blank" rel="noreferrer noopener">C99 規格書 ISO/IEC 9899:TC3</a>&#160; &#160; &#160; &#160; </p></li><li id="fn:9"><p><br/><a href="http://antirez.com/news/124" target="_blank" rel="noreferrer noopener">Writing system software: code comments.</a>&#160; </p></li><li id="fn:10"><p><br/><a href="https://stackoverflow.com/a/1143272" target="_blank" rel="noreferrer noopener">What is the difference between const int*, const int * const, and int const *?</a>&#160; </p></li><li id="fn:11"><p><br/><a href="https://github.com/git/git/blob/master/banned.h" target="_blank" rel="noreferrer noopener">git/banned.h</a>&#160; </p></li><li id="fn:12"><p><br/><a href="https://github.com/intel/safestringlib/wiki/SDL-List-of-Banned-Functions" target="_blank" rel="noreferrer noopener">SDL List of Banned Functions</a>&#160; </p></li><li id="fn:13"><p><br/><a href="https://cwe.mitre.org/data/definitions/242.html" target="_blank" rel="noreferrer noopener">CWE-242: Use of Inherently Dangerous Function</a>&#160; </p></li><li id="fn:14"><p><br/><a href="https://devblogs.microsoft.com/oldnewthing/?p=36773" target="_blank" rel="noreferrer noopener">How can code that tries to prevent a buffer overflow end up causing one?</a>&#160; </p></li></ol></div>
        ]]></description></item><item><title>Numpy Array Truncate</title><link>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</link><pubDate>Tue, 22 Oct 2019 20:27:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</guid><description><![CDATA[
           <br/><p>踩個雷 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20191022-numpy-array-truncate/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191022-numpy-array-truncate/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>踩個雷 OuO</p><p>numpy 的 <code>trunc</code> [1] 好像沒有針對小數點以下幾位做設定，一次只能全砍變成整數，可是又不能用 <code>around</code> [2] 解決。</p><p>網路上有找到解法 [3]：很直覺，就是先乘大，truncate 後再除</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">trunc</span>(values, decs<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>):<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> np<span style="color:#f92672">.</span>trunc(values<span style="color:#f92672">*</span><span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decs)<span style="color:#f92672">/</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decs)<br/></span></span></code></pre></div></div><p>不過這有個問題，可以從以下程式觀察：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">trunc</span>(a, decimals<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>):<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> np<span style="color:#f92672">.</span>trunc(a<span style="color:#f92672">*</span><span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decimals)<span style="color:#f92672">/</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decimals)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>float32(np<span style="color:#f92672">.</span>array([<span style="color:#ae81ff">1.123456789</span>, <span style="color:#ae81ff">2.234567890</span>, <span style="color:#ae81ff">3.45678901</span>]))<br/></span></span><span style="display:flex;"><span>print(arr)<br/></span></span><span style="display:flex;"><span>print(arr<span style="color:#f92672">.</span>dtype)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr_tr6 <span style="color:#f92672">=</span> trunc(arr, <span style="color:#ae81ff">6</span>)<br/></span></span><span style="display:flex;"><span>print(arr_tr6)<br/></span></span><span style="display:flex;"><span>print(arr_tr6<span style="color:#f92672">.</span>dtype)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr_tr20 <span style="color:#f92672">=</span> trunc(arr, <span style="color:#ae81ff">20</span>)<br/></span></span><span style="display:flex;"><span>print(arr_tr20)<br/></span></span><span style="display:flex;"><span>print(arr_tr20<span style="color:#f92672">.</span>dtype)<br/></span></span></code></pre></div></div><p>輸出如下：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]<br/></span></span><span style="display:flex;"><span>float32<br/></span></span><span style="display:flex;"><span>[1.123456 2.234567 3.456789]<br/></span></span><span style="display:flex;"><span>float64<br/></span></span><span style="display:flex;"><span>[1.1234568357467651 2.234567880630493 3.456789016723633]<br/></span></span><span style="display:flex;"><span>object<br/></span></span></code></pre></div></div><p>不對啊，型別怎麼不一樣了 OAO</p><p>所以如果不想要型別被改動的話可能要在最後轉成原來的型別</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">trunc</span>(a, decimals<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>):<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> (np<span style="color:#f92672">.</span>trunc(a<span style="color:#f92672">*</span><span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decimals)<span style="color:#f92672">/</span>(<span style="color:#ae81ff">10</span><span style="color:#f92672">**</span>decimals))<span style="color:#f92672">.</span>astype(a<span style="color:#f92672">.</span>dtype)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>float32(np<span style="color:#f92672">.</span>array([<span style="color:#ae81ff">1.123456789</span>, <span style="color:#ae81ff">2.234567890</span>, <span style="color:#ae81ff">3.45678901</span>]))<br/></span></span><span style="display:flex;"><span>print(arr)<br/></span></span><span style="display:flex;"><span>print(arr<span style="color:#f92672">.</span>dtype)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr_tr6 <span style="color:#f92672">=</span> trunc(arr, <span style="color:#ae81ff">6</span>)<br/></span></span><span style="display:flex;"><span>print(arr_tr6)<br/></span></span><span style="display:flex;"><span>print(arr_tr6<span style="color:#f92672">.</span>dtype)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>arr_tr20 <span style="color:#f92672">=</span> trunc(arr, <span style="color:#ae81ff">20</span>)<br/></span></span><span style="display:flex;"><span>print(arr_tr20)<br/></span></span><span style="display:flex;"><span>print(arr_tr20<span style="color:#f92672">.</span>dtype)<br/></span></span></code></pre></div></div><p>輸出：(但是就有型別限制的最大儲存長度了)</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]<br/></span></span><span style="display:flex;"><span>float32<br/></span></span><span style="display:flex;"><span>[1.123456 2.234567 3.456789]<br/></span></span><span style="display:flex;"><span>float32<br/></span></span><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]<br/></span></span><span style="display:flex;"><span>float32<br/></span></span></code></pre></div></div><p>完美 OuO</p><br/><br/><h2 id="references" class="article-heading">References <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li>[1] <br/><br/><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.trunc.html" target="_blank" rel="noreferrer noopener">numpy.trunc</a></li><li>[2] <br/><br/><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.around.html" target="_blank" rel="noreferrer noopener">numpy.around</a></li><li>[3] <br/><br/><a href="https://stackoverflow.com/a/46020635/6734174" target="_blank" rel="noreferrer noopener">Truncating decimal digits numpy array of floats</a></li></ul>
        ]]></description></item><item><title>資料整理</title><link>https://aben20807.github.io/posts/20191019-data-statistic/</link><pubDate>Sat, 19 Oct 2019 11:20:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191019-data-statistic/</guid><description><![CDATA[
           <br/><p>剛好用到一些蠻有用的工具，記錄一下</p>
          
            <p><a href="https://aben20807.github.io/posts/20191019-data-statistic/"><img src="https://drive.google.com/uc?export=view&amp;id=1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191019-data-statistic/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>剛好用到一些蠻有用的工具，記錄一下</p><p>資料：一個檔案 13 個數字共有 10,000 個檔案。<br><br/>目的：視覺化平均後的 13 欄資料<br><br/>主要分作以下步驟：</p><ol><li>合併 10,000 筆資料到一個檔案方便複製</li><li>用 Google Spreadsheet 來平均並製作圖表</li></ol><br/><br/><h2 id="1-合併" class="article-heading">1. 合併 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-%e5%90%88%e4%bd%b5"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>檔案架構大致如下</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>├── mae_0000.txt<br/></span></span><span style="display:flex;"><span>├── mae_0001.txt<br/></span></span><span style="display:flex;"><span>├── mae_0002.txt<br/></span></span><span style="display:flex;"><span>├── mae_0003.txt<br/></span></span><span style="display:flex;"><span>├── mae_0004.txt<br/></span></span><span style="display:flex;"><span>├── mae_0005.txt<br/></span></span><span style="display:flex;"><span>├── mae_0006.txt<br/></span></span><span style="display:flex;"><span>├── mae_0007.txt<br/></span></span><span style="display:flex;"><span>├── mae_0008.txt<br/></span></span><span style="display:flex;"><span>├── mae_0009.txt<br/></span></span><span style="display:flex;"><span>├── mae_0010.txt<br/></span></span><span style="display:flex;"><span>├── mae_0011.txt<br/></span></span><span style="display:flex;"><span>├── mae_0012.txt<br/></span></span><span style="display:flex;"><span>.<br/></span></span><span style="display:flex;"><span>.<br/></span></span><span style="display:flex;"><span>.<br/></span></span><span style="display:flex;"><span>└── mae_9999.txt<br/></span></span></code></pre></div></div><p>所以首先我們需要合併，這裡介紹一個頗好用的指令 <code>paste</code>。 <code>paste</code> 可以將資料水平合併，例如：(左邊行號，右邊內容)</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cat a.txt b.txt c.txt <br/></span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>       │ File: a.txt<br/></span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">1</span>   │ <span style="color:#ae81ff">1</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">2</span>   │ <span style="color:#ae81ff">2</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">3</span>   │ <span style="color:#ae81ff">3</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">4</span>   │ <span style="color:#ae81ff">4</span><br/></span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>       │ File: b.txt<br/></span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">1</span>   │ <span style="color:#ae81ff">5</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">2</span>   │ <span style="color:#ae81ff">6</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">3</span>   │ <span style="color:#ae81ff">7</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">4</span>   │ <span style="color:#ae81ff">8</span><br/></span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>       │ File: c.txt<br/></span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">1</span>   │ <span style="color:#ae81ff">9</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">2</span>   │ <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">3</span>   │ <span style="color:#ae81ff">11</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">4</span>   │ <span style="color:#ae81ff">12</span><br/></span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ paste *.txt &gt; all.txt<br/></span></span><span style="display:flex;"><span>$ cat all.txt <br/></span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>       │ File: all.txt<br/></span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────<br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">1</span>   │ <span style="color:#ae81ff">1</span>   <span style="color:#ae81ff">5</span>   <span style="color:#ae81ff">9</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">2</span>   │ <span style="color:#ae81ff">2</span>   <span style="color:#ae81ff">6</span>   <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">3</span>   │ <span style="color:#ae81ff">3</span>   <span style="color:#ae81ff">7</span>   <span style="color:#ae81ff">11</span><br/></span></span><span style="display:flex;"><span>   <span style="color:#ae81ff">4</span>   │ <span style="color:#ae81ff">4</span>   <span style="color:#ae81ff">8</span>   <span style="color:#ae81ff">12</span><br/></span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────<br/></span></span></code></pre></div></div><p>所以我們一樣可以用 <code>paste *.txt &gt; all.txt</code> 來把 10,000 資料都整理到同一個檔案，</p><p>此時如果出現 <code>Too many open files</code> 的錯誤，可以使用以下指令來增加同時可開啟的檔案數</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ulimit -Hn <span style="color:#ae81ff">10240</span> <span style="color:#75715e"># The hard limit</span><br/></span></span><span style="display:flex;"><span>$ ulimit -Sn <span style="color:#ae81ff">10240</span> <span style="color:#75715e"># The soft limit</span><br/></span></span></code></pre></div></div><p>成功變成一個檔案後發現它的 column 太多了 Spreadsheet 無法直接貼上，所以接下來要轉置一下。</p><p>這裡我們使用 awk 來幫忙，新增一個 <code>transpose.sh</code> 的檔案，內容如下：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/env bash<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>awk <span style="color:#e6db74">&#39;<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">{<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    for (i=1; i&lt;=NF; i++)  {<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        a[NR,i] = $i<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    }<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">}<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">NF&gt;p { p = NF }<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">END {<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    for(j=1; j&lt;=p; j++) {<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        str=a[1,j]<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        for(i=2; i&lt;=NR; i++){<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">            str=str&#34; &#34;a[i,j];<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        }<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">        print str<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">    }<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">}&#39;</span> $1<br/></span></span></code></pre></div></div><p>變更一下執行權限，就可以執行了</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ chmod +x transpose.sh <br/></span></span><span style="display:flex;"><span>$ ./transpose.sh all.txt &gt; all_tr.txt<br/></span></span></code></pre></div></div><p>這樣資料就會從原本的往右長變成往下長</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1dZ7u6raak9lUQiPR5DKxUTRjQJWPTPFZ" class="center img-zoomable" alt="google-轉置前" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1dZ7u6raak9lUQiPR5DKxUTRjQJWPTPFZ" class="center img-zoomable lazyload" alt="google-轉置前"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">轉置前</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1dZ7u6raak9lUQiPR5DKxUTRjQJWPTPFZ" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1_vu6Is-UDZqvWJodUJjdVlmbGokwct5O" class="center img-zoomable" alt="google-轉置後" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1_vu6Is-UDZqvWJodUJjdVlmbGokwct5O" class="center img-zoomable lazyload" alt="google-轉置後"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">轉置後</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1_vu6Is-UDZqvWJodUJjdVlmbGokwct5O" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="使用-google-spreadsheep" class="article-heading">使用 Google Spreadsheep <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-google-spreadsheep"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這裡可能比較沒啥，就是貼上去，這裡我覺得不要用 vim 開啟，找個方便複製的 (例如：VSCode)</p><p>用 Ctrl-v 貼上 Spreadsheet 時可能會花一點時間</p><p>不過發現它把所有的 column 合在一起了</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1jluF0VN_pDaifwAjVaJVsklIb5j3w7nN" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1jluF0VN_pDaifwAjVaJVsklIb5j3w7nN" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1jluF0VN_pDaifwAjVaJVsklIb5j3w7nN" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>我們選取第一個 column 然後點上方的 &ldquo;資料&rdquo; &gt; &ldquo;將文字分隔成不同欄&rdquo;</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1daksDj4iW6FCgvoTi9pxrQks7RYxBd4c" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1daksDj4iW6FCgvoTi9pxrQks7RYxBd4c" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1daksDj4iW6FCgvoTi9pxrQks7RYxBd4c" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>它會自動將第一個 column 分出來，這時後會冒出一個小視窗 (有點不明顯，有時候要滾動一下才會出現)，把下拉式選單點開選擇 &ldquo;空格&rdquo; 這樣它就會把所有 column 分開了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=13wfpf9aTKIqahEW-WUjAWkTAH-zwLlAf" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=13wfpf9aTKIqahEW-WUjAWkTAH-zwLlAf" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=13wfpf9aTKIqahEW-WUjAWkTAH-zwLlAf" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1sUbYYqab7gdhWDDSFX0eJUxujb7_zfPn" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1sUbYYqab7gdhWDDSFX0eJUxujb7_zfPn" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1sUbYYqab7gdhWDDSFX0eJUxujb7_zfPn" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>平均跟圖表部份就按照一般試算表的使用方式，就不記錄了。</p><br/><br/><h2 id="參考" class="article-heading">參考 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ul><li><br/><br/><a href="https://stackoverflow.com/a/1729980/6734174" target="_blank" rel="noreferrer noopener">An efficient way to transpose a file in Bash</a></li><li><br/><br/><a href="https://unix.stackexchange.com/a/205646" target="_blank" rel="noreferrer noopener">Combining large amount of files</a></li></ul>
        ]]></description></item><item><title>天氣之子 Weathering With You</title><link>https://aben20807.github.io/posts/20190919-weathering-with-you/</link><pubDate>Thu, 19 Sep 2019 23:35:06 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190919-weathering-with-you/</guid><description><![CDATA[
           <br/><p>看完直接來寫一波 OuO<br><br/>趁還沒看其他人的影評先來說一下看完當下的一些感想<br><br/>!!!! 強烈暴雷注意 !!!!</p>
          
            <p><a href="https://aben20807.github.io/posts/20190919-weathering-with-you/"><img src="https://drive.google.com/uc?export=view&amp;id=1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190919-weathering-with-you/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>看完直接來寫一波 OuO<br><br/>趁還沒看其他人的影評先來說一下看完當下的一些感想<br><br/>!!!! 強烈暴雷注意 !!!!</p><blockquote><p>果然誠哥回不去了<br><br/>果然有貓<br><br/>果然有瀧跟三葉<br><br/>果然沒有縮時鏡頭<br><br/>果然音樂都頗讚</p></blockquote><p>這些當然不是我在看電影前就預測，而是邊看邊喔～果然</p><p>話說這個聲優陣容有點厲害</p><p>所以我這幾天有點膽顫心驚，深怕一不小心就被暴雷了，我甚至連已經在 YouTube 出現的音樂都沒聽過，看到相關新聞快速掠過。</p><p>雖然我總是口頭說著喜歡下雨，但是再好幾次的雨天也都會覺得很麻煩，這次能夠用天氣當作動畫題材我真心佩服。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>首先第一個果然，從 2002年《星之聲》, 2004年《雲之彼端，約定的地方》, 2007年 《秒速5公分》, 2011年《追逐繁星的孩子》, 2013年《言葉之庭》全部都有一種會使人心痛的寂寞感，但想當然爾大家喜歡的是像迪士尼那樣友好結局的作品，2016年《你的名字》就出現了，直接讓新海誠導演成為討論的焦點，而成功關鍵就是有好的結局，就如同細田守2009年《夏日大作戰》一樣是大家喜愛的電影。但是誠哥舊時的那種寂寞感已經不復存在，較不失理的講法就是稱那些新的影片為商業導向即為商業片。</p><p>對我來說，我是不會說一定只看之前的影片，但是我是很喜歡那種寂寞感的，雖然有點傷身體 XDD，有興趣可以先從《追逐繁星的孩子》、《言葉之庭》入門，經典是《秒速5公分》。但有時我也覺得商業片不錯，至少看了心情會好。</p><p>第二個果然，我覺得導演頗愛貓，可以去看一個可愛的短片：<br/><br/><a href="https://www.youtube.com/watch?v=wafGAcUim5A" target="_blank" rel="noreferrer noopener">猫の集会</a>。</p><p>第三個果然，其實在《你的名字》就有出現類似的彩蛋，裡面有《言葉之庭》的孝雄和雪野。</p><p>第四個果然，我看完之後想果然沒有縮時攝影，但是明明天氣這種用縮時會很好看啊。不過注意《天氣之子》裡面都是在講短暫的天氣變化，這也難怪沒地方塞縮時了。</p><p>第五個果然，在電影院的環繞音效下音樂都頗棒，煙火那邊的 BGM 會起雞皮疙瘩，兩個人在天空的那首最為氣派也最需要比較好的環繞來聽。然後因為我歌跟歌名還沒對起來，待我聽個幾日再更新吧 OuO</p><p>主角們最後為了自己而許願，這並不是妥協於世界已經在崩壞的藉口，而是有所選擇下的結果。</p><p>老實說我一度以為會想辦法解決這個雨一直下不停的狀況，結果最後是就直接在這裡停止，我想這也是頗好，帶了一點點不是這麼完美的結局結束。</p><hr><br/><br/><br/><h2 id="20190921-補充" class="article-heading">2019.09.21 補充 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#20190921-%e8%a3%9c%e5%85%85"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>怎麼講呢，認真要挑反而沒有一首代表性的 (跟《你的名字》有點像)，不過我會想放グランドエスケープ(Grand Escape) - RADWIMPS (feat.三浦透子)，因為是電影短版所以那種到高潮處嘎然而止的感覺跟電影有點像，重低音的背景我有點愛但不太適合狂聽就是了。</p><br/><br/><br/><br/><br/><br/><br/> <p>不過，大丈夫 (We&rsquo;ll be alright) - RADWIMPS 這首的歌詞最棒最符合這部主角的心境了 OuO</p><br/><br/><br/><br/><br/><br/><br/> <p>另外，我上面的淺薄心得都是在看任何影評之前靠著自己寫的，有一個短評我覺得跟我想表達的有點像可是講得非常好 (我太爛啦XD)：【影評/解析】《天氣之子》-為了你，我可以放棄世界 | 超粒方</p><br/><br/><br/><br/><br/><br/><br/> 
        ]]></description></item><item><title>我的學習方式</title><link>https://aben20807.github.io/posts/20190911-how-i-learn-in-university/</link><pubDate>Wed, 11 Sep 2019 22:18:43 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190911-how-i-learn-in-university/</guid><description><![CDATA[
           <br/><p>大學畢業後突然有感，感覺需要記錄一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190911-how-i-learn-in-university/"><img src="https://drive.google.com/uc?export=view&amp;id=11dfe_7DVpwD2njTDBgIu23p1B4c_M7-d" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190911-how-i-learn-in-university/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>大學畢業後突然有感，感覺需要記錄一下。</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>其實這只是一段紀錄，不是要說你們一定要學著這樣做，當然如果你覺得不錯可以試試看，不過如果發現太晚看到了，沒關係，生命自會找到出路，人生裡沒有什麼是繞遠路的。總之把這篇當作是<br/><br/><a href="https://zh.wikipedia.org/wiki/%E5%80%96%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE" target="_blank" rel="noreferrer noopener">倖存者偏差</a>的文章我也不會說什麼。</p><p>另外，雖然主要是大學，不過我覺得這個學習方式是在國中的時候被養成的，高中時有機會得以更加磨練，大學時用的得心應手。</p><br/><br/><h1 id="國高中的啟蒙" class="article-heading">國高中的啟蒙 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%8b%e9%ab%98%e4%b8%ad%e7%9a%84%e5%95%9f%e8%92%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>剛好都是生物課 (結果我現在的領域截然不同)。國中生物課是老師通常用投影片跟講義上課，然後會有東西需要填空，當時是因為老師頗有趣而且會需要畫一堆生物相關的圖片所以我算是蠻認真上課。高中的生物老師一樣有趣，不過教學方式是純板書，而且字相當的「藝術」(當下沒記到的話之後一定會看不懂的那種)，但是因為整理的相當好，所以我都會在他講課的當下把聽到的東西抄成手稿，板書只是用來輔助我沒抄到的部份，這裡訓練到了寫字的速度及反應，然後之後再找時間轉換成比較精美的筆記，突然發現我在高中生物花了很多時間@@。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11ckRrYyumxt0qTjxS9Dz98gpH6JYNdpx" class="center img-zoomable" alt="google-高中生物手稿" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11ckRrYyumxt0qTjxS9Dz98gpH6JYNdpx" class="center img-zoomable lazyload" alt="google-高中生物手稿"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">高中生物手稿</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11ckRrYyumxt0qTjxS9Dz98gpH6JYNdpx" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11rgEhk6nd47jcfyTdt8KQsk7xRLh_3Ll" class="center img-zoomable" alt="google-高中生物筆記" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11rgEhk6nd47jcfyTdt8KQsk7xRLh_3Ll" class="center img-zoomable lazyload" alt="google-高中生物筆記"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">高中生物筆記</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11rgEhk6nd47jcfyTdt8KQsk7xRLh_3Ll" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="正文" class="article-heading">正文 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e6%96%87"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>好像有蠻多人，不管是自己的心態亦或是將學習意願缺乏怪在教課的教授身上，這群人總是認為自己學習更有效率，甚至課都不用去上，考前讀個幾天或僅需一整夜即可應付大大小小的測驗。其實不然，若只把讀書拿來應付考試實在過於短視。</p><p>我想說，最懶惰最輕鬆的方式絕對是「認真上課加抄筆記」，我的作法是即時將教授上課所講得知識轉換成自己能快速理解的語言並寫在活頁紙上，我覺得寫字還是很難被取代，因為自由度相當大，臨時要畫圖什麼的可以不需要任何切換。除了考試外，有其他額外的技能能夠訓練，例如教授上課的教學技巧，並非只有教得好的值得學習，那些聽得很吃力的可以學到怎樣的方式是不適合的間接可以拿來調整自己。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11LbbgbouvwIlnpDm8EPL7mPabBjnPVin" class="center img-zoomable" alt="google-作業系統 process scheduling" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11LbbgbouvwIlnpDm8EPL7mPabBjnPVin" class="center img-zoomable lazyload" alt="google-作業系統 process scheduling"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">作業系統 process scheduling</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11LbbgbouvwIlnpDm8EPL7mPabBjnPVin" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11HKH0-EwLVEK74ggSIQdhYyzH3nGf5gA" class="center img-zoomable" alt="google-作業系統 fork" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11HKH0-EwLVEK74ggSIQdhYyzH3nGf5gA" class="center img-zoomable lazyload" alt="google-作業系統 fork"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">作業系統 fork</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11HKH0-EwLVEK74ggSIQdhYyzH3nGf5gA" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>活頁紙也是方便之後做補充或調整。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11H5tRYqoTCEClbPqH1ZmXB5T-ig8S4v5" class="center img-zoomable" alt="google-計算理論 NFA" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11H5tRYqoTCEClbPqH1ZmXB5T-ig8S4v5" class="center img-zoomable lazyload" alt="google-計算理論 NFA"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">計算理論 NFA</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11H5tRYqoTCEClbPqH1ZmXB5T-ig8S4v5" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>有時也會用便利貼做補充或整理。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11j_ElOGVmLW678tEFavcdFBZt287Ft2l" class="center img-zoomable" alt="google-計算機概論" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11j_ElOGVmLW678tEFavcdFBZt287Ft2l" class="center img-zoomable lazyload" alt="google-計算機概論"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">計算機概論</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11j_ElOGVmLW678tEFavcdFBZt287Ft2l" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>甚至是跨頁的指向。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11ttY-5mgL8rAxY9Zj6gvDMqWaGQkuMfv" class="center img-zoomable" alt="google-工程數學 第二位移定理" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11ttY-5mgL8rAxY9Zj6gvDMqWaGQkuMfv" class="center img-zoomable lazyload" alt="google-工程數學 第二位移定理"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">工程數學 第二位移定理</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11ttY-5mgL8rAxY9Zj6gvDMqWaGQkuMfv" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>解題心法，工數教授會口述，所以我抄起來 (紅字) 以免忘記</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11fn8OvmD3bc5NTRRmGzORoSw4QaAReg2" class="center img-zoomable" alt="google-工程數學" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11fn8OvmD3bc5NTRRmGzORoSw4QaAReg2" class="center img-zoomable lazyload" alt="google-工程數學"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">工程數學</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11fn8OvmD3bc5NTRRmGzORoSw4QaAReg2" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>必考題重點標記。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11tzUGk0lsDuDGs7KbOUBPZqL6aUn6z3F" class="center img-zoomable" alt="google-資料結構 Binary Tree" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11tzUGk0lsDuDGs7KbOUBPZqL6aUn6z3F" class="center img-zoomable lazyload" alt="google-資料結構 Binary Tree"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">資料結構 Binary Tree</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11tzUGk0lsDuDGs7KbOUBPZqL6aUn6z3F" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>因為抄筆記已經成為一種習慣了，所以你可以看到不管什麼課我都可以抄。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11D90v_2P7X6bBZNNTwx9Clkxy6k9_Pac" class="center img-zoomable" alt="google-法政哲學 康德自由意志" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11D90v_2P7X6bBZNNTwx9Clkxy6k9_Pac" class="center img-zoomable lazyload" alt="google-法政哲學 康德自由意志"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">法政哲學 康德自由意志</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11D90v_2P7X6bBZNNTwx9Clkxy6k9_Pac" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11_a3xYpk5UX3HtZP_tJi4LOtI2NoQo0E" class="center img-zoomable" alt="google-憲政民主體制" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11_a3xYpk5UX3HtZP_tJi4LOtI2NoQo0E" class="center img-zoomable lazyload" alt="google-憲政民主體制"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">憲政民主體制</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11_a3xYpk5UX3HtZP_tJi4LOtI2NoQo0E" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>總之我認為邊上課邊寫出讓自己易於理解筆記的過程，與直譯器 (<br/><br/><a href="https://en.wikipedia.org/wiki/Interpreter_%28computing%29" target="_blank" rel="noreferrer noopener">Interpreter</a>) 有 87% 相似度，根本就是人體直譯器。 然後算是最近才知道這非常接近<br/><br/><a href="https://medium.com/y-pointer/%E7%9F%A5%E8%AD%98-967cca95a939" target="_blank" rel="noreferrer noopener">費曼學習法</a>，只是我還有加上即時產出。</p><p>另外因為是即時改寫，所以也算是有訓練到重寫的技能，這在未來寫論文上可能會比較需要。</p><p>使用這個方法我認為算是比較容易能夠維持好成績的，不會像臨時抱佛腳那樣浮動比較大，至於好成績有什麼用我就另外列在下面了，別在說「大學成績沒啥用，有過就好」這種話，但是當然也是有缺點的。</p><br/><br/><h1 id="認真上課的缺點" class="article-heading">認真上課的缺點 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%8d%e7%9c%9f%e4%b8%8a%e8%aa%b2%e7%9a%84%e7%bc%ba%e9%bb%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>需要有人 (教授) 幫忙整理資料變成自己的輸入</li><li>缺少主動去學習的能力</li><li>如果需要大量思考的內容會比較吃力，例如：演算法</li><li>會有更多時間做自己的事，不夠自律的話會浪費時間</li></ul><br/><br/><h1 id="補充成績好可能有的好處" class="article-heading">補充：成績好可能有的好處 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a3%9c%e5%85%85%e6%88%90%e7%b8%be%e5%a5%bd%e5%8f%af%e8%83%bd%e6%9c%89%e7%9a%84%e5%a5%bd%e8%99%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>(相關規定自己查嘿 OuO)</p><ul><li>獎學金 &ndash; (雖然我沒拿過我們學校的)</li><li>提早畢業 &ndash; (有成績門檻，雖然我也沒用到)</li><li>不用補習考研，靠推甄 &ndash; (直接省一大筆錢加一堆時間)</li><li>出國 GPA &ndash; (據說國外成績看頗重)</li><li><del>同學都把你當學霸</del></li></ul><br/><br/><h1 id="結論" class="article-heading">結論 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%ab%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>整體來說，認真上課的 CP 值真的頗高。</p><br/><br/><h1 id="後記" class="article-heading">後記 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>畢業之後回想，這個學習方式是很輕鬆，但是缺點就是自己讀書的時間太少，而這卻是大學跟研究所之間的差異，也就是說讀研究所時，會傾向學生已經具備從書本學習已建構好的知識，研究所則是不會又統一的教材，必須自行找到相關的期刊論文、研究、實驗、找出新方法。因此現在的我就會有之前書讀得太少的感覺。</p><p>然而這些知識現在大部分都已經散落在網路上的，怎麼下關鍵字找答案以及如何分辨真偽反而是更重要的課題。不過下關鍵字的能力我是覺得我算很不錯，因為很多問題只能自己上網找答案之類的。</p>
        ]]></description></item><item><title>Valgrind 的 Memcheck</title><link>https://aben20807.github.io/posts/20190817-valgrind-memcheck/</link><pubDate>Sat, 17 Aug 2019 11:17:09 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190817-valgrind-memcheck/</guid><description><![CDATA[
           <br/><p>簡單玩玩 @@</p>
          
            <p><a href="https://aben20807.github.io/posts/20190817-valgrind-memcheck/"><img src="https://drive.google.com/uc?export=view&amp;id=10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190817-valgrind-memcheck/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>簡單玩玩 @@</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>之前大學時期 (講得好像很久之前 OuO) 的某幾個作業我有拿來測試自己的程式碼是否有 memory leak 的情況，會發生這種情況主要原因是沒有對每一個 alloc 做 free。</p><br/><br/><h1 id="環境" class="article-heading">環境 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>T490s</li><li>Ubuntu 18.04</li></ul><br/><br/><h1 id="valgrind-的-memcheck" class="article-heading">Valgrind 的 Memcheck <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#valgrind-%e7%9a%84-memcheck"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>要一篇講完 Valgrind 基本上有點難，而且東西頗雜，我也是邊摸邊記錄，因為 Valgrind 有很多工具可以用，本篇主要講解預設的工具 <strong>memcheck</strong>，當然也只是部份的部份而已 QuQ。顧名思義是用來檢測記憶體使用情況，主要用在 C 及 C++。它是以插入額外程式碼 (<br/><br/><a href="https://en.wikipedia.org/wiki/Profiling_%28computer_programming%29#Instrumentation" target="_blank" rel="noreferrer noopener">Instrumentation</a>) 的方式來記錄記憶體的使用，根據 wiki，memcheck 幾乎對所有指令的周圍都插入額外的檢測程式碼用來追蹤記憶體區塊的有效性 (validity)。原因是因為一開始未被分配的區塊都會是無效 (invalid) 或是未定義 (undefined)，當這些區快被初始化後，memcheck 仍繼續追蹤 V bits (<br/><br/><a href="http://valgrind.org/docs/manual/mc-manual.html#mc-manual.value" target="_blank" rel="noreferrer noopener">Valid-value bits</a>) 及 A bits (<br/><br/><a href="http://valgrind.org/docs/manual/mc-manual.html#mc-manual.vaddress" target="_blank" rel="noreferrer noopener">Valid-address bits</a>)。此外，還實做了記憶體分配器 (<br/><br/><a href="https://en.wikipedia.org/wiki/C_dynamic_memory_allocation" target="_blank" rel="noreferrer noopener">memory allocator</a>)，也就是定義了 <code>malloc</code> 與 <code>free</code> 之類的函式來記錄呼叫次數。</p><p>總結來說，主要用來做以下項目檢測：</p><ul><li>使用位初始化的記憶體空間</li><li>讀或寫一塊已經 <code>free</code> 過得區塊</li><li>讀或寫超過一塊 <code>malloc</code> 取得合法的大小</li><li>記憶體洩漏 (<br/><br/><a href="https://en.wikipedia.org/wiki/Memory_leak" target="_blank" rel="noreferrer noopener">Memory leaks</a>)</li></ul><p>不過插入外程式碼是有代價的，就是效能會變低許多。</p><br/><br/><h2 id="安裝" class="article-heading">安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install valgrind<br/></span></span></code></pre></div></div><br/><br/><h2 id="使用" class="article-heading">使用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="測試記憶體洩漏-memory-leak-detection" class="article-heading">測試記憶體洩漏 (Memory leak detection) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e8%a8%98%e6%86%b6%e9%ab%94%e6%b4%a9%e6%bc%8f-memory-leak-detection"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdlib.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>a <span style="color:#f92672">=</span> (<span style="color:#66d9ef">int</span> <span style="color:#f92672">*</span>) malloc(<span style="color:#ae81ff">1024</span> <span style="color:#f92672">*</span> <span style="color:#66d9ef">sizeof</span>(<span style="color:#66d9ef">int</span>));<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;%p</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, a);<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">// free(a);<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h3 id="編譯" class="article-heading">編譯 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b7%a8%e8%ad%af"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><p><code>-g</code> 代表加入除錯資訊，可以讓 valgrind 指出在程式的那一行。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o test test.c -g<br/></span></span></code></pre></div></div><br/><br/><h3 id="利用-valgrind-抓-memory-leak" class="article-heading">利用 valgrind 抓 memory leak <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%a9%e7%94%a8-valgrind-%e6%8a%93-memory-leak"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ valgrind --leak-check<span style="color:#f92672">=</span>full --show-leak-kinds<span style="color:#f92672">=</span>all ./test<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>==18006== Memcheck, a memory error detector<br/></span></span><span style="display:flex;"><span>==18006== Copyright (C) 2002-2017, and GNU GPL&#39;d, by Julian Seward et al.<br/></span></span><span style="display:flex;"><span>==18006== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info<br/></span></span><span style="display:flex;"><span>==18006== Command: ./test<br/></span></span><span style="display:flex;"><span>==18006== <br/></span></span><span style="display:flex;"><span>0x522d040<br/></span></span><span style="display:flex;"><span>==18006== <br/></span></span><span style="display:flex;"><span>==18006== HEAP SUMMARY:<br/></span></span><span style="display:flex;"><span>==18006==     in use at exit: 4,096 bytes in 1 blocks<br/></span></span><span style="display:flex;"><span>==18006==   total heap usage: 2 allocs, 1 frees, 5,120 bytes allocated<br/></span></span><span style="display:flex;"><span>==18006== <br/></span></span><span style="display:flex;"><span>==18006== 4,096 bytes in 1 blocks are definitely lost in loss record 1 of 1<br/></span></span><span style="display:flex;"><span>==18006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)<br/></span></span><span style="display:flex;"><span>==18006==    by 0x10869B: main (test.c:5)<br/></span></span><span style="display:flex;"><span>==18006== <br/></span></span><span style="display:flex;"><span>==18006== LEAK SUMMARY:<br/></span></span><span style="display:flex;"><span>==18006==    definitely lost: 4,096 bytes in 1 blocks<br/></span></span><span style="display:flex;"><span>==18006==    indirectly lost: 0 bytes in 0 blocks<br/></span></span><span style="display:flex;"><span>==18006==      possibly lost: 0 bytes in 0 blocks<br/></span></span><span style="display:flex;"><span>==18006==    still reachable: 0 bytes in 0 blocks<br/></span></span><span style="display:flex;"><span>==18006==         suppressed: 0 bytes in 0 blocks<br/></span></span><span style="display:flex;"><span>==18006== <br/></span></span><span style="display:flex;"><span>==18006== For counts of detected and suppressed errors, rerun with: -v<br/></span></span><span style="display:flex;"><span>==18006== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)<br/></span></span></code></pre></div></div><br/><br/><h2 id="分析" class="article-heading">分析 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%86%e6%9e%90"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>程式中我們 malloc 的一塊 1024 個整數大小 (4 bytes) 的記憶體空間，程式結束前沒有呼叫 free 因此產生的 memory leak 的現象。可以看到 valgrind 指出我們在程式第 5 行 <code>int *a = (int *) malloc(1024 * sizeof(int));</code> 分配了 4096 bytes 的記憶體。</p><p>此外這裡有一個有趣的現象，就是總共分配的大小是 5120 bytes，這是因為 <code>printf</code> 的關係，這個函式會固定使用 1024 bytes 的記憶體空間。所以 5120 = 4096 + 1024。</p><br/><br/><h1 id="有顏色版本colour-valgrind" class="article-heading">有顏色版本：colour-valgrind <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%89%e9%a1%8f%e8%89%b2%e7%89%88%e6%9c%accolour-valgrind"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="安裝-1" class="article-heading">安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d-1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ pip3 install colour-valgrind <span style="color:#75715e"># 需要 python</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="如果喜歡的話可以直接加在-bashrc" class="article-heading">如果喜歡的話可以直接加在 <code>~/.bashrc</code> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e6%9e%9c%e5%96%9c%e6%ad%a1%e7%9a%84%e8%a9%b1%e5%8f%af%e4%bb%a5%e7%9b%b4%e6%8e%a5%e5%8a%a0%e5%9c%a8-bashrc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>alias valgrind<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;colour-valgrind&#39;</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="使用-1" class="article-heading">使用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>基本上就直接跟 valgrind 一樣</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ colour-valgrind --leak-check<span style="color:#f92672">=</span>full --show-leak-kinds<span style="color:#f92672">=</span>all ./test<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" class="center img-zoomable" alt="google-結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" class="center img-zoomable lazyload" alt="google-結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="參考資料" class="article-heading">參考資料 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="http://valgrind.org/docs/manual/mc-manual.html" target="_blank" rel="noreferrer noopener">Valgrind User Manual - 4. Memcheck: a memory error detector</a></li><li><br/><br/><a href="https://en.wikipedia.org/wiki/Valgrind" target="_blank" rel="noreferrer noopener">https://en.wikipedia.org/wiki/Valgrind</a></li></ul>
        ]]></description></item><item><title>Regex101</title><link>https://aben20807.github.io/posts/20190815-regexp/</link><pubDate>Thu, 15 Aug 2019 22:16:38 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190815-regexp/</guid><description><![CDATA[
           <br/><p>我現在才知道這個是不是偏爛啊</p>
          
            <p><a href="https://aben20807.github.io/posts/20190815-regexp/"><img src="https://drive.google.com/uc?export=view&amp;id=1vdxAJpMf506uqrdfXp6IPve3CYn-RXCP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190815-regexp/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>我現在才知道這個是不是偏爛啊</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>因為要調整網站的一些東西，所以需要寫一些正規表達式 (regular expression)，不過一直試都失敗，上網找資料才發現一個好網站。傳送門：<br/><br/><a href="https://regex101.com/" target="_blank" rel="noreferrer noopener">https://regex101.com/</a></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1-H5FG7NzGBMSEqNv6iJ0z2QfY3hQoXW5" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1-H5FG7NzGBMSEqNv6iJ0z2QfY3hQoXW5" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1-H5FG7NzGBMSEqNv6iJ0z2QfY3hQoXW5" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>一開始看到連結還以為是什麼內容農場，結果不是XDD</p><br/><br/><h1 id="使用" class="article-heading">使用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>左方有語言選項，因為不同語言的正規表達式可能會有些許的差異，所以就選擇正在使用的語言，因為 Hugo 是 Golang 寫的所以網站的表達式要選用 Go 語言。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1Oz0fVpydicxt3X97ywQ-Z45YHePTf6-l" class="center img-zoomable" alt="google-選擇 Golang" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1Oz0fVpydicxt3X97ywQ-Z45YHePTf6-l" class="center img-zoomable lazyload" alt="google-選擇 Golang"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">選擇 Golang</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1Oz0fVpydicxt3X97ywQ-Z45YHePTf6-l" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>基本功能就是填入表達式，接著可以輸入測試字串看是否吻合，如果中間有 group 的話也會標示不同顏色，這點我覺得超棒。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=11ScFQm6k0GbA3TPJbA7AysE8btF7dsdL" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=11ScFQm6k0GbA3TPJbA7AysE8btF7dsdL" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=11ScFQm6k0GbA3TPJbA7AysE8btF7dsdL" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>圖上範例就是我想要用來修改文章的標題 (heading)，加上錨定符號用。</p><p>簡單範例：</p><pre tabindex="0"><code>(&lt;(h[1-9]) id=\&#34;([^\&#34;]+)\&#34;(.+))(&lt;/h[1-9]+&gt;)<br/></code></pre><p>然後我是用這個來做取代來換成我想要的樣式，例如：</p><pre tabindex="0"><code>replaceRE &#34;(&lt;(h[1-9]) id=\&#34;([^\&#34;]+)\&#34;(.+))(&lt;/h[1-9]+&gt;)&#34; `&lt;${2} id=&#34;${3}&#34; class=&#34;article-heading&#34;${4}&lt;a class=&#34;headline-hash smoothScroll hover-show scrollspy&#34; style=&#34;font-size: 0.75em; color: black; padding-left: 0.25em&#34; href=&#34;#${3}&#34;&gt;&lt;span class=&#34;iconify&#34; data-icon=&#34;octicon-link&#34; data-inline=&#34;false&#34;&gt;&lt;/span&gt;&lt;/a&gt; ${5}`<br/></code></pre><p>原本的標題就會變成<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1yubxNXgTK8uZV07Bo52PzBUHN2Tjf8rY" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1yubxNXgTK8uZV07Bo52PzBUHN2Tjf8rY" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1yubxNXgTK8uZV07Bo52PzBUHN2Tjf8rY" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>別把人家的好心視為理所當然</title><link>https://aben20807.github.io/posts/20190804-tiny-action/</link><pubDate>Sun, 04 Aug 2019 11:08:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190804-tiny-action/</guid><description><![CDATA[
           <br/><p>其實原本 6 月中就要寫了，結果因為沒拍到照片所以就先延後 (明明是自己懶惰</p>
          
            <p><a href="https://aben20807.github.io/posts/20190804-tiny-action/"><img src="https://drive.google.com/uc?export=view&amp;id=1KfJO4p5cEL0SzRgLYDIMVLPtPOA3wVlf" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190804-tiny-action/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>其實原本 6 月中就要寫了，結果因為沒拍到照片所以就先延後 (明明是自己懶惰</p><p>6 月中還蠻嚴重的就是香港反送中的事件開始，到現在 8 月了仍然有罷工及遊行，不過本篇不會討論這個事件。 雖說不討論但其實有些相關。記得當時許多人跟風換了頭貼濾鏡，但我認為有一些人只會盲從表現自己好像有在關注社會議題反而忽略身邊的事。 若真的去探討哪些人，其實並不限於換頭貼的人，也不是換頭貼就會這樣，換頭貼只是剛好是附近發生的大事。所以並不是想要嘴這些換頭貼的人喔。</p><p>讓我想發文的遠因是大家都會把雨傘晾在走廊，導火線是前室友針對此事的<br/><br/><a href="https://www.moedict.tw/%E5%BC%B7%E8%BE%AF" target="_blank" rel="noreferrer noopener">強 (ㄑ一ㄤˇ) 辯</a>，先來講講發生了什麼事吧。</p><p>下雨天，大部分的人都會撐雨傘，拿回宿舍後就會打開然後放在走廊上，若是短暫的放置是還可以，不過幾乎所有人都是會放到過夜的，等到了隔天，打掃阿姨因為要推工作車，但因為有放雨傘所以過不去，因此就需要一個一個收雨傘才能前進。</p><p>我的前室友提出以下幾點：</p><ul><li>雨傘打開放在外面比較快乾</li><li>打掃阿姨有領薪水，而且沒看過她抱怨</li></ul><p>我對這些有些疑問。乾比較快需要放整晚嗎？另外，走廊是公共空間，照理說是不可以放置私人物品。還有正常打掃工作是不會包含收雨傘的，她幫忙收是因為這樣才能工作，沒有抱怨是因為人很好。因此帶入今天的主題，「別把人家的好心視為理所當然」。</p><p>(當然，這位室友事後說他是硬要辯</p><p>突然發現要講的沒有很多，只是希望大家多去思考，平時其實會有許多類似的情況，多去將心比心，而不是以為換個頭貼就有多關心這個社會，請從身邊最微小的事開始去實際力行，這個社會才能一點一滴的變好。</p><p>當然你可能好奇我怎麼晾雨傘，我是直接收傘的狀況下放到房間地上，不用綁起來，利用房間冷氣會讓房間乾燥的特性，放一個晚上基本上就乾了。給你們參考 OuO</p>
        ]]></description></item><item><title>Build MNIST with TVM</title><link>https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/</link><pubDate>Sun, 16 Jun 2019 17:40:59 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/</guid><description><![CDATA[
           <br/><p>真的是隔很久&hellip;.藉口就不多說了 OuO</p><br/><p>這篇主要在造輪子，主要原因就是幾乎找不到這類輪子了，而剛好自己需要，又卡了很久才完成，不如記錄一下 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/"><img src="https://drive.google.com/uc?export=view&amp;id=1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>真的是隔很久&hellip;.藉口就不多說了 OuO</p><p>這篇主要在造輪子，主要原因就是幾乎找不到這類輪子了，而剛好自己需要，又卡了很久才完成，不如記錄一下 OuO</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>最近在做 TVM 相關的事，它支援頗多前端，基於方便我就隨便挑一個 Keras 了 (先說我不會 AI @@<br><br/>然後因為現在頗多都在做 ImageNet 或更之後的應用，MNIST 的資料反而偏少，尤其是幾乎找不到訓練好的模型，說幾乎是因為還真的被我找到，傳送門：<br/><br/><a href="https://github.com/EN10/KerasMNIST" target="_blank" rel="noreferrer noopener">EN10/KerasMNIST</a>，如果只是要用 Keras 來操作 MNIST 的話可以用這個連結，我已經確認過是可以直接執行XDD</p><hr><p>2019.06.17 更新：扯，原來官網就有&hellip;.https://keras.io/examples/mnist_cnn/<br><br/>然後我發現我整篇都把 MNIST 打成 MINST&hellip;.</p><hr><p>話說原本以為模型被存成檔案的話只有權重，結果是有兩種，也可以跟整個模型存在一起，詳情就去 Keras 官網 <br/><br/><a href="https://keras.io/getting-started/faq/#how-can-i-save-a-keras-model" target="_blank" rel="noreferrer noopener">How can I save a Keras model?</a> 看看吧。</p><p>所以上面那個做 MNIST 的是把整個模型存起來，這主要不是我要的＠＠，不過還是先用看看。</p><p>P.S. 一些相依性檔案例如 Keras, Tensorflow, TVM 的安裝就不一一記錄囉 OuO</p><br/><br/><h1 id="環境" class="article-heading">環境 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>ubuntu 18.04</li><li>TVM 0.6.dev (6a4d71ff40915611bd42b62994992b879e6be610)</li></ul><br/><br/><h1 id="一堆程式碼上菜囉" class="article-heading">一堆程式碼上菜囉 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%80%e5%a0%86%e7%a8%8b%e5%bc%8f%e7%a2%bc%e4%b8%8a%e8%8f%9c%e5%9b%89"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="原始-cnnpredictpy" class="article-heading">原始 <code>cnnPredict.py</code> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8e%9f%e5%a7%8b-cnnpredictpy"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>注意要下載或複製那個程式碼，<code>cnn.h5</code> 跟 <code>test3.png</code> 一樣要放對位置。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> scipy.misc <span style="color:#f92672">import</span> imread, imresize<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imread(<span style="color:#e6db74">&#39;test3.png&#39;</span>,mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;L&#39;</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compute a bit-wise inversion so black becomes white and vice versa</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>invert(x)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Make it the right size</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imresize(x,(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>))<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Convert to a 4D tensor to feed into our model</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>reshape(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Perform the prediction</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> load_model<br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> load_model(<span style="color:#e6db74">&#39;cnn.h5&#39;</span>)<br/></span></span><span style="display:flex;"><span>out <span style="color:#f92672">=</span> model<span style="color:#f92672">.</span>predict(x)<br/></span></span><span style="display:flex;"><span>print(np<span style="color:#f92672">.</span>argmax(out))<br/></span></span></code></pre></div></div><p>很好，可以執行～</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict.py<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="加入-tvm-囉" class="article-heading">加入 TVM 囉 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e5%85%a5-tvm-%e5%9b%89"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> nnvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm.relay <span style="color:#66d9ef">as</span> relay<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> scipy.misc <span style="color:#f92672">import</span> imread, imresize<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> keras<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> load_model<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imread(<span style="color:#e6db74">&#39;test3.png&#39;</span>,mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;L&#39;</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compute a bit-wise inversion so black becomes white and vice versa</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>invert(x)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Make it the right size</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imresize(x,(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>))<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Convert to a 4D tensor to feed into our model</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>reshape(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Load model from pre-trained file</span><br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> load_model(<span style="color:#e6db74">&#39;cnn.h5&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compile with tvm</span><br/></span></span><span style="display:flex;"><span>shape_dict <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#39;input_1&#39;</span>: (<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">28</span>)}<br/></span></span><span style="display:flex;"><span>func, params <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>frontend<span style="color:#f92672">.</span>from_keras(model, shape_dict)<br/></span></span><span style="display:flex;"><span>target <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;llvm&#34;</span><br/></span></span><span style="display:flex;"><span>ctx <span style="color:#f92672">=</span> tvm<span style="color:#f92672">.</span>cpu(<span style="color:#ae81ff">0</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> relay<span style="color:#f92672">.</span>build_config(opt_level<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>):<br/></span></span><span style="display:flex;"><span>    executor <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>build_module<span style="color:#f92672">.</span>create_executor(<span style="color:#e6db74">&#39;graph&#39;</span>, func, ctx, target)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Perform the prediction</span><br/></span></span><span style="display:flex;"><span>dtype <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;float32&#39;</span><br/></span></span><span style="display:flex;"><span>tvm_out <span style="color:#f92672">=</span> executor<span style="color:#f92672">.</span>evaluate(func)(tvm<span style="color:#f92672">.</span>nd<span style="color:#f92672">.</span>array(x<span style="color:#f92672">.</span>astype(dtype)), <span style="color:#f92672">**</span>params)<br/></span></span><span style="display:flex;"><span>print(np<span style="color:#f92672">.</span>argmax(tvm_out<span style="color:#f92672">.</span>asnumpy()[<span style="color:#ae81ff">0</span>]))<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict_tvm.py<br/></span></span><span style="display:flex;"><span>In <span style="color:#e6db74">`</span>main<span style="color:#e6db74">`</span>: <br/></span></span><span style="display:flex;"><span>v0.0.1<br/></span></span><span style="display:flex;"><span>fn <span style="color:#f92672">(</span>%conv2d_1_input, %v_param_1: Tensor<span style="color:#f92672">[(</span>32, 1, 3, 3<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_2: Tensor<span style="color:#f92672">[(</span>32,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_3: Tensor<span style="color:#f92672">[(</span>64, 32, 3, 3<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_4: Tensor<span style="color:#f92672">[(</span>64,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_5: Tensor<span style="color:#f92672">[(</span>128, 9216<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_6: Tensor<span style="color:#f92672">[(</span>128,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_7: Tensor<span style="color:#f92672">[(</span>10, 128<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_8: Tensor<span style="color:#f92672">[(</span>10,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">])</span> <span style="color:#f92672">{</span><br/></span></span><span style="display:flex;"><span>  %0 <span style="color:#f92672">=</span> nn.conv2d<span style="color:#f92672">(</span>%conv2d_1_input, %v_param_1, channels<span style="color:#f92672">=</span>32, kernel_size<span style="color:#f92672">=[</span>3, 3<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %1 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%0, %v_param_2<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %2 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%1<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %3 <span style="color:#f92672">=</span> nn.conv2d<span style="color:#f92672">(</span>%2, %v_param_3, channels<span style="color:#f92672">=</span>64, kernel_size<span style="color:#f92672">=[</span>3, 3<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %4 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%3, %v_param_4<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %5 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%4<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %6 <span style="color:#f92672">=</span> nn.max_pool2d<span style="color:#f92672">(</span>%5, pool_size<span style="color:#f92672">=[</span>2, 2<span style="color:#f92672">]</span>, strides<span style="color:#f92672">=[</span>2, 2<span style="color:#f92672">])</span>an internal invariant was violated <span style="color:#66d9ef">while</span> typechecking your program <span style="color:#f92672">[</span>22:05:21<span style="color:#f92672">]</span> tvm/src/relay/op/nn/pooling.cc:73: Check failed: data !<span style="color:#f92672">=</span> nullptr: <br/></span></span><span style="display:flex;"><span>; <br/></span></span><span style="display:flex;"><span>  %7 <span style="color:#f92672">=</span> transpose<span style="color:#f92672">(</span>%6, axes<span style="color:#f92672">=[</span>0, 2, 3, 1<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %8 <span style="color:#f92672">=</span> nn.batch_flatten<span style="color:#f92672">(</span>%7<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %9 <span style="color:#f92672">=</span> nn.dense<span style="color:#f92672">(</span>%8, %v_param_5, units<span style="color:#f92672">=</span>128<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %10 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%9, %v_param_6<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %11 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%10<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %12 <span style="color:#f92672">=</span> nn.dense<span style="color:#f92672">(</span>%11, %v_param_7, units<span style="color:#f92672">=</span>10<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %13 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%12, %v_param_8<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  nn.softmax<span style="color:#f92672">(</span>%13, axis<span style="color:#f92672">=</span>1<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">}</span><br/></span></span></code></pre></div></div><p>扯，竟然不行＠＠，而且完全不知道錯哪，找了一些資料說是 shape 錯了，我試了各種排列組合也都不行&hellip;.</p><br/><br/><h2 id="只存-mnist-的權重" class="article-heading">只存 MNIST 的權重 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%aa%e5%ad%98-mnist-%e7%9a%84%e6%ac%8a%e9%87%8d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>只好使用上面提到 Keras 官網 <br/><br/><a href="https://keras.io/getting-started/faq/#how-can-i-save-a-keras-model" target="_blank" rel="noreferrer noopener">How can I save a Keras model?</a> 的方式只存權重出來，這裡我們只需要改最後一行，<code>save</code> 改成 <code>save_weights</code></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> keras<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.datasets <span style="color:#f92672">import</span> mnist<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> Sequential<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Dense, Dropout, Flatten<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Conv2D, MaxPooling2D<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras <span style="color:#f92672">import</span> backend <span style="color:#66d9ef">as</span> K<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>batch_size <span style="color:#f92672">=</span> <span style="color:#ae81ff">128</span><br/></span></span><span style="display:flex;"><span>num_classes <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span>epochs <span style="color:#f92672">=</span> <span style="color:#ae81ff">12</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># input image dimensions</span><br/></span></span><span style="display:flex;"><span>img_rows, img_cols <span style="color:#f92672">=</span> <span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">28</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># the data, shuffled and split between train and test sets</span><br/></span></span><span style="display:flex;"><span>(x_train, y_train), (x_test, y_test) <span style="color:#f92672">=</span> mnist<span style="color:#f92672">.</span>load_data()<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x_train <span style="color:#f92672">=</span> x_train<span style="color:#f92672">.</span>reshape(x_train<span style="color:#f92672">.</span>shape[<span style="color:#ae81ff">0</span>], img_rows, img_cols, <span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x_test <span style="color:#f92672">=</span> x_test<span style="color:#f92672">.</span>reshape(x_test<span style="color:#f92672">.</span>shape[<span style="color:#ae81ff">0</span>], img_rows, img_cols, <span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>input_shape <span style="color:#f92672">=</span> (img_rows, img_cols, <span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x_train <span style="color:#f92672">=</span> x_train<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x_test <span style="color:#f92672">=</span> x_test<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x_train <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span>x_test <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#39;x_train shape:&#39;</span>, x_train<span style="color:#f92672">.</span>shape)<br/></span></span><span style="display:flex;"><span>print(x_train<span style="color:#f92672">.</span>shape[<span style="color:#ae81ff">0</span>], <span style="color:#e6db74">&#39;train samples&#39;</span>)<br/></span></span><span style="display:flex;"><span>print(x_test<span style="color:#f92672">.</span>shape[<span style="color:#ae81ff">0</span>], <span style="color:#e6db74">&#39;test samples&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># convert class vectors to binary class matrices</span><br/></span></span><span style="display:flex;"><span>y_train <span style="color:#f92672">=</span> keras<span style="color:#f92672">.</span>utils<span style="color:#f92672">.</span>to_categorical(y_train, num_classes)<br/></span></span><span style="display:flex;"><span>y_test <span style="color:#f92672">=</span> keras<span style="color:#f92672">.</span>utils<span style="color:#f92672">.</span>to_categorical(y_test, num_classes)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> Sequential()<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">32</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>),<br/></span></span><span style="display:flex;"><span>                 activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>,<br/></span></span><span style="display:flex;"><span>                 input_shape<span style="color:#f92672">=</span>input_shape))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">64</span>, (<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(MaxPooling2D(pool_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">2</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.25</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Flatten())<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(<span style="color:#ae81ff">128</span>, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.5</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(num_classes, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;softmax&#39;</span>))<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>compile(loss<span style="color:#f92672">=</span>keras<span style="color:#f92672">.</span>losses<span style="color:#f92672">.</span>categorical_crossentropy,<br/></span></span><span style="display:flex;"><span>              optimizer<span style="color:#f92672">=</span>keras<span style="color:#f92672">.</span>optimizers<span style="color:#f92672">.</span>Adadelta(),<br/></span></span><span style="display:flex;"><span>              metrics<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;accuracy&#39;</span>])<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>fit(x_train, y_train,<br/></span></span><span style="display:flex;"><span>          batch_size<span style="color:#f92672">=</span>batch_size,<br/></span></span><span style="display:flex;"><span>          epochs<span style="color:#f92672">=</span>epochs,<br/></span></span><span style="display:flex;"><span>          verbose<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>,<br/></span></span><span style="display:flex;"><span>          validation_data<span style="color:#f92672">=</span>(x_test, y_test))<br/></span></span><span style="display:flex;"><span>score <span style="color:#f92672">=</span> model<span style="color:#f92672">.</span>evaluate(x_test, y_test, verbose<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)<br/></span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#39;Test loss:&#39;</span>, score[<span style="color:#ae81ff">0</span>])<br/></span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#39;Test accuracy:&#39;</span>, score[<span style="color:#ae81ff">1</span>])<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>save_weights(<span style="color:#e6db74">&#39;mnist_weights.h5&#39;</span>)<br/></span></span></code></pre></div></div><p>跑了頗久，不過跟其應該比 ImageNet 快很多了。結果如下圖。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" class="center img-zoomable" alt="google-train a MNIST model with Keras" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" class="center img-zoomable lazyload" alt="google-train a MNIST model with Keras"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">train a MNIST model with Keras</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="自己用-keras-建構一個-mnist-再餵給-tvm" class="article-heading">自己用 Keras 建構一個 MNIST 再餵給 TVM <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%87%aa%e5%b7%b1%e7%94%a8-keras-%e5%bb%ba%e6%a7%8b%e4%b8%80%e5%80%8b-mnist-%e5%86%8d%e9%a4%b5%e7%b5%a6-tvm"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>把上面產生的權重餵給自己建構的模型</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> nnvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm.relay <span style="color:#66d9ef">as</span> relay<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> scipy.misc <span style="color:#f92672">import</span> imread, imresize<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> keras<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> load_model<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.datasets <span style="color:#f92672">import</span> mnist<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> Sequential<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Dense, Dropout, Flatten, InputLayer<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Conv2D, MaxPooling2D<br/></span></span><span style="display:flex;"><span>num_classes <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imread(<span style="color:#e6db74">&#39;test3.png&#39;</span>,mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;L&#39;</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compute a bit-wise inversion so black becomes white and vice versa</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>invert(x)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Make it the right size</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imresize(x,(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>))<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Convert to a 4D tensor to feed into our model</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>reshape(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Construct a MNIST model</span><br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> Sequential()<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">32</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>, input_shape<span style="color:#f92672">=</span>(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">64</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(MaxPooling2D(pool_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">2</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.25</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Flatten())<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(<span style="color:#ae81ff">128</span>, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.5</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(num_classes, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;softmax&#39;</span>))<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Load the weights that we get from last program</span><br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>load_weights(<span style="color:#e6db74">&#39;mnist_weights.h5&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>shape_dict <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#39;input_1&#39;</span>: (<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">28</span>)}<br/></span></span><span style="display:flex;"><span>func, params <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>frontend<span style="color:#f92672">.</span>from_keras(model, shape_dict)<br/></span></span><span style="display:flex;"><span>target <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;llvm&#34;</span><br/></span></span><span style="display:flex;"><span>ctx <span style="color:#f92672">=</span> tvm<span style="color:#f92672">.</span>cpu(<span style="color:#ae81ff">0</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> relay<span style="color:#f92672">.</span>build_config(opt_level<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>):<br/></span></span><span style="display:flex;"><span>    executor <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>build_module<span style="color:#f92672">.</span>create_executor(<span style="color:#e6db74">&#39;graph&#39;</span>, func, ctx, target)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Perform the prediction</span><br/></span></span><span style="display:flex;"><span>dtype <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;float32&#39;</span><br/></span></span><span style="display:flex;"><span>tvm_out <span style="color:#f92672">=</span> executor<span style="color:#f92672">.</span>evaluate(func)(tvm<span style="color:#f92672">.</span>nd<span style="color:#f92672">.</span>array(x<span style="color:#f92672">.</span>astype(dtype)), <span style="color:#f92672">**</span>params)<br/></span></span><span style="display:flex;"><span>print(np<span style="color:#f92672">.</span>argmax(tvm_out<span style="color:#f92672">.</span>asnumpy()[<span style="color:#ae81ff">0</span>]))<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict_tvm.py<br/></span></span><span style="display:flex;"><span>In <span style="color:#e6db74">`</span>main<span style="color:#e6db74">`</span>: <br/></span></span><span style="display:flex;"><span>v0.0.1<br/></span></span><span style="display:flex;"><span>fn <span style="color:#f92672">(</span>%conv2d_1_input, %v_param_1: Tensor<span style="color:#f92672">[(</span>32, 1, 3, 3<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_2: Tensor<span style="color:#f92672">[(</span>32,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_3: Tensor<span style="color:#f92672">[(</span>64, 32, 3, 3<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_4: Tensor<span style="color:#f92672">[(</span>64,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_5: Tensor<span style="color:#f92672">[(</span>128, 9216<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_6: Tensor<span style="color:#f92672">[(</span>128,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_7: Tensor<span style="color:#f92672">[(</span>10, 128<span style="color:#f92672">)</span>, float32<span style="color:#f92672">]</span>, %v_param_8: Tensor<span style="color:#f92672">[(</span>10,<span style="color:#f92672">)</span>, float32<span style="color:#f92672">])</span> <span style="color:#f92672">{</span><br/></span></span><span style="display:flex;"><span>  %0 <span style="color:#f92672">=</span> nn.conv2d<span style="color:#f92672">(</span>%conv2d_1_input, %v_param_1, channels<span style="color:#f92672">=</span>32, kernel_size<span style="color:#f92672">=[</span>3, 3<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %1 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%0, %v_param_2<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %2 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%1<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %3 <span style="color:#f92672">=</span> nn.conv2d<span style="color:#f92672">(</span>%2, %v_param_3, channels<span style="color:#f92672">=</span>64, kernel_size<span style="color:#f92672">=[</span>3, 3<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %4 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%3, %v_param_4<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %5 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%4<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %6 <span style="color:#f92672">=</span> nn.max_pool2d<span style="color:#f92672">(</span>%5, pool_size<span style="color:#f92672">=[</span>2, 2<span style="color:#f92672">]</span>, strides<span style="color:#f92672">=[</span>2, 2<span style="color:#f92672">])</span>an internal invariant was violated <span style="color:#66d9ef">while</span> typechecking your program <span style="color:#f92672">[</span>22:21:27<span style="color:#f92672">]</span> tvm/src/relay/op/nn/pooling.cc:73: Check failed: data !<span style="color:#f92672">=</span> nullptr: <br/></span></span><span style="display:flex;"><span>; <br/></span></span><span style="display:flex;"><span>  %7 <span style="color:#f92672">=</span> transpose<span style="color:#f92672">(</span>%6, axes<span style="color:#f92672">=[</span>0, 2, 3, 1<span style="color:#f92672">])</span><br/></span></span><span style="display:flex;"><span>  %8 <span style="color:#f92672">=</span> nn.batch_flatten<span style="color:#f92672">(</span>%7<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %9 <span style="color:#f92672">=</span> nn.dense<span style="color:#f92672">(</span>%8, %v_param_5, units<span style="color:#f92672">=</span>128<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %10 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%9, %v_param_6<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %11 <span style="color:#f92672">=</span> nn.relu<span style="color:#f92672">(</span>%10<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %12 <span style="color:#f92672">=</span> nn.dense<span style="color:#f92672">(</span>%11, %v_param_7, units<span style="color:#f92672">=</span>10<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  %13 <span style="color:#f92672">=</span> nn.bias_add<span style="color:#f92672">(</span>%12, %v_param_8<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span>  nn.softmax<span style="color:#f92672">(</span>%13, axis<span style="color:#f92672">=</span>1<span style="color:#f92672">)</span><br/></span></span><span style="display:flex;"><span><span style="color:#f92672">}</span><br/></span></span></code></pre></div></div><p>扯，結果竟然一模一樣。</p><br/><br/><h2 id="檢驗剛剛建立的模型是否正確" class="article-heading">檢驗剛剛建立的模型是否正確 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%a2%e9%a9%97%e5%89%9b%e5%89%9b%e5%bb%ba%e7%ab%8b%e7%9a%84%e6%a8%a1%e5%9e%8b%e6%98%af%e5%90%a6%e6%ad%a3%e7%a2%ba"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>總之先試試看是不是跟直接讀 <code>cnn.h5</code> 一樣。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> nnvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm.relay <span style="color:#66d9ef">as</span> relay<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> scipy.misc <span style="color:#f92672">import</span> imread, imresize<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> keras<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> load_model<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.datasets <span style="color:#f92672">import</span> mnist<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> Sequential<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Dense, Dropout, Flatten, InputLayer<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Conv2D, MaxPooling2D<br/></span></span><span style="display:flex;"><span>num_classes <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imread(<span style="color:#e6db74">&#39;test3.png&#39;</span>,mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;L&#39;</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compute a bit-wise inversion so black becomes white and vice versa</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>invert(x)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Make it the right size</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imresize(x,(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>))<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Convert to a 4D tensor to feed into our model</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>reshape(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Construct a MNIST model</span><br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> Sequential()<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">32</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>, input_shape<span style="color:#f92672">=</span>(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">64</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(MaxPooling2D(pool_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">2</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.25</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Flatten())<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(<span style="color:#ae81ff">128</span>, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.5</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(num_classes, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;softmax&#39;</span>))<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Load the weights that we get from last program</span><br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>load_weights(<span style="color:#e6db74">&#39;mnist_weights.h5&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Perform the prediction</span><br/></span></span><span style="display:flex;"><span>out <span style="color:#f92672">=</span> model<span style="color:#f92672">.</span>predict(x)<br/></span></span><span style="display:flex;"><span>print(np<span style="color:#f92672">.</span>argmax(out))<br/></span></span></code></pre></div></div><p>很好，是一樣&hellip;.</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict.py<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span></code></pre></div></div><br/><br/><h2 id="突破加個輸入層" class="article-heading">突破，加個輸入層？ <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%aa%81%e7%a0%b4%e5%8a%a0%e5%80%8b%e8%bc%b8%e5%85%a5%e5%b1%a4"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>在找解決方式的過程中突然看到<br/><br/><a href="https://stackoverflow.com/a/49600827/6734174" target="_blank" rel="noreferrer noopener">這裡</a>提到有 <code>InputLayer</code>，不如加看看。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> nnvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> tvm.relay <span style="color:#66d9ef">as</span> relay<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> scipy.misc <span style="color:#f92672">import</span> imread, imresize<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> numpy <span style="color:#66d9ef">as</span> np<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> keras<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> load_model<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.datasets <span style="color:#f92672">import</span> mnist<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.models <span style="color:#f92672">import</span> Sequential<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Dense, Dropout, Flatten, InputLayer<br/></span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> keras.layers <span style="color:#f92672">import</span> Conv2D, MaxPooling2D<br/></span></span><span style="display:flex;"><span>num_classes <span style="color:#f92672">=</span> <span style="color:#ae81ff">10</span><br/></span></span><span style="display:flex;"><span>input_shape <span style="color:#f92672">=</span> (<span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imread(<span style="color:#e6db74">&#39;test3.png&#39;</span>,mode<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;L&#39;</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Compute a bit-wise inversion so black becomes white and vice versa</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> np<span style="color:#f92672">.</span>invert(x)<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Make it the right size</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> imresize(x,(<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>))<br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Convert to a 4D tensor to feed into our model</span><br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>reshape(<span style="color:#ae81ff">1</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">28</span>,<span style="color:#ae81ff">1</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">=</span> x<span style="color:#f92672">.</span>astype(<span style="color:#e6db74">&#39;float32&#39;</span>)<br/></span></span><span style="display:flex;"><span>x <span style="color:#f92672">/=</span> <span style="color:#ae81ff">255</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># model = load_model(&#39;cnn.h5&#39;)</span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Construct a MNIST model</span><br/></span></span><span style="display:flex;"><span>model <span style="color:#f92672">=</span> Sequential()<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(InputLayer(input_shape<span style="color:#f92672">=</span>input_shape))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">32</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>, input_shape<span style="color:#f92672">=</span>input_shape))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Conv2D(<span style="color:#ae81ff">64</span>, kernel_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">3</span>), activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(MaxPooling2D(pool_size<span style="color:#f92672">=</span>(<span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">2</span>)))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.25</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Flatten())<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(<span style="color:#ae81ff">128</span>, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;relu&#39;</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dropout(<span style="color:#ae81ff">0.5</span>))<br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>add(Dense(num_classes, activation<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;softmax&#39;</span>))<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Load the weights that we get from last program</span><br/></span></span><span style="display:flex;"><span>model<span style="color:#f92672">.</span>load_weights(<span style="color:#e6db74">&#39;mnist_weights.h5&#39;</span>)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>shape_dict <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#39;input_1&#39;</span>: (<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">28</span>, <span style="color:#ae81ff">28</span>)}<br/></span></span><span style="display:flex;"><span>func, params <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>frontend<span style="color:#f92672">.</span>from_keras(model, shape_dict)<br/></span></span><span style="display:flex;"><span>target <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;llvm&#34;</span><br/></span></span><span style="display:flex;"><span>ctx <span style="color:#f92672">=</span> tvm<span style="color:#f92672">.</span>cpu(<span style="color:#ae81ff">0</span>)<br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> relay<span style="color:#f92672">.</span>build_config(opt_level<span style="color:#f92672">=</span><span style="color:#ae81ff">3</span>):<br/></span></span><span style="display:flex;"><span>    executor <span style="color:#f92672">=</span> relay<span style="color:#f92672">.</span>build_module<span style="color:#f92672">.</span>create_executor(<span style="color:#e6db74">&#39;graph&#39;</span>, func, ctx, target)<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># Pperform the prediction</span><br/></span></span><span style="display:flex;"><span>dtype <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;float32&#39;</span><br/></span></span><span style="display:flex;"><span>tvm_out <span style="color:#f92672">=</span> executor<span style="color:#f92672">.</span>evaluate(func)(tvm<span style="color:#f92672">.</span>nd<span style="color:#f92672">.</span>array(x<span style="color:#f92672">.</span>astype(dtype)), <span style="color:#f92672">**</span>params)<br/></span></span><span style="display:flex;"><span>print(np<span style="color:#f92672">.</span>argmax(tvm_out<span style="color:#f92672">.</span>asnumpy()[<span style="color:#ae81ff">0</span>]))<br/></span></span></code></pre></div></div><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 test_mnist.py<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span><br/></span></span></code></pre></div></div><p>扯，竟然過了 QuQ</p><br/><br/><h1 id="其他" class="article-heading">其他 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="lutzroedernetronhttpsgithubcomlutzroedernetron" class="article-heading"><br/><br/><a href="https://github.com/lutzroeder/netron" target="_blank" rel="noreferrer noopener"><code>lutzroeder/netron</code></a> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lutzroedernetronhttpsgithubcomlutzroedernetron"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>發現了一個視覺化工具可以看模型。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=18rjO-BiQTXRsSDAtisBkyEEhkO2sIBoP" class="center img-zoomable" alt="google-NETRON" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=18rjO-BiQTXRsSDAtisBkyEEhkO2sIBoP" class="center img-zoomable lazyload" alt="google-NETRON"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">NETRON</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=18rjO-BiQTXRsSDAtisBkyEEhkO2sIBoP" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="想看中間的-shape-的話" class="article-heading">想看中間的 shape 的話 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%83%b3%e7%9c%8b%e4%b8%ad%e9%96%93%e7%9a%84-shape-%e7%9a%84%e8%a9%b1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#66d9ef">for</span> layer <span style="color:#f92672">in</span> model<span style="color:#f92672">.</span>layers:<br/></span></span><span style="display:flex;"><span>    print(layer<span style="color:#f92672">.</span>input_shape)<br/></span></span><span style="display:flex;"><span>    print(layer<span style="color:#f92672">.</span>input)<br/></span></span><span style="display:flex;"><span>    print(layer<span style="color:#f92672">.</span>output_shape)<br/></span></span><span style="display:flex;"><span>    print(layer<span style="color:#f92672">.</span>output)<br/></span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;---&#34;</span>)<br/></span></span></code></pre></div></div>
        ]]></description></item><item><title>Github Flow (2)</title><link>https://aben20807.github.io/posts/20190421-github-flow-2/</link><pubDate>Sun, 21 Apr 2019 19:13:02 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190421-github-flow-2/</guid><description><![CDATA[
           <br/><p>針對昨天的再多釐清一些。順便補充一些東西。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190421-github-flow-2/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190421-github-flow-2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>針對昨天的再多釐清一些。順便補充一些東西。</p><h1 id="關於流程" class="article-heading">關於流程 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e6%96%bc%e6%b5%81%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>昨天的流程主要是有需要 fork 的，通常是針對那些你無法對原始專案直接操作的狀況。</p><p>如果對同一個專案使用 GitHub flow 也是可以的，也就是說在同一個專案中開啟 branch 在對自己開啟 PR，或許這就是我一開始有點困惑的原因，結果是都適用。</p><br/><br/><h1 id="pr-被-merge-後呢" class="article-heading">PR 被 merge 後呢 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#pr-%e8%a2%ab-merge-%e5%be%8c%e5%91%a2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="更新-merge-commit" class="article-heading">更新 merge commit <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9b%b4%e6%96%b0-merge-commit"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>接下來要做的就是更新一下自己的 master (origin 跟 local)。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git fetch upstream<br/></span></span><span style="display:flex;"><span>$ git checkout master<br/></span></span><span style="display:flex;"><span>$ git merge upstream/master<br/></span></span><span style="display:flex;"><span>$ git push origin master<br/></span></span></code></pre></div></div><br/><br/><h2 id="刪除-branch" class="article-heading">刪除 branch <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%aa%e9%99%a4-branch"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>GitHub 上在被 merge 的 PR 的界面會出現可以刪除 branch 的按鈕。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1MM_kFgO6PWBnPRPp9Ry3BgX4Lf6j2U3i" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1MM_kFgO6PWBnPRPp9Ry3BgX4Lf6j2U3i" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1MM_kFgO6PWBnPRPp9Ry3BgX4Lf6j2U3i" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>刪除完成後會出現提示，貌似還可以復原呢。這個步驟後你帳號遠端上的那個 branch 就不見了。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1Q39-VcdZ36CqtvOh0NCu1Ix35JxwuzaQ" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1Q39-VcdZ36CqtvOh0NCu1Ix35JxwuzaQ" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1Q39-VcdZ36CqtvOh0NCu1Ix35JxwuzaQ" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>再來是更新到本地端。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># 列出本地端的分支 (加上遠端記錄)</span><br/></span></span><span style="display:flex;"><span>$ git branch -a<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1QifWjcp6goVP329L8aBoeV98yVze_XAc" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1QifWjcp6goVP329L8aBoeV98yVze_XAc" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1QifWjcp6goVP329L8aBoeV98yVze_XAc" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>刪除遠端記錄</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># 模擬遠端可刪除分支</span><br/></span></span><span style="display:flex;"><span>$ git remote prune origin --dry-run<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#75715e"># 執行刪除</span><br/></span></span><span style="display:flex;"><span>$ git remote prune origin<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1w1LtPh3fYn6s2EO21yof6Xh8T60Gw-Zc" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1w1LtPh3fYn6s2EO21yof6Xh8T60Gw-Zc" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1w1LtPh3fYn6s2EO21yof6Xh8T60Gw-Zc" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1MdDsIHfyFUX9hAmorRbWYmg8tv0HYtO0" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1MdDsIHfyFUX9hAmorRbWYmg8tv0HYtO0" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1MdDsIHfyFUX9hAmorRbWYmg8tv0HYtO0" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>刪除本地分支後就大功告成</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git branch -d new_feature<br/></span></span></code></pre></div></div><br/><br/><h1 id="參考" class="article-heading">參考 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="http://www.fizerkhan.com/blog/posts/Clean-up-your-local-branches-after-merge-and-delete-in-GitHub.html" target="_blank" rel="noreferrer noopener">Clean up your local branches after merge and delete in GitHub</a></li></ul>
        ]]></description></item><item><title>Github Flow</title><link>https://aben20807.github.io/posts/20190420-github-flow/</link><pubDate>Sat, 20 Apr 2019 21:04:32 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190420-github-flow/</guid><description><![CDATA[
           <br/><p>最近算是真的在用多人合作的 git 了，以前大多只有自己在 add, commit, push。不過到多人的合作下就講求流程，這裡以 GitHub flow 為主要的流程做討論以及順便記錄一些會用到的指令。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190420-github-flow/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190420-github-flow/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>最近算是真的在用多人合作的 git 了，以前大多只有自己在 add, commit, push。不過到多人的合作下就講求流程，這裡以 GitHub flow 為主要的流程做討論以及順便記錄一些會用到的指令。</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>其實是看了 <br/><br/><a href="https://guides.github.com/introduction/flow/" target="_blank" rel="noreferrer noopener">Understanding the GitHub flow</a> 之後還不是相當懂，跟同學(大神)討論了一下算是有釐清一些我的懷疑吧。</p><p>p.s. 這裡有翻譯版：<br/><br/><a href="https://medium.com/@trylovetom/%e8%ae%93%e6%88%91%e5%80%91%e4%be%86%e4%ba%86%e8%a7%a3-github-flow-%e5%90%a7-4144caf1f1bf" target="_blank" rel="noreferrer noopener">讓我們來了解 GitHub Flow 吧！</a></p><p>&lt;注意&gt; 因為目前專案還不算大型，所以目前遇到的狀況算是比較簡易的。<br/>&lt;注意&gt; 由於我也是初心者，如果我有誤解的話請跟我說，感激不盡。</p><br/><br/><h1 id="github-flow" class="article-heading">GitHub flow <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#github-flow"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>這個流程，主要是去掉 Git flow 有兩條主線的麻煩。不過誰比較好，還是得看用途，更有 GitLab flow 是合併兩個來用的＠＠</p><blockquote><p>GitHub flow 只專注在 master 身上，從 master 上開啟 feature branch，在該 branch 上開發(會有一些 commit)，最後在透過 PR(pull request) 合併到 master。</p></blockquote><p>上面這句看似簡單，其實相當複雜，我盡量詳盡解釋。</p><p>更清楚的解釋應該為：</p><blockquote><p>從主要專案(upstream) fork 一份到自己的帳號(origin)，修改 origin，從 origin/master 新增分支，開發完後將分支 push 到 origin/新分支 上後直接用新分支對 upstream/master 開啟 PR。</p></blockquote><br/><br/><br/><h1 id="fork-and-pr" class="article-heading">Fork and PR <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#fork-and-pr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>首先，PR 可以達到討論及 code review 的效果，為了達到 PR 我們必須把主專案 fork 一份到自己的帳號。而 PR 的方式主要就是透過 GitHub 網頁提供的界面進行操作。</p><p>不過，我試了一下，發現同一個 repo 還是可以透過 branch 發 PR 的，這我就有點不確定為何一定要 fork，或許 fork 是不一定，不過更改自己的 repo 會比較心安一點，尤其若是常使用&hellip;.<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1poKsFmBeJ650xMa6OtgxMUGNE8NYo8fy" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1poKsFmBeJ650xMa6OtgxMUGNE8NYo8fy" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1poKsFmBeJ650xMa6OtgxMUGNE8NYo8fy" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="branch" class="article-heading">Branch <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#branch"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Branch 在 git 中花費相當少，因為它就只是一個標籤，所以應該盡量使用它。GitHub flow 中保證 master 上的每一個版本都是可佈署的，因此在此流程中不建議直接在 master 上加 commit 而是在 master 上開一個 branch 出來。</p><p>&lt;注意&gt; 一定要從 master 開 branch<br/>但是又有一個特例：就是當別人還沒 merge 我的 PR 可是我接下來的開發又需要有這個 PR 的內容的時候。網路上我找到有人問這個問題 <br/><br/><a href="https://softwareengineering.stackexchange.com/questions/310427/in-github-flow-is-it-ok-to-base-feature-branch-on-another-feature-branch" target="_blank" rel="noreferrer noopener">傳送門</a>，好像就只能在 branch 分出另一個 branch 來先暫時用。</p><br/><br/><h1 id="流程" class="article-heading">流程 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b5%81%e7%a8%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="初始化" class="article-heading">初始化 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%9d%e5%a7%8b%e5%8c%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ol><li>Fork 主要專案到自己的 GitHub 帳號</li><li>Clone 自己 GitHub 中的專案 (fork 過來的)</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone &lt;自己專案的 url&gt;<br/></span></span></code></pre></div></div><ol start="3"><br/><li>設定 upstream 來源</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git remote add upstream &lt;主要專案的 url&gt;<br/></span></span></code></pre></div></div><br/><br/><h2 id="開發中" class="article-heading">開發中 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e7%99%bc%e4%b8%ad"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><ol><li>前往 master 分支 (一開始就在 master 可以不用)</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout master<br/></span></span></code></pre></div></div><ol start="2"><br/><li>新增並前往 feature 分支</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout -b new_feature<br/></span></span></code></pre></div></div><ol start="3"><br/><li>開始開發功能</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git add XXX<br/></span></span><span style="display:flex;"><span>$ git commit<br/></span></span></code></pre></div></div><ol start="4"><br/><li>push 到自己帳號的專案 (3. 4. 可以混用，push 完後一樣可以 commit 再 push)</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git push origin new_feature<br/></span></span></code></pre></div></div><ol start="5"><br/><li>準備發起 PR，先把專案更新到最新，也就是把 upstream 的東西更新到自己本地端</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout master<br/></span></span><span style="display:flex;"><span>$ git fetch upstream<br/></span></span><span style="display:flex;"><span>$ git merge upstream/master<br/></span></span></code></pre></div></div><ol start="6"><br/><li>回到 feature 分支把 master 中從 upstream 來的新 commit 更新回 feature branch</li></ol><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout new_feature<br/></span></span><span style="display:flex;"><span>$ git rebase master<br/></span></span><span style="display:flex;"><span>$ git push origin new_feature<br/></span></span></code></pre></div></div><ol start="7"><br/><li>發 PR<br/>開啟 GitHub 界面，按下 Create pull request 的綠色按鈕，注意方向，輸入標題、解說文字、新增 reviewer 後按下 Create。這樣就大公告成了。</li></ol><br/><br/><h1 id="參考資料" class="article-heading">參考資料 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://medium.com/@yengttt/%e9%96%8b%e7%99%bc%e7%94%a8%e5%88%b0%e7%9a%84git%e6%b5%81%e7%a8%8b-c9082b914974" target="_blank" rel="noreferrer noopener">這次專案用到的Git流程</a>：本篇主要流程來自這裡，更詳盡請點擊參考。</li><li><br/><br/><a href="https://poychang.github.io/guide-to-use-github-flow/" target="_blank" rel="noreferrer noopener">如何使用 GitHub Flow 來參與開源專案</a></li></ul>
        ]]></description></item><item><title>不同路徑之 Git Patch</title><link>https://aben20807.github.io/posts/20190403-git-patch-different-directory/</link><pubDate>Wed, 03 Apr 2019 16:50:28 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190403-git-patch-different-directory/</guid><description><![CDATA[
           <br/><p>最近也算常用 git，不過有些特殊的功能都沒用過，這次也不算是學學看，而是真的要用到了，總之就是還個技術債順便記錄。不過會用到這個情境的應該算是少數。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190403-git-patch-different-directory/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190403-git-patch-different-directory/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>最近也算常用 git，不過有些特殊的功能都沒用過，這次也不算是學學看，而是真的要用到了，總之就是還個技術債順便記錄。不過會用到這個情境的應該算是少數。</p><h1 id="tldr" class="article-heading">tl;dr <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git format-patch --relative &lt;SHA&gt; ./ -o /tmp/patches<br/></span></span><span style="display:flex;"><span>$ git am /tmp/patches/*.patch<br/></span></span></code></pre></div></div><br/><br/><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>git 有一個好用的工具可以針對 repo 上面的 commit 產生補丁檔 (patch)。詳細用法可以去查看官方說明文件 <br/><br/><a href="https://git-scm.com/docs/git-format-patch" target="_blank" rel="noreferrer noopener">git format-patch</a>。</p><p>這裡主要記錄一個使用情境：要把專案A 下的子專案a 的修改記錄做成 patch 給專案B 使用，注意，專案a 與專案B 是同一個專案。</p><p>會有這樣需求主要是因為 B 是開源專案，然後我們拿來修改後變成 A 的子專案。當然最好的方式是用 fork，然後利用 submodule 管理，不過因為只有一個 repo 可以使用，所以就採用這個作法。</p><p>限制：內部檔案名稱要相同</p><br/><br/><h1 id="範例檔案架構" class="article-heading">範例檔案架構 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>接下來利用簡單的範例來模擬。</p><p><code>repo A</code>:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>A<br/></span></span><span style="display:flex;"><span>├── a<br/></span></span><span style="display:flex;"><span>│   └── file_1.txt<br/></span></span><span style="display:flex;"><span>└── sth_in_A.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>* a257187 - <span style="color:#f92672">(</span>HEAD -&gt; master<span style="color:#f92672">)</span> Add sth in A<br/></span></span><span style="display:flex;"><span>* a1f4b9e - init<br/></span></span></code></pre></div></div><p><code>repo B</code>:</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>B<br/></span></span><span style="display:flex;"><span>└── file_1.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>* 63998ea - <span style="color:#f92672">(</span>HEAD -&gt; master<span style="color:#f92672">)</span> init<br/></span></span></code></pre></div></div><p>接著進行一些修改 (記得用 git 去追蹤修改記錄)</p><p>我們測試一些不同的行為，可以從下方 commit message 看出，同時修改(<code>eb948ee</code>)也可以喔</p><p>大概像是這樣</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>A<br/></span></span><span style="display:flex;"><span>├── a<br/></span></span><span style="display:flex;"><span>│   ├── file_1.txt<br/></span></span><span style="display:flex;"><span>│   └── file_2.txt<br/></span></span><span style="display:flex;"><span>└── sth_in_A.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>* 0f5c75e - <span style="color:#f92672">(</span>HEAD -&gt; master<span style="color:#f92672">)</span> Add file_2 in a<br/></span></span><span style="display:flex;"><span>* eb948ee - Modify file_1 and sth_in_A.txt<br/></span></span><span style="display:flex;"><span>* 26bde10 - Modify sth_in_A.txt<br/></span></span><span style="display:flex;"><span>* b551578 - Modify file_1<br/></span></span><span style="display:flex;"><span>* a257187 - Add sth in A<br/></span></span><span style="display:flex;"><span>* a1f4b9e - init<br/></span></span></code></pre></div></div><br/><br/><h1 id="產生-patch" class="article-heading">產生 patch <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a2%e7%94%9f-patch"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>開始產生 patch 囉，首先 <code>cd</code> 到子資料夾，接著打入下方指令，<code>a1f4b9e</code> 是起始 commit，如果這個子專案是從中間才開始追蹤的話也可以從中間的 commit 開始。可以看到它只會針對 a 中有修改的部份才產生 patch 檔。<code>-o</code> 是指定輸出的路徑，完全可以依照自己喜好修改。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cd A/a/<br/></span></span><span style="display:flex;"><span>$ git format-patch --relative a1f4b9e ./ -o /tmp/patches<br/></span></span><span style="display:flex;"><span>/tmp/patches/0001-Modify-file_1.patch<br/></span></span><span style="display:flex;"><span>/tmp/patches/0002-Modify-file_1-and-sth_in_A.txt.patch<br/></span></span><span style="display:flex;"><span>/tmp/patches/0003-Add-file_2-in-a.patch<br/></span></span></code></pre></div></div><br/><br/><h1 id="套用-patch" class="article-heading">套用 patch <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a5%97%e7%94%a8-patch"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>套用 patch 到專案B</p><pre tabindex="0"><code class="language-bach" data-lang="bach">$ cd B/<br/>$ git am /tmp/patches/*.patch<br/>Applying: Modify file_1<br/>Applying: Modify file_1 and sth_in_A.txt<br/>Applying: Add file_2 in a<br/></code></pre><p>最後可以看到它把所有的 commit 都一一重現</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>B<br/></span></span><span style="display:flex;"><span>├── file_1.txt<br/></span></span><span style="display:flex;"><span>└── file_2.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>* e28e672 - <span style="color:#f92672">(</span>HEAD -&gt; master<span style="color:#f92672">)</span> Add file_2 in a<br/></span></span><span style="display:flex;"><span>* 24d4693 - Modify file_1 and sth_in_A.txt<br/></span></span><span style="display:flex;"><span>* 96d0b8c - Modify file_1<br/></span></span><span style="display:flex;"><span>* 63998ea - init<br/></span></span></code></pre></div></div>
        ]]></description></item><item><title>Makefile Help Message</title><link>https://aben20807.github.io/posts/20190402-makefile-help-message/</link><pubDate>Tue, 02 Apr 2019 09:06:15 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190402-makefile-help-message/</guid><description><![CDATA[
           <br/><p>最近蠻常用 Makefile 的，想說寫一個 help 選項，這樣就不用要使用時都要打開 Makefile 看怎麼用，意外查到可以使用小技巧來印出 help。達到註解及文件的效果。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190402-makefile-help-message/"><img src="https://drive.google.com/uc?export=view&amp;id=1jMqjSm6HUMHY3QBm0x51leBBmvBW5EEu" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190402-makefile-help-message/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>最近蠻常用 Makefile 的，想說寫一個 help 選項，這樣就不用要使用時都要打開 Makefile 看怎麼用，意外查到可以使用小技巧來印出 help。達到註解及文件的效果。</p><p>原本可能在寫完所有 rule 後要再加一個 <code>help</code> 來寫準備印出來給使用者的內容。如下：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#a6e22e">action1</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 1.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 1...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">action2</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 2.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 2...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Show help message.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Usage:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  make &lt;target&gt;\n\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;Targets:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  action1\tDo action 1.\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  action2\tDo action 2.\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  help\t\tShow help message.\n&#34;</span><br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1IwQiOPfxIXVfPhZ76N7UX497HuZ-lA3m" class="center img-zoomable" alt="google-結果" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1IwQiOPfxIXVfPhZ76N7UX497HuZ-lA3m" class="center img-zoomable lazyload" alt="google-結果"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">結果</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1IwQiOPfxIXVfPhZ76N7UX497HuZ-lA3m" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>這種方式在數量一多下會很麻煩，尤其是要不斷確認上面是否有被更動。所以找到許多人針對每個 target 的註解去產生 help 資訊。這裡使用 perl 跟 awk 幫忙。</p><p>下方印出的結果同上就不貼圖片了。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#a6e22e">action1</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 1.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 1...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">action2</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 2.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 2...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Show help message.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Usage:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  make &lt;target&gt;\n\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;Targets:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@perl -nle<span style="color:#e6db74">&#39;print $&amp; if m{^[a-zA-Z0-9_-]+:.*?## .*$$}&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | <span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>		sort | <span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>		awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; \<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">		{printf &#34;  %-18s %s\n&#34;, $$1, $$2}&#39;</span><br/></span></span></code></pre></div></div><p>稍微解釋一下 perl 那一行</p><p>首先就是先使用 regexp 去 match 符合的表達式，<code>^[a-zA-Z0-9_-]+:.*?## .*$$</code> 表示由一個單字(可能含數字)開頭 <code>:</code> 後方是相依的部份，最後是用 <code>##</code> 註解的描述。</p><p>接著利用 pipe (<code>|</code>) 給 awk，它可以針對欄 (column) 去操作文字，<code>BEGIN</code> 區塊表示初始化宣告，也就是輸入的字串是用 <code>##</code> 當作分割符號，最後利用 <code>printf()</code> 去把第一欄及第二欄印出來。</p><p>最後最後，加上點顏色頗不錯 OuO</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#75715e"># color<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>BLUE <span style="color:#f92672">=</span> <span style="color:#ae81ff">\0</span>33<span style="color:#f92672">[</span>34m<br/></span></span><span style="display:flex;"><span>NC <span style="color:#f92672">=</span> <span style="color:#ae81ff">\0</span>33<span style="color:#f92672">[</span>0m<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">action1</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 1.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 1...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">action2</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Do action 2.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Doing action 2...&#34;</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span> <span style="color:#75715e">## Show help message.<br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@printf <span style="color:#e6db74">&#34;Usage:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;  make </span><span style="color:#66d9ef">$(</span>BLUE<span style="color:#66d9ef">)</span><span style="color:#e6db74">&lt;target&gt;</span><span style="color:#66d9ef">$(</span>NC<span style="color:#66d9ef">)</span><span style="color:#e6db74">\n\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@printf <span style="color:#e6db74">&#34;Targets:\n&#34;</span><br/></span></span><span style="display:flex;"><span>	@perl -nle<span style="color:#e6db74">&#39;print $&amp; if m{^[a-zA-Z0-9_-]+:.*?## .*$$}&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | <span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>		sort | <span style="color:#ae81ff">\<br/></span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>		awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; \<br/></span></span></span><span style="display:flex;"><span><span style="color:#e6db74">		{printf &#34;$(BLUE)  %-18s$(NC) %s\n&#34;, $$1, $$2}&#39;</span><br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1RTn1OcTBserVT9XOFhDRSFA2f3Lx1R-G" class="center img-zoomable" alt="google-有顏色版本" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1RTn1OcTBserVT9XOFhDRSFA2f3Lx1R-G" class="center img-zoomable lazyload" alt="google-有顏色版本"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">有顏色版本</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1RTn1OcTBserVT9XOFhDRSFA2f3Lx1R-G" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h3 id="參考資料" class="article-heading">參考資料 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><ul><li><br/><br/><a href="https://nedbatchelder.com/blog/201804/makefile_help_target.html" target="_blank" rel="noreferrer noopener">Makefile help target</a></li></ul>
        ]]></description></item><item><title>First Met Hugo</title><link>https://aben20807.github.io/posts/20190321-first-met-hugo/</link><pubDate>Thu, 21 Mar 2019 22:20:12 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190321-first-met-hugo/</guid><description><![CDATA[
           <br/><p>正常轉換跑道時都會有一篇推坑文，不過我這篇算比較晚了，也不是為了摸久一點，就感覺好像一直沒啥時間寫文章。<br><br/>就請多見諒＠＠</p>
          
            <p><a href="https://aben20807.github.io/posts/20190321-first-met-hugo/"><img src="https://drive.google.com/uc?export=view&amp;id=1uRxzv04K2tSTBayXsGRSMKmK6CgstZ03" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190321-first-met-hugo/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>正常轉換跑道時都會有一篇推坑文，不過我這篇算比較晚了，也不是為了摸久一點，就感覺好像一直沒啥時間寫文章。<br><br/>就請多見諒＠＠</p><h1 id="前言" class="article-heading">前言 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>從 Blogger 轉出來的原因可以去關於的頁面看看，我就不再贅述，此篇主要也不會手把手的教學如何用 Hugo 從頭到尾架設一個網頁，因為網路上有相當多這類的教學，我主要是記錄一些比較特別地方。接著跟我唸三遍：</p><blockquote><p>前端坑好深，前端坑好深，前端坑好深</p></blockquote><br/><br/><br/><h1 id="安裝" class="article-heading">安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>說不教好像也有點無情，不過在 GitHub 架 Hugo 真的太過簡單了，步驟真的算少，所以我就推給其他文章吧(可以先看完整篇再開始)：<br/><br/><a href="https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40" target="_blank" rel="noreferrer noopener">在 GitHub 部署 Hugo 靜態網站</a></p><br/><br/><h1 id="安裝---注意事項" class="article-heading">安裝 - 注意事項 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d---%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>Ubuntu 請用 <code>snap</code> 來安裝比較新的版本，用 <code>apt</code> 會發現一堆主題不能用因為版本過舊。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo snap install hugo<br/></span></span><span style="display:flex;"><span>$ hugo version<br/></span></span><span style="display:flex;"><span>Hugo Static Site Generator v0.54.0 linux/amd64 BuildDate: 2019-02-01T13:33:06Z<br/></span></span></code></pre></div></div><p>結果注意事項就把 Hugo 全部安裝完成了＠＠，部屬在 GitHub 就跟大部分用法相同。</p><br/><br/><h1 id="部落格架構配置" class="article-heading">部落格架構配置 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%83%a8%e8%90%bd%e6%a0%bc%e6%9e%b6%e6%a7%8b%e9%85%8d%e7%bd%ae"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>因為 Hugo 會針對主題和文章經過 <code>hugo</code> 指令去產生一個完整的網站並預設放在 <code>public/</code> 資料夾。所以一般會把寫文章的地方跟網站分成兩個 repo，也就是把 <code>public/</code> push 到 <code>&lt;username&gt;.github.io</code>，寫文章的就創建另一個 <code>blog-post</code> 之類的 repo。這個作法可以使得網站不會被污染，也就是不會有奇怪的檔案，repo 也不會好像各種語言都有。</p><p>但是，一般上面這種是會把主題的檔案都複製到你寫文章的 repo 裡這樣就可以自訂一些前端設計。</p><p>我覺得這樣還不夠乾淨！因此我的方式是使用三個 repo：</p><ul><li>blog-post：存文章</li><li>hugOuO：主題</li><li>aben20807.github.io：發布網站</li></ul><p>沒錯，多一個 repo 追蹤主題，由於 Hugo 會自動的搜尋一些資料夾找尋網站設定，在一開始的資料夾找不到時，會根據 <code>config.toml</code> 中設定的主題去 <code>themes/</code> 找對應的主題，所以一開始的資料夾就不要有任何前端的檔案，除非像是 google analytics 需要放置規定的檔案，不然所有的前端設計 (架構, css, javascript) 都放在主題的 repo 中。當然這是給那些會修改別人主題的人的建議，如果是直接用現成的那就不需要多一個 repo 了。</p><p>以下是一個簡單的檔案結構：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>blog-post/ &lt;----------------------- repo 1: 存文章<br/></span></span><span style="display:flex;"><span>├── config.toml<br/></span></span><span style="display:flex;"><span>├── content<br/></span></span><span style="display:flex;"><span>│   ├── about<br/></span></span><span style="display:flex;"><span>│   ├── _index.md<br/></span></span><span style="display:flex;"><span>│   └── posts/ &lt;------------------- 文章會在這裡<br/></span></span><span style="display:flex;"><span>├── themes/<br/></span></span><span style="display:flex;"><span>│   └── hugOuO/ &lt;------------------ repo 2: 主題<br/></span></span><span style="display:flex;"><span>│       ├── archetypes/<br/></span></span><span style="display:flex;"><span>│       │   ├── default.md<br/></span></span><span style="display:flex;"><span>│       │   └── posts.md<br/></span></span><span style="display:flex;"><span>│       ├── layouts/<br/></span></span><span style="display:flex;"><span>│       │   ├── 404.html<br/></span></span><span style="display:flex;"><span>│       │   ├── _default/<br/></span></span><span style="display:flex;"><span>│       │   ├── index.html<br/></span></span><span style="display:flex;"><span>│       │   ├── index.json<br/></span></span><span style="display:flex;"><span>│       │   ├── index.rss.xml<br/></span></span><span style="display:flex;"><span>│       │   ├── partials/<br/></span></span><span style="display:flex;"><span>│       │   └── shortcodes/<br/></span></span><span style="display:flex;"><span>│       ├── static/<br/></span></span><span style="display:flex;"><span>│       │   ├── css/<br/></span></span><span style="display:flex;"><span>│       │   ├── img/<br/></span></span><span style="display:flex;"><span>│       │   └── js/<br/></span></span><span style="display:flex;"><span>│       └── theme.toml<br/></span></span><span style="display:flex;"><span>└── public/ &lt;---------------------- repo 3: 發布網站<br/></span></span></code></pre></div></div><br/><br/><h2 id="這樣安排的缺點" class="article-heading">這樣安排的缺點 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%80%99%e6%a8%a3%e5%ae%89%e6%8e%92%e7%9a%84%e7%bc%ba%e9%bb%9e"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這麼多 repo 就是一個蠻大的缺點，不過若是非常在意的話可以利用 branch 來讓三個 repo 合併。<br><br/>但是這個缺點有一個優點 (?)，就是可以刷 GitHub 的 contributions 啊！每次寫文章改一堆東西就會綠一片OuO</p><br/><br/><h2 id="其他" class="article-heading">其他 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>當然也可以利用 GitHub 和其他工具達到持續集成、部署，參考：<br/><br/><a href="https://axdlog.com/zh/2018/using-hugo-and-travis-ci-to-deploy-blog-to-github-pages-automatically/" target="_blank" rel="noreferrer noopener">利用Travis CI和Hugo將Blog自動部署到Github Pages</a>。不過我是有點點懶惰，所以我就用 <br/><br/><a href="https://github.com/aben20807/blog-post/blob/master/deploy.sh" target="_blank" rel="noreferrer noopener">script</a> 來部屬。</p><p>還有 <code>blog-post</code> repo 可以用 <code>.gitattributes</code> 來讓 GitHub 把 markdown 當作一個語言來計算，<br/><br/><a href="https://github.com/aben20807/blog-post/blob/master/.gitattributes" target="_blank" rel="noreferrer noopener">傳送門</a>。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1L-bAODhj57C7wFIBaWTgZuY0Sp0bEQFJ" class="center img-zoomable" alt="google-結果展示" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1L-bAODhj57C7wFIBaWTgZuY0Sp0bEQFJ" class="center img-zoomable lazyload" alt="google-結果展示"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">結果展示</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1L-bAODhj57C7wFIBaWTgZuY0Sp0bEQFJ" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="圖片" class="article-heading">圖片 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%96%e7%89%87"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>通常架設在 GitHub 的靜態網站都會直接把圖片也傳到 repo 中，雖然說這樣會比較快而且方便，但是我不建議用 git 去追蹤圖片，到最後會非常肥大。所以我一開始就有想說用 google 雲端當作一個圖床 (Flickr 1TB 回來啊QuQ)，反正有學校帳號算是有無限空間吧 (還是當學生的小福利＠＠)，再加上 google 圖片可以無限上傳，我手機拍照的圖片都會自動上傳了，然後也可以跟雲端連結，也就是說在 google 雲端透過檔案存取到 google 圖片的檔案。不過因為它的 api 還不是說很好用，就是雲端右鍵拿到的連結是不能直接嵌入網頁的，所以要手動複製 id，我覺得頗麻煩就乾脆寫一個可以偵測是否在 markdown 使用 google 雲端的圖片，然後把它轉成對應的 url 同時提供點擊就可以直接連過去，這樣就可以放大檢視了。</p><p>作法就是我的文章若要用到 google 雲端的圖片就要用以下語法：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">google-標題</span>](<span style="color:#a6e22e">從雲端裡面右鍵拿到的分享連結</span>)<br/></span></span></code></pre></div></div><p>沒意外這篇文章內文都是用這個方式加圖片的，唯一缺點就是明顯慢很多＠＠，雖然慢會影響 SEO，不過算了，就會看的人就會來看吧。說到這個，流量很明顯跟 Blogger 時期差很多＠＠，實做<br/><br/><a href="https://github.com/aben20807/hugOuO/blob/master/layouts/partials/custom-content.html#L5-L23" target="_blank" rel="noreferrer noopener">傳送門</a>。</p><br/><br/><h1 id="文章" class="article-heading">文章 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%87%e7%ab%a0"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>對於文章，我建議可以用日期當作檔名的前綴，以便排序。我的主題就會自動切割日期。Hugo 也有 permalinks 功能，就是把日期當作網站的路徑，不過我懶得用了＠＠</p><br/><br/><h1 id="優點啦" class="article-heading">優點啦 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%84%aa%e9%bb%9e%e5%95%a6"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>單一執行檔，只需要安裝 hugo，其他什麼 ruby, python, node 都不用。</li><li>建制快速，號稱目前地表最快，尤其當網站一多，目前有找到跟 Jekyll 的比較<br/><br/><a href="https://forestry.io/blog/hugo-vs-jekyll-benchmark/" target="_blank" rel="noreferrer noopener">傳送門</a>，跟 Hexo 的可能還要找一下。</li><li>網站內容乾淨，也就是上面的缺點啦，我是覺得這是優點 OuO，分多個 repo 不是很好嗎。</li></ul><br/><br/><h1 id="有趣的功能" class="article-heading">有趣的功能 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%89%e8%b6%a3%e7%9a%84%e5%8a%9f%e8%83%bd"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>下面這些功能其實不限於 Hugo，只要有想要其實都可以把它加到自己的網站，甚至是從頭自己刻的也可。不要忘了開頭念三次的東西 OuO</p><br/><br/><h2 id="1-搜尋" class="article-heading">1. 搜尋 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-%e6%90%9c%e5%b0%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>由於之前 Blogger 算是內建搜尋的，所以這裡算是研究頗久，原本要使用一些已經做成套件的切字工具，但是中文字真的太難搞定了，所以我乾脆直接用 google 提供的搜尋：Google Custom Search。一樣，這裡就不一一教學，請移駕：<br/><br/><a href="https://blog.yowko.com/google-search-in-hugo/" target="_blank" rel="noreferrer noopener">將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中</a>。真的要參考實做的話可以來這個 <br/><br/><a href="https://github.com/aben20807/blog-post/commit/6f6b62898791322876091d4db98d580b8a7accdc#diff-44f0b83d58ef03d7cee156de462be50c" target="_blank" rel="noreferrer noopener">commit</a> 看看。對了，設定完後要等個幾天才會可以搜尋，我那時候以為我哪裡設定錯誤，結果等個幾天就可以用了。結果可以到這個<br/><br/><a href="https://aben20807.github.io/search/" target="_blank" rel="noreferrer noopener">頁面</a>查看。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1YD4461mDTtn7MHssUOQxorRAiqkhRiVh" class="center img-zoomable" alt="google-搜尋範例" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1YD4461mDTtn7MHssUOQxorRAiqkhRiVh" class="center img-zoomable lazyload" alt="google-搜尋範例"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">搜尋範例</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1YD4461mDTtn7MHssUOQxorRAiqkhRiVh" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="2-toc-table-of-content" class="article-heading">2. TOC (Table Of Content) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#2-toc-table-of-content"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Hugo 算有提供 toc 工具，但是用起來沒這麼好看，例如它無法設定深度，不管幾層就都會做成 toc 也就是 h1~6 都有，造成空間浪費。這裡我也是弄超級久，最後我是參考 <br/><br/><a href="https://orianna-zzo.github.io/sci-tech/2018-08/blog%E5%85%BB%E6%88%90%E8%AE%B016-%E8%87%AA%E5%BB%BAhugo%E7%9A%84toc%E6%A8%A1%E6%9D%BF/#/hugo%E7%9A%84table-of-content" target="_blank" rel="noreferrer noopener">AllinOne</a> 這個主題的實做方式：<br/><br/><a href="https://github.com/orianna-zzo/AllinOne/blob/master/layouts/partials/toc.html" target="_blank" rel="noreferrer noopener">toc.html</a>。</p><br/><br/><h2 id="3-headline-hash" class="article-heading">3. Headline Hash <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#3-headline-hash"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>也就是滑鼠移到標題會出現一個 anchor 可以產生直接跳到這個標題的連結，直接參考：<br/><br/><a href="https://discourse.gohugo.io/t/adding-anchor-next-to-headers/1726" target="_blank" rel="noreferrer noopener">Adding anchor next to headers</a>。</p><br/><br/><h2 id="4-smooth-scroll" class="article-heading">4. Smooth Scroll <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#4-smooth-scroll"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這個可以讓移動有滾動的動畫而不是直接跳到那邊，我是使用 <code>jquery.smooth-scroll.min.js</code> 來達成，請參考這個 <br/><br/><a href="https://github.com/aben20807/blog-post/commit/68fa52f8d25c90d003fec296081427d12c6724cf#diff-0aa74fe7c8cd2a2b79dab67ece16cb02" target="_blank" rel="noreferrer noopener">commit</a>。</p><br/><br/><h2 id="5-scrollspy" class="article-heading">5. Scrollspy <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#5-scrollspy"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>讓右邊的 toc 自動標記現在所在的標題位置，我是從 <br/><br/><a href="https://stackoverflow.com/questions/30348314/how-to-use-scrollspy-without-using-bootstrap/49257431#49257431" target="_blank" rel="noreferrer noopener">how to use scrollspy without using bootstrap 的其中一個回答</a> 改成這個 <br/><br/><a href="https://github.com/aben20807/blog-post/commit/94b0b7344de07858b4ed346bc76b30caafa71220#comments" target="_blank" rel="noreferrer noopener">commit</a></p><p>2.3.4.5. 合起來差不多就是這樣：<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1Ent_uFFd1IuKhGna9hZ2uEBZ1cjoHw63" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1Ent_uFFd1IuKhGna9hZ2uEBZ1cjoHw63" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1Ent_uFFd1IuKhGna9hZ2uEBZ1cjoHw63" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="6-自動換標題-ouo" class="article-heading">6. 自動換標題 OuO <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#6-%e8%87%aa%e5%8b%95%e6%8f%9b%e6%a8%99%e9%a1%8c-ouo"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>這算是一個有趣但是沒啥實用性的功能，我是在 <br/><br/><a href="https://diygod.me/" target="_blank" rel="noreferrer noopener">https://diygod.me/</a> 看到的，當你暫時離開去其他分頁時，它的標題就會變換。建議不要在手機上用這個功能。參考：<br/><br/><a href="https://blog.youdivi.com/tutorials/change-browser-tab-title-tab-not-active/" target="_blank" rel="noreferrer noopener">CHANGE BROWSER TAB TITLE WHEN TAB NOT ACTIVE</a>，<br/><br/><a href="https://github.com/aben20807/blog-post/commit/4a468cb27289453f1a53ccb05db50343877438d8#diff-0aa74fe7c8cd2a2b79dab67ece16cb02" target="_blank" rel="noreferrer noopener">commit</a>，如何排擠手機：<br/><br/><a href="https://stackoverflow.com/questions/3514784/what-is-the-best-way-to-detect-a-mobile-device-in-jquery/3540295#3540295" target="_blank" rel="noreferrer noopener">What is the best way to detect a mobile device in jQuery?</a><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1AF_3cXaG2gWU1VM5ybrrQDO2qXtEusGH" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1AF_3cXaG2gWU1VM5ybrrQDO2qXtEusGH" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1AF_3cXaG2gWU1VM5ybrrQDO2qXtEusGH" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="7-e-mail-subscribe-mailchimphttpsmailchimpcom" class="article-heading">7. E-mail subscribe (<br/><br/><a href="https://mailchimp.com/" target="_blank" rel="noreferrer noopener">mailchimp</a>) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#7-e-mail-subscribe-mailchimphttpsmailchimpcom"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>原本 Blogger 有 G+ 當作一個社群平台來分享發布的文章，不過這裡就沒有了，我想說需要有一個方法來提供讀者訂閱，不能叫他自己去申請 GitHub 然後訂閱我網站的 repo 吧。所以我就找到這個服務，它免費版提供 2000 個訂閱者，一個月可以寄 12000 封 e-mail，對我來說算是非常夠用了(吧＠＠)，剛剛看原本還以為只有兩個人 (我跟我的分身帳號)，結果竟然多一個人了！還不來<br/><br/><a href="https://aben20807.github.io/subscription/" target="_blank" rel="noreferrer noopener">訂閱</a>？</p><p>mailchimp 的用法其實官網就有提供，我英文不太行的看久一點就可以架設好服務了，我相信你們可以的 (?)</p><br/><br/><h2 id="8-google-analytics" class="article-heading">8. google analytics <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#8-google-analytics"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>Google 的流量監測，Hugo 已經有寫好可以直接用，在 <code>config.toml</code> 直接加上自己的 token 就好，然後還要上傳一個證明是自己網站的 html 檔案，放在 <code>static/</code> 裡面就可以。上面有提到流量差異大致上就如下，我 Blogger 那邊已經很久沒更新了，一天還是快 100 個人造訪呢 OuO。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1XoxtAg5qZT_sDIrXc8HITfE5QBKN0nXF" class="center img-zoomable" alt="google-左：Blogger，右：這個網站QuQ" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1XoxtAg5qZT_sDIrXc8HITfE5QBKN0nXF" class="center img-zoomable lazyload" alt="google-左：Blogger，右：這個網站QuQ"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">左：Blogger，右：這個網站QuQ</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1XoxtAg5qZT_sDIrXc8HITfE5QBKN0nXF" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h2 id="9-hued" class="article-heading">9. hued <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#9-hued"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>因為每次編輯時都要用很長的路徑 <code>content/posts/xxxx.md</code>，頗煩躁，所以就寫了一個把指令包起來的 script，安裝方式可以看 <br/><br/><a href="https://github.com/aben20807/blog-post#hued" target="_blank" rel="noreferrer noopener">README</a>，還有補全喔，雖然應該是只有 oh-my-bash 可用。</p><br/><br/><h2 id="10-disqus-評論系統" class="article-heading">10. Disqus 評論系統 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#10-disqus-%e8%a9%95%e8%ab%96%e7%b3%bb%e7%b5%b1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><p>設定方式跟 google analytics 一樣簡單，簡單到我都忘了要設定&hellip;.設定 short name 即可。</p>
        ]]></description></item><item><title>Emacs 安裝 rainbow-delimiters 插件</title><link>https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/</link><pubDate>Thu, 07 Mar 2019 20:23:24 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/</guid><description><![CDATA[
           <br/><p>恩&hellip;.身為一個 vimer，我還是想試試看 emacs，所以就選了系上的一堂教 lisp 的課。<br><br/>本篇記錄一下安裝插件的過程<br><br/>(雖然我這篇還是用 vim 打的&hellip;.</p>
          
            <p><a href="https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/"><img src="https://drive.google.com/uc?export=view&amp;id=1Z2vwPs46qPbQTEnrqXEiniGTavMqA0hB" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
           <p>恩&hellip;.身為一個 vimer，我還是想試試看 emacs，所以就選了系上的一堂教 lisp 的課。<br><br/>本篇記錄一下安裝插件的過程<br><br/>(雖然我這篇還是用 vim 打的&hellip;.</p><p>這個插件的名稱是 <code>rainbow-delimiters</code>，顧名思義就是讓對應的括號有相同的顏色，這在一堆括號的語言 lisp 中可以對初學者較為友善。</p><br/><br/><h1 id="emacs-安裝" class="article-heading">emacs 安裝 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#emacs-%e5%ae%89%e8%a3%9d"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>emacs 的安裝方式就還是提一下，不然我應該記不起來@@</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo add-apt-repository ppa:ubuntu-elisp/ppa<br/></span></span><span style="display:flex;"><span>$ sudo apt-get update<br/></span></span><span style="display:flex;"><span>$ sudo apt-get install emacs-snapshot emacs-snapshot-el<br/></span></span></code></pre></div></div><br/><br/><h1 id="超基本按鍵" class="article-heading">超基本按鍵 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b6%85%e5%9f%ba%e6%9c%ac%e6%8c%89%e9%8d%b5"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>我是超新手，所以只暫時記錄最重要的@@</p><ul><li><code>ctrl-x ctrl-s</code>：儲存</li><li><code>ctrl-x ctrl-c</code>：離開</li></ul><br/><br/><h1 id="新增設定檔" class="article-heading">新增設定檔 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e5%a2%9e%e8%a8%ad%e5%ae%9a%e6%aa%94"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>首先需要新增一個設定檔，就像 vim 中的 <code>.vimrc</code> 一樣，而為了方便管理我使用 <code>~/.emacs.d/init.el</code>，我們就直接用 emacs 編輯吧～</p><p>Note. <code>-nw</code> 可以用非 GUI 的方式開啟 emacs</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir ~/.emacs.d/<br/></span></span><span style="display:flex;"><span>$ emacs -nw ~/.emacs.d/init.el<br/></span></span></code></pre></div></div><br/><br/><h1 id="支援-melpahttpsmelpaorg-插件庫" class="article-heading">支援 <br/><br/><a href="https://melpa.org/#/" target="_blank" rel="noreferrer noopener">MELPA</a> 插件庫 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%af%e6%8f%b4-melpahttpsmelpaorg-%e6%8f%92%e4%bb%b6%e5%ba%ab"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>打開之後貼上</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(<span style="color:#a6e22e">require</span> <span style="color:#e6db74">&#39;package</span>)<br/></span></span><span style="display:flex;"><span>(<span style="color:#66d9ef">let*</span> ((no-ssl (and (memq system-type <span style="color:#f92672">&#39;</span>(windows-nt ms-dos))<br/></span></span><span style="display:flex;"><span>                    (<span style="color:#a6e22e">not</span> (gnutls-available-p))))<br/></span></span><span style="display:flex;"><span>       (proto (<span style="color:#66d9ef">if</span> no-ssl <span style="color:#e6db74">&#34;http&#34;</span> <span style="color:#e6db74">&#34;https&#34;</span>)))<br/></span></span><span style="display:flex;"><span>  <span style="color:#75715e">;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired                                         </span><br/></span></span><span style="display:flex;"><span>  (add-to-list <span style="color:#e6db74">&#39;package-archives</span> (<span style="color:#a6e22e">cons</span><span style="color:#e6db74">&#34;melpa&#34;</span>(concat proto<span style="color:#e6db74">&#34;://melpa.org/packages/&#34;</span>)) <span style="color:#66d9ef">t</span>)<br/></span></span><span style="display:flex;"><span>  <span style="color:#75715e">;;(add-to-list &#39;package-archives (cons&#34;melpa-stable&#34;(concat proto&#34;://stable.melpa.org/packages/&#34;)) t)                            </span><br/></span></span><span style="display:flex;"><span>  (when (<span style="color:#a6e22e">&lt;</span> emacs-major-version <span style="color:#ae81ff">24</span>)<br/></span></span><span style="display:flex;"><span>    <span style="color:#75715e">;; For important compatibility libraries like cl-lib                                                                           </span><br/></span></span><span style="display:flex;"><span>    (add-to-list <span style="color:#e6db74">&#39;package-archives</span><span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;gnu&#34;</span> <span style="color:#f92672">.</span> (concat proto <span style="color:#e6db74">&#34;://elpa.gnu.org/packages/&#34;</span>)))))<br/></span></span><span style="display:flex;"><span>(package-initialize)<br/></span></span></code></pre></div></div><br/><br/><h1 id="新增-rainbow-delimiters-插件" class="article-heading">新增 <code>rainbow-delimiters</code> 插件 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e5%a2%9e-rainbow-delimiters-%e6%8f%92%e4%bb%b6"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>退出 (上面有記錄怎麼儲存跟離開) 後重新開啟 emacs</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ emacs -nw<br/></span></span></code></pre></div></div><p>按下 <code>alt-x</code> 後輸入 <code>package-list-packages</code> 接著按下 <code>Enter</code><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1tcS1Yxs-I0J1Nf63528PVypU7LmrhDhG" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1tcS1Yxs-I0J1Nf63528PVypU7LmrhDhG" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1tcS1Yxs-I0J1Nf63528PVypU7LmrhDhG" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>會發現出現一個各種插件的頁面。</p><p>搜尋方式請按 <code>ctrl-s</code> 後輸入 <code>rainbow-delimiters</code> 接著 <code>Enter</code>  即可找到<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1lQa5BBsjLRQxUheS41WTRi1maN1AtA90" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1lQa5BBsjLRQxUheS41WTRi1maN1AtA90" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1lQa5BBsjLRQxUheS41WTRi1maN1AtA90" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>在那一行按下 <code>i</code> 會發現最前方多了一個 <code>I</code></p><p>Note. 要取消請按 <code>u</code><br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1DuzQMOTEc4MO4HByxDhKCpVu30fr3FvV" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1DuzQMOTEc4MO4HByxDhKCpVu30fr3FvV" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1DuzQMOTEc4MO4HByxDhKCpVu30fr3FvV" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>選完後按下 <code>x</code> 就可以安裝了</p><p>結果最後還需要加東西到 <code>~/emacs.d/init.el</code></p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(<span style="color:#a6e22e">require</span> <span style="color:#e6db74">&#39;rainbow-delimiters</span>)<br/></span></span><span style="display:flex;"><span>(add-hook <span style="color:#e6db74">&#39;prog-mode-hook</span> <span style="color:#e6db74">&#39;rainbow-delimiters-mode</span>)<br/></span></span></code></pre></div></div><p>改完之後會發現有很淺的變色了</p><br/><br/><h1 id="自訂顏色" class="article-heading">自訂顏色 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%87%aa%e8%a8%82%e9%a1%8f%e8%89%b2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>結果就如封面所示。</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(custom-set-variables<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(package-selected-packages <span style="color:#f92672">&#39;</span>(rainbow-delimiters)))<br/></span></span><span style="display:flex;"><span>(custom-set-faces<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-1-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;dark orange&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-2-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;deep pink&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-3-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;chartreuse&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-4-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;deep sky blue&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-5-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;yellow&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-6-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;orchid&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-7-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;spring green&#34;</span>))))<br/></span></span><span style="display:flex;"><span> <span style="color:#f92672">&#39;</span>(rainbow-delimiters-depth-8-face ((<span style="color:#66d9ef">t</span> (<span style="color:#e6db74">:foreground</span> <span style="color:#e6db74">&#34;sienna1&#34;</span>))))<br/></span></span><span style="display:flex;"><span>)<br/></span></span></code></pre></div></div><br/><br/><h1 id="參考資料" class="article-heading">參考資料 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://5xruby.tw/posts/emacs-part1/" target="_blank" rel="noreferrer noopener">Emacs 入坑引導 - 打造自己的 Ruby IDE - Part 1</a></li><li><br/><br/><a href="https://www.emacswiki.org/emacs/RainbowDelimiters" target="_blank" rel="noreferrer noopener">RainbowDelimiters</a></li><li><br/><br/><a href="https://ericscrivner.me/2015/06/better-emacs-rainbow-delimiters-color-scheme/" target="_blank" rel="noreferrer noopener">Better Emacs Rainbow Delimiters Color Scheme</a></li></ul>
        ]]></description></item><item><title>把 app 加到 ubuntu 的 dash 目錄</title><link>https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/</link><pubDate>Sat, 02 Mar 2019 10:40:02 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/</guid><description><![CDATA[
          <p>所謂的 dash 就有點像是在 windows 10 點擊「開始」出現的很多 app 的畫面。而在 ubuntu 中有些程式的安裝方式是從網路上下載壓縮檔後解壓縮，一般要啟動的話就需要先去打開那個資料夾再點擊，有點麻煩，所以就找了一個最簡單的方式將要用的程式加到 dash 中。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/"><img src="https://drive.google.com/uc?export=view&amp;id=14kN9vjDOKr9W5d6e-1rgDEkNh6XtWRSa" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>所謂的 dash 就有點像是在 windows 10 點擊「開始」出現的很多 app 的畫面。而在 ubuntu 中有些程式的安裝方式是從網路上下載壓縮檔後解壓縮，一般要啟動的話就需要先去打開那個資料夾再點擊，有點麻煩，所以就找了一個最簡單的方式將要用的程式加到 dash 中。</p><p>測試系統：Ubuntu 18.04</p><br/><br/><h1 id="使用-gnome-desktop-item-edit" class="article-heading">使用 gnome-desktop-item-edit <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-gnome-desktop-item-edit"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>首先安裝 <code>gnome-desktop-item-edit</code> 這個工具</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install --no-install-recommends gnome-panel<br/></span></span></code></pre></div></div><p>接著新增一個應用程式</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo gnome-desktop-item-edit /usr/share/applications/ --create-new<br/></span></span></code></pre></div></div><p>出現一個小框框，填入名稱以及程式所在</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1YFjaDpgQhBUacfdD38UnId97hAoPG1QL" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1YFjaDpgQhBUacfdD38UnId97hAoPG1QL" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1YFjaDpgQhBUacfdD38UnId97hAoPG1QL" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>點 OK 後就會出現了，不需要重新登入或關機</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1dRR1G6VrP2oid0S9QBvTvXVMeFHzGF8r" class="center img-zoomable" alt="google-最下排左邊數來第二個" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1dRR1G6VrP2oid0S9QBvTvXVMeFHzGF8r" class="center img-zoomable lazyload" alt="google-最下排左邊數來第二個"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">最下排左邊數來第二個</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1dRR1G6VrP2oid0S9QBvTvXVMeFHzGF8r" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>圖標是預設的，若需要要修改就編輯一下檔案，注意檔名是剛剛取的名稱加上 .desktop 的副檔名</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo vim /usr/share/applications/VisualVM.desktop<br/></span></span></code></pre></div></div><br/><br/><h1 id="加上-icon-路徑" class="article-heading">加上 icon 路徑 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a-icon-%e8%b7%af%e5%be%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1rAWhlWkLTVIJ8JhS_o-o-gZW1grBVbQU" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1rAWhlWkLTVIJ8JhS_o-o-gZW1grBVbQU" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1rAWhlWkLTVIJ8JhS_o-o-gZW1grBVbQU" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>儲存後就可以看到結果了</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1P1k41x1OtC9bbsphoYVyNTBoA14xDTKf" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1P1k41x1OtC9bbsphoYVyNTBoA14xDTKf" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1P1k41x1OtC9bbsphoYVyNTBoA14xDTKf" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="參考" class="article-heading">參考 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li><br/><br/><a href="https://linuxconfig.org/how-to-create-desktop-shortcut-launcher-on-ubuntu-18-04-bionic-beaver-linux#h6-3-desktop-shortcut-creation-with-gnome-desktop-item-edit" target="_blank" rel="noreferrer noopener">Desktop Shortcut creation with gnome-desktop-item-edit</a></li></ul>
        ]]></description></item><item><title>訂閱囉</title><link>https://aben20807.github.io/posts/20190227-subscription/</link><pubDate>Wed, 27 Feb 2019 17:39:51 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190227-subscription/</guid><description><![CDATA[
          <p>訂閱起來～訂閱起來～</p>
          
            <p><a href="https://aben20807.github.io/posts/20190227-subscription/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190227-subscription/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>訂閱起來～訂閱起來～</p><p>本篇主要是測試訂閱有沒有問題 (希望沒有</p><p>要訂閱的話可以透過右上角的信箱圖案填寫 email</p><p>或是真的懶的話：https://aben20807.github.io/subscription/</p><p>如果是 Gmail 的話可能會被分到「促銷內容」可以透過篩選器喔。或是用右鍵來修改已經寄到信箱的信的標籤喔。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=19Ftzj_DlKmuTLeyybZw0V50ucBLHuiJ7" class="center img-zoomable" alt="google- " data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=19Ftzj_DlKmuTLeyybZw0V50ucBLHuiJ7" class="center img-zoomable lazyload" alt="google- "<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;"> </p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=19Ftzj_DlKmuTLeyybZw0V50ucBLHuiJ7" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>Talk About Shame</title><link>https://aben20807.github.io/posts/20190225-talk-about-shame/</link><pubDate>Mon, 25 Feb 2019 21:40:00 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190225-talk-about-shame/</guid><description><![CDATA[
          <p>顧炎武的＜廉恥＞中提到</p><br/><blockquote><br/><p>四者之中，恥尤為要</p><br/></blockquote><br/><p>其中的四者就是禮、義、廉、恥應該不用多說 (去複習國文啦</p>
          
            <p><a href="https://aben20807.github.io/posts/20190225-talk-about-shame/"><img src="https://drive.google.com/uc?export=view&amp;id=1oGP2AYSwCtfbqqAYbKGY-6mFXfqPWhlX" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190225-talk-about-shame/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>顧炎武的＜廉恥＞中提到</p><blockquote><p>四者之中，恥尤為要</p></blockquote><p>其中的四者就是禮、義、廉、恥應該不用多說 (去複習國文啦</p><h1 id="關於標題" class="article-heading">關於標題 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e6%96%bc%e6%a8%99%e9%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>(有時候英文標題就懶的改了，不然就是改了有點怪，想這次的，所以我就不改囉＠＠</p><p>說到英文，「恥」在英文翻譯是 shame，不過在四維的英文中其對應的是 honor。根據不專業的討論，shame 是貶義，而英文卻傾向用褒義表達，更進一步的去解釋可以想成「恥」是讓我們了解什麼是不榮耀的事，大概是這樣。</p><p>(圖片有點震撼我知道 OuO</p><br/><br/><h1 id="正題" class="article-heading">正題 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e9%a1%8c"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>為何會突然講這個主題呢？其實很多事情都是先學會，然後在之後才會去遇到，甚至體會到一開始接觸到時沒有獲得的感觸。這次談的這個主題其實已經在腦海中想過頗多次，但就如同上述，是我在高中學到這段課文後過了很久才漸漸有看法。或許到大學這段期間還不算久，我想會有更多的東西可能是我到老還無法了解的吧。</p><p>總結那篇課文，其認為人會違反一些道德倫理，是因為無恥所導致。</p><p>結合到日常生活中，最微小的可以從那些不遵守交通規則的人身上看出，他們將這些視為理所當然，例如在台南闖紅燈是再稀鬆平常不過的事了，在那些人眼中我看不到一絲的羞恥感。這或許也是現行法律所無法顧慮的吧，之前上課總說法律是道德的最低標準，這也是為何重刑不管用，酒駕的還是會酒駕，因為罰錢根本是小事，內心的道德感一點也沒有覺得自己做錯。我覺得可能要更善加利用輿論壓力才能有效降低，例如酒駕就會有標籤，可能求職時就需要出示之類的，但這都只是外部的約束，主要還是要自己感覺到「恥」。</p><p>除了這些，更有人會合理化自己的行為，認為自己沒有影響別人什麼的，其實就需要去思考那為何需要訂定交通規則。</p><p>另外，亂丟垃圾也是，真心不懂為何有人就是會把垃圾留在離垃圾桶不到五步距離的飲水機上。總之族繁不及備載，這些事一直都會發生。</p><br/><br/><h1 id="結論" class="article-heading">結論 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%ab%96"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>好啦，其實也沒有要戰什麼，其實是想表達自己看到的現象彷彿跟以前學到的有些許映射。總之呢，希望世界和平，做人有多一點點羞恥心去用不同的角度去看待事情，這樣才能打造更和諧的社會。</p><br/><br/><h1 id="後記" class="article-heading">後記 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>其實我是覺得我可能過於看重這件事了，所以會變得比較怕去麻煩別人，當然這有好有壞，我是不太建議像我這樣的個性，因為時常要跟自己打架 XDD。人活著也不是要一直去注意他人的眼光，去找一個適合自己的光譜位置，然後貫徹自己的想法吧。</p>
        ]]></description></item><item><title>Makefile for Testing</title><link>https://aben20807.github.io/posts/20190216-makefile-for-testing/</link><pubDate>Sat, 16 Feb 2019 10:00:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190216-makefile-for-testing/</guid><description><![CDATA[
          <p>Makefile 可以執行終端機的指令，所以也可以搭配重新導向 (redirection) 用來做簡單測試</p><br/><p>例如：</p><br/><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">test</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input.txt &gt; output.txt<br/></span></span></code></pre></div><p>這樣只需要用 <code>$ make test</code> 就可以測試輸入 input.txt，並把結果存到 output.txt</p>
          
            <p><a href="https://aben20807.github.io/posts/20190216-makefile-for-testing/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190216-makefile-for-testing/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>Makefile 可以執行終端機的指令，所以也可以搭配重新導向 (redirection) 用來做簡單測試</p><p>例如：</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">test</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input.txt &gt; output.txt<br/></span></span></code></pre></div></div><p>這樣只需要用 <code>$ make test</code> 就可以測試輸入 input.txt，並把結果存到 output.txt</p><h1 id="舊方法" class="article-heading">舊方法 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%8a%e6%96%b9%e6%b3%95"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>不過若是有很多種輸入測資的話會有點麻煩，當然還是可以寫成這樣</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">test1</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input1.txt &gt; output1.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">test2</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input2.txt &gt; output2.txt<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">test3</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input3.txt &gt; output3.txt<br/></span></span></code></pre></div></div><p>或是</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">test</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input1.txt &gt; output1.txt<br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input2.txt &gt; output2.txt<br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input3.txt &gt; output3.txt<br/></span></span></code></pre></div></div><p>這樣寫的缺點就是每次測資增加的時候舊需要修改 Makefile</p><br/><br/><h1 id="makefile-內建函式" class="article-heading">Makefile 內建函式 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#makefile-%e5%85%a7%e5%bb%ba%e5%87%bd%e5%bc%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>不過其實有更好的寫法，利用 makefile 內建的函式</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span>INPUT_DIR <span style="color:#f92672">=</span> input/linux/<br/></span></span><span style="display:flex;"><span>INPUTS <span style="color:#f92672">=</span> <span style="color:#66d9ef">$(</span>wildcard <span style="color:#66d9ef">$(</span>INPUT_DIR<span style="color:#66d9ef">)</span>*.txt<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span>OUTPUT_DIR <span style="color:#f92672">=</span> output/linux/<br/></span></span><span style="display:flex;"><span>OUTPUTS <span style="color:#f92672">=</span> <span style="color:#66d9ef">$(</span>addprefix <span style="color:#66d9ef">$(</span>OUTPUT_DIR<span style="color:#66d9ef">)</span>,<span style="color:#66d9ef">$(</span>notdir <span style="color:#66d9ef">$(</span>INPUTS<span style="color:#66d9ef">)))</span><br/></span></span></code></pre></div></div><ul><li><code>wildcard</code>: 獲取輸入檔案列表</li><li><code>notdir</code>: 獲得檔案名稱 (去掉前面路徑)</li><li><code>addprefix</code>: 加上前綴 (修改輸出路徑)</li></ul><p>這樣的優點就是只要 input/linux/ 中有多的 .txt 檔就會自動加入測試，不需要修改 Makefile</p><br/><br/><h1 id="完整範例" class="article-heading">完整範例 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%af%84%e4%be%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="檔案們" class="article-heading">檔案們 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e5%80%91"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="tc" class="article-heading"><code>t.c</code>: <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e"><br/></span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><br/></span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>() {<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">int</span> a, b;<br/></span></span><span style="display:flex;"><span>    scanf(<span style="color:#e6db74">&#34;%d%d&#34;</span>, <span style="color:#f92672">&amp;</span>a, <span style="color:#f92672">&amp;</span>b);<br/></span></span><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, a <span style="color:#f92672">+</span> b);<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;<br/></span></span><span style="display:flex;"><span>}<br/></span></span></code></pre></div></div><br/><br/><h3 id="makefile" class="article-heading"><code>Makefile</code>: <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#makefile"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span>CC <span style="color:#f92672">=</span> gcc<br/></span></span><span style="display:flex;"><span>EXEC <span style="color:#f92672">=</span> a.out<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span>INPUT_DIR <span style="color:#f92672">=</span> input/linux/<br/></span></span><span style="display:flex;"><span>INPUTS <span style="color:#f92672">=</span> <span style="color:#66d9ef">$(</span>wildcard <span style="color:#66d9ef">$(</span>INPUT_DIR<span style="color:#66d9ef">)</span>*.txt<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span>OUTPUT_DIR <span style="color:#f92672">=</span> output/linux/<br/></span></span><span style="display:flex;"><span>OUTPUTS <span style="color:#f92672">=</span> <span style="color:#66d9ef">$(</span>addprefix <span style="color:#66d9ef">$(</span>OUTPUT_DIR<span style="color:#66d9ef">)</span>,<span style="color:#66d9ef">$(</span>notdir <span style="color:#66d9ef">$(</span>INPUTS<span style="color:#66d9ef">)))</span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">.PHONY</span><span style="color:#f92672">:</span> all, test, mk_parent_dir<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">all</span><span style="color:#f92672">:</span> <span style="color:#66d9ef">$(</span>EXEC<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">mk_parent_dir</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    @mkdir -p <span style="color:#66d9ef">$(</span>OUTPUT_DIR<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">test</span><span style="color:#f92672">:</span> mk_parent_dir <span style="color:#66d9ef">$(</span>OUTPUTS<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">$(OUTPUT_DIR)%.txt</span><span style="color:#f92672">:</span> <span style="color:#66d9ef">$(</span>INPUT_DIR<span style="color:#66d9ef">)</span>%.txt <span style="color:#66d9ef">$(</span>EXEC<span style="color:#66d9ef">)</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; $&lt; &gt; $@<br/></span></span><span style="display:flex;"><span>    @cat $&lt; $@ <span style="color:#75715e"># cat the content of file</span><br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">$(EXEC)</span><span style="color:#f92672">:</span> t.c<br/></span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">$(</span>CC<span style="color:#66d9ef">)</span> t.c<br/></span></span><span style="display:flex;"><span><br/></span></span><span style="display:flex;"><span><span style="color:#a6e22e">clean</span><span style="color:#f92672">:</span><br/></span></span><span style="display:flex;"><span>    rm -rf <span style="color:#66d9ef">$(</span>OUTPUT_DIR<span style="color:#66d9ef">)</span> a.out<br/></span></span></code></pre></div></div><br/><br/><h3 id="檔案架構" class="article-heading">檔案架構 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><pre tabindex="0"><code>$ tree .<br/>.<br/>├── input<br/>│   └── linux<br/>│       ├── test1.txt<br/>│       ├── test2.txt<br/>│       └── test3.txt<br/>├── Makefile<br/>├── output<br/>└── t.c<br/></code></pre><br/><br/><h2 id="使用" class="article-heading">使用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="指令同為--make-test" class="article-heading">指令同為 <code>$ make test</code> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%87%e4%bb%a4%e5%90%8c%e7%82%ba--make-test"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ make test<br/></span></span><span style="display:flex;"><span>gcc t.c<br/></span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test2.txt &gt; output/linux/test2.txt<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> <span style="color:#ae81ff">6</span><br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span><br/></span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test3.txt &gt; output/linux/test3.txt<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">78</span> <span style="color:#ae81ff">99</span><br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">177</span><br/></span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test1.txt &gt; output/linux/test1.txt<br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">3</span> <span style="color:#ae81ff">4</span><br/></span></span><span style="display:flex;"><span><span style="color:#ae81ff">7</span><br/></span></span></code></pre></div></div><br/><br/><h3 id="結果檔案架構" class="article-heading">結果檔案架構 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e6%9e%9c%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><pre tabindex="0"><code>$ tree .<br/>.<br/>├── a.out<br/>├── input<br/>│   └── linux<br/>│       ├── test1.txt<br/>│       ├── test2.txt<br/>│       └── test3.txt<br/>├── Makefile<br/>├── output<br/>│   └── linux<br/>│       ├── test1.txt<br/>│       ├── test2.txt<br/>│       └── test3.txt<br/>└── t.c<br/></code></pre><br/><br/><h1 id="後記" class="article-heading">後記 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>上面的簡單例子中可能看不出 <code>$(INPUTS)</code> 跟 <code>$(OUTPUTS)</code> 的用途，不過在相依多的話可以直接代表全部的檔案，但若是需要做名稱配對的話還是需要 <code>%</code> 出馬，就像 <code>$(OUTPUT_DIR)%.txt: $(INPUT_DIR)%.txt</code> 來表示輸入輸出的檔名要一致。</p>
        ]]></description></item><item><title>咖啡木蠹蛾</title><link>https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/</link><pubDate>Tue, 12 Feb 2019 22:51:30 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/</guid><description><![CDATA[
          <p>(以下圖片皆攝於 2019.02.03)</p><br/><p>咖啡木蠹蛾，學名 Zeuzera Coffeae Nietner<br/>詳細可以去行政院農業委員會 農業試驗所提供的<br/><br/><a href="http://web.tari.gov.tw/techcd/%E6%9E%9C%E6%A8%B9/%E5%B8%B8%E7%B6%A0%E6%9E%9C%E6%A8%B9/%E6%A5%8A%E6%A1%83/%E8%9F%B2%E5%AE%B3/%E6%A5%8A%E6%A1%83-%E5%92%96%E5%95%A1%E6%9C%A8%E8%A0%B9%E8%9B%BE.htm" target="_blank" rel="noreferrer noopener">圖鑑</a></p>
          
            <p><a href="https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/"><img src="https://drive.google.com/uc?export=view&amp;id=14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>(以下圖片皆攝於 2019.02.03)</p><p>咖啡木蠹蛾，學名 Zeuzera Coffeae Nietner<br/>詳細可以去行政院農業委員會 農業試驗所提供的<br/><br/><a href="http://web.tari.gov.tw/techcd/%E6%9E%9C%E6%A8%B9/%E5%B8%B8%E7%B6%A0%E6%9E%9C%E6%A8%B9/%E6%A5%8A%E6%A1%83/%E8%9F%B2%E5%AE%B3/%E6%A5%8A%E6%A1%83-%E5%92%96%E5%95%A1%E6%9C%A8%E8%A0%B9%E8%9B%BE.htm" target="_blank" rel="noreferrer noopener">圖鑑</a></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" class="center img-zoomable" alt="google-點圖可放大喔 OuO" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" class="center img-zoomable lazyload" alt="google-點圖可放大喔 OuO"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">點圖可放大喔 OuO</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>總之呢就是害蟲，幼蟲會把樹木的枝條蛀空。</p><p>我們家就是幾乎不噴農藥雜草也不會一定要用除草劑處理的光禿禿的，所以難免有害蟲。<br/><br/><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1W2XiqPRhfVaMGkPwO_wRMIiIO_o1tdZH3g" class="center img-zoomable" alt="google-灑水中的葡萄園" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1W2XiqPRhfVaMGkPwO_wRMIiIO_o1tdZH3g" class="center img-zoomable lazyload" alt="google-灑水中的葡萄園"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">灑水中的葡萄園</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1W2XiqPRhfVaMGkPwO_wRMIiIO_o1tdZH3g" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>這隻剛從蛹中出來就被我拍到，然後通報給老媽，她趁牠還沒出去產卵就把牠處理掉了。</p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1hssv_igXB1P3KEfEcCT5o2lbT64TF8JcbA" class="center img-zoomable" alt="google-蛹，仔細看第1張圖會看到喔" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1hssv_igXB1P3KEfEcCT5o2lbT64TF8JcbA" class="center img-zoomable lazyload" alt="google-蛹，仔細看第1張圖會看到喔"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">蛹，仔細看第1張圖會看到喔</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1hssv_igXB1P3KEfEcCT5o2lbT64TF8JcbA" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1GzQL4C-PyzQEkUnv7T2InNbzfUyjR2qZRg" class="center img-zoomable" alt="google-葡萄營養珠(老媽說是氮珠)" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1GzQL4C-PyzQEkUnv7T2InNbzfUyjR2qZRg" class="center img-zoomable lazyload" alt="google-葡萄營養珠(老媽說是氮珠)"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">葡萄營養珠(老媽說是氮珠)</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1GzQL4C-PyzQEkUnv7T2InNbzfUyjR2qZRg" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p>
        ]]></description></item><item><title>Features</title><link>https://aben20807.github.io/posts/features/</link><pubDate>Wed, 06 Feb 2019 09:37:31 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/features/</guid><description><![CDATA[
          <p>記錄一下一些特性和使用方式</p>
          
            <p><a href="https://aben20807.github.io/posts/features/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/features/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>記錄一下一些特性和使用方式</p><h1 id="標題-heading" class="article-heading">標題 (heading) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a8%99%e9%a1%8c-heading"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><pre tabindex="0"><code># h1<br/>## h2<br/>### h3<br/>#### h4 支援 emoji 😄<br/>##### h5 支援中文~<br/>###### h6 <br/>####### h7 最多只有到 6 級<br/></code></pre><br/><br/><h1 id="h1" class="article-heading">h1 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h1"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><br/><h2 id="h2" class="article-heading">h2 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h2"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h2><br/><br/><h3 id="h3" class="article-heading">h3 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h3"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><br/><br/><h4 id="h4-支援-emoji-" class="article-heading">h4 支援 emoji 😄 <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h4-%e6%94%af%e6%8f%b4-emoji-"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h4><br/><br/><h5 id="h5-支援中文" class="article-heading">h5 支援中文~ <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h5-%e6%94%af%e6%8f%b4%e4%b8%ad%e6%96%87"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h5><br/><br/><h6 id="h6" class="article-heading">h6 <br/>    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h6"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h6><p>####### h7 最多只有到 6 級</p><p>右邊會有浮動 TOC (table of contents)，可點擊！<br><br/>只會顯示 h1 ~ h3 過長會變成 &hellip;</p><br/><br/><h3 id="test中文-1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj" class="article-heading">test中文 1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#test%e4%b8%ad%e6%96%87-1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h3><br/><br/><h1 id="code-section-refhttpsgohugoiocontent-managementsyntax-highlightinghighlighting-in-code-fences" class="article-heading">Code section <br/><br/><a href="https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences" target="_blank" rel="noreferrer noopener">ref</a> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#code-section-refhttpsgohugoiocontent-managementsyntax-highlightinghighlighting-in-code-fences"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><pre><br/>```c {linenos=table,hl_lines=[2,"4-6"],linenostart=199}<br/>#include <stdio.h><br/>int main()<br/>{<br/>    int a = 0;<br/>    return a;<br/>}<br/>```<br/></pre><br/><div style="border: 1px solid #888888;"></div><br/><br/><h1 id="強調字型" class="article-heading">強調字型 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bc%b7%e8%aa%bf%e5%ad%97%e5%9e%8b"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>可參考：https://www.markdownguide.org/basic-syntax/#emphasis</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>__粗體__  <br/></span></span><span style="display:flex;"><span><span style="font-weight:bold">**粗體**</span>  <br/></span></span><span style="display:flex;"><span><span style="font-style:italic">_斜體_</span>  <br/></span></span><span style="display:flex;"><span><span style="font-style:italic">*斜體*</span>  <br/></span></span><span style="display:flex;"><span><span style="font-style:italic">__</span>*粗斜體*__<br/></span></span></code></pre></div></div><p><strong>粗體</strong><br><br/><strong>粗體</strong><br><br/><em>斜體</em><br><br/><em>斜體</em><br><br/><strong><em>粗斜體</em></strong></p><br/><br/><h1 id="橫線" class="article-heading">橫線 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a9%ab%e7%b7%9a"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>---<br/></span></span></code></pre></div></div><hr><br/><br/><br/><h1 id="項目-bullet" class="article-heading">項目 (Bullet) <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%85%e7%9b%ae-bullet"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>+ a<br/></span></span><span style="display:flex;"><span>  + 1<br/></span></span><span style="display:flex;"><span>  + 2<br/></span></span><span style="display:flex;"><span>+ b<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">1.</span> OuO<br/></span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">2.</span> QuQ<br/></span></span></code></pre></div></div><ul><li>a<br/><ul><li>1</li><li>2</li></ul></li><li>b<br/><ol><li>OuO</li><li>QuQ</li></ol></li></ul><br/><br/><h1 id="表格" class="article-heading">表格 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a1%a8%e6%a0%bc"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>|A|B|C|<br/></span></span><span style="display:flex;"><span>|-|-|-|<br/></span></span><span style="display:flex;"><span>|a|b|c|<br/></span></span><span style="display:flex;"><span>|d|e|f|<br/></span></span></code></pre></div></div><table><br/><thead><br/><tr><br/><th>A</th><br/><th>B</th><br/><th>C</th><br/></tr><br/></thead><br/><tbody><br/><tr><br/><td>a</td><br/><td>b</td><br/><td>c</td><br/></tr><br/><tr><br/><td>d</td><br/><td>e</td><br/><td>f</td><br/></tr><br/></tbody><br/></table><br/><br/><br/><h1 id="引用" class="article-heading">引用 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bc%95%e7%94%a8"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">The more I learn, the more I realize how much I don&#39;t know.  <br/></span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">--- Albert Einstein<br/></span></span></span></code></pre></div></div><blockquote><p>The more I learn, the more I realize how much I don&rsquo;t know.<br><br/>&mdash; Albert Einstein</p></blockquote><br/><br/><br/><h1 id="跳轉" class="article-heading">跳轉 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%b3%e8%bd%89"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><ul><li>參考: <br/><br/><a href="https://gohugo.io/content-management/cross-references/" target="_blank" rel="noreferrer noopener">Use <code>ref</code> and <code>relref</code></a></li></ul><pre><br/>[同一頁面不同 heading]({{&lt; relref "#表格" >}})  <br/>[不同頁面]({{&lt; relref "/about" >}})<br/></pre><p><br/><a href="#表格">同一頁面不同 heading</a><br><br/><br/><br/><a href="/about/">不同頁面</a></p><br/><br/><h1 id="插入圖片" class="article-heading">插入圖片 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8f%92%e5%85%a5%e5%9c%96%e7%89%87"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>目前並不打算直接上傳到 github，所以找了一些方式<br><br/>一般圖片</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">alt</span>](<span style="color:#a6e22e">https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC</span>)<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" class="center img-zoomable" alt="alt" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" class="center img-zoomable lazyload" alt="alt"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">alt</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><p>這裡大部份會使用 google 雲端當作圖床<br><br/>不過從取得連結那裡會拿到：https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC<br><br/>要改成上面的連結才行，所以我動了一些手腳，下面還會顯示標題說明，點擊即可在新分頁開啟可放大的圖片瀏覽器</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">google-title here</span>](<span style="color:#a6e22e">https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC</span>)<br/></span></span></code></pre></div></div><p><br/><br/> <br/><br/><br/><br/><br/><br/><figure class="gphoto-media center"><br/>    <div class="img-container center" style="width:73%;"><br/>        <noscript><br/>            <img src="https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" class="center img-zoomable" alt="google-title here" data-action="zoom"<br/>                title=""><br/>        </noscript><br/>        <img data-src="https://drive.google.com/uc?export=view&amp;id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" class="center img-zoomable lazyload" alt="google-title here"<br/>            data-action="zoom" title=""><br/>    </div><br/>    <figcaption>        <center class="caption-text"><br/>            <br/>            <p style="margin: .7rem 0 0;">title here</p>            <br/>            <br/>            <font class="douyin hover-show"><br/>                <a href="https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" target="_blank" rel="noreferrer noopener"<br/>                    style="opacity: 1.0; text-decoration: none;">OuO</a><br/>            </font><br/>        </center>    </figcaption></figure></p><br/><br/><h1 id="數學式" class="article-heading">數學式 <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%95%b8%e5%ad%b8%e5%bc%8f"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>要行內顯示的話在左右各使用一個 <code>$</code> 包著, e.g., <code>$x + y = z$</code>: $x + y = z$</p><p>使用 <code>$$</code> 會置中顯示, e.g., <code>$$a \times b = c$$</code></p><p>$$a \times b = c$$</p><div style="border: 1px solid #888888;"><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#e6db74">$$</span><br/></span></span><span style="display:flex;"><span>\def\TT{i\frac{\pi}{<span style="color:#ae81ff">4</span>}}<br/></span></span><span style="display:flex;"><span>\begin{equation<span style="color:#f92672">*</span>}<br/></span></span><span style="display:flex;"><span>\begin{split}<br/></span></span><span style="display:flex;"><span>x &amp;<span style="color:#f92672">=</span> e^{\TT}<br/></span></span><span style="display:flex;"><span>\newline<br/></span></span><span style="display:flex;"><span>y &amp;<span style="color:#f92672">=</span> e^{<span style="color:#f92672">-</span><span style="color:#ae81ff">3</span>\TT}<br/></span></span><span style="display:flex;"><span>\end{split}<br/></span></span><span style="display:flex;"><span>\end{equation<span style="color:#f92672">*</span>}<br/></span></span><span style="display:flex;"><span><span style="color:#e6db74">$$</span><br/></span></span></code></pre></div></div><p>$$<br/>\def\TT{i\frac{\pi}{4}}<br/>\begin{equation*}<br/>\begin{split}<br/>x &amp;= e^{\TT}<br/>\newline<br/>y &amp;= e^{-3\TT}<br/>\end{split}<br/>\end{equation*}<br/>$$</p><br/><br/><h1 id="youtube" class="article-heading">YouTube <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#youtube"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><pre><br/>{{&lt; youtube &quot;<span>https://www.youtube.com/watch?v=jC3jnC1dsAg</span>&quot; &gt;}}<br/></pre><br/><br/><br/><br/><br/><br/><br/><br/> <br/><pre><br/>{{&lt; youtube &quot;<span>https://www.youtube.com/watch?v=jC3jnC1dsAg?t=500</span>&quot; &gt;}}<br/></pre><br/><br/><br/><br/><br/><br/><br/><br/> <br/><br/><br/><h1 id="section-refhttpscodepeniodobsondevpenggrjwv" class="article-heading">Section <br/><br/><a href="https://codepen.io/DobsonDev/pen/GgRJwv" target="_blank" rel="noreferrer noopener">ref</a> <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#section-refhttpscodepeniodobsondevpenggrjwv"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><pre><br/>{{&lt; alert info >}}<br/>**Beware !** is a text<br/>{{&lt; /alert >}}<br/><br/>{{&lt; alert success >}}<br/>**Beware !** is a text<br/>{{&lt; /alert >}}<br/><br/>{{&lt; alert warning >}}<br/>**Beware !** is a text<br/>{{&lt; /alert >}}<br/><br/>{{&lt; alert danger >}}<br/>**Beware !** is a text<br/>{{&lt; /alert >}}<br/></pre><br/><br/><br/>  <div class="info-msg"><br/>    <i class="fa fa-info-circle"></i><br/>    <strong>Beware !</strong> is a text<br/>  </div><br/><br/><br/><br/>  <div class="success-msg"><br/>    <i class="fa fa-check"></i><br/>    <strong>Beware !</strong> is a text<br/>  </div><br/><br/><br/><br/>  <div class="warning-msg"><br/>    <i class="fa fa-exclamation-triangle"></i><br/>    <strong>Beware !</strong> is a text<br/>  </div><br/><br/><br/><br/>  <div class="alert error-msg"><br/>    <i class="fa fa-times-circle"></i><br/>    <strong>Beware !</strong> is a text<br/>  </div><br/><br/><br/><br/><h1 id="details-summary-section" class="article-heading">Details, summary section <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#details-summary-section"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><pre><br/>{{&lt; summary "Click~" >}}<br/># OuO<br/>OuO<br/>+ OuO<br/>{{&lt; /summary >}}<br/></pre><br/> <br/><br/><details><br/>  <summary><span>Click~ </span></summary><br/>  <br/><br/><h1 id="ouo" class="article-heading">OuO <br/>    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ouo"><br/>        <span class="iconify" data-icon="octicon-link" data-inline="false"></span><br/>    </a><br/></h1><p>OuO</p><ul><li>OuO</li></ul><br/></details>
        ]]></description></item><item><title>Happy New Year</title><link>https://aben20807.github.io/posts/20190204-happy-new-year/</link><pubDate>Mon, 04 Feb 2019 23:03:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190204-happy-new-year/</guid><description><![CDATA[
          <p>今天除夕，首先祝各位新年快樂~</p>
          
            <p><a href="https://aben20807.github.io/posts/20190204-happy-new-year/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190204-happy-new-year/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>今天除夕，首先祝各位新年快樂~</p><p>第一天用比較偏累，基本上把會用的東西都裝一裝了，例如：google analysitcs, disqus。likecoin 的部份我覺得可能還要找方法，不然拖慢許多載入速度。</p><p>總之，主因大致上可以推給 G+ 關閉吧，加上在 Blogger 那邊改主題頗累 (外加煩躁) 選擇 Hugo 主要是速度吧，號稱目前最快，原本考慮的 Jekyll 跟 Hexo 似乎在文章多的時候都會慢，所以就直上了(?)。</p><p>這裡會發的文會更偏向記錄，要說是日記也是可，不過我相信我自己絕對不可能日更，尤其是已經在研究所幹活了，可能這篇第一篇也是最後一篇也說不定。</p><p>恩&hellip;也不知道怎麼結尾，那就這樣吧 OuO</p>
        ]]></description></item><item><title>aben20807's Anime List</title><link>https://aben20807.github.io/anime/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/anime/</guid><description><![CDATA[
          Edit entry (needs login): link
          
            <p><a href="https://aben20807.github.io/anime/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/anime/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          <p>Edit entry (needs login): <br/><br/><a href="https://docs.google.com/spreadsheets/d/1ZJulH_m4k-nzG6LW1Slk57N1_30vpKU0FF5SDBBGTv8/edit#gid=0" target="_blank" rel="noreferrer noopener">link</a></p> 
        ]]></description></item></channel></rss>