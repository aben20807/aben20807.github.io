<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>記錄用</title><link>https://aben20807.github.io/</link><description>Recent content on 記錄用</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><managingEditor>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</managingEditor><webMaster>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</webMaster><atom:link href="https://aben20807.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Latex Examples</title><link>https://aben20807.github.io/posts/20221227-latex-examples/</link><pubDate>Tue, 10 Jan 2023 16:54:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20221227-latex-examples/</guid><description><![CDATA[
          <p>Latex 應該也算是一種程式語言 吧</p>
          
            <p><a href="https://aben20807.github.io/posts/20221227-latex-examples/"><img src="https://lh3.googleusercontent.com/pw/AL9nZEUMrYxiEzKnoR5Luk3P6SLeyeb5GVkg7yVUoW1FWJznXirzfdB4YBeOsrVsnH75tcM5DFjBPHPXb7dKIHwK-JI8DXcZ9o5pAmA4Ku5PYSwutbo0n5aFo18CSrn8lclq7fCg7herizF3E3OhfdOUgugmdA=w1365-h908-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20221227-latex-examples/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>Latex 應該也算是一種程式語言 吧</p>
<ul>
<li>repo: <a href="https://github.com/aben20807/latex_examples" title="aben20807/latex_examples" aria-label="aben20807/latex_examples"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/latex_examples</a></li>
<li>setup: <a href="/posts/20210811-use-vscode-to-write-latex-paper/"target="_blank" rel="noreferrer noopener">Use VSCode to Write LaTeX Paper</a></li>
</ul>
<p><span style="font-size: 1.5rem;">前言</span></p>
<p>Latex 是一個有趣的程式語言，透過它能夠產生對應的 pdf 文件，這對於文件撰寫有很大幫助 (例如可以輕易被版本控制)。然而實際在使用時會遇到不少問題，其編譯錯誤的訊息也很難去直接聯想到錯誤位置，比方說某些字元 (<code>_</code>, <code>&amp;</code>) 不能直接寫不然會出錯 (要改用 <code>\_</code>, <code>\&amp;</code>)，但是又很難找，只能找跟上個版本的差異。latex 也提供許多功能，甚至不用 draw.io 也能用 latex 畫出流程圖，但是這些太過進階可能有 80% 的功能是平常用不到。因此本篇主要記錄目前會固定使用的模板以及特殊技巧 (基於我個人對於美感的堅持)，也減少之後錯誤發生，更希望對後來需要使用 latex 的人 (包括未來的我) 有幫助。</p>
<h1 id="basic" class="article-heading">Basic 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#basic">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/01_basic.tex" title="01 Basic 完整程式碼" aria-label="01 Basic 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 01 Basic 完整程式碼</a></p>
<h2 id="文章構成" class="article-heading">文章構成 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%87%e7%ab%a0%e6%a7%8b%e6%88%90">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>內容包含在 <code>\begin{document}</code>、<code>\end{document}</code> 中間，<code>\begin{document}</code> 之前的是設定。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\documentclass</span><span style="color:#50fa7b">[12pt, a4paper]</span><span style="color:#8be9fd;font-style:italic">{</span>article<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\title</span><span style="color:#8be9fd;font-style:italic">{</span>01 Basic<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\author</span><span style="color:#8be9fd;font-style:italic">{</span>Po-Hsuan Huang<span style="color:#ff79c6">\\</span> 
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\texttt</span><span style="color:#8be9fd;font-style:italic">{</span>aben20807@gmail.com<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>document<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\maketitle</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Contents.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>document<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXXFgbGga9pdC3o8fEeYFDYd5hlCY1oP2jgs7Ja0OKQXEaVYs_zs6MY2uSx3sut39Pf2HVlDXIJR2JcPZFRQptdbzlNiWLaFFxh3W29h-CIlt8Z0SENr23rVIVfnTiGFC_axBr7ygWqF79a6dZ8AkHbBA=w1379-h1394-no?authuser=1" alt='基本輸出' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">基本輸出</center>
    </figcaption>
  </figure>
</p>
<h2 id="section-label-ref" class="article-heading">Section, label, ref 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#section-label-ref">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一般論文最高層級是 Section 可用 <code>\section{}</code> 產生，依此類推 Subsection、Paragraphy 也是如此。在 <code>\section{xxx}</code> 後方加上 <code>\label{aaa}</code> 讓之後可以用 <code>\ref{aaa}</code> 提及，對應的數字會自動產生。(Note: Dummy text generated by <a href="https://www.lipsum.com/" title="https://www.lipsum.com/" aria-label="https://www.lipsum.com/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.lipsum.com/</a>)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\documentclass</span><span style="color:#50fa7b">[12pt, a4paper]</span><span style="color:#8be9fd;font-style:italic">{</span>article<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\title</span><span style="color:#8be9fd;font-style:italic">{</span>01 Basic<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\author</span><span style="color:#8be9fd;font-style:italic">{</span>Po-Hsuan Huang<span style="color:#ff79c6">\\</span> 
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\texttt</span><span style="color:#8be9fd;font-style:italic">{</span>aben20807@gmail.com<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>document<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\maketitle</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\section</span><span style="color:#8be9fd;font-style:italic">{</span>First Section Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:s1<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Sed ultrices magna non nulla bibendum sagittis. 
</span></span><span style="display:flex;"><span>Nulla a dignissim lectus Section~<span style="color:#ff79c6">\ref</span><span style="color:#8be9fd;font-style:italic">{</span>sec:s2<span style="color:#8be9fd;font-style:italic">}</span>.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\subsection</span><span style="color:#8be9fd;font-style:italic">{</span>First Subsection Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:sub1<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Donec posuere lacus nec nisl tincidunt volutpat.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\subsection</span><span style="color:#8be9fd;font-style:italic">{</span>Second Subsection Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:sub2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Curabitur porttitor, nunc eget malesuada egestas, 
</span></span><span style="display:flex;"><span>orci urna eleifend massa, et tempus ipsum nulla in turpis. 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\paragraph</span><span style="color:#8be9fd;font-style:italic">{</span>First Paragraph Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:p1<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Nulla ac risus augue. In enim erat, laoreet elementum risus eu, 
</span></span><span style="display:flex;"><span>facilisis convallis mi.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\paragraph</span><span style="color:#8be9fd;font-style:italic">{</span>Second Paragraph Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:p2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Nunc scelerisque ultricies gravida.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\section</span><span style="color:#8be9fd;font-style:italic">{</span>Second Section Title<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>sec:s2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Donec velit risus, sollicitudin et mollis vitae, ultrices eget 
</span></span><span style="display:flex;"><span>orci Section~<span style="color:#ff79c6">\ref</span><span style="color:#8be9fd;font-style:italic">{</span>sec:sub1<span style="color:#8be9fd;font-style:italic">}</span>, Section~<span style="color:#ff79c6">\ref</span><span style="color:#8be9fd;font-style:italic">{</span>sec:sub2<span style="color:#8be9fd;font-style:italic">}</span>. 
</span></span><span style="display:flex;"><span>Vivamus id placerat nulla, id eleifend mi.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>document<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVU__oeE4Oe8QXWTcI1Smx4A62_d9IuJlK5JYvs-Sl4izcSG_NC0kz-F3C6nPqRacQ8yhtfAnSAN98PKFpgwMbvI5kMqDigj3pffPf3F_ierwZwt6kN6d7pHAGmON4ciJ3vNcaCOAomd9d2qQ3_Ik84Hw=w1379-h1394-no?authuser=1" alt='label, ref' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">label, ref</center>
    </figcaption>
  </figure>
</p>
<h2 id="hyperref" class="article-heading">hyperref 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#hyperref">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>加上 <code>\usepackage{hyperref}</code> 可以自動為 ref 產生連結，這樣就可以用滑鼠點擊後切換到 ref 所指的地方。如果不喜歡預設值樣式，可以自行定義如下 (若是投稿論文不要自行定義):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\hypersetup</span><span style="color:#8be9fd;font-style:italic">{</span>
</span></span><span style="display:flex;"><span>    colorlinks,
</span></span><span style="display:flex;"><span>    linkcolor=[RGB]<span style="color:#8be9fd;font-style:italic">{</span>120, 29, 125<span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>    citecolor=[RGB]<span style="color:#8be9fd;font-style:italic">{</span>120, 29, 125<span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>    urlcolor=[RGB]<span style="color:#8be9fd;font-style:italic">{</span>0, 85, 150<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVimf_6BjD8wDHvzLLAaDidjAOlCyV7iqczKh5WON2pTj8izJyxHfaUubjGaEvxvgIcmyEC7_nEeL6jvRbwa38LYYyq1HyhtFPcPcnAroH22oYkpbvOXQLFJjUbS69IYa_sEaF8pxVUfqCk-EfT3_Rqiw=w1883-h838-no?authuser=1" alt='預設格式 (左) vs 自訂格式 (右)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">預設格式 (左) vs 自訂格式 (右)</center>
    </figcaption>
  </figure>
</p>
<h2 id="font-family-字型" class="article-heading">Font family 字型 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#font-family-%e5%ad%97%e5%9e%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>不喜歡預設字型所以改成 Linux Libertine。但是如果是一般寫投稿論文的話，此時第一行應該會是 <code>\documentclass[acmsmall]{acmart}</code> (以 ACM 提供的模板為例)，使用預設提供的字型即可，應該說只能使用預設。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\RequirePackage</span><span style="color:#50fa7b">[T1]</span><span style="color:#8be9fd;font-style:italic">{</span>fontenc<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\RequirePackage</span><span style="color:#50fa7b">[tt=false, type1=true]</span><span style="color:#8be9fd;font-style:italic">{</span>libertine<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\RequirePackage</span><span style="color:#50fa7b">[varqu]</span><span style="color:#8be9fd;font-style:italic">{</span>zi4<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\RequirePackage</span><span style="color:#50fa7b">[libertine]</span><span style="color:#8be9fd;font-style:italic">{</span>newtxmath<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWT3pGG7Jd3z2KSsuRy4qEjcSmTL_kRpGIsHNpI9VkyOvlUSDylGeWOidJgGnDgCIgXkOK3KJ7ASktjgmZ3KWvoS6ZiykeQemHS53P5z-GAtOltx1UJTsXvI2vH9rPFfs5BCDEzbngoppfSsfwiZt252w=w1899-h872-no?authuser=1" alt='預設字型 (左) vs Linux Libertine (右)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">預設字型 (左) vs Linux Libertine (右)</center>
    </figcaption>
  </figure>
</p>
<h2 id="itemize-enumerate" class="article-heading">itemize, enumerate 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#itemize-enumerate">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一個是項目符號，一個是編號，在後面會順便作範例。</p>
<h2 id="font-size-字體大小" class="article-heading">Font size 字體大小 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#font-size-%e5%ad%97%e9%ab%94%e5%a4%a7%e5%b0%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>字型大小可以根據情況使用，例如在表格中或是圖片說明。寫論文時通常會用 <code>samll</code> ~ <code>tiny</code> 的字，讓表格寬度不超出邊界。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\Huge</span> Huge<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\huge</span> huge<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\LARGE</span> LARGE<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\Large</span> Large<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\large</span> large<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\normalsize</span> normalsize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\small</span> small<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\footnotesize</span> footnotesize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\scriptsize</span> scriptsize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\tiny</span> tiny<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVvOWxU7zwvJdTogKBp4T6_jU3jTvXFq8xfbeEjrEqXN78YbQV6YaIrCnOvOuLxHiVYwDkAahunPMHD_1S8X8NbFxfrsHLO4S-0dFCc_l5X_S6333LIdE-jw0VRVzM3IHO3nwb-dp818yl17mfANu_NWQ=w373-h857-no?authuser=1" alt='字體大小' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">字體大小</center>
    </figcaption>
  </figure>
</p>
<h2 id="text-highlight-強調文字" class="article-heading">Text highlight 強調文字 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#text-highlight-%e5%bc%b7%e8%aa%bf%e6%96%87%e5%ad%97">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>在寫論文時幾乎不使用 <code>textit</code> (與 <code>emph</code> 相同) 和 <code>underline</code> (可用於強調縮寫)。<code>textbf</code> 用於表格第一列、<code>texttt</code> 用於內文的程式碼、<code>emph</code> 大多用於強調名詞 (例如第一次提到別人的 work) 少部分強調動詞 (特殊作法需要讓讀者知道)。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>enumerate<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>textbf<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\texttt</span><span style="color:#8be9fd;font-style:italic">{</span>texttt<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\textit</span><span style="color:#8be9fd;font-style:italic">{</span>textit<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\emph</span><span style="color:#8be9fd;font-style:italic">{</span>emph<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\underline</span><span style="color:#8be9fd;font-style:italic">{</span>underline<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>enumerate<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEU8CIcojUDBD1YX1DaBR8oQrfHGfcpiYShRNyNmhXdmhDldz7ao-8ZsCW0gq9pSlmy5UxV4DpQnqGZjaLOFtub_hryf0geW4yntXlglkx-uVw-M89e0biR_M0Zs48HSKi8L1BcQQZSSCtZtNkZJq-aJvA=w311-h465-no?authuser=1" alt='強調文字' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">強調文字</center>
    </figcaption>
  </figure>
</p>
<p>接下來的程式碼會以 <a href="#%e6%96%87%e7%ab%a0%e6%a7%8b%e6%88%90">Latex Examples#文章構成</a> 為外部框架，只提供 <code>Contents</code>。</p>
<h1 id="math" class="article-heading">Math 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#math">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/02_math.tex" title="02 Math 完整程式碼" aria-label="02 Math 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 02 Math 完整程式碼</a></p>
<p>Latex 的強項是提供一個較為標準的格式寫數學式，不像 word 都要利用 GUI 介面 (好像也可以在 word 用 latex 但就超出本篇範圍)。數學很多符號都有對應的 latex 程式，通常是常用的才會記住，之前有發現可以用手寫辨識找出符號對應的 latex (<a href="/posts/20220627-weekly-collection/#latex-%e7%ac%a6%e8%99%9f%e6%89%8b%e5%af%ab%e8%be%a8%e8%ad%98"target="_blank" rel="noreferrer noopener">Weekly Collection#latex-符號手寫辨識</a>) 再次推薦。</p>
<p>注意在用數學式 (或演算法) 表達時會跟程式碼不同，例如賦值不能寫成 <code>=</code> 而是用 <code>\gets</code>，但也不是強制規定，有在文章中定義好即可。特殊字型 (例如 <code>\mathbb{Z}</code>) 需要使用 <code>\usepackage{amsfonts}</code>。</p>
<p>行內數學式使用 <code>$</code>，而 <code>$$</code> 會獨立並至中，但還是一行。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span>Inline latex: <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">x </span><span style="color:#8be9fd;font-style:italic">\in</span><span style="color:#8be9fd;font-style:italic">_R </span><span style="color:#8be9fd;font-style:italic">\mathbb</span><span style="color:#8be9fd;font-style:italic">{Z}_{</span><span style="color:#bd93f9">2</span><span style="color:#8be9fd;font-style:italic">^</span><span style="color:#8be9fd;font-style:italic">\ell</span><span style="color:#8be9fd;font-style:italic">}</span><span style="color:#f1fa8c">$</span>, use <span style="color:#ff79c6">\$</span> to wrap.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">$$</span><span style="color:#8be9fd;font-style:italic">
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#ff79c6">(</span><span style="color:#8be9fd;font-style:italic">y_</span><span style="color:#bd93f9">1</span><span style="color:#8be9fd;font-style:italic">, ..., y_n</span><span style="color:#ff79c6">)</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#8be9fd;font-style:italic">\gets</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#8be9fd;font-style:italic">\mathcal</span><span style="color:#8be9fd;font-style:italic">{F}</span><span style="color:#ff79c6">(</span><span style="color:#8be9fd;font-style:italic">x_</span><span style="color:#bd93f9">1</span><span style="color:#8be9fd;font-style:italic">, ..., x_n</span><span style="color:#ff79c6">)</span><span style="color:#8be9fd;font-style:italic">
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#f1fa8c">$$</span>
</span></span></code></pre></div><p>多行的數學式就需要使用 equation 或 align，同時需要使用對應的 package (<code>\usepackage{amsmath}</code>)，使用範例可以參考其提供的手冊 (<a href="https://texdoc.org/serve/amsldoc.pdf/0" title="User’s Guide for the amsmath Package" aria-label="User’s Guide for the amsmath Package"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> User’s Guide for the amsmath Package</a>)。下方是我目前用過最複雜的數學式之一。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span>Test reference~<span style="color:#ff79c6">\ref</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt1<span style="color:#8be9fd;font-style:italic">}</span>.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>align<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\langle</span> c<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A <span style="color:#8be9fd;font-style:italic">&amp;</span> = <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b <span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt1<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">&amp;</span> = (<span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1) <span style="color:#ff79c6">\times</span> (<span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1) <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt2<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>split<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">&amp;</span> = <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\qquad</span> + <span style="color:#ff79c6">\underbrace</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1<span style="color:#8be9fd;font-style:italic">}_{</span><span style="color:#ff79c6">\langle</span> u<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">}</span> + <span style="color:#ff79c6">\underbrace</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0<span style="color:#8be9fd;font-style:italic">}_{</span><span style="color:#ff79c6">\langle</span> v<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>split<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt3<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>split<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">&amp;</span> = <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> u<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> v<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0<span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\qquad</span> + <span style="color:#ff79c6">\langle</span> a<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 <span style="color:#ff79c6">\times</span> <span style="color:#ff79c6">\langle</span> b<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 + <span style="color:#ff79c6">\langle</span> u<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 + <span style="color:#ff79c6">\langle</span> v<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1<span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>split<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt4<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">&amp;</span> = <span style="color:#ff79c6">\langle</span> c<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>0 + <span style="color:#ff79c6">\langle</span> c<span style="color:#ff79c6">\rangle</span><span style="color:#8be9fd;font-style:italic">^</span>A<span style="color:#8be9fd;font-style:italic">_</span>1 <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>eq:mt5<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>align<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXl0SiNRFruj-A5Ypulra_Q5xS_-0fvuPMRcq1ULRyq41NadJRZCrubQvJadpKPL6uF0X2139BQCINiOaUAa2oe8fE0gCvzOynbVREaJOG74mlIqT_HSXeHII7tbIs9ILoBbDZzC1ugae9nFE5f7sqomQ=w1273-h820-no?authuser=1" alt='Math' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Math</center>
    </figcaption>
  </figure>
</p>
<h1 id="figure" class="article-heading">Figure 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#figure">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/03_figure.tex" title="03 Figure 完整程式碼" aria-label="03 Figure 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 03 Figure 完整程式碼</a></p>
<p>流程圖建議用 <a href="draw.io" title="draw.io" aria-label="draw.io" >draw.io</a> 繪製後輸出 pdf，也就是先匡選要輸出的部分或是 ctrl-a (要輸出全部的話)，接著選 File &gt; Export as &gt; PDF&hellip;&gt; 勾選 Selection Only 及 Crop &gt; Export。除了是<strong>向量格式</strong>外還有一個優點就是編譯出來的圖片是可以選取上面的字也可以搜尋，不過我有遇過在投稿最後一步 pdf proof 時會破圖，這時候就要改輸出成 png (Zoom 調成 400% 確保解析度，勾選 Selection Only)。</p>
<p>實驗畫折線圖或長條圖的話建議使用 matplotlib 繪製學術風格的成果圖，可以參考之前的文章: <a href="/posts/20210812-use-matplotlib-to-plot-academic-figures/"target="_blank" rel="noreferrer noopener">Use Matplotlib to Plot Academic Figures</a>。</p>
<h2 id="figure-1" class="article-heading">figure 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#figure-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一般插入圖片的方式是使用 <code>figure</code> (需要 <code>\usepackage{graphicx}</code>) 環境如下，方括號的參數用來指定顯示的位置 (b 目前頁面的底部；h 目前位置；p 下頁頂部；t 此頁頂部。多個參數時越左邊的優先度越高)，不過應該只是建議有時候不一定會按照指定的產生。<code>\includegraphics</code> 是主要指向要插入的圖片 (例如下方範例是把圖片放在 <code>figures/paper-example.pdf</code>)，同時可以用方括號設定寬度等參數，縮放比例會盡量讓圖中的文字比內文略小。<code>\caption</code> 是圖片的說明文字 (注意要有句點)，編號會自動產生。如果有 <code>\label</code> (之後可以被 <code>\ref</code>) 需要放在 <code>\caption</code> 後方。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=.48\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/paper-example.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Caption for example.<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:example<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEU9MKCgbfQ8C53wXzcHAE18ds7H3RW2SIWVoVISMgDC3rUELbiJbkOrcxf202T112cSOzPkuOHi9RKflGvE5S8BMjMz0VLLLz3lO9QhqbXQnRwvuDeCEZxW87AjatS9CtpzwDpoQdU7BBlpxaYQylw6aw=w1198-h527-no?authuser=1" alt='figure' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">figure</center>
    </figcaption>
  </figure>
</p>
<h2 id="subfigure" class="article-heading">subfigure 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#subfigure">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一張圖有多個子圖時會用到 subfigure (需要 <code>\usepackage{caption}</code>、<code>\usepackage{subcaption}</code>)，這會自動產生 (a), (b)，需要對齊的話可以參考 <a href="https://tex.stackexchange.com/questions/87855/alignment-of-horizontal-subfigures" title="Alignment of horizontal subfigures" aria-label="Alignment of horizontal subfigures"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Alignment of horizontal subfigures</a> 更換 subfigure 的方括號參數。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}</span>[hbt]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>subfigure<span style="color:#8be9fd;font-style:italic">}</span>[b]<span style="color:#8be9fd;font-style:italic">{</span>0.48<span style="color:#ff79c6">\textwidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/paper-example.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionsetup</span><span style="color:#8be9fd;font-style:italic">{</span>width=.9<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Caption for example.<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:example2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>subfigure<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>subfigure<span style="color:#8be9fd;font-style:italic">}</span>[b]<span style="color:#8be9fd;font-style:italic">{</span>0.44<span style="color:#ff79c6">\textwidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/cat.png<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionsetup</span><span style="color:#8be9fd;font-style:italic">{</span>width=.9<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\tiny</span> Cat.<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:cat<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>subfigure<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Two subfigures.<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:all<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWbFJ-rS6dqRfsNVv1RnIydVp89SqFNaN4V9n0zSEukZIjDbt-r5tH42XjdsAFkjC8HXHKBLdNTTS7uxbm5QtgLrAAGeqcGkjDrAEnem6-zV_JHT_Dpp9XPzNZuWNmkMYQdCCHZWxVa5RZJC3JXQtcI2A=w1225-h781-no?authuser=1" alt='subfigure' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">subfigure</center>
    </figcaption>
  </figure>
</p>
<h2 id="minipage" class="article-heading">minipage 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#minipage">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>多張圖橫放則是使用 table + minipage，此時的 caption 比較特別需要改用 <code>\captionof</code>。請注意編號的產生結果。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.48<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/paper-example.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>First figure.<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:A<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\qquad</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.44<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/cat.png<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>Second figure.<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:B<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWl8QTdWUUxhWjEzO63c-O0KTB4A4u3muDFxkJ5N54_9w97EBxNXP9VEwjyhFJGUvfypMs0nJxvA7SX0L3HpGM2mohukYMyeooxv51jPWK75Jw4Ld7SAh2Mgj62sEarFLi_0XZMJcNcp73rbOnLCql2SA=w1255-h689-no?authuser=1" alt='minipage' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">minipage</center>
    </figcaption>
  </figure>
</p>
<h1 id="table" class="article-heading">Table 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#table">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/04_table.tex" title="04 Table 完整程式碼" aria-label="04 Table 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 04 Table 完整程式碼</a></p>
<p>用一般手寫建立表格的方式頗為複雜且傷神 (一堆 <code>&amp;</code> 一堆 <code>\\</code>)，我會建議直接用線上的表格產生器 (<a href="https://www.tablesgenerator.com/latex_tables#" title="Tables Generator" aria-label="Tables Generator"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Tables Generator</a>) 先建立想要的大小，不過要小心這類免費線上服務可能會將資料外流，我通常只會填入標題列，內容的部分在產生完後於自己的 .tex 檔案中完成。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEV4lnJ3UqNoQhxZwm4Ld3Z4gxXlUdRtlve59Ao6RL_vAetO0JHewT4Cabg2hkT2TG-zJ2YKa2o0IFLspLqPyi35s5W2oUbIW0__9jUYsmuxV_rr7Gxs-XJgFEWdr2AV9fcq3bsKptNJT06NM98CA1FFzQ=w1004-h850-no?authuser=1" alt='Tables Generator' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Tables Generator</center>
    </figcaption>
  </figure>
</p>
<p>表格建立好後可以再用一些指令 (<code>\toprule</code>, <code>\midrule</code>, <code>\bottomrule</code>) 加上分隔線 (需要 <code>\usepackage{booktabs}</code>)，表格說明文字也是利用 <code>\caption</code>，標題列會使用粗體 (<code>\textbf</code>)。<code>\begin{tabular}{lll}</code> 後方的 lll 是儲存格的對齊方式 (l 向左對齊: c 置中；r 向右對齊)，一般文字向左對齊而數字向右或置中。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Caption of the table.<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>tab:example<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>tabular<span style="color:#8be9fd;font-style:italic">}{</span>lll<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\toprule</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Category<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Work<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Tags<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\midrule</span>
</span></span><span style="display:flex;"><span>        Open     <span style="color:#8be9fd;font-style:italic">&amp;</span>   Title A   <span style="color:#8be9fd;font-style:italic">&amp;</span>  A, B, C <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>        Open     <span style="color:#8be9fd;font-style:italic">&amp;</span>   Title B   <span style="color:#8be9fd;font-style:italic">&amp;</span>  B, D    <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>        Close    <span style="color:#8be9fd;font-style:italic">&amp;</span>   Title C   <span style="color:#8be9fd;font-style:italic">&amp;</span>  A, B, D <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>        Close    <span style="color:#8be9fd;font-style:italic">&amp;</span>   Title D   <span style="color:#8be9fd;font-style:italic">&amp;</span>  E       <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\bottomrule</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>tabular<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW8PR-NkTqiaBjWxRANX4Bxy9sLjSvHIaoZxK0K7Y-xBTojBgcimQIA4j1QRrouVyw-yBScReeiDnQVico6rJDRYrSU2iLJT491KuPiJlquGLS1DrXvzSxj0VONNW3RQ_WJiNHMEBjsIMdb9MoGkzKpsw=w875-h385-no?authuser=1" alt='Table' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Table</center>
    </figcaption>
  </figure>
</p>
<p>要做到儲存格合併的話也可以利用產生工具，它會自動利用 multirow (需要 <code>\usepackage{multirow}</code>) 合併。寫起來頗眼花撩亂要記得填對位置。順帶一提，有數字的話要小數點長度要統一，就算是整數也要補 .0 上去。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWQxSApx23ovDZA1hsPqbns-vzsOJnLsqxHCnuzUg3eMVB1471x_HWCwiTDaTr4oprCCo4z7swu3DadQytiCO58OEYxL7YAfLOoKMyev-AnmkFt8uvU6xefaqgzXbTkFqy0A1IasTHcrt3mqWOwagyDSg=w1084-h892-no?authuser=1" alt='Tables Generator 儲存格合併' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Tables Generator 儲存格合併</center>
    </figcaption>
  </figure>
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Caption of the table 2.<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>tab:example2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>tabular<span style="color:#8be9fd;font-style:italic">}{</span>llrr<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\toprule</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\multirow</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}{</span>*<span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Category<span style="color:#8be9fd;font-style:italic">}}</span> <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\multirow</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}{</span>*<span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Work<span style="color:#8be9fd;font-style:italic">}}</span> <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\multicolumn</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}{</span>c<span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Time<span style="color:#8be9fd;font-style:italic">}}</span> <span style="color:#ff79c6">\\</span> <span style="color:#ff79c6">\cline</span><span style="color:#8be9fd;font-style:italic">{</span>3-4<span style="color:#8be9fd;font-style:italic">}</span> 
</span></span><span style="display:flex;"><span>                              <span style="color:#8be9fd;font-style:italic">&amp;</span>                       <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>First<span style="color:#8be9fd;font-style:italic">}</span>      <span style="color:#8be9fd;font-style:italic">&amp;</span> <span style="color:#ff79c6">\textbf</span><span style="color:#8be9fd;font-style:italic">{</span>Second<span style="color:#8be9fd;font-style:italic">}</span>      <span style="color:#ff79c6">\\</span> <span style="color:#ff79c6">\hline</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\multirow</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}{</span>*<span style="color:#8be9fd;font-style:italic">}{</span>Open<span style="color:#8be9fd;font-style:italic">}</span>     <span style="color:#8be9fd;font-style:italic">&amp;</span>  Title A    <span style="color:#8be9fd;font-style:italic">&amp;</span>  1.1  <span style="color:#8be9fd;font-style:italic">&amp;</span>  3.0  <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>                              <span style="color:#8be9fd;font-style:italic">&amp;</span>  Title B    <span style="color:#8be9fd;font-style:italic">&amp;</span>  2.0  <span style="color:#8be9fd;font-style:italic">&amp;</span>  2.3  <span style="color:#ff79c6">\\</span> <span style="color:#ff79c6">\hline</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\multirow</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}{</span>*<span style="color:#8be9fd;font-style:italic">}{</span>Close<span style="color:#8be9fd;font-style:italic">}</span>    <span style="color:#8be9fd;font-style:italic">&amp;</span>  Title C    <span style="color:#8be9fd;font-style:italic">&amp;</span>  3.8  <span style="color:#8be9fd;font-style:italic">&amp;</span>  5.6  <span style="color:#ff79c6">\\</span>
</span></span><span style="display:flex;"><span>                              <span style="color:#8be9fd;font-style:italic">&amp;</span>  Title D    <span style="color:#8be9fd;font-style:italic">&amp;</span>  4.6  <span style="color:#8be9fd;font-style:italic">&amp;</span>  8.8  <span style="color:#ff79c6">\\</span> <span style="color:#ff79c6">\bottomrule</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>tabular<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXs-78FoQ2QHEB0zWTbyiOtt3JgV1E29ogMN6ne_us6CUR7Tru5ScNJ24izb4Z1knlL-SmVxuDzDMGby7TZr2j9M2-TbkOotb0FPZKatmwBftYyosND8ddlfI0qC8vtRJ3bnLhG5GNUD3z31YgiyA3d5g=w818-h413-no?authuser=1" alt='Table 2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Table 2</center>
    </figcaption>
  </figure>
</p>
<h1 id="algorithm" class="article-heading">Algorithm 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#algorithm">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/05_algorithm.tex" title="05 Algorithm 完整程式碼" aria-label="05 Algorithm 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 05 Algorithm 完整程式碼</a></p>
<p>演算法部份跟數學式類似，不過通常涉及更抽象的概念。寫法上可以貼近程式碼語法，講求易懂為原則。符號使用上我看網路上建議先參考演算法權威 <a href="https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844" title="Introduction to Algorithms" aria-label="Introduction to Algorithms"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Introduction to Algorithms</a>，撰寫時要注意是否有沒定義的符號否則容易讓讀者看不懂。我這邊也有參考 <a href="https://arxiv.org/abs/2010.06457" title="CrypTFlow2" aria-label="CrypTFlow2"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> CrypTFlow2</a> 論文的寫法 (下面版本)，在不用定義函式 (function) 的情況下讓讀者很清楚演算法的輸入輸出。</p>
<p>在版面安排上可以和 figure 一樣利用 minipage 做左右分割，也可以排列組合，例如左圖片右演算法 (<del>左青龍右白虎</del>)。</p>
<p>使用套件以及設定演算法風格:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\usepackage</span><span style="color:#8be9fd;font-style:italic">{</span>xcolor<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\usepackage</span><span style="color:#50fa7b">[linesnumbered,algoruled,boxed,lined]</span><span style="color:#8be9fd;font-style:italic">{</span>algorithm2e<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\SetKwInOut</span><span style="color:#8be9fd;font-style:italic">{</span>KwIn<span style="color:#8be9fd;font-style:italic">}{</span>Input<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% align input, output
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\SetKwInOut</span><span style="color:#8be9fd;font-style:italic">{</span>KwOut<span style="color:#8be9fd;font-style:italic">}{</span>Output<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% align input, output
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\SetKw</span><span style="color:#8be9fd;font-style:italic">{</span>Continue<span style="color:#8be9fd;font-style:italic">}{</span>continue<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% new keyword
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\SetKw</span><span style="color:#8be9fd;font-style:italic">{</span>Or<span style="color:#8be9fd;font-style:italic">}{</span>or<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% new keyword
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\SetArgSty</span><span style="color:#8be9fd;font-style:italic">{</span>textnormal<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\SetAlCapNameFnt</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\small</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\SetAlCapFnt</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\small</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\newcommand\mycommfont</span><span style="color:#50fa7b">[1]</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\rmfamily\itshape\textcolor</span><span style="color:#8be9fd;font-style:italic">{</span>gray<span style="color:#8be9fd;font-style:italic">}{</span>#1<span style="color:#8be9fd;font-style:italic">}}</span> <span style="color:#6272a4">% comment style
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\SetCommentSty</span><span style="color:#8be9fd;font-style:italic">{</span>mycommfont<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% comment style
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\usepackage</span><span style="color:#50fa7b">[T1]</span><span style="color:#8be9fd;font-style:italic">{</span>fontenc<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% for &#39;&lt;&#39;
</span></span></span></code></pre></div><p>演算法部分:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>algorithm<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\SetKwProg</span><span style="color:#8be9fd;font-style:italic">{</span>Function<span style="color:#8be9fd;font-style:italic">}{</span>Function<span style="color:#8be9fd;font-style:italic">}{</span> :<span style="color:#8be9fd;font-style:italic">}{</span>end<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Vector <span style="color:#ff79c6">\texttt</span><span style="color:#8be9fd;font-style:italic">{</span>add<span style="color:#8be9fd;font-style:italic">}</span> function.<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>algo:example<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\Function</span><span style="color:#8be9fd;font-style:italic">{</span>add(<span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_a, v_b</span><span style="color:#f1fa8c">$</span>)<span style="color:#8be9fd;font-style:italic">}{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret} </span><span style="color:#8be9fd;font-style:italic">\gets</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#f1fa8c">$</span> empty vector with the same length with <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_a</span><span style="color:#f1fa8c">$</span> <span style="color:#ff79c6">\;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\For</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span>=0; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span> &lt; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">\vert</span><span style="color:#8be9fd;font-style:italic"> v_a </span><span style="color:#8be9fd;font-style:italic">\vert</span><span style="color:#f1fa8c">$</span>; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span>++<span style="color:#8be9fd;font-style:italic">}{</span>
</span></span><span style="display:flex;"><span>            <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret}</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#8be9fd;font-style:italic">\gets</span><span style="color:#8be9fd;font-style:italic"> v_a</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#ff79c6">+</span><span style="color:#8be9fd;font-style:italic"> v_b</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#f1fa8c">$</span> <span style="color:#ff79c6">\;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>      <span style="color:#ff79c6">\KwRet</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret}</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>algorithm<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>algorithm<span style="color:#8be9fd;font-style:italic">}</span>[ht]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\caption</span><span style="color:#8be9fd;font-style:italic">{</span>Vector <span style="color:#ff79c6">\texttt</span><span style="color:#8be9fd;font-style:italic">{</span>add<span style="color:#8be9fd;font-style:italic">}</span>.<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>algo:example2<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\KwIn</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_a</span><span style="color:#f1fa8c">$</span>, an input vector. <span style="color:#ff79c6">\newline</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_b</span><span style="color:#f1fa8c">$</span>, an input vector.
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\KwOut</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret}</span><span style="color:#f1fa8c">$</span>, a vector for output.
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret} </span><span style="color:#8be9fd;font-style:italic">\gets</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#f1fa8c">$</span> empty vector with the same length with <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_a</span><span style="color:#f1fa8c">$</span> <span style="color:#ff79c6">\tcp*</span><span style="color:#50fa7b">[l]</span><span style="color:#8be9fd;font-style:italic">{</span>Initialization.<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\For</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span>=0; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span> &lt; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">\vert</span><span style="color:#8be9fd;font-style:italic"> v_a </span><span style="color:#8be9fd;font-style:italic">\vert</span><span style="color:#f1fa8c">$</span>; <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#f1fa8c">$</span>++<span style="color:#8be9fd;font-style:italic">}{</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f1fa8c">$</span><span style="color:#8be9fd;font-style:italic">v_{ret}</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#8be9fd;font-style:italic">\gets</span><span style="color:#8be9fd;font-style:italic"> v_a</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#8be9fd;font-style:italic"> </span><span style="color:#ff79c6">+</span><span style="color:#8be9fd;font-style:italic"> v_b</span><span style="color:#ff79c6">[</span><span style="color:#8be9fd;font-style:italic">i</span><span style="color:#ff79c6">]</span><span style="color:#f1fa8c">$</span> <span style="color:#ff79c6">\;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>algorithm<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVGCo4B5QVq2BdvAPchS2-zqMw6MlY31rLlVax4A8Z--S35U3sKdNgXVcN-Mu6KNzKg4P-9VrRJlsBRfOSCXzU4rFjhayghSDU-vPZNbQTntvJxVDWKTpu5w9CzbJwY0thr65FIaX3XmoCvP2rLOVk2Eg=w1245-h908-no?authuser=1" alt='Algorithm' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Algorithm</center>
    </figcaption>
  </figure>
</p>
<h1 id="code" class="article-heading">Code 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#code">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/06_code.tex" title="06 Code 完整程式碼" aria-label="06 Code 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 06 Code 完整程式碼</a></p>
<p>在論文中加入程式碼的機會蠻少的，一來是演算法 (不用編譯不容易出錯) 就可以說明，且太過細節不利於說明，還有可能有商業考量。但還是有部分論文會放，或是在做筆記、報告時會使用到。</p>
<p>這裡比較特殊的技巧是用到 <code>escapechar=|</code> 讓 <code>|</code> 後方可以插入 <code>\label</code>。註解部分可以使用 <code>\tcp</code> 產生單行，多行則用 <code>\tcc</code>，可另外參考 <a href="https://jdhao.github.io/2019/09/21/latex_algorithm_pseudo_code/" title="jdhao&amp;rsquo;s digital space - How to Write Algorithm Pseudo Code in LaTeX" aria-label="jdhao&amp;rsquo;s digital space - How to Write Algorithm Pseudo Code in LaTeX"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> jdhao&rsquo;s digital space - How to Write Algorithm Pseudo Code in LaTeX</a>。</p>
<p>使用套件以及設定程式碼風格:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\usepackage</span><span style="color:#50fa7b">[dvipsnames]</span><span style="color:#8be9fd;font-style:italic">{</span>xcolor<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% color
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\usepackage</span><span style="color:#8be9fd;font-style:italic">{</span>listings<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% code
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">% Default fixed font does not support bold face
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DeclareFixedFont</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\ttb</span><span style="color:#8be9fd;font-style:italic">}{</span>T1<span style="color:#8be9fd;font-style:italic">}{</span>txtt<span style="color:#8be9fd;font-style:italic">}{</span>bx<span style="color:#8be9fd;font-style:italic">}{</span>n<span style="color:#8be9fd;font-style:italic">}{</span>10<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% for bold
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DeclareFixedFont</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\ttm</span><span style="color:#8be9fd;font-style:italic">}{</span>T1<span style="color:#8be9fd;font-style:italic">}{</span>txtt<span style="color:#8be9fd;font-style:italic">}{</span>m<span style="color:#8be9fd;font-style:italic">}{</span>n<span style="color:#8be9fd;font-style:italic">}{</span>10<span style="color:#8be9fd;font-style:italic">}</span>  <span style="color:#6272a4">% for normal
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">% Python style for highlighting
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\newcommand\pythonstyle</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\lstset</span><span style="color:#8be9fd;font-style:italic">{</span>
</span></span><span style="display:flex;"><span>language=Python,
</span></span><span style="display:flex;"><span>basicstyle=<span style="color:#ff79c6">\ttm</span>,
</span></span><span style="display:flex;"><span>morekeywords=<span style="color:#8be9fd;font-style:italic">{</span>self,with<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#6272a4">% Add keywords here
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>keywordstyle=<span style="color:#ff79c6">\ttb\color</span><span style="color:#8be9fd;font-style:italic">{</span>BlueViolet<span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>emph=<span style="color:#8be9fd;font-style:italic">{</span>MyClass,<span style="color:#8be9fd;font-style:italic">__</span>init<span style="color:#8be9fd;font-style:italic">__}</span>, <span style="color:#6272a4">% Custom highlighting
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>emphstyle=<span style="color:#ff79c6">\ttb\color</span><span style="color:#8be9fd;font-style:italic">{</span>BrickRed<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#6272a4">% Custom highlighting style
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>stringstyle=<span style="color:#ff79c6">\color</span><span style="color:#8be9fd;font-style:italic">{</span>ForestGreen<span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>frame=single, <span style="color:#6272a4">% Any extra options here
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>showstringspaces=false,
</span></span><span style="display:flex;"><span>morecomment=[l][<span style="color:#ff79c6">\itshape\color</span><span style="color:#8be9fd;font-style:italic">{</span>Gray<span style="color:#8be9fd;font-style:italic">}</span>]<span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\#</span><span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>numbers=left,
</span></span><span style="display:flex;"><span>stepnumber=1,
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% Python for inline
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\newcommand\pythoninline</span><span style="color:#50fa7b">[1]</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>        <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\pythonstyle\lstinline</span>!#1!<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% Python environment
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\lstnewenvironment</span><span style="color:#8be9fd;font-style:italic">{</span>python<span style="color:#8be9fd;font-style:italic">}</span>[1][]<span style="color:#8be9fd;font-style:italic">{</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#ff79c6">\pythonstyle\footnotesize\lstset</span><span style="color:#8be9fd;font-style:italic">{</span>#1<span style="color:#8be9fd;font-style:italic">}}{}</span>
</span></span></code></pre></div><p>程式碼部分:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>python<span style="color:#8be9fd;font-style:italic">}</span>[
</span></span><span style="display:flex;"><span>    float,floatplacement=ht,
</span></span><span style="display:flex;"><span>    caption=<span style="color:#8be9fd;font-style:italic">{</span>Simple python code.<span style="color:#8be9fd;font-style:italic">}</span>,
</span></span><span style="display:flex;"><span>    label=list:python,
</span></span><span style="display:flex;"><span>    escapechar=|]
</span></span><span style="display:flex;"><span>def func(num1, num2):
</span></span><span style="display:flex;"><span>    # This function adds two numbers
</span></span><span style="display:flex;"><span>    s = num1 + num2 |<span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>line:do-add<span style="color:#8be9fd;font-style:italic">}</span>|
</span></span><span style="display:flex;"><span>    return s
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>if <span style="color:#8be9fd;font-style:italic">__</span>name<span style="color:#8be9fd;font-style:italic">__</span> == &#34;<span style="color:#8be9fd;font-style:italic">__</span>main<span style="color:#8be9fd;font-style:italic">__</span>&#34;:
</span></span><span style="display:flex;"><span>    x = func(3, 5)
</span></span><span style="display:flex;"><span>    print(f&#34;Answer: <span style="color:#8be9fd;font-style:italic">{</span>x<span style="color:#8be9fd;font-style:italic">}</span>&#34;)
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>python<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXb8UQ0UKGALgO_0PNFnOvh738QxxLh5DS9w5exSpKSqxFdNZ3XiiU7lCiTNj1ODADi6yN2BTx_OGvlcVBkr-9Ag0sUafhIbcVkL1dsF1DWBlaetRV9CjV7jEymSziU8OBnT0xbjMDm3MF0HbM7MEgE0w=w1181-h417-no?authuser=1" alt='Code' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Code</center>
    </figcaption>
  </figure>
</p>
<h1 id="bibliography" class="article-heading">Bibliography 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#bibliography">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/07_bibliography.tex" title="07 Bibliography 完整程式碼" aria-label="07 Bibliography 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 07 Bibliography 完整程式碼</a></p>
<p>顧名思義就是自己的參考書目。在論文中需要 cite (使用 <code>\cite</code> 指令) 別人 (或自己) 的論文時需要用到。<code>\bibliographystyle</code> 可設定風格，但一般投稿論文的模板會有提供，例如 ACM 就會直接使用 <code>\bibliographystyle{ACM-Reference-Format}</code>。<code>\bibliography</code> 是指定你的參考書目的檔案位置，如果是放在 <code>example.bib</code> 那就要使用 <code>\bibliography{example}</code>。這個區塊其實相當重要，我老闆特別重視，所以都要非常仔細檢查同類型的論文是否有相同格式，多個句號少個逗號都頗嚴重。</p>
<p>其中 .bib 的內容通常會需要自己收集，可以到各大會議期刊的官網上獲得，也可以到 google scholar、dblp 找，但是可能會跟官網有出入。arXiv 或是一些 eprint 的 bibtex 格式比較特殊 (<del>每個人都寫不一樣</del>) 建議可以到官網找自動輸出的內容，例如 arXiv 右下方有提供，IACR 也有提供官方格式 (<a href="https://eprint.iacr.org/citation.html" title="How to Cite a Paper in the Cryptology ePrint Archive" aria-label="How to Cite a Paper in the Cryptology ePrint Archive"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to Cite a Paper in the Cryptology ePrint Archive</a>)。此外，我個人會提供一個 <code>XXX</code> 讓一起改論文的人可以當作還沒找到 bibtex 的論文，要注意在投稿出去前要消除所有 <code>XXX</code>。</p>
<p>一般常用的類別 (<a href="https://www.bibtex.com/e/entry-types/" title="完整列表" aria-label="完整列表"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 完整列表</a>):</p>
<ul>
<li>inproceedings: 會議</li>
<li>article: 期刊</li>
<li>book: 書本、教科書</li>
<li>misc: 線上資源</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEV-UjoO-CozbrPR1MhjpvFEyHDFqviZ4LGiZ5gb6DPFRbqejT0YhJ9k4Z-jUzu0pEiOhCCuzyhOLFM3ZuyZc5jYfkn03v7SFY59hiFF-5zwDZ_PF4SPKYMN3GbCPdQdUvMihRJ6XMm4Lh4DWuTHCyxTFw=w1920-h907-no?authuser=1" alt='arXiv - Export Bibtex Citation' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">arXiv - Export Bibtex Citation</center>
    </figcaption>
  </figure>
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span>Test cite: <span style="color:#ff79c6">\cite</span><span style="color:#8be9fd;font-style:italic">{</span>XXX, huang2021tonic, huang2022pops, huang2023securetvm<span style="color:#8be9fd;font-style:italic">}</span>.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\bibliographystyle</span><span style="color:#8be9fd;font-style:italic">{</span>unsrt<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\bibliography</span><span style="color:#8be9fd;font-style:italic">{</span>example<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bibtex" data-lang="bibtex"><span style="display:flex;"><span><span style="color:#50fa7b">@misc</span>{<span style="color:#8be9fd;font-style:italic">XXX</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">author</span>    = <span style="color:#f1fa8c">{TBD}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">booktitle</span> = <span style="color:#f1fa8c">{TBD}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">title</span>     = <span style="color:#f1fa8c">{TBD}</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">@inproceedings</span>{<span style="color:#8be9fd;font-style:italic">huang2021tonic</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">author</span>    = <span style="color:#f1fa8c">{Huang, Po-Hsuan and Tu, Chia-Heng and Chung, Shen-Ming}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">booktitle</span> = <span style="color:#f1fa8c">{Proceedings of the 36th Annual ACM Symposium on Applied Computing}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">pages</span>     = <span style="color:#f1fa8c">{491--500}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">title</span>     = <span style="color:#f1fa8c">{TONIC: Towards Oblivious Neural Inference Compiler}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">year</span>      = <span style="color:#f1fa8c">{2021}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">isbn</span>      = <span style="color:#f1fa8c">{9781450381048}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">publisher</span> = <span style="color:#f1fa8c">{Association for Computing Machinery}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">doi</span>       = <span style="color:#f1fa8c">{10.1145/3412841.3441929}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">location</span>  = <span style="color:#f1fa8c">{Virtual Event, Republic of Korea}</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">@article</span>{<span style="color:#8be9fd;font-style:italic">huang2022pops</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">title</span>     = <span style="color:#f1fa8c">{POPS: an off-peak precomputing scheme for privacy-preserving computing}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">author</span>    = <span style="color:#f1fa8c">{Huang, Po-Hsuan and Chang, Ting-Wei and Tu, Chia-Heng and Chung, Shen-Ming}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">journal</span>   = <span style="color:#f1fa8c">{The Journal of Supercomputing}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">pages</span>     = <span style="color:#f1fa8c">{16841--16860}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">year</span>      = <span style="color:#f1fa8c">{2022}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">publisher</span> = <span style="color:#f1fa8c">{Springer}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">doi</span>       = <span style="color:#f1fa8c">{10.1007/s11227-022-04552-x}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">issn</span>      = <span style="color:#f1fa8c">{1573-0484}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">volume</span>    = <span style="color:#f1fa8c">{78}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">issue</span>     = <span style="color:#f1fa8c">{15}</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">@article</span>{<span style="color:#8be9fd;font-style:italic">huang2023securetvm</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">author</span>         = <span style="color:#f1fa8c">{Po-Hsuan Huang and Chia-Heng Tu and Shen-Ming Chung and Pei-Yuan Wu and Tung-Lin Tsai and Yi-An Lin and Chun-Yi Dai and Tzu-Yi Liao}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">journal</span>        = <span style="color:#f1fa8c">{ACM Transactions on Design Automation of Electronic Systems}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">comment-number</span> = <span style="color:#f1fa8c">{1}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">title</span>          = <span style="color:#f1fa8c">{SecureTVM: A TVM-Based Compiler Framework for Selective Privacy-Preserving Neural Inference}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">comment-volume</span> = <span style="color:#f1fa8c">{1}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">year</span>           = <span style="color:#f1fa8c">{2023}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">month</span>          = <span style="color:#f1fa8c">{1}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">doi</span>            = <span style="color:#f1fa8c">{10.1145/3579049}</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#50fa7b">issn</span>           = <span style="color:#f1fa8c">{1084-4309}</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWXenroMDYq9OXVIgwU2d2kuYcQkh8beCWABPhsbM2Wpa0GZkeYIpJ-bTz0jGx4qDzwbSQOtDc-s9Kqs8mj4vVvnTmnAw5IjFENiXKN_2R8MjMYI6Whj_SBmOZ1du8_-TZ9nKIH7-Brb-EnEOCHI-6r_w=w1225-h908-no?authuser=1" alt='Bibliography' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Bibliography</center>
    </figcaption>
  </figure>
</p>
<h2 id="back-reference" class="article-heading">Back reference 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#back-reference">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p><a href="https://github.com/aben20807/latex_examples/blob/master/07_1_bibliography_back_ref.tex" title="07_1 Bibliography Back Reference 完整程式碼" aria-label="07_1 Bibliography Back Reference 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 07_1 Bibliography Back Reference 完整程式碼</a></p>
<p>有些論文 (例如 CVPR) 有看到在後面的參考書目會有列出哪幾頁有 cite 這篇。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXVq1sFwQsrAK4wPzXNL-mZPdghPObcwWgkTOPXG16DvRUuCeqkNJ85tmu0kgg_tat643iHQrfM_LajYyou8l-s32PGWUMqny7jD8qI1MZ7dgw6DyqGZAhdRdSf92RxXW8stzKtLVFycYwIA7TOPHeqtw=w1476-h475-no?authuser=1" alt='Back reference example:  Dual Cross-Attention Learning for Fine-Grained Visual Categorization and Object Re-Identification' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Back reference example:  Dual Cross-Attention Learning for Fine-Grained Visual Categorization and Object Re-Identification</center>
    </figcaption>
  </figure>
</p>
<p>這可能是他們的模板有改進，不過我們也是可以利用現有的工具達到此功能。可以看到下方的程式碼範例會比之前的版本多不少程式碼，但是可以客製化的部份比較多。<code>\FloatBarrier</code> 的作用是可以確定圖片可以先輸出最後才是參考書目。<code>\DefineBibliographyStrings</code> 可以設定 &ldquo;cit. on p. &quot; 的格式。不過原則上是不會刻意使用這種，比較適合自己的報告或筆記。</p>
<p>使用套件以及設定參考書目風格:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\usepackage</span><span style="color:#8be9fd;font-style:italic">{</span>placeins<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% FloatBarrier
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\usepackage</span>[<span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    backref=true,
</span></span><span style="display:flex;"><span>    backend=bibtex,
</span></span><span style="display:flex;"><span>    maxbibnames=99,
</span></span><span style="display:flex;"><span>    sorting=none,
</span></span><span style="display:flex;"><span>    block=space]<span style="color:#8be9fd;font-style:italic">{</span>biblatex<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% back link for ref in Reference
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">% \DefineBibliographyStrings{english}{
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">%     backrefpage = {page},
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">%     backrefpages = {pages},
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">% }
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\renewcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\cite</span><span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\autocite</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\addbibresource</span><span style="color:#8be9fd;font-style:italic">{</span>example.bib<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>內文部份:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span>Test cite: <span style="color:#ff79c6">\cite</span><span style="color:#8be9fd;font-style:italic">{</span>XXX, huang2021tonic, huang2022pops, huang2023securetvm<span style="color:#8be9fd;font-style:italic">}</span>.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\FloatBarrier</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\printbibliography</span>[<span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    heading=bibintoc,
</span></span><span style="display:flex;"><span>    title=<span style="color:#8be9fd;font-style:italic">{</span>References<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVldD1bpxWzy7F3N9Q81P3WzBO-VIOpNP23o9K6cs3RufE_vbv2q6_wGeHYjbXRsFQQoY8cx0ZhynwwVVmNjlToxXqSWWn_GnWc7swFVO7eMkqsXtVrUbeE43Et3gEIP5resykXdKb30NGNMbDRHWgzrg=w1110-h908-no?authuser=1" alt='Back reference' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Back reference</center>
    </figcaption>
  </figure>
</p>
<h1 id="misc" class="article-heading">Misc 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#misc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://github.com/aben20807/latex_examples/blob/master/08_misc.tex" title="08 Misc 完整程式碼" aria-label="08 Misc 完整程式碼"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 08 Misc 完整程式碼</a></p>
<p>最後剩下一些特殊技巧。</p>
<h2 id="vspace" class="article-heading">vspace 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vspace">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>有時候會需要微調版面為了塞進限制的頁數 (一般是在所有內容都寫好後才調整)，這時候可以利用 <code>\vspace</code> 去增減空間。以下示範調整圖片的標題位置。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>[!h]
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.48<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/paper-example.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\vspace</span><span style="color:#8be9fd;font-style:italic">{</span>-10pt<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>First figure (-10pt).<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:A<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\qquad</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.44<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/cat.png<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\vspace</span><span style="color:#8be9fd;font-style:italic">{</span>10pt<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>Second figure (+10pt).<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:B<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXztbWMP_hAiOiU0hkLzxMyyitTu9zlgD9fafqw3mNRbUGe1SGnohOuWfZhtIM2__WZ8PqXgJWCHsV5fZ0VAMS0PoDyIthHBX1pN9hqtsRZosHQKSwT7147mNTk481OnydxlGL6AzRpf6iJ7XyzAVPv0g=w1280-h569-no?authuser=1" alt='vspace' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">vspace</center>
    </figcaption>
  </figure>
</p>
<h2 id="email-with-mbox" class="article-heading">email with mbox 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#email-with-mbox">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>在 latex 中寫電子郵件的話會自動轉成 mailto 的連結，也就是在 pdf 中點擊時可以開啟郵件系統直接寄信，之前有遇到直接寫會導致換行時會被加入連字號 (<code>_</code>) 導致郵件系統開啟的網址不一樣，所以建議在除了作者區塊的 email 要加上 <code>\mbox</code> 它會保證中間不會有連字號。也可以使用中間的版本不過就會被當作連結，所以我個人還是喜歡使用 mbox。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> xxxXxxx@example.com
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#ff79c6">\href</span><span style="color:#8be9fd;font-style:italic">{</span>mailto:xxxXxxx@example.com<span style="color:#8be9fd;font-style:italic">}{</span>xxx-xxx@example.com<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#ff79c6">\mbox</span><span style="color:#8be9fd;font-style:italic">{</span>xxxXxxx@example.com<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUt8d6WdwOufOgef84WIFfeIxKpPRs7ophW18ZsFuoo3y-zKxSEM1eTexqY3R7lIGbzd6G0GgBi5IzJDUV_28Oo3XyWxTynJYiRf91yOkWRiwFSo7XhYgTbqEH_0wo0ApGWNdC1YsQAi6yJS4kvSToe9g=w1009-h498-no?authuser=1" alt='email with mbox' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">email with mbox</center>
    </figcaption>
  </figure>
</p>
<h2 id="newcommand" class="article-heading">newcommand 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#newcommand">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>可以自訂指令方便減少程式碼使用量，例如剛剛中間的 email。<code>\newcommand</code> 後第一個大括號內是指令名稱，接著方括號是參數個數 (之後可以用 #N 代表第 N 個參數)，最後一個大括號是指令對應的本體。整體寫起來像是 C 的 macro。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#6272a4">% before \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\email</span><span style="color:#8be9fd;font-style:italic">}</span>[1]<span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\href</span><span style="color:#8be9fd;font-style:italic">{</span>mailto:#1<span style="color:#8be9fd;font-style:italic">}{</span>#1<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% after \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\email</span><span style="color:#8be9fd;font-style:italic">{</span>xxxXxxx@example.com<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>在寫投稿論文時因為會有修改跟討論，所以也會利用新增指令。<code>\cmt</code> 用作討論，可以指定顏色來分辨類型。<code>\revised</code> 用作標記修改的部份，在期刊答辯時可以當作附件讓審查人員清楚知道有修改的部份，切換註解可以快速換成不標記的版本。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#6272a4">% before \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\usepackage</span><span style="color:#8be9fd;font-style:italic">{</span>xcolor<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\cmt</span><span style="color:#8be9fd;font-style:italic">}</span>[2][red]<span style="color:#8be9fd;font-style:italic">{</span> <span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\color</span><span style="color:#8be9fd;font-style:italic">{</span>#1<span style="color:#8be9fd;font-style:italic">}</span> XXX: #2<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\definecolor</span><span style="color:#8be9fd;font-style:italic">{</span>darkpastelgreen<span style="color:#8be9fd;font-style:italic">}{</span>rgb<span style="color:#8be9fd;font-style:italic">}{</span>0.01, 0.75, 0.24<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\revised</span><span style="color:#8be9fd;font-style:italic">}</span>[2][darkpastelgreen]<span style="color:#8be9fd;font-style:italic">{{</span><span style="color:#ff79c6">\color</span><span style="color:#8be9fd;font-style:italic">{</span>#1<span style="color:#8be9fd;font-style:italic">}</span>#2<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% \newcommand{\revised}[1]{#1}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% after \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. 
</span></span><span style="display:flex;"><span>Maecenas xnsl <span style="color:#ff79c6">\email</span><span style="color:#8be9fd;font-style:italic">{</span>xxxXxxx@example.com<span style="color:#8be9fd;font-style:italic">}</span> auctor, nulla 
</span></span><span style="display:flex;"><span>vitae fringilla convallis, tellus ex laoreet ipsum, convallis 
</span></span><span style="display:flex;"><span>blandit lorem dolor ut nisl. <span style="color:#ff79c6">\cmt</span><span style="color:#8be9fd;font-style:italic">{</span>need to add references.<span style="color:#8be9fd;font-style:italic">}</span> 
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\cmt</span><span style="color:#50fa7b">[green]</span><span style="color:#8be9fd;font-style:italic">{</span>OK<span style="color:#8be9fd;font-style:italic">}</span>. This is <span style="color:#ff79c6">\revised</span><span style="color:#8be9fd;font-style:italic">{</span>an<span style="color:#8be9fd;font-style:italic">}</span> apple.
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUhX0GVqIFnG0hmuOPt9uvXCK6vQuv85514d__fkEjCL6JQa7VPyQWEEjgFkb6C8OmpTM5l8LYZVurK7_fo4XjdKqX3AfPqkSTi-VpIYbOf5zdNNTmy01kYRgr6BOyJT0tc7G1SHq6sQ6_1PU64-hH7WA=w1146-h211-no?authuser=1" alt='cmt, revised' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">cmt, revised</center>
    </figcaption>
  </figure>
</p>
<h2 id="circled-numbers" class="article-heading">circled numbers 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#circled-numbers">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>預設的 <code>\textcircled</code> 在數字上會有偏移，所以需要微調，或是使用 tikz (太進階先不提)。同樣利用 <code>\newcommand</code> 來簡化。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#6272a4">% before \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">}</span>[1]<span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\raisebox</span><span style="color:#8be9fd;font-style:italic">{</span>.5pt<span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\raisebox</span><span style="color:#8be9fd;font-style:italic">{</span>-0.9pt<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#8be9fd;font-style:italic">{</span>#1<span style="color:#8be9fd;font-style:italic">}}}}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% after \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>0<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>1<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>3<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>4<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>5<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>6<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>7<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>8<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\textcircled</span><span style="color:#8be9fd;font-style:italic">{</span>9<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\item</span> <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>0<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>1<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>2<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>3<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>4<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>5<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>6<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>7<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>8<span style="color:#8be9fd;font-style:italic">}</span>, <span style="color:#ff79c6">\Circle</span><span style="color:#8be9fd;font-style:italic">{</span>9<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>itemize<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWnhsIytg5ye7jsaYP3fAjKo92JZhM9Fivt387K4sJyXffLYEDGXZenLb_cWcGyYampt9X0KcY52G5pa6uwc9F3FlkSYNrTaK7SBbql3rqwwb-IfXeroOxu9lY9mv9i20VYrYF7OMmwMIGNYWAlgjMufg=w655-h155-no?authuser=1" alt='circled numbers' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">circled numbers</center>
    </figcaption>
  </figure>
</p>
<h2 id="build-time" class="article-heading">build time 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#build-time">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>適合放在文件或是履歷上來標註最後編輯時間。要注意 xelatex 沒有此功能，所以若是要有中文並且有時間的話需要改用 lualatex，pdflatex 是有此功能所以放心。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#6272a4">% before \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\usepackage</span><span style="color:#50fa7b">[calc,useregional]</span><span style="color:#8be9fd;font-style:italic">{</span>datetime2<span style="color:#8be9fd;font-style:italic">}</span> <span style="color:#6272a4">% currenttime
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">% Timezone https://tex.stackexchange.com/a/634977
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\DTMtznow</span><span style="color:#8be9fd;font-style:italic">}</span>[2]<span style="color:#8be9fd;font-style:italic">{</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DTMsavenow</span><span style="color:#8be9fd;font-style:italic">{</span>now<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DTMtozulu</span><span style="color:#8be9fd;font-style:italic">{</span>now<span style="color:#8be9fd;font-style:italic">}{</span>currzulu<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DTMsaveaszulutime</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\DTMfetchyear</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchmonth</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchday</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchhour</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchminute</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchsecond</span><span style="color:#8be9fd;font-style:italic">{</span>currzulu<span style="color:#8be9fd;font-style:italic">}}{</span>#2<span style="color:#8be9fd;font-style:italic">}{</span>00<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\DTMdisplay</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\DTMfetchyear</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchmonth</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchday</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{}{</span><span style="color:#ff79c6">\DTMfetchhour</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchminute</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{</span><span style="color:#ff79c6">\DTMfetchsecond</span><span style="color:#8be9fd;font-style:italic">{</span>currtaipei<span style="color:#8be9fd;font-style:italic">}}{</span>#1<span style="color:#8be9fd;font-style:italic">}{</span>00<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#6272a4">%
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\newcommand</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\DTMtaipeinow</span><span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#ff79c6">\DTMtznow</span><span style="color:#8be9fd;font-style:italic">{</span>+08<span style="color:#8be9fd;font-style:italic">}{</span>-08<span style="color:#8be9fd;font-style:italic">}}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">% after \begin{document}
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">\hfill</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#ff79c6">\color</span><span style="color:#8be9fd;font-style:italic">{</span>gray<span style="color:#8be9fd;font-style:italic">}</span><span style="color:#ff79c6">\footnotesize</span> Last modified: <span style="color:#ff79c6">\DTMtaipeinow</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXGebkrqgm8ODeFsx8nV1TtISVjpeOk_AssklghlXaVj-zeU0ZtUGLJ-0pj5SPWPFEK3pHTa4Y8lJxloXkcYeU4Z1Wt6wfpkgfG2oS9TkVVJTYs3YN09GYGJPo0fmQDyH5YKiuTIb6eeTxbM0Vy-eUIDA=w1142-h204-no?authuser=1" alt='build time' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">build time</center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>港寮枝大會師</title><link>https://aben20807.github.io/posts/20220912-camping-at-kang-liao-chih-179/</link><pubDate>Mon, 12 Sep 2022 12:45:08 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220912-camping-at-kang-liao-chih-179/</guid><description><![CDATA[
          <p>年初時國中同學們約了中秋露營，地點在<a href="http://www.camping-179.com/" title="港寮枝179" aria-label="港寮枝179"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 港寮枝179</a>。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220912-camping-at-kang-liao-chih-179/"><img src="https://lh3.googleusercontent.com/pw/AL9nZEVEsmpuqn9KXJF_4o0-jOt0Q8wwb1UzXKsF29wI34wllaX8VBqXDDGfweEgUt20fsoDQ21xd39NOa_xdhmQvm0U6LG-wqiOR0h3gQp3QvNzT1NDYGyqvW_8-l9UPsYuf59-B0lKcNLnu_pllp30XL4YDQ=w1620-h1080-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220912-camping-at-kang-liao-chih-179/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>年初時國中同學們約了中秋露營，地點在<a href="http://www.camping-179.com/" title="港寮枝179" aria-label="港寮枝179"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 港寮枝179</a>。</p>
<p><mark>本文圖片皆已壓縮過</mark></p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>上工回程路上，剛好3000型自強已經售罄，只好坐在月台再等一小時。</p>
<p>回想這三天也不是特別累，只是太陽大時很熱無遮蔭，晚上到凌晨濕度極高，連非金屬的背包放著也結滿露水。第一晚的高山症也讓我不太好過，但算是順利愉快的過完中秋假期。</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUBZHG48RyW5LXhrVsnKgCZK7ySoSrYxW7QmjURKAf_jHqh7nTy9J50y15zzd4TFNMGhgvNsriL_SSDYvIVwyFyt23wLvCVNadeJCQiAc0T0faEWHArzhqpg54dXDi2ICwkuBOzqUApywM-TPN8dGjPeQ=w2559-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div></div>
<h1 id="露營" class="article-heading">露營 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9c%b2%e7%87%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這個露營很早就大致敲定，幾乎從過年後就陸續準備，本人分屬食材組，原先以為是最輕鬆的，但也是要想的很細節，感謝組內有大神幾乎包辦所有事情。</p>
<p>當天出發最鳥的莫過於租來的車鑰匙拔不出來，看著大家頂著太陽留著汗跑來跑去，我只能跟著冰桶等著東西冰進去。</p>
<p>有人帶兩個超厚睡墊差點載不下的事就不再細說，只是駕駛 (塞行李的不是駕駛) 可能也預期會看不到後照鏡所以想當淡定。</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEX6ztnaMwLbjcLSd2sQOb_MZm8ds8Jv3-iVapKERmGTdlX8Rbvh2X_uzgfH1hOvcbttJyHQyGIndisbu-HQreK-yBEAaZjMqnOHyR01SixKEZTjNZXXsGolCFEV9G94DwR8v292Ng0IXU3MhLQ0oFORuQ=w2559-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div></div>
<p>午餐在中興新村解決，不走國道的下場就是大家被導航導到超難走的產業道路，一路上驚險萬分，好險對向幾乎無來車，體會前無古人後無來者之感。根據不同車描述似乎都各自認定自己走了最難走的路。</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWmSvUMFjxqSplWgo-f8uFizIYl7OWI0raoRuLXgF46D6E6aqFFdvxDFpZAeA_MeMBc_Vtsj79eAjVeVFQYhxsG9jvI1iW2R8q8SWnt_Q794U0Or85A_c7RMyXGA8Mc6ZA5cQa4REw4x2d8TfpJJdxIrg=w1620-h1080-no?authuser=1" alt='順利活著抵達' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">順利活著抵達</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVfdDEv6e_pjrDHmujYzH3SotFiaX0I0-JIKgW3hCGRt476VTZBI5Oi8rBjQO0XB51jAtr5T4J1dKxnhjEZ2lR6X1cweIU6ZX7ddrsfVdLYnK3-llBpB5rAs_e8_S-SAo0VhepZf_Qn1iGmeIQUyK2k_w=w2559-h1918-no?authuser=1" alt='犀牛牌' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">犀牛牌</center>
    </figcaption>
  </figure>
</p>
</div></div>
<p>第一天下午活動復刻國中當年相片，有相機還是會被抓去拍照，為了增加直出率以及拍攝速度，以及光線過強，我改用 A 光圈先決這樣就不用調整快門，但後來側拍發現全用 M 好像也不會有問題，因此後來幾乎都是我全手動調整。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVixawFq4G3nMfgdE1m7cwCiYCdy96vIjf1d9xuTFUY0IDjQFCbA03Tg5G2WdoBe9IGrpXvK12klYDz4sl5Ryq4BaEJ0gYGRxIMUwGpOt1R1o64YflQsMIGhvr-z4yhHxryZL2cCe5IdTo7fhTjqY6IGQ=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>第一二天晚餐第二三天早餐都有烤肉，童軍大師時間一到就到就熟練的升起炭火，食材夾起夾下，稍沒控制就酥脆發黑，多烤幾次就漸漸沒發生。</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXx8ZXL0O0Kxy9K2y-F0vp6VTYBDFqU7uHJ6uNDBcpQF01Lx5kPrW__Qk3tZ4DCWycaO8vHutDiMHN8WYdnNKbdFo_Qa4mmAWr-dQWmphvDHmbvTDqGdFmoVnmWkUGTWQjsX6QCfsREImX5vG-gwAWw_g=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUaz5oB9h8qOmwTuB1EfaZq8S1PU9XkaXXUkUuZGFMDi-8pFmhHidGyekBiXz1j5_qMoW3wgxv7hESCN-b8PrBf92HsXMiu77SvC9wZrkqSgp7LwzfyZNLssKEMaYo-kNk4i3j1he1jyN89bd6kO-RKHg=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div></div>
<p>夜景如我預期沒有到驚豔，主要是霧氣太濃或是平地烤肉的廢氣蒸騰，遮擋許多視線，但腳架帶著也不壞，至少寧願沒有也不要拍不了。</p>
<p>人生活到這個歲數，最熟悉的可能還是這群打鬧習慣的國中同學，偶爾露營讓大家都有事做好像也是個不錯的選擇。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWBzuHpD4QUHsXRfOlZcazvXbKg3yxnO4q-n0FXI20ExXP1KqCyF-A7ZmR2mAGnDQPHpgdeT7vQYyrxo_G3m1lM2LefaT6uRd7_hrkrq75T4pYMjmoo2S6zpYaQpihautDTLy45t3rCzo0DEqoWVN7d-Q=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVEsmpuqn9KXJF_4o0-jOt0Q8wwb1UzXKsF29wI34wllaX8VBqXDDGfweEgUt20fsoDQ21xd39NOa_xdhmQvm0U6LG-wqiOR0h3gQp3QvNzT1NDYGyqvW_8-l9UPsYuf59-B0lKcNLnu_pllp30XL4YDQ=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="雜圖" class="article-heading">雜圖 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%9c%e5%9c%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXGRXQzpwUlM1aCzeqSsax0ZGwg2JBF2jKp5A6OmLRCbMSY8Yj-qDajlAYAm_K8HVfyR3aSS1QQcEt-XVVOlCMC_L8Sb2VLg85RyhETa8D71b5YG1RAonyxkzxkOWq9m7dB6wmSoGHjUMtUSMOCWK72MQ=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWsnfZ73k8jeyfng7dllJCiT_YK2llL5_s4hWpM5lSi4gL2YADy8boUkI8XO9AnaTOW8TNXRB5Jy5XKBalf1e650Vb7aNHqGJKGqLyxpoAjU1Pd9In1QIJVlA3g_KazLXayiRK4qQaTu_u-GIMCqLbmfw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEX78CwNObEo_jF3IGTUyImgFb8cKEvGFV8HbfiU46rmrXC0etYc51H0asIgxNcXsFbCTlPGeddhJBtpS79ow8mV05pE6lTSX7HefACS1BNPUk744D09YLMC-eZVNoFd3F5iFQs68PUgL4VOv7_U8QsVGw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW75HA8jLx5hfknIk7GOCDTOHhKGXPmnHpYruQMePLFiQQ5dDunvkkUaNNZs6oy82o5DKno6ab6TrEPg2BgOtCVyQadCR7O99KeLs_QYyRa-vwEJ_8SPPN6uX7XoN9q3I8KotuSFdiTp83D9GiwbNTv9w=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVh6KttV_o8TMj5lcjpwMa4zpIZxyINx3Tg4tL0Zyw_f6Z-e6fe8dWilAtexIwI1F1mdrvNoHb11u2DI0yBOOEy5QQ4-DfcuFIYmadbBI85w549NDW7kBkJlsMpE6ojjQpBXLSmuC7VcQKGlTzxkVk9kg=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWdt2R5XF3pdw79zL35YG4aM_frYpVLhkMDz9rAyfS9oNtTFawaOTDWWogqJDr8vrNmwxerK7ZN-KYulooS5R9vIlK7_psJ7cYwhU2VN512Wn2YFoecOh4Kc29IPX8HBYbqBGm5gRxeNkSfEeE6xVwHsQ=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVugQpG9XwkaAfUV6CC0m23AFrqoYDwQ4ms1uKYwB-1mm2lejAkq8cHAKISCKjMAjTXmqGWJ1ReiE_zAtVizC1aTrFE150RkmZ11YIAbE3S6dlijpX-weacwHHkj-B7ttHOwjY6xyfELVTjoQnUkFhE_Q=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXg_UReqrGxHbbZQXSkS-9-ctSod6xqbeJOW8EaU96Dhsnce7wjFsW7X1-pKCT2SkP9cO2KTZ2wRF5yLmHndk7Vl1p_e_nVpmNUPV5Sq4scTmrBsYYHWKCjVixb26aPhBAxojsCLthp04OdRTWLVdMEjw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW1M6H1ju4t6NV998T45h3KfPo1KgO2nG9q8TuTvcSsglzvdsl70iv5bT4Td7_P0xp6gG663OsvJcOyx2zCcRwApZp86YYSN8_p0mPSXI_j__6nkI_1svmL6mWFpKWjMa1Rk06kGFc5FMOKmG2TxIyRxw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVah829CGE_GswCd2qq8PUMRmZjPdt7Gei54JBNRUnyV9Uxohk7tkANSg8lYnXOxYHwiBXTKVatLAVOQVl7hVxOtzs-3YPK39jX4Ph68BucVKSq9ReXenUVTuqlRg8KngLbI4Bt-w-hQfdSe-MlRqoaOw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUJdFkzuvXpWvFQYY8iRrVFrcd8W646wHHhENLty8vBQ3HhadRzECkjGlIkNt1ARe4clbBRs5RGZpohNOSa5LU8UTyoOscSGFEQ9CqYFADKigGoc4lIzsISO7rja-VgGHvsZNXNhIw-OeUqrkCIBNDBtw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVl3KujOxImmxMVbcIabwoMh0qrqXoqErjxSHEUTuBv9UJ6-ZjV0Y-AB6uePFOiPkOBXgM8fcUZgVtH2jBOzbmO78EvLaiHF0jnBCPnL40kuw6a04PK92KYgYgPWSE97b8P3AFLoJemRBfb0YSUVTHiWw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEU4gY2emgxldz-6x96a6dzRihmxuJDYMTd9IYxHjP4R-rCPKEQw5aC_S_l6vNk51QG1j4EjRH6V8eAVM-M7t8zxMEVfm_PN_B1vdkEy7wItBZWzd-s2MIUWiSbosCfSbeTkq4UgESuM1qXnsa-BjUdtLg=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUygsYDbDm7tul8-Oaboe2wkuTcaEsaZtPrQ5CZMM5MOlPHlPvHBh_Y5E_eXy6X0YKdLQs3O_lKAMG88DVfhZshC_EVhLceiOCDwRVeIOzdIIpscSY7srJX3TsKoFM9I5ryfnrOKah138skJrh4n8swoA=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXDVjb6cSmP1l8bPy6orroKcwAyqx2AXDHmQZs4MkWe-E8pxdSVDb_hYD-m1onlAFVCYCb63ylCxNLHrHp64A6ca-I1D_HVYLQEEc6lmI95EIwKQRYBxprx7b3gBnzkZ9e1OVNa4u0Vgr79thv1nj_vvw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVTs4ESnUfSBVKky4AcyNM3M10qhi8imWxCjHI92Pqx-d04Npd2UHb_RJ5IqKAkTmzHA8Z60KqisITtEfIr-RO496CtRnDhzwdhtYEUg_G4xNfpRe8XBIx358rlBK2FBb20ACaGp-VPIkrsFymg35NbSw=w1620-h1080-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div></div>
<p>在員林站說要買自強到員林，可能真的有累。</p>
        ]]></description></item><item><title>RTCSA 2022</title><link>https://aben20807.github.io/posts/20220825-rtcsa2022/</link><pubDate>Thu, 25 Aug 2022 19:42:59 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220825-rtcsa2022/</guid><description><![CDATA[
          <p>參加實體學術研討會 2022.8.23 ~ 24 RTCSA (與 NVMSA 合辦)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220825-rtcsa2022/"><img src="https://lh3.googleusercontent.com/pw/AL9nZEXO1xQLZ4p-GpmOqUAsSsN59OuXqW1PXX_UDnzLqaILmJEWi_tWEyA45Izl7ZhANsom-nwoqo8dHz6WHa8dHdCfvitpqNDWWM1evARW6xUmj7v3wKIamtCY_6QnrTXmma-G6VXCyIpSKiNc_kshv4zJ6Q=w1255-h941-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220825-rtcsa2022/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>參加實體學術研討會 2022.8.23 ~ 24 RTCSA (與 NVMSA 合辦)。</p>
<h1 id="特別感謝" class="article-heading">特別感謝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%89%b9%e5%88%a5%e6%84%9f%e8%ac%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>首先感謝可愛女友幫忙訂房間以及去程高鐵票 (我好廢@@)</p>
<p>原先以為報名不包含晚宴，結果登場才被告知兩天午餐及迎賓晚宴都有含在報名費中。<br>
所以原先跟高中同學侑霖約晚餐就臨時取消，感到相當抱歉，一度以為被刪好友 (x</p>
<h1 id="流水帳" class="article-heading">流水帳 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b5%81%e6%b0%b4%e5%b8%b3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>人生第一次參加實體國際研討會 (之前是線上)</p>
<p>一大早四點多就起床搭 5:30 出發到沙崙的區間車</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVY1v0r_U22-zNck0C417q7ItMx9YW0l7G7qEveluQ_7ikythXG_LXLsjI-asIlB9T3g1TukJ8w7WEFhpyT17n13xY6WLaCaKpbwDAkwGsoaYW2_w38uloTs761AtFg0WvWnhVt-6of3vZLsPlgmu_vjQ=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>到沙崙後轉成高鐵</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXKeSjie89SuuOYGUVdmQfOtbjHTFbdxl9p4oKUcfe2RU6GVXXF50kKLJzbnbd0Fh9fb3yETqyCWh-GUyzGr9Dt4iroE42laKoEidDi9bLzBsRd1rnmH1lCAka_tgMmdZ_GOmtKjALLSEzUV0dsEZN0uQ=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>從捷運站走很久才到資工系館</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVMWIXsnb-gppsaJCdVxEzSPVhZn-jTFsbObbKcYE3PleQP55T-nquPu-Bl2RAzK-bNdV_gKSm-h8Wxj2KDEfXaN3rQuHGBRm14NgxMesD1w0ZKR2PkORmN_Su1nP3tvgPOTdXjhECJU2574XWPAIiaWg=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>沒發論文，純粹被老闆找來，順便認識台大洪老師及實驗室同學</p>
<p>第一場 keynote 結束後就看到文盛學長<br>
感謝他這兩天擔任校內地陪</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEU9bTHmPgMpxLy9gcsqcOhvVzsqZLfYZTA1OWZ_iTQGuXEq948iW2F409MC8kv0FbIup0EDD2DFiosecH9ON64kemHJfQVDS1ct1AS-3jt09j0DN8ty5sizYliB5kkyU85kOsCSE_IaVbyP9o-5iL0u-g=w706-h941-no?authuser=1" alt='午餐、晚宴、中午宴參加券' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">午餐、晚宴、中午宴參加券</center>
    </figcaption>
  </figure>
</p>
<p>中餐到文盛學長實驗室坐坐，個人座位都比較小@@</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEX4Hy4wyS6nMLFIW14HUFsnOwA_DBtJR6IF2rB2pyPGtFdlSDnZPS4wJop8YipiSUWrKn6Dgz8gnAYlIh5d_vorBLMI9meklSGQxDm9hj335iJemF0m873M1f3B1ord_U7HvtyNu7fWKp0LUQnY-4R_Cg=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>晚宴很有趣，與一位來自捷克的外國人 Michal 鄰座，與文盛及一位同學 (我忘記名字@@) 在推廣台灣食物 (例如勉強擠出幾個字來描述酥皮濃湯) 以及介紹各自研究領域</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEV_wtjiBEgZcWxdBQfBUwz0CQ5BSEh0xjWDzLAbW-NXVkcihxEI3aZeZjSK1XVE1YARKrVzdi_f4fdy0nI2IUvEsoxHeCrvCtEfBw4rDhDIBmXOr7v3N1Nvb8nSHWTAhhNf5f8Zm9KFB6dlTNjI_ThEdw=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVt4HDmFip-MuqN_yB5xWNyNNQwJWCFEwq7vjngxXzFlPQV_gl9v24YbiA1q0I16S711BM95WX3V_x0gMYankAC18c64up_w9BASmeOi5S0n3dfzMhxc1E80VFMDhWVMwaBkVhQo_3Cmb4t7sYiRkRemg=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>晚上住谷墨商旅，走超久@@，一個大安森林的長度</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW4a7Zhd63h2gYc0nEqNnUMzNyRZmroTrCxBbEQDMUSuO0_tcpQM5pTn7yDVtf71J7JkhwGt1BXb8lDhPSPoEm-Qyfw8UM32tzvoQ-9tpx0yMqopMPOxc9U_1-Dp23LYEK0w2XoU6iKrEI-xrF8UnpgpQ=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>星期三下午我到洪老師實驗室參加只有學生的會議</p>
<p>回程前突遇大雨，先進全家吃的飯糰墊胃，下班時段的捷運站相當多人</p>
<p>高鐵回到臺南，熟悉的少少人火車站，有種強烈大對比</p>
<p>頓時覺得從壓迫的人群中解脫</p>
<p>這兩天也幾乎都把全部行囊背在身上，肩膀頗為痠痛</p>
<p>稍作休息，繼續做事</p>
<h1 id="帶著-z6ii-到處拍" class="article-heading">帶著 Z6ii 到處拍 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b8%b6%e8%91%97-z6ii-%e5%88%b0%e8%99%95%e6%8b%8d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>結果還是沒人發現我有相機 OuO</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXrkaQ5EarYQ2_1Hg9HV-FD9SuPsEmP0H03agPcIJQH0i38S4-89FUXoLmEKRunUeweOprnpNR28l9oEWd3mnQTZ-8NGvM68jEG7v8rQiKoa5qi-TNZGx9Ktdnac6SmfgH46BGUC5K1fKj2KhY6P_ymZg=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEX4xp05mXj0A04flzZxdveteiCM9v86ZTsGLUiSMsm8E0Zu71r9HXJwOO29AjSKd9Qp4_bw3vgkndtcSbI-TZQDYMZ5SpOGAuMyK1Pe16nGe3bm8dkBgcN4Vf1wQAZOV6679Z9DH5YUq9ninrNQKpTEvQ=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXsBi9g2cUudKwzhyuyaNnPqt8oQX0sgnoFBDPvgky303O72OQR98NJPHJcqw1Zwa_3xdEicdnf2awWu4zHpagxT5u9nilT1uEe_z3HpkXYLe1tA_yvwrfO0QcjA6KNTKhlRmX3_oCII6jKnBI_Kj5NvA=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWg0D67XV6fRD_RlUZAneGgLRmY3JuGeLLlQAv61-ysx99eO5-TeafzsllMRhnNa33TUJEr7KE3opm_x11NMCfHPUJOLbSJBpqd57R5ia8A6h9IvNOsaCh5GLkwvLsg5eg6OCFLB_VsOoov-t8jp4vP_g=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXOtWvj3RCpZl1vwkARPT2ICNFYREQ3B9ZvUG4T61Dem2wTbuXgchVnxpIIQhaJ2Lc8whkc81WeTuQmL9xSRoFkolyaCjE38CYTRlbbg9TjAfar7oMq7rdrGDPx1suR7X53FN73Bc3mCLXPuTHrQ1GiLQ=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUINU_UiMyaY9SemWbKn07kwjz9QJGXEyaagQnfn2bsqA-_ovJ2iLfet9lCP9a3ROgQIbor71wKQ4bc_QWEHB0l7ijA8Z5dievfZSd8yKMELsIUr-jBYG5mOQ83DOhpm2Em8q1XW9wjoQvjYEEXWzKEtg=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEV-atgEzh34g650ifm9b51hw8hFuy1gboL4Y6bnOvfZxnmfAnTCZGFO9dEipLF7Bn6EmEIl-NYvBMhWB860q-BhHNEDsa6M4PwJoNiradfdDuX7DGlwCjeUgoclo-mfVG5t6Pk3attzWs4wDKlBPPO0xg=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWE5Qk_-AYmGGCLPgTd-Ulp1oNuJoWPTTTk6Tdv7vnHP86JHCbxhZsE6UDyPV9aEzzeykqokSQejSTs0pR8HZyzVvsUWzZqqp1U8Mvhn9gqLscgBljcf0w19bpKifSqT6uUfRE9TRzzjZXSFvehFU9kXA=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWcJVB9OZSgvaOo-XqVlr4TXElGkgWoZq9YcB73oNPoSTlCqST8DF8gKD9Aref5ALGteFsKtdfRbycUQ8N0hUzUg1eAwtRlFPtSj2-r3_NywXPVgl-i8GdScX_K1Jg7SYL03rLgDKJEY7CTX4he3LtKng=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUgk3RrAg3GfvVt7dEOQvBjegVp2EyngfpOSWzXUZPWCZt4hbME42xdrOQn1uP52jFD-JG-iWGwNtvGNsWcqL5zCkV0-yGsJR2Mbp1MYg7KbZPN0mbb0On5JuwMC_MDgfw2KDGZod5CYbbVKufxmhq_9A=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW01oezzGcX6JA3ieqhts8xp1NcNgR9L99GeQJy15vsO2t78Hqb1P0dj_tK11uX6q9U9W4stGsVMjCrTP1KCx35aHDJcvRn6Nzk7OokXh48Dskn5T8TjU6GFnXIhpdl2L1Pk1vloK7Z0jzWrABlCfm8xA=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWSiYfp-iLG49sm-pUDx4x9OohlXbxTWiqry1teTL7W2VM68pWp3Bj8cdKmWgXQSHQxh-Utdy5XWiV7w8f9Q_ZwfJRTH35pPytNLeNGf_4YGuc4-hCeZCVs6GEZV92cNP4e5bTGyf-0ziaCMTT4ILgmSw=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUJGIJmMrSglV41rDT5HroyMMcbWCebWUaHRO4JYCvHumOk_NbThRreIpV5Hl6-_WdODIzUQ1rh-dPU-Xiq6yPqmXnTty51HakWqfGp7E-byO303VHE8Tvbbafi7UHT47LYXI5nxedokXNZdYZKP2ulOQ=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEUgvCeSSAZP3fVPUMgNbYNV718xwcnGBI4MpX-zKpI6RDF9PAopcwfA02jproz4WFOhCvxtSVPrKDuKYcR8StIwUy8GDfLlWm9spds-c0Y-kQgduX8E0BnvS5LL1XoM9TutZ_zkECFLOSgBdj2QR31MFA=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW8tyRkLggcV4DnCNyQkIlEv_0ew9vgpNsJkp2FabxNzLbop6dJEF4x_GZnxITIb9zQKWKf7mpSc2ZRIVbNV-4Cb_ex36vvjcr-v8_M4o61pWv0iZgU9hDcYXzltpplfn1qugh3bS-_Ndv8uD5NpclWoQ=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEW3zwRP9rxZdXjnbcHyPxDra1tee-pDxqZNlVWrsDV0LH9KJ-zjGKFTXBNdw68Na1rLpduUHuCGC_hIvHHjgRvYQo7GEUSg4OVSaaupBPJlmzriai_gD-Ge-fElSOyrI_SgCfaOgr7EIwewIE_2Gm7Wkw=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEWULHewi7cCb7SJJ9hQoEDUS2-p6YTWYcIUyMHW9NBDdqckxEqNjRoWhc7IXb5Hm4xOGJ_Amuh7ChJOb0SkIyB1BSNMKAPblChQ4CXoOdwg01XI8GBD9-NvAL1QD6_YQwknQU8q5-QI1Of4mU25SUooXQ=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div><div>
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEVBCwnXOyV9-vYzKt0DaZoHlXblxBWhgdDk9DLPXTBmrKFKOnI8fjEbwmixin10inEnAv0tj7GBqmqMXecTACTEeR8UhFvYZ0kL2V2u8TTgyfrJZx_QO9N8stiCbfQ19t1fn-f-RWfb7qLRKGnU_cc1kA=w1412-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</div></div>
        ]]></description></item><item><title>Weekly Collection</title><link>https://aben20807.github.io/posts/20220729-weekly-collection/</link><pubDate>Sun, 31 Jul 2022 17:55:16 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220729-weekly-collection/</guid><description><![CDATA[
          <p>怎麼越來越多雞湯類&hellip;</p>
          
            <p><a href="https://aben20807.github.io/posts/20220729-weekly-collection/"><img src="https://images.unsplash.com/photo-1654071976078-b3906c59719f?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220729-weekly-collection/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>怎麼越來越多雞湯類&hellip;</p>
<h1 id="emoji-kitchen" class="article-heading">Emoji Kitchen 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#emoji-kitchen">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Link: <a href="https://emoji.supply/kitchen/" title="https://emoji.supply/kitchen/" aria-label="https://emoji.supply/kitchen/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://emoji.supply/kitchen/</a><br>
DHN: <a href="https://news.ycombinator.com/item?id=32232546" title="https://news.ycombinator.com/item?id=32232546" aria-label="https://news.ycombinator.com/item?id=32232546"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://news.ycombinator.com/item?id=32232546</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVqfjAlzf3sgxnrL39bCLicUzO9kMqZfgZx9zskLl4jODZmqafelZtst1ndWm6J-kXjhwkkokNWUOMKYXeIsEmj9Mda-cCyYw0OtxYayOqBvHI5hUPxLEU-d_Glsmzy72JsPsIk8IkmSoY3dOH0Qw6p9w=w2021-h1010-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="you-should-take-more-screenshots" class="article-heading">You should take more screenshots 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#you-should-take-more-screenshots">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Link: <a href="https://alexwlchan.net/2022/07/screenshots/" title="https://alexwlchan.net/2022/07/screenshots/" aria-label="https://alexwlchan.net/2022/07/screenshots/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://alexwlchan.net/2022/07/screenshots/</a></p>
<p>雖然我不是數位創作工作者，不過我也存了一堆截圖不敢刪除，目前量太多是沒有重看的打算 (反而變成垃圾@@)</p>
<h1 id="減少學術造假" class="article-heading">減少學術造假 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%9b%e5%b0%91%e5%ad%b8%e8%a1%93%e9%80%a0%e5%81%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>來源: <a href="https://www.facebook.com/100000515503337/posts/pfbid0mjvmaTfUFbaJbJ51TELq7R4PgdQUJ1uwu4wK7hWcLnXHUitfnhbF4xfobexZxrxHl/?app=fbl" title="HungYin Tsai (FB)" aria-label="HungYin Tsai (FB)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> HungYin Tsai (FB)</a></p>
<p>發文者建議讓失敗的研究也能夠被發布，這是蠻有趣的觀點。不過以人性來講應該不太可能達到。</p>
<h1 id="創意是一種減法" class="article-heading">創意是一種減法 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%b5%e6%84%8f%e6%98%af%e4%b8%80%e7%a8%ae%e6%b8%9b%e6%b3%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>來源: <a href="https://www.facebook.com/100063894513009/posts/pfbid0rE4prT5jTwaeUczp4b9sZitFdj6AKsnQUSvnjvXbBX6ZvvTf4L4LcmztCs8ogyGVl/?app=fbl" title="閱讀前哨站 (FB)" aria-label="閱讀前哨站 (FB)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 閱讀前哨站 (FB)</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXN5HVYcWUZVxoFGgODqa0TJYkPvKKx14M0Kjf6MQYEpXbtv-4GcNhkVetDHSsRT9RTID_U88oDENacUxuj7QFwUCsGC5bT6OXS9YR0r9Y1_2ycbT3FQQ-Ylqg6c4004NgGCClIiEZhd-nbgGCnP00D8g=w1155-h1011-no?authuser=1" alt='來源:  閱讀前哨站 (FB)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  閱讀前哨站 (FB)</center>
    </figcaption>
  </figure>
</p>
<h1 id="我究竟是誰" class="article-heading">「我究竟是誰？」 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%91%e7%a9%b6%e7%ab%9f%e6%98%af%e8%aa%b0">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Link: <a href="https://www.inside.com.tw/article/28395-career-and-hard-working" title="【Daniel 職場觀察】我們都弄反了！人生不是靠得到勳章實現自我" aria-label="【Daniel 職場觀察】我們都弄反了！人生不是靠得到勳章實現自我"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 【Daniel 職場觀察】我們都弄反了！人生不是靠得到勳章實現自我</a></p>
<blockquote>
<p>努力並不會讓你變卓越，只會讓你愈做愈累。</p>
</blockquote>
<blockquote>
<p>「我究竟是誰？」<br>
「我到底想做什麼？」<br>
「我真正在乎的是什麼？」</p>
</blockquote>
<h1 id="沉澱" class="article-heading">沉澱? 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b2%89%e6%be%b1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>來源: <a href="https://www.facebook.com/1509897011/posts/pfbid03Tj3phQPzmpaRWaBtFDdTJwjPp9sYqWwtwSmp5PXVMDzCqWKxxcfxTEhSENxSABCl/?app=fbl" title="Chia-Yen Lee (FB)" aria-label="Chia-Yen Lee (FB)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Chia-Yen Lee (FB)</a></p>
<p>相關連結: <a href="https://www.managertoday.com.tw/books/view/56351" title="對人生感到迷惘，不知道自己適合做什麼？用 Ikigai，4 步驟找回你的價值" aria-label="對人生感到迷惘，不知道自己適合做什麼？用 Ikigai，4 步驟找回你的價值"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 對人生感到迷惘，不知道自己適合做什麼？用 Ikigai，4 步驟找回你的價值</a></p>
<blockquote>
<p>在「沉澱」之後，還是勇敢地踏出步伐，<br>
挑戰自己的同時，持續關懷這塊土地吧。</p>
</blockquote>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AL9nZEXcbFeNGBIoy18n_r7iyssXJM99yuBm5gWjRFJFPpt3onj83DyvS1aVOH3MBSAMsWCT745gmf5jTrbV3CBfkQybgTOLbsYU4RU_R9HACLUMu_of2Z6MoycHlH9_oGCqGZxamtuwW80q-PuXbqEyNku6Mg=w900-h879-no?authuser=1" alt='來源:  對人生感到迷惘，不知道自己適合做什麼？用 Ikigai，4 步驟找回你的價值' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  對人生感到迷惘，不知道自己適合做什麼？用 Ikigai，4 步驟找回你的價值</center>
    </figcaption>
  </figure>
</p>
<h1 id="如果沒有奇蹟科學人紙本雜誌年底停刊" class="article-heading">如果沒有奇蹟，《科學人》紙本雜誌年底停刊 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e6%9e%9c%e6%b2%92%e6%9c%89%e5%a5%87%e8%b9%9f%e7%a7%91%e5%ad%b8%e4%ba%ba%e7%b4%99%e6%9c%ac%e9%9b%9c%e8%aa%8c%e5%b9%b4%e5%ba%95%e5%81%9c%e5%88%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Link: <a href="https://sa.ylib.com/MagArticle.aspx?id=5429" title="https://sa.ylib.com/MagArticle.aspx?id=5429" aria-label="https://sa.ylib.com/MagArticle.aspx?id=5429"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://sa.ylib.com/MagArticle.aspx?id=5429</a></p>
<p>國中時期的回憶，是不是要買個幾本傳家，好多<a href="https://www.ylib.com/activity/202208SA/page.asp?bookType=4#A1" title="量子相關主題" aria-label="量子相關主題"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 量子相關主題</a>@@</p>
<h1 id="非近期" class="article-heading">非近期 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9d%9e%e8%bf%91%e6%9c%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="葉丙成人不卡不成器" class="article-heading">葉丙成：人不卡，不成器 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%91%89%e4%b8%99%e6%88%90%e4%ba%ba%e4%b8%8d%e5%8d%a1%e4%b8%8d%e6%88%90%e5%99%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Link: <a href="https://www.parenting.com.tw/article/5068888?utm_source=Parenting.FB&amp;utm_medium=social&amp;utm_campaign=cp-f1-5068888-220720" title="台大教授 - 葉丙成 (親子天下雜誌73期 2015-11-01出刊)" aria-label="台大教授 - 葉丙成 (親子天下雜誌73期 2015-11-01出刊)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 台大教授 - 葉丙成 (親子天下雜誌73期 2015-11-01出刊)</a></p>
<blockquote>
<p>職場上要判斷是不是人才，看的是能否解決難題。難題之所以難，是因前人沒碰過，要靠破格的思考和不被失敗打垮的韌性來解決。</p>
</blockquote>
        ]]></description></item><item><title>Hugo Easy Gallery Shortcode</title><link>https://aben20807.github.io/posts/20220728-hugo-easy-gallery-shortcode/</link><pubDate>Thu, 28 Jul 2022 11:00:03 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220728-hugo-easy-gallery-shortcode/</guid><description><![CDATA[
          <p>The existing work force the users using the image folder in the site or shortcodes to add the link to the image while I just want to use the markdown language to add images. Therefore, I write this post and create a demo site to show how I make it work.</p>
          
            <p><a href="https://aben20807.github.io/posts/20220728-hugo-easy-gallery-shortcode/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVuAFvd9mCVx8QjhGszrA9IfwMW7SK_Vo9RXhuXb4K4mnuTOvpuIsQWkd4cDTmy75YJFDIYt9RoEj12DV4J112pCug05eU2GH3hmmvl37ad2-Fic1BShPNfJqGzP5I_4AS-thpaJjryvj-5yYrfzpmwyg=w2022-h1137-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220728-hugo-easy-gallery-shortcode/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>The existing work force the users using the image folder in the site or shortcodes to add the link to the image while I just want to use the markdown language to add images. Therefore, I write this post and create a demo site to show how I make it work.</p>
<h1 id="new-a-project" class="article-heading">New a project 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#new-a-project">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>We start from an empty project to make sure that it is able to be reproduced. Jump to section 3, if you just want to see the shortcode.</p>
<p>Ref: <a href="https://gohugo.io/getting-started/quick-start/" title="Hugo Quick Start" aria-label="Hugo Quick Start"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Hugo Quick Start</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ hugo new site gallery-demo
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> gallery-demo/ <span style="color:#6272a4"># all following bash commands are run at this directory</span>
</span></span><span style="display:flex;"><span>$ git init
</span></span><span style="display:flex;"><span>$ git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">echo</span> <span style="color:#8be9fd;font-style:italic">theme</span> <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">\&#34;</span>ananke<span style="color:#f1fa8c">\&#34;</span> &gt;&gt; config.toml
</span></span></code></pre></div><p>Remember to modify the default configurations by editing <code>config.toml</code> if you want to publish your site. For example the content of the demo site:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-toml" data-lang="toml"><span style="display:flex;"><span>baseurl = <span style="color:#f1fa8c">&#39;https://aben20807.github.io/hugo-gallery-demo&#39;</span>
</span></span><span style="display:flex;"><span>languagecode = <span style="color:#f1fa8c">&#39;en-us&#39;</span>
</span></span><span style="display:flex;"><span>title = <span style="color:#f1fa8c">&#39;gallery demo&#39;</span>
</span></span><span style="display:flex;"><span>theme = <span style="color:#f1fa8c">&#34;ananke&#34;</span>
</span></span></code></pre></div><h1 id="setup-deployment-via-github-action" class="article-heading">Setup deployment via GitHub Action 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#setup-deployment-via-github-action">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Ref: <a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/#build-hugo-with-github-action" title="Build Hugo With GitHub Action" aria-label="Build Hugo With GitHub Action"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Build Hugo With GitHub Action</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir .github/workflows -p
</span></span><span style="display:flex;"><span>$ vim .github/workflows/gh-pages.yml
</span></span></code></pre></div> 

<details>
  <summary><span>Click to see detailed yml file </span></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#ff79c6">name</span>: github pages
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">on</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">push</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">branches</span>:
</span></span><span style="display:flex;"><span>      - master  <span style="color:#6272a4"># Set a branch to deploy</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">pull_request</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">jobs</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">deploy</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">runs-on</span>: ubuntu-20.04
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">steps</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">uses</span>: actions/checkout@v2
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">submodules</span>: <span style="color:#ff79c6">true</span>  <span style="color:#6272a4"># Fetch Hugo themes (true OR recursive)</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">fetch-depth</span>: <span style="color:#bd93f9">0</span>    <span style="color:#6272a4"># Fetch all history for .GitInfo and .Lastmod</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Setup Hugo
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">uses</span>: peaceiris/actions-hugo@v2
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">hugo-version</span>: <span style="color:#f1fa8c">&#39;0.98.0&#39;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#6272a4"># extended: true</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Build
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">run</span>: hugo --gc --minify --cleanDestinationDir
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Deploy
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">uses</span>: peaceiris/actions-gh-pages@v3
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span>: github.ref == &#39;refs/heads/master&#39;
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">github_token</span>: ${{ secrets.GITHUB_TOKEN }}
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">publish_dir</span>: ./public
</span></span></code></pre></div>
</details>
<h1 id="add-the-gallery-shorcode" class="article-heading">Add the gallery shorcode 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#add-the-gallery-shorcode">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="html" class="article-heading">html 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#html">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir layouts/shortcodes -p
</span></span><span style="display:flex;"><span>$ vim layouts/shortcodes/gallery.html
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>{{ $rowSize := index .Params 0 | default 2 }}
</span></span><span style="display:flex;"><span>{{- $images := split .Inner &#34;\n&#34; -}}
</span></span><span style="display:flex;"><span>&lt;<span style="color:#ff79c6">div</span> <span style="color:#50fa7b">class</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;gallery-wrapper&#34;</span> <span style="color:#50fa7b">style</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;grid-template-columns: repeat({{- $rowSize -}}, 1fr)&#34;</span>&gt;
</span></span><span style="display:flex;"><span>    {{- range $i, $img := $images -}}
</span></span><span style="display:flex;"><span>    {{- with $img -}}
</span></span><span style="display:flex;"><span>        &lt;<span style="color:#ff79c6">div</span> <span style="color:#50fa7b">class</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;img-wrapper&#34;</span>&gt;{{- $img | markdownify -}}&lt;/<span style="color:#ff79c6">div</span>&gt;
</span></span><span style="display:flex;"><span>    {{- end -}}
</span></span><span style="display:flex;"><span>    {{- end -}}
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#ff79c6">div</span>&gt;
</span></span></code></pre></div><h2 id="css" class="article-heading">css 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#css">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p><a href="https://github.com/theNewDynamic/gohugo-theme-ananke#custom-css" title="Custom CSS" aria-label="Custom CSS"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Custom CSS</a> may not work for your theme, and you can change to edit the theme&rsquo;s css or add <code>&lt;style&gt;...&lt;/style&gt;</code> in <code>layouts/shortcodes/gallery.html</code> as the workarounds.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">echo</span> -e <span style="color:#f1fa8c">&#39;[params]\ncustom_css = [&#34;gallery.css&#34;]&#39;</span> &gt;&gt; config.toml
</span></span><span style="display:flex;"><span>$ mkdir assets/ananke/css -p
</span></span><span style="display:flex;"><span>$ vim assets/ananke/css/gallery.css
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span>.<span style="color:#50fa7b">gallery-wrapper</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">display</span>: <span style="color:#ff79c6">grid</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>.<span style="color:#50fa7b">img-wrapper</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">margin</span>: <span style="color:#bd93f9">1</span><span style="color:#8be9fd">px</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="new-a-post" class="article-heading">New a post 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#new-a-post">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ hugo new posts/gallery-demo.md
</span></span><span style="display:flex;"><span>$ vim content/posts/gallery-demo.md
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>title: &#34;Gallery Demo&#34;
</span></span><span style="display:flex;"><span>date: 2022-07-28T11:05:57+08:00
</span></span><span style="display:flex;"><span>draft: false
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>+ By default: 2 images for each row
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">gallery</span> &gt;}}
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLVm1_boC8RA1aIv0ZUVc6IdrBXjgEyl1m9klNm8MRS7swkvtZB8F08Gw3se3SrUJ5RSHTB10TOGP6BtUbfVu5ZkXLIuffTCy5ucIiWOMpNWuwfymgPP65S7fiOBPOhMRCC7tZyAGAAJULYakAX0O6PiaA=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLW_0tSG9VlexB02W4mM6dNeGob67fsIFS1j-4y4Dy7fKVODCs2BzJRFu4MFJg5OsFXpBlsVfNPqf3hsAkxYG9wvUN0NohwXxn17QZJablvUi3NDrHJOKNELPkE6i4GjjHz-84IhpWDd6emEKIPDX197Xw=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLW3oxUukttTKV7Z3krsEl-KLXdmXBe27BzNVxLZi6nJYBF4M1Zda6VGQjLKZ8ZM4OSHFFxbDQ5d4BTsqlVtvmrT1gpAOsDQvb2IMOxUV4zzJrrXiQozBkx6NGW40l0GhWXNA5gyGJ9rToDRLM1Yi6ZSLQ=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWValYQhX4vEf-SY0Eavl1OK_RIOvXnZ2aAzMXDG8YSWlMtXOaUFuv_DDE4uFddQRFOMeZDoVOmJB53qJMrJdYlqmohUGHAu-e_YXvRG9Zdbo99TW4nd5Zx3keDMY2zeFDHnWzKCm3VNiZ859-mLIDO5Q=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWFgb6jVGdZFgOMRpRBK13iNKu3WvoDN8hJwH8-Cv5_zrcB0jS-m8zbCYq_mDyBegvmzPdEyQ9ezluOydUBKD_mI1l_RG2AqJQn-YYLXF2zFpYVRVVf8pipWqXjcK47nmV_KpVAS-4YCCZ2f8rGEyl-Kg=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWe_FCQjmTkRG0nlAryiQ7c2BRr3W84PZY-szIYcT3NurR3zdd9xZie12Z7zFruJyMLv8OL7cbQzWxuSBRGvBQFcw3rmgCj2ahyKHuo7vvjL7UzjUqHmvLU79CUUtyblAlyXvsRVkEgrm1oBx7ShXzLGg=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">gallery</span> &gt;}}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>+ Pass argument to set 3 images for each row
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">gallery</span> <span style="color:#50fa7b">3</span> &gt;}}
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLVm1_boC8RA1aIv0ZUVc6IdrBXjgEyl1m9klNm8MRS7swkvtZB8F08Gw3se3SrUJ5RSHTB10TOGP6BtUbfVu5ZkXLIuffTCy5ucIiWOMpNWuwfymgPP65S7fiOBPOhMRCC7tZyAGAAJULYakAX0O6PiaA=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLW_0tSG9VlexB02W4mM6dNeGob67fsIFS1j-4y4Dy7fKVODCs2BzJRFu4MFJg5OsFXpBlsVfNPqf3hsAkxYG9wvUN0NohwXxn17QZJablvUi3NDrHJOKNELPkE6i4GjjHz-84IhpWDd6emEKIPDX197Xw=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLW3oxUukttTKV7Z3krsEl-KLXdmXBe27BzNVxLZi6nJYBF4M1Zda6VGQjLKZ8ZM4OSHFFxbDQ5d4BTsqlVtvmrT1gpAOsDQvb2IMOxUV4zzJrrXiQozBkx6NGW40l0GhWXNA5gyGJ9rToDRLM1Yi6ZSLQ=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWValYQhX4vEf-SY0Eavl1OK_RIOvXnZ2aAzMXDG8YSWlMtXOaUFuv_DDE4uFddQRFOMeZDoVOmJB53qJMrJdYlqmohUGHAu-e_YXvRG9Zdbo99TW4nd5Zx3keDMY2zeFDHnWzKCm3VNiZ859-mLIDO5Q=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWFgb6jVGdZFgOMRpRBK13iNKu3WvoDN8hJwH8-Cv5_zrcB0jS-m8zbCYq_mDyBegvmzPdEyQ9ezluOydUBKD_mI1l_RG2AqJQn-YYLXF2zFpYVRVVf8pipWqXjcK47nmV_KpVAS-4YCCZ2f8rGEyl-Kg=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>![](https://lh3.googleusercontent.com/pw/AM-JKLWe_FCQjmTkRG0nlAryiQ7c2BRr3W84PZY-szIYcT3NurR3zdd9xZie12Z7zFruJyMLv8OL7cbQzWxuSBRGvBQFcw3rmgCj2ahyKHuo7vvjL7UzjUqHmvLU79CUUtyblAlyXvsRVkEgrm1oBx7ShXzLGg=w1643-h1232-no?authuser=1)
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">gallery</span> &gt;}}
</span></span></code></pre></div><h1 id="result" class="article-heading">Result 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#result">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Check the <a href="https://aben20807.github.io/hugo-gallery-demo/posts/gallery-demo/" title="Live Demo" aria-label="Live Demo"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Live Demo</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVuAFvd9mCVx8QjhGszrA9IfwMW7SK_Vo9RXhuXb4K4mnuTOvpuIsQWkd4cDTmy75YJFDIYt9RoEj12DV4J112pCug05eU2GH3hmmvl37ad2-Fic1BShPNfJqGzP5I_4AS-thpaJjryvj-5yYrfzpmwyg=w2022-h1137-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="related-work" class="article-heading">Related work 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#related-work">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://github.com/liwenyip/hugo-easy-gallery" title="liwenyip/hugo-easy-gallery" aria-label="liwenyip/hugo-easy-gallery"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> liwenyip/hugo-easy-gallery</a></li>
<li><a href="https://github.com/mfg92/hugo-shortcode-gallery" title="mfg92/hugo-shortcode-gallery" aria-label="mfg92/hugo-shortcode-gallery"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> mfg92/hugo-shortcode-gallery</a></li>
</ul>
        ]]></description></item><item><title>Weekly Collection</title><link>https://aben20807.github.io/posts/20220718-weekly-collection/</link><pubDate>Sun, 24 Jul 2022 17:54:39 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220718-weekly-collection/</guid><description><![CDATA[
          <p>一篇涵蓋一整個禮拜我看到、搜尋到的任何領域的大小事好像有些混亂@@</p>
          
            <p><a href="https://aben20807.github.io/posts/20220718-weekly-collection/"><img src="https://images.unsplash.com/photo-1654071976078-b3906c59719f?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220718-weekly-collection/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>一篇涵蓋一整個禮拜我看到、搜尋到的任何領域的大小事好像有些混亂@@</p>
<h1 id="最後悔什麼" class="article-heading">最後悔什麼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e5%be%8c%e6%82%94%e4%bb%80%e9%ba%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.facebook.com/ReadingOutpost/posts/pfbid02AxhjQeJGMEKKewJuNkqeGErcFRGzPBCFd2iHViXK69ZqG5Hymyntjm512vWzLxATl" title="閱讀前哨站 FB" aria-label="閱讀前哨站 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 閱讀前哨站 FB</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU1oK8O89cD3BgQFkVXrBeMx0bVmz5s5rTt0_-6MHtGn7p0ymoYKsWZjqX6yojVjhe6-eSGHo2pz1JbJSP5_-dLgzCAsm7yFcO-HjF66vlmnuK4IkN3oXIas0XSuGUyk17qbirvax8Azowctqf_o5KQnA=w1157-h1037-no?authuser=1" alt='來源:  閱讀前哨站 FB' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  閱讀前哨站 FB</center>
    </figcaption>
  </figure>
</p>
<h1 id="影響閱讀體驗的最爛設計" class="article-heading">影響閱讀體驗的最爛設計 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bd%b1%e9%9f%bf%e9%96%b1%e8%ae%80%e9%ab%94%e9%a9%97%e7%9a%84%e6%9c%80%e7%88%9b%e8%a8%ad%e8%a8%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>比無限捲動 還惱人</li>
<li>來源: <a href="https://www.facebook.com/groups/f2e.tw/posts/5186515678052422/" title="Front-End Developers Taiwan FB" aria-label="Front-End Developers Taiwan FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Front-End Developers Taiwan FB</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXhMagZL3HNYdYcFPq8U51zDWQvIE52X4T73Mbdk5WwM-vGxP_UyLG1JCJHlAsqzQ4_yKd-X0txwtpL-hWXYev0jJ--eIRdCHom2OgUVgGmUZVH3dZ7nlyTUwvbaBUdz4RN7H7R9laOmELDegoAybz4hw=w1020-h258-no?authuser=1" alt='把一篇文章拆成好幾頁，騙點擊、廣告流量。究竟之後會不會真香呢?' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">把一篇文章拆成好幾頁，騙點擊、廣告流量。究竟之後會不會真香呢?</center>
    </figcaption>
  </figure>
</p>
<h1 id="how-to-predict-random-numbers" class="article-heading">How to Predict Random Numbers 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#how-to-predict-random-numbers">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.youtube.com/watch?v=-h_rj2-HP2E" title="How to Predict Random Numbers - PwnFunction (Youtube)" aria-label="How to Predict Random Numbers - PwnFunction (Youtube)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to Predict Random Numbers - PwnFunction (Youtube)</a></li>
<li>相關專案:
<ul>
<li><a href="https://github.com/PwnFunction/learn-z3" title="https://github.com/PwnFunction/learn-z3" aria-label="https://github.com/PwnFunction/learn-z3"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/PwnFunction/learn-z3</a></li>
<li><a href="https://github.com/Z3Prover/z3" title="https://github.com/Z3Prover/z3" aria-label="https://github.com/Z3Prover/z3"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/Z3Prover/z3</a> (Microsoft 的有趣專案，可用來解定理相關的問題)</li>
</ul>
</li>
</ul>
<h1 id="星星辨識" class="article-heading">星星辨識 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%98%9f%e6%98%9f%e8%be%a8%e8%ad%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>網站: <a href="https://nova.astrometry.net/" title="https://nova.astrometry.net/" aria-label="https://nova.astrometry.net/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://nova.astrometry.net/</a>
<ul>
<li>需要上傳自己的照片到伺服器</li>
<li>可能需要不包含其他物件否則會影響辨識，<a href="https://nova.astrometry.net/status/6013614" title="我上傳的" aria-label="我上傳的"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 我上傳的</a>就 failed 了 QuQ</li>
</ul>
</li>
<li>GitHub: <a href="https://github.com/dstndstn/astrometry.net" title="https://github.com/dstndstn/astrometry.net" aria-label="https://github.com/dstndstn/astrometry.net"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/dstndstn/astrometry.net</a></li>
<li>接觸來源: <a href="https://youtu.be/3h_4LaDz8lc?t=439" title="https://youtu.be/3h_4LaDz8lc?t=439" aria-label="https://youtu.be/3h_4LaDz8lc?t=439"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://youtu.be/3h_4LaDz8lc?t=439</a></li>
</ul>
<h1 id="google-推出新語言-carbon" class="article-heading">Google 推出新語言: Carbon 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#google-%e6%8e%a8%e5%87%ba%e6%96%b0%e8%aa%9e%e8%a8%80-carbon">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>號稱是 An experimental successor to C++，裡面可以看到許多來自 Rust 的語法</li>
<li><a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Carbon-Successor-To-CPP" title="Google Engineers Lift The Lid On Carbon - A Hopeful Successor To C&#43;&#43;" aria-label="Google Engineers Lift The Lid On Carbon - A Hopeful Successor To C&#43;&#43;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Google Engineers Lift The Lid On Carbon - A Hopeful Successor To C++</a></li>
<li>GitHub: <a href="https://github.com/carbon-language/carbon-lang" title="https://github.com/carbon-language/carbon-lang" aria-label="https://github.com/carbon-language/carbon-lang"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/carbon-language/carbon-lang</a></li>
<li><a href="https://news.ycombinator.com/item?id=32151609" title="Hacker News 討論" aria-label="Hacker News 討論"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Hacker News 討論</a></li>
</ul>
<h1 id="how-to-read-a-google-sheet-without-oauth" class="article-heading">How to read a Google Sheet without oauth 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#how-to-read-a-google-sheet-without-oauth">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://benborgers.com/posts/google-sheets-without-oauth" title="link" aria-label="link"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> link</a></li>
<li>GitHub: <a href="https://github.com/benborgers/opensheet" title="https://github.com/benborgers/opensheet" aria-label="https://github.com/benborgers/opensheet"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/benborgers/opensheet</a></li>
<li>目前測試似乎不支援發布部分分頁的方式</li>
</ul>
<h1 id="資訊梗圖-complexity" class="article-heading">資訊梗圖: Complexity 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e8%a8%8a%e6%a2%97%e5%9c%96-complexity">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWxmxjeN6cFUi0-w_o4OlwPT2g3O06PXvjFssd52DzyWG429EAVbH1owbNuuJ8tsfD448xOJrtGkE0bQG3C8yzm4OreBbm9So4R1Y-xK12WbsJ_vMtWHYRE_8OvWwJNIUfzYNht-wdGtXF7UBteLkJJgA=w1600-h866-no?authuser=1" alt='來源:  MonkeyUser.com' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  MonkeyUser.com</center>
    </figcaption>
  </figure>
</p>
<h1 id="蘑菇鑽戒" class="article-heading">蘑菇鑽戒 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%98%91%e8%8f%87%e9%91%bd%e6%88%92">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.facebook.com/yamworld/posts/pfbid0oxnxgCQvh2x1MqagvZpFxSW4QCnEA2ysa1zKa73gJdB5Roo9qJF9HZpQMj4QjNe4l" title="DQ 地球圖輯隊 FB" aria-label="DQ 地球圖輯隊 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> DQ 地球圖輯隊 FB</a></li>
<li><a href="https://www.guinnessworldrecords.com/news/2022/7/jeweller-breaks-sparkling-record-with-24697-diamonds-in-one-ring-710035" title="金氏世界紀錄官網: Jeweller breaks sparkling record with 24,679 diamonds in one ring" aria-label="金氏世界紀錄官網: Jeweller breaks sparkling record with 24,679 diamonds in one ring"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 金氏世界紀錄官網: Jeweller breaks sparkling record with 24,679 diamonds in one ring</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWgOVLYlT2bWPo0OD5dgxEGmN0WkNHkHLl0So64KcDC4VzYcNv-DfpiFCOg_RR7RnAZsWu_36JLGO610Xth5EjuqfvvMSOtA7dG-AcOinmeR44Dy4cwxxyKCsCSyqDyZueBgkR_6LsGdljFziNC94AtA=w684-h450-no?authuser=1" alt='來源:  金氏世界紀錄官網' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  金氏世界紀錄官網</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>Darktable</title><link>https://aben20807.github.io/posts/20220724-darktable/</link><pubDate>Sun, 24 Jul 2022 15:19:10 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220724-darktable/</guid><description><![CDATA[
          <p>感覺上傳原圖到目前圖床 (Google Photo) 的用量太大，且網頁上呈現壓縮過的版本就好。不想買 Adobe Lightroom (Lr) 來套用常見圖片處理的話，可以參考開源免費的替代軟體: Darktable。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220724-darktable/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLXOYMNHaRBvZYwJ9XB_bvPJmkeypeJdhT-TeHJe1_lgbiIU8VQQ_2MhnzYdi_Bsl5cNSIr0O0Q0Gl-cQyW_cjen33PvR6L8fzLov-K_aGHbzGuF60Rd0752IpUQj8fzTxBOOGNMXnjgzdv297cOsZ7TRA=w3212-h1749-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220724-darktable/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>感覺上傳原圖到目前圖床 (Google Photo) 的用量太大，且網頁上呈現壓縮過的版本就好。不想買 Adobe Lightroom (Lr) 來套用常見圖片處理的話，可以參考開源免費的替代軟體: Darktable。</p>
<p>官網: <a href="https://www.darktable.org/" title="https://www.darktable.org/" aria-label="https://www.darktable.org/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.darktable.org/</a><br>
GitHub: <a href="https://github.com/darktable-org/darktable" title="https://github.com/darktable-org/darktable" aria-label="https://github.com/darktable-org/darktable"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/darktable-org/darktable</a></p>
<h1 id="簡易使用流程" class="article-heading">簡易使用流程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b0%a1%e6%98%93%e4%bd%bf%e7%94%a8%e6%b5%81%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="加上浮水印" class="article-heading">加上浮水印 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e6%b5%ae%e6%b0%b4%e5%8d%b0">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>導入需要處理的相片</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUgE_2eJsEYehxj1fyQNbK5qV0vwrgtrejQ3lmUo1wFNCpr5XaVUALAOCzmI_1NpW5yjqV5dt4_cySiI1OhECzkNOwag_2O_30d2Vu91LIJVIEAK6TXsYl1Q6dyq5UzMTmwPuV6DResj99ZscNucW5IHQ=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>點擊其中一張後進入 darkroom 修圖</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXrt92nRItjUEWwSva7nMvuAQ2dC8JFBllaUYF5bVcAmuQ60i6EqLCmCf9bxIm59r6RTNjw87vj3oanrdg9OVPvjPspUZxBMA5O1zXF5GVp2fFK4vHwCkgyfy5BRqwaxj3eJZoQFoJyYYgNjmdGLJCV_Q=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>右方搜尋 watermark 來打開浮水印功能</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXyjEAolO9e7yqChkLqRDrLxnM4sLxxNZrUDZAypC393loW8Z5G1DjjnLtJEOW8zaFX66WdjIz6a5ulOe-kCbmXMDw2IdnymS7C1j-ov7welz6AnDElV5VyV5Mk4pdTFLRSIgrTxUQhEke-xjozDdi7uA=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>選擇 simple text 模式，調整透明度、大小、位置 (鍵盤左右可調整，ctrl 按住可以微調)</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXTbnUi1-SPSsslJVTY96wP99LY67lDdjiXbnzQhU5IsA6QKCPCCCg6UBMtnslB5XCRG89AHSVIu8IzalhvX5orIGozusKngHMNPEoXPiF-SLFl_LTd089kzUNoS9mA9kzdPc95Ykpyv_RC-6ToHAYeYg=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>可以存為 preset 方便下次使用</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWHN-EF2EgMa4gtgjoGhtkvlgw3AQBI-ijiwaZxZjbkC4F2604riwP8gBszjzBd3EddXV-q1-5f19OAZ4_9lC-YcZwqSerT87DXAu57s6F6aJp7fdt3iVocfFK4vMLTeZ2PZmIX_cY7KISC_CxkiKkAtw=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>回到 lighttable，點擊 history stack 並點 selective copy</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVJw4-fHTdMpkCLiEn_KizsDFNBfgoupBFfmjR601CGB8_NgPoMCAQJuVs9NXJBXKf9e-xJjjjgiMiwpi3Y6MpFA9NV-bNdQAuf_T-4hUIqcOgqlJClnid43iC65nQPEve_OY_fmuYQIMa9fEEhKkExrA=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>僅選取 watermark</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXYbXHs_WKnG_lBa7zpqIjZCb0YQnwAo5I62HRI4IgCTbQP9e7ygSMnmoKHNR7bqo8J7nnu0wTJdYr-BiwrSPStNI36IYlr_O7oXK6ogBo2wLk9VpzXuACTwlXwk1QjjfJm2veeyr5eu6xtaOZIe2pmsg=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>選取其他未加上浮水印的圖片後點 paste</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUdwfmMyDa83REP0xIhOKes8Jx8iADxPMBJBFsGjaX9krLMYJwifaqDTMdueinUkAS-hzvQvWSfiyWyEFfIyp4O3glnRQE_0RwL65N8u3FAJgoWxXopyWDS17btUXc6_Mv1linjMKb7ig1vbuYuCtu5Ug=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h2 id="保留-exif" class="article-heading">保留 Exif 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bf%9d%e7%95%99-exif">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Exif 為 Exchangeable image file format，通常存放相片的 metadata (例如，相機型號、照片大小、使用光圈、ISO、快門&hellip;)。建議匯出前可以確認一下這些資訊是否會一起匯出。</p>
<ul>
<li>全選圖片後點 export 右邊的三條線，接著點 perferences&hellip;</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWdQF8H9lGFuwZIrhgLPvlxmtLoGNjICPqEJ1tAUDOR1_TSleSUDodVduHeYWfZpJihyTdW6H6GA2sfA-G-FqNTUNh3y4uk2HBGv7F_ipgz6W5WrWuyyUMivX8SpIMRGT-WecI1pLAbeed9DfqQUQsdww=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>勾選想要保留的資訊並儲存</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUKsoT_EewY23MXM4La_0vguRd-Oui8SAgP_SgkEnYQByp1AWWCS_nNp6o7q-bCmy8ZW35JI3PBQiFLZYOZQxpU8pVE_17H_edEvYK22Re6NNdwCuoAacYZIRYbeeXxtXB33WECcpTSnpnSj4gAtSv-Fg=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h2 id="匯出" class="article-heading">匯出 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8c%af%e5%87%ba">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>依照需求調整格式及輸出品質並匯出</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXQ6XNucbZAb57W-CaEt2m6hTkgdfnDEtekkaZKTzG8-Qc_jW_ik8qfR-U48ocClYoSjWlHAoRaJ41kz4V27HVtZPff1dhqn9ps61PEbzY2ld9ScyineuTKaXuiZO_YB_wkHDmneIhZ6Z8HrAHjadXlCQ=w3212-h1749-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>輸出結果可以在原資料夾找到</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWgCI964FWKXM5tB_52yDsilVtViyQFE5s-BtVVzKoEOM0N6EGdiiTG380pImzKxhKo4drOvDF8q-ff6CIdChk2MK_yg_ButXRr9fhcGLf50aA5V2_LEN6fDrsj_esHUjsa8sQOIEy6Kc7t6g1HKNnAg=w1603-h745-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ul>
<li>檔案大小比較</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWIzSod7CFHHwEKOW1Bi-ixEp6tKQ2o6OBKXCpiMAC9lBIwAF_61i7opj0YFJF5eQbTUeFhWdZnUYCZqeCXQRNxOSN8sK9PUsES37LYCZ4FKD_lceP1CwEq5DR7Eu--NSwWWq4DY4tqlCi1g-KWl5tm_A=w1179-h441-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.youtube.com/watch?v=m7WEEWh0nIM" title="Darktable Lesson 6 | How to add a Custom Watermark to Photos - TJ FREE (YouTube)" aria-label="Darktable Lesson 6 | How to add a Custom Watermark to Photos - TJ FREE (YouTube)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Darktable Lesson 6 | How to add a Custom Watermark to Photos - TJ FREE (YouTube)</a></li>
<li><a href="https://darktable.gitlab.io/doc/en/export_selected.html" title="Darktable doc - 2.3.14. Export selected" aria-label="Darktable doc - 2.3.14. Export selected"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Darktable doc - 2.3.14. Export selected</a></li>
</ul>
        ]]></description></item><item><title>Nikon Z6ii</title><link>https://aben20807.github.io/posts/20220722-nikon-z6ii/</link><pubDate>Fri, 22 Jul 2022 18:29:34 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220722-nikon-z6ii/</guid><description><![CDATA[
          <p>買了!!!</p>
          
            <p><a href="https://aben20807.github.io/posts/20220722-nikon-z6ii/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLXetpoTkAksbN5oTR62uTpEEozsy0paz0MQf3-fyBUTxKl0Orp6nTdn-iUhNOx_RFIpmoVZAB6OHTen5hgUBK_b6FnjVjW7puZ4oAZrmIRSnJKzFVioJE-1jUiJd7f68GOe_nz5GP-VhURPdDCmje_TLQ=w2414-h1810-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220722-nikon-z6ii/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>買了!!!</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXetpoTkAksbN5oTR62uTpEEozsy0paz0MQf3-fyBUTxKl0Orp6nTdn-iUhNOx_RFIpmoVZAB6OHTen5hgUBK_b6FnjVjW7puZ4oAZrmIRSnJKzFVioJE-1jUiJd7f68GOe_nz5GP-VhURPdDCmje_TLQ=w2414-h1810-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="雜談" class="article-heading">雜談 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%9c%e8%ab%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>目前還在上手階段，人生第一台全片幅無反，只能說 Nikon 真材實料&hellip;好重@@。搭配的 24-70 F4 鏡頭看了評論 後覺得可以一起入手。原先一開始考慮是 Canon R 或 RP，後來想說可以捏一下上 R6，然後看到 Nikon 有 Z5、Z6ii、Z7ii，價格上應該只能是 Z6ii，跟 R6 比較過程中也去看一下富士的。最後從一些照片比對選了 Z6ii。也有考慮順便帶個定焦，不過老闆 也說了一開始先不要買太多，所以就先這樣了。</p>
<p>我應該會直接使用 M 模式適應，所以暫時光線應該都還是會不穩定，就慢慢熟悉吧，比較怕的是帶不出門，再來要來看防潮箱跟隨行背包了&hellip;對不起了錢錢 QuQ</p>
<h1 id="最完整設定教學及解說" class="article-heading">最完整設定教學及解說 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e5%ae%8c%e6%95%b4%e8%a8%ad%e5%ae%9a%e6%95%99%e5%ad%b8%e5%8f%8a%e8%a7%a3%e8%aa%aa">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>設定太多了，找到這部影片算講解詳細且有實際操作。</p>
<p>How To Set Up &amp; Use Your Nikon Z6ii &amp; Z7ii - Hudson Henry Photography (YouTube)</p>







 
<h1 id="初拍幾張" class="article-heading">初拍幾張 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%9d%e6%8b%8d%e5%b9%be%e5%bc%b5">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>無調色，有壓縮</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXhlEkz5CuoXjx1e2IQiqq8ZXRpqt3h0AMotwzmzJ5Cw7xLVzv995bmHGa31-u6LT_69b4cXUKOTnz_Ut6FigXjlWuGoB3Oxg7DolypSJE6mcrV6rioC-4_eEQKThQB9Z54jlvPGiIqt0dsc67AiRlnbA=w2884-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVscDuWLeuYoddjYF-37pAOyuOguqC8XgItU1lSq8AvdRfd9loGLz6aZJ3Sc2abK3b6DpjrAtOe-Zk_uMhetHKndxlpRPayGOKi_DcIywlIWxN8drq5Tki4ye6EHqTL7gkrKyiCWhifvEOriXs0wEVolg=w2884-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW0TTBHRi4RJQee9ESeDi8oVtSRhkZqSFaNDc3jOTtW0jMiHvHt1AR8P8WKK9QF475Ez-mKabfXtWAE3nCIUyu7Qi0qgs1jy6dhdrScCK6Q0s20EZlDA0ELzcNfhTXcr1Lz8-YZ8UvKPWMjAYG652_9_Q=w2884-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWZ-WFzo9yMDqLxVOWeXzOa7ClU4ahI4Tpz-650cdvoPhkCACLpRDETtRbutFrrtSWaiWhrY_Mbvmvrs7QIqzeLInTQGGDojZ8gF6edDA8db4ZbtlEh7qSowXtMRCbf9p4_nuN3yLO4893OLjnVpK-5ag=w2884-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUK--PuBTiQKICLLOVpu3p6jKngwonNsBI7tb1nlh4e4h9xnUfhat3Defo1lwX5NuX2TBMOudhKHM0bJ6mzMK4EaddzlEv3tVXFXlkJtgrRLRmgcTqf5VG3xWQsu2wB0dQH4DRh72PCRseWgPALCBs58Q=w2884-h1918-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>Weekly Collection</title><link>https://aben20807.github.io/posts/20220716-weekly-collection/</link><pubDate>Sun, 17 Jul 2022 18:23:29 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220716-weekly-collection/</guid><description><![CDATA[
          <p>這禮拜雖然請假不過也是繼續更新 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20220716-weekly-collection/"><img src="https://images.unsplash.com/photo-1654071976078-b3906c59719f?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220716-weekly-collection/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>這禮拜雖然請假不過也是繼續更新 OuO</p>
<h1 id="多造鐘少報時" class="article-heading">多造鐘，少報時 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%9a%e9%80%a0%e9%90%98%e5%b0%91%e5%a0%b1%e6%99%82">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.facebook.com/100063894513009/posts/pfbid02QSrrQ6PqRE3jZDfSb1VzDp7k1NnzEfD1WowFPHxEMDcaxMy24LU87vcjq61w2PA6l/?app=fbl" title="閱讀前哨站 FB" aria-label="閱讀前哨站 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 閱讀前哨站 FB</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://scontent-tpe1-1.xx.fbcdn.net/v/t39.30808-6/292736942_429706562502491_8253689906096656397_n.jpg?_nc_cat=102&amp;ccb=1-7&amp;_nc_sid=730e14&amp;_nc_ohc=zecFP7YugScAX9NZ1jA&amp;_nc_ht=scontent-tpe1-1.xx&amp;oh=00_AT9gnGFEsHLKY0ANasnfqTPqUaBqOgqv6pPgNPRyI_im-Q&amp;oe=62DBAC04" alt='來源:  閱讀前哨站 FB' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  閱讀前哨站 FB</center>
    </figcaption>
  </figure>
</p>
<h1 id="密碼長度與強度關係" class="article-heading">密碼長度與強度關係 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%86%e7%a2%bc%e9%95%b7%e5%ba%a6%e8%88%87%e5%bc%b7%e5%ba%a6%e9%97%9c%e4%bf%82">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://medium.com/codex/the-magic-number-to-build-a-password-b697db91e26" title="The Magic Number to Build a Password - Kesk -*-" aria-label="The Magic Number to Build a Password - Kesk -*-"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The Magic Number to Build a Password - Kesk -*-</a></li>
<li>摘要: 6 字元 1 秒可破解，11 字元需要 41 年 (當然需要混和數字、大小寫字母、特殊符號)</li>
<li>我個人都用 <a href="https://bitwarden.com/" title="Bitwarden" aria-label="Bitwarden"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Bitwarden</a> (非業配) 手機、瀏覽器可同步。</li>
</ul>
<h1 id="程式碼字型" class="article-heading">程式碼字型 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a8%8b%e5%bc%8f%e7%a2%bc%e5%ad%97%e5%9e%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>網站: <a href="https://www.programmingfonts.org/" title="https://www.programmingfonts.org/" aria-label="https://www.programmingfonts.org/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.programmingfonts.org/</a></li>
<li>我個人常用 cascadia-code (<a href="https://www.programmingfonts.org/#cascadia-code" title="https://www.programmingfonts.org/#cascadia-code" aria-label="https://www.programmingfonts.org/#cascadia-code"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.programmingfonts.org/#cascadia-code</a>)</li>
</ul>
<h1 id="如何模擬黑洞" class="article-heading">如何模擬黑洞 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e4%bd%95%e6%a8%a1%e6%93%ac%e9%bb%91%e6%b4%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://rantonels.github.io/starless/" title="How to draw a Black Hole" aria-label="How to draw a Black Hole"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to draw a Black Hole</a></li>
<li>之前看過的相關影片:
<ul>
<li><a href="https://www.youtube.com/watch?v=zUyH3XhpLTo" title="How to Understand the Black Hole Image - Veritasium (YouTube)" aria-label="How to Understand the Black Hole Image - Veritasium (YouTube)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to Understand the Black Hole Image - Veritasium (YouTube)</a></li>
<li><a href="https://www.youtube.com/watch?v=Iaz9TqYWUmA" title="Coding Challenge #144: 2D Black Hole Visualization - The Coding Train (YouTube)" aria-label="Coding Challenge #144: 2D Black Hole Visualization - The Coding Train (YouTube)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Coding Challenge #144: 2D Black Hole Visualization - The Coding Train (YouTube)</a></li>
</ul>
</li>
</ul>
<h1 id="蠟筆小新畫風的航海王" class="article-heading">蠟筆小新畫風的航海王 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a0%9f%e7%ad%86%e5%b0%8f%e6%96%b0%e7%95%ab%e9%a2%a8%e7%9a%84%e8%88%aa%e6%b5%b7%e7%8e%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.pinterest.com/pin/845550898785070018/" title="pinterest 連結" aria-label="pinterest 連結"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> pinterest 連結</a>，可惜作者的 twitter 找不到了</li>
</ul>
<h1 id="fff-fucking-fast-file-manager" class="article-heading">fff (Fucking Fast File-Manager) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#fff-fucking-fast-file-manager">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>介紹: <a href="https://www.tecmint.com/fff-fast-file-manager-for-linux/" title="fff – A Simple Fast File Manager for Linux" aria-label="fff – A Simple Fast File Manager for Linux"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> fff – A Simple Fast File Manager for Linux</a></li>
<li>GitHub: <a href="https://github.com/dylanaraps/fff" title="https://github.com/dylanaraps/fff" aria-label="https://github.com/dylanaraps/fff"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/dylanaraps/fff</a></li>
<li>感覺跟我目前用的 <a href="https://github.com/ranger/ranger" title="ranger" aria-label="ranger"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ranger</a> 類似。</li>
</ul>
<h1 id="nasa-公布一系列-james-webb-space-telescope-韋伯太空望遠鏡-所拍攝的影像" class="article-heading">NASA 公布一系列 James Webb Space Telescope (韋伯太空望遠鏡) 所拍攝的影像 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#nasa-%e5%85%ac%e5%b8%83%e4%b8%80%e7%b3%bb%e5%88%97-james-webb-space-telescope-%e9%9f%8b%e4%bc%af%e5%a4%aa%e7%a9%ba%e6%9c%9b%e9%81%a0%e9%8f%a1-%e6%89%80%e6%8b%8d%e6%94%9d%e7%9a%84%e5%bd%b1%e5%83%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>連結: <a href="https://www.nasa.gov/webbfirstimages" title="https://www.nasa.gov/webbfirstimages" aria-label="https://www.nasa.gov/webbfirstimages"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.nasa.gov/webbfirstimages</a></li>
<li><a href="https://www.youtube.com/watch?v=tTe-nwziwCw" title="最新影像全解讀！韋伯望遠鏡強大在哪？宇宙新發現？天文迷必看！ - PanSci 泛科學 (Youtube)" aria-label="最新影像全解讀！韋伯望遠鏡強大在哪？宇宙新發現？天文迷必看！ - PanSci 泛科學 (Youtube)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 最新影像全解讀！韋伯望遠鏡強大在哪？宇宙新發現？天文迷必看！ - PanSci 泛科學 (Youtube)</a></li>
<li>我個人最喜歡下方這張有引力透鏡的現象 (<a href="https://www.facebook.com/100063650773601/posts/pfbid02cLdfw5rnMkKS8htuBTA7K1ccqN1bfyrA8EuXQZWMckb1pW5KNF5yfaCQq1qfXi4tl/?app=fbl" title="屋頂上的天文學家 FB" aria-label="屋頂上的天文學家 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 屋頂上的天文學家 FB</a> 的介紹)</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVN0v0I6GvcKT8NbarP36kbgWUjDCW2CFUnVPxUNDfqvOxUnCmtm5ZVx_LtvKWrXEnGAxxw4aaCTyib5J47oY1CFqBjfO1x0oJVXPPjJKexgB4ecXxA6ur6VxlqlhC32Epp4qAOQAvrtK0FPI0hqt1Xbw=w923-h941-no?authuser=1" alt='NASA’s Webb Delivers Deepest Infrared Image of Universe Yet  [src]' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">NASA’s Webb Delivers Deepest Infrared Image of Universe Yet  [src]</center>
    </figcaption>
  </figure>
</p>
<h1 id="duffs-device-之技巧" class="article-heading">Duff&rsquo;s device 之技巧 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#duffs-device-%e4%b9%8b%e6%8a%80%e5%b7%a7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://en.wikipedia.org/wiki/Duff%27s_device" title="Duff&amp;rsquo;s device - wiki" aria-label="Duff&amp;rsquo;s device - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Duff&rsquo;s device - wiki</a></li>
<li><a href="https://www.facebook.com/814251892/posts/pfbid02Bezu41xVsvL1aw4t3Nf7E68UC5Ju1cB6z7UhNrK3FRxV9XNA1rb56gQtmvLsDupQl/?app=fbl" title="來源: 陳鍾誠 FB 與 Jserv 的討論" aria-label="來源: 陳鍾誠 FB 與 Jserv 的討論"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 來源: 陳鍾誠 FB 與 Jserv 的討論</a></li>
</ul>
<h1 id="mlgo" class="article-heading">MLGO 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#mlgo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>連結: <a href="https://ai.googleblog.com/2022/07/mlgo-machine-learning-framework-for.html?m=1" title="MLGO: A Machine Learning Framework for Compiler Optimization" aria-label="MLGO: A Machine Learning Framework for Compiler Optimization"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> MLGO: A Machine Learning Framework for Compiler Optimization</a></li>
<li>利用 AI 來提升編譯器最佳化的效果</li>
</ul>
<h1 id="manimcommunitymanim" class="article-heading">ManimCommunity/manim 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#manimcommunitymanim">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>3Blue1Brown 用程式碼產生對應動畫的工具</li>
<li>連結: <a href="https://docs.manim.community/en/stable/examples.html" title="Example Gallery" aria-label="Example Gallery"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Example Gallery</a></li>
</ul>
        ]]></description></item><item><title>7/11 ~ 7/14 溪頭四天三夜</title><link>https://aben20807.github.io/posts/20220714-xitou/</link><pubDate>Thu, 14 Jul 2022 21:41:28 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220714-xitou/</guid><description><![CDATA[
          <p>請假去大自然森呼吸一下，<del>回來後應該可以再繼續撐下去</del> OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20220714-xitou/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLUuExZxL6UKNeYlMWIjkLEibzZy4qE6UTvyT0gkeI8nwmLEufxLIWWkNjIzkY8nWpzcKlZz8THhVhexkk3oCTDVYvzwXRJ56wF2lLarkMwX7sVwluo6BARRGxrFH1JCLsOHcOuxBufBHjiPONSbckjUWQ=w1255-h941-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220714-xitou/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>請假去大自然森呼吸一下，<del>回來後應該可以再繼續撐下去</del> OuO</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>疫情期間，許久沒跟家人出門，再等下去也不知何年何月能夠完全解封，只好冒著些許風險出門。暑假去山上避暑是再自然不過，而一個月前也訂好溪頭附近的房間，但是連日新聞都提及溪頭園區內人潮不斷，因此計畫沒打算進入園區，而是在附近走晃。</p>
<h1 id="下榻" class="article-heading">下榻 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8b%e6%a6%bb">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>住宿處周圍反而生物繁多，蚱蜢、蝴蝶、螳螂、蜻蜓、蜥蜴&hellip;，原先以為沒有蟑螂，但是半夜還是被老媽踩死一隻大隻會飛的。</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV4ikbvaB1gM01IJ9_1f1ShH6fMl62J3kU6PNASv9tU37GlpNqEOZMjgDwwyRnvsDnTB1uFKXCoD0DC3dFiXb-4aHgUoRpLd6o8dvJKrYAlGzfPksnkMZ-f8VuALIUFqZAxMiZzfLvnrjLGNU-1OlBTaQ=w1255-h941-no?authuser=1" alt='蚱蜢 1號 (短角外斑腿蝗)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蚱蜢 1號 (短角外斑腿蝗)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW2bmbirFNj-XWxsBiCDq5TApuG5hxpNLcZzhshpij_ur-yEPKlMvxaGj5-xJDXUjfFNJm7HMUwUe7erSyWoM3Fi-nl_jpLiDoq-gGtDHHlanT1N-oOoeErgVskafnLXFS5X27t14D7cR0ezW3w5DRwmw=w1255-h941-no?authuser=1" alt='蚱蜢 2號 (瘤喉蝗)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蚱蜢 2號 (瘤喉蝗)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUh9VsKTnc1Ki0sG8HkUOzRRgmHKz7UBmIHOkwl0yhlGdCBf7-DoEWUkMWvvH_B2sBXHxoIegnuNWDK9oBkexPVZuK50E60KJW5lPLExABC8T9GEagHyFDcs_Qph_po8E3ttWECZ5tV2rL_D1TBZ59iXA=w1255-h941-no?authuser=1" alt='蚱蜢 3號 (黑翅細蟴，若蟲，腹端已具產卵管)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蚱蜢 3號 (黑翅細蟴，若蟲，腹端已具產卵管)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUhWKxcbdHhqx_ZSEXSrm0MSCt1fDaT8cnl2ySk0Dj4HE8dsr4jR7K-FQetXKuhUzGMig9F7-VDRKGgr8VS7IT_yq6Pg6UZKjTebfRmylJT-19W5HAb7p4Opv1-p-pO_964AErce5llfOeEaUI-wjum6g=w1255-h941-no?authuser=1" alt='蝴蝶 1號 (細蝶)，兩隻都產卵在葉子上' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蝴蝶 1號 (細蝶)，兩隻都產卵在葉子上</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVH3IIStnv7xknbfiPqvVohbOPUUGaPVg7KqjSUnarro_mzJEojJcAaGGiIUyk018rpm_8biIsQ8-x6BUem26WbZU9gWH33Cb82W2Ai1atO2kxVsnjvSt1OI5AgP5OEeTFOGquXEqxW6a-yiyNNozcGCw=w1255-h941-no?authuser=1" alt='蝴蝶 2號 (花豹盛蛺蝶)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蝴蝶 2號 (花豹盛蛺蝶)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW9bI2fQqA-Q59tBhp-yFnBydCM_SlzYpTsI4LZoW8v9zGAYMo7tK3h_BlXKDVwR68Pt5MZCd-Mkf31JUbA7nk6iZip4qiNnl-RG2hypR0y342b4gu8LiYChbcQIFSJNX4DEeUlqa8sYWSbeRGSSswSoA=w1255-h941-no?authuser=1" alt='仰頭蜥蜴 (斯文豪氏攀蜥)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">仰頭蜥蜴 (斯文豪氏攀蜥)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXt_Iw7GACl0_deg7vY_Wu771eCfKJyjNTWwPHwGC5j7HMuhr94Lh8Yr7-bUkJkre-ayQLap2WtkLwGZpqRVh6qu61wtAXlMeswhCJNGjtba0sef2K-oS-Uj1QN5qBf-E5BykXJAriaqieROQaDxEwg2Q=w1255-h941-no?authuser=1" alt='蜻蜓 1,2號 (灰黑蜻蜓, 猩紅蜻蜓)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蜻蜓 1,2號 (灰黑蜻蜓, 猩紅蜻蜓)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUZhhFC5A29y_RhCQJ5Rvwu56DYPnqR158-nOxWs2cAagHOfuBzzVcARjxOYb0xFsqiIAsvqP3pI2Q3NW9_R9BlBMgbYKeIYvdG8e8GHHqPUAyaRCciftyecRGuamuxN_6iZDNwAkXIbVfCAbWRQNe8GQ=w1255-h941-no?authuser=1" alt='蜻蜓 3號 (短腹幽蟌，翅膀破了 QQ)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蜻蜓 3號 (短腹幽蟌，翅膀破了 QQ)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUNdt123WyIZ6RumJ9fIDYY55RFlIt0J3Y932_L-1bqU4Nh3QJlJnybrWjmeYZPNciV3WXDJeYPgmv8FfbFQ0jyngsQppS6mIh7uE2sRbN_SeIg5a-WidTC8TbLcZupjA-hmmVU0uWaRTXvZi2pgkq15Q=w1255-h941-no?authuser=1" alt='小暮蟬，台灣特有種' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">小暮蟬，台灣特有種</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUxVrhnOK_oOzhSagqIpnRZVVip0PEiJzvdrg4yf3b3Ore2QZUYN7ihp9ZuE9-HMInYQnaPhecBqh1vGpPrSj1Ss8gXgVatYeMO3DqtcoVNQRGUzesOsNJ97BFa950SPNaXwd3Jc4n2SGAWl7tn8k31Lw=w1255-h941-no?authuser=1" alt='素刺蛾幼蟲' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">素刺蛾幼蟲</center>
    </figcaption>
  </figure>
</p>
</div></div>
<h1 id="杉林溪" class="article-heading">杉林溪 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9d%89%e6%9e%97%e6%ba%aa">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>杉林溪位在溪頭上方，因此氣溫更低。剛進園區，繡球花如往常盛開。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWe_FCQjmTkRG0nlAryiQ7c2BRr3W84PZY-szIYcT3NurR3zdd9xZie12Z7zFruJyMLv8OL7cbQzWxuSBRGvBQFcw3rmgCj2ahyKHuo7vvjL7UzjUqHmvLU79CUUtyblAlyXvsRVkEgrm1oBx7ShXzLGg=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>印象中已經來過兩三次，這次應是瀑布水量最大的一次，遠在幾百公尺外的步道也能感受到飛濺的水滴，為避免衣服濕透就沒去瀑布下感受其浩大。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXZg7EmSOgxwcIby6VHKfDhMrBHYJx4OSghp3La4TDKHpgZ8Cmya--CYywf1KgUnZ0NmHqvQyPsqGL94iPGZ5xdaR5bQY4P1xRfgYzGs7NKy52FSQsVCg1xdcEy_Kk9Qoq9APyMiujn1DL2t32A7Q_XLw=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVM_4VBAubIM1gojCnWYjohJyVopkAO4VioSc4ZcZ5hVeaX-GTrT4nehpaPmeLMueH4qPbo1HWmv4iJQoZTmyqT1YC55QreKaVjRGW2rQ6b9Sih-w7UTGKzu5Jd9wRyelrnIGgVagj7w1orni-kWj7B6Q=w1255-h941-no?authuser=1" alt='某上翹菇' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">某上翹菇</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXxQg_1dXAS6zUSuf-V4CG-xJTacepKldKRfE7HZGX07BjtFaEDXuvDDHE3Z8CQ6McMaFKPkY_KlY5ZkHNkfyI2DrQ3Sq7dvP2LSlMnBue6UkPW6UeopdWEAW16GxcQFRk5Z8qn3Oxiz_ZKlOQQB2O-FA=w1255-h941-no?authuser=1" alt='某小小菇' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">某小小菇</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW3m5lUsyGHmLkdwgF9jE1t9h_jQhMzl492ZEpi_zufH8ZBkkbhdujpWyxhGxjwtv0Lg5GI81fKB-I-9ExQSJBpD0qgF_paWgnEx_cxDAjTMubtGkgvESIs-nZ7ZuwfhQaO7tRaPNoOWVj7CPnaUqFu_w=w1255-h941-no?authuser=1" alt='某菇' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">某菇</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWVfwKb1qQLPZX_vJdXs1OIBn-F8ICLtcWoyLksStgtwsoI88z8xS2JBFb8I0Uu_DFYq74QCncioNz8hgtaE6twK1NQd6o7DGmSQoSIPzNEDftrs5s2bDrxzJdPtZHCtC9o5phn2nDQpAXTj3wOS7SSEg=w1255-h941-no?authuser=1" alt='某真菌或地衣 (猜測是潔多枝瑚菌)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">某真菌或地衣 (猜測是潔多枝瑚菌)</center>
    </figcaption>
  </figure>
</p>
</div></div>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWq2Kva8SvnWpuSH-8fDg1SftgpB2Wuf2A0O81qRStvSxpWrlLsjvbNZix0sQ121VpGHOigNeUaYkVLoIt8TMUIzQsHHqz-TKK10X301ej4mEqj2gzjc8R-8cW5khJqql6cUu4Iv0Nh0t4AvKmLcPBfow=w1255-h941-no?authuser=1" alt='某天牛 (可能是畢氏姬鋸天牛)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">某天牛 (可能是畢氏姬鋸天牛)</center>
    </figcaption>
  </figure>
</p>
<h1 id="溪頭" class="article-heading">溪頭 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ba%aa%e9%a0%ad">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>如前言所述，原先預計走外圍，然而計畫趕不上變化，還是進了園區，人數並沒有想像的多，雖然鼓勵戴上口罩，但是不乏仍有人不戴且高談闊論，遇到咳嗽的只能雨傘打開快速通過。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVC_--pSlKGHrXJhSAo0hbGqkIBHfkqmrkd0QoXTuGB1rtxUoB1TjBr3Xfi7crKYJiunEV507MsS8mj0BFT73Vf7k-YwjGE_bg8UEwPA94QLlVqAVtiBcnM2vu38SraouGMCuKrdRXtlvLJRhE5EYuNvA=w1255-h941-no?authuser=1" alt='大學池' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">大學池</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUesIYMOe8ZE8kikMQHvddHQ2u3cA2_brKOc7GYUNGOLOGtqLjFtFq21-ujQztnLEEK7qqm50u6id75QaJByiER2b7bcH-OzWCLCm8XROSvnc4qY-SOWK7B1nnttMlIcqhEyjBUBV-k0jwhfpF9qbaWmQ=w1255-h941-no?authuser=1" alt='仰頭松鼠' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">仰頭松鼠</center>
    </figcaption>
  </figure>
</p>
<h1 id="雜記" class="article-heading">雜記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%9c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>三個晚上不幸的是都處於多雲有霧，勉強趁著空檔用手機夜拍模式捕捉零星星空，然後又被雲霧吞沒。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXB9XwBh_2rh-nK7e2IfBa9vx3Y_MaEbDtu8oSTFWo5AAi6saNpdC7ooYpoftQkEB6P2GW5fin2HWPU1iTurZeVP2z2OjAQ1RMA7ZSstgl7OD61bVkuKRoAQHyfpLCThFl5X1mTs6aLIm2et4Df8NbW4g=w1255-h941-no?authuser=1" alt='S21U 夜拍手持就有不錯效果，此為使用腳架' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">S21U 夜拍手持就有不錯效果，此為使用腳架</center>
    </figcaption>
  </figure>
</p>
<p>被下午茶的豐富度嚇到了，趕緊用泡麵壓壓驚，我弟推薦麻辣口味。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLULEEqCU6RrfPv2iuCEg9q2oJsukX0RYDEQoQffCAP3h9lPIhY-7zgA-KOAOrGVhHJeLlxa2-enGrQbWHsVK0g_bwu_NaObdMmxKdeCwvVb_DGOquKWMZCDEjLuQb20WlIVMNb7j5PrxrXKUvqXE-yR5Q=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<p>量子生活館是&hellip;?</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW-tY5o1FYTonib5-yrCDuLwSOlRXXK7mKyZtltPCX6gOhSc2fAzS2xYUX_EDjbW2mpXFT2mwL-q6V12pfopX_1vwRZpM4XqnoVwJTNsHLP5zXj85yimLlq-a2j-PoARVAny6nRRnKr-D01Duxn2jyFpA=w1255-h941-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有些圖片沒在本文中，可以到<a href="https://photos.app.goo.gl/URbmXYnBKw4e2oqg8" title="分享相簿" aria-label="分享相簿"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 分享相簿</a>中查看。</p>
<p>越來越不喜歡手機拍出來的假假效果，而且慧差 已經嚴重影響拍近物的體驗 (可以上去看 &ldquo;素刺蛾幼蟲&rdquo; 那張)。開始考慮入手個人第一台相機 (之前都是家裡買的，不算 XD)。不過這也讓我想到後續一連串的開銷: 其他鏡頭、防潮箱、圖床，甚至怕買了之後不會常用 @@</p>
 
        ]]></description></item><item><title>Weekly Collection</title><link>https://aben20807.github.io/posts/20220704-weekly-collection/</link><pubDate>Sun, 10 Jul 2022 17:33:30 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220704-weekly-collection/</guid><description><![CDATA[
          <p>資訊大爆炸，留下一些看過的痕跡 (不知道會持續更新多久 OuO)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220704-weekly-collection/"><img src="https://images.unsplash.com/photo-1654071976078-b3906c59719f?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220704-weekly-collection/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>資訊大爆炸，留下一些看過的痕跡 (不知道會持續更新多久 OuO)。</p>
<p>目前不定期出沒。</p>
<h1 id="演算法圖示講解" class="article-heading">演算法圖示講解 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%bc%94%e7%ae%97%e6%b3%95%e5%9c%96%e7%a4%ba%e8%ac%9b%e8%a7%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>來源: <a href="https://www.facebook.com/permalink.php?story_fbid=pfbid02q7jDJ36PspFkUeKezrKP7torKj2teXtFVxT82TWCch1pzagZqfK3xo1i4hwXpfCPl&amp;id=105673814305452" title="用圖片高效學程式 FB" aria-label="用圖片高效學程式 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 用圖片高效學程式 FB</a></li>
</ul>
<h1 id="設計模式-software-design-pattern" class="article-heading">設計模式 (Software design pattern) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e8%a8%88%e6%a8%a1%e5%bc%8f-software-design-pattern">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>來源: <a href="http://www.mcdonaldland.info/2007/11/28/40/" title="DESIGN PATTERNS QUICK REFERENCE" aria-label="DESIGN PATTERNS QUICK REFERENCE"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> DESIGN PATTERNS QUICK REFERENCE</a></li>
<li>連結: <a href="http://www.mcdonaldland.info/files/designpatterns/designpatternscard.pdf" title="檔案" aria-label="檔案"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 檔案</a></li>
<li><a href="https://drive.google.com/file/d/19d3_0ImtJSC_IBHKq-gKE5Fk5YsKl6EA/view?usp=sharing" title="備份" aria-label="備份"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 備份</a></li>
</ul>
<h1 id="css-layout" class="article-heading">CSS Layout 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#css-layout">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>ref: <a href="https://csslayout.io/" title="https://csslayout.io/" aria-label="https://csslayout.io/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://csslayout.io/</a></li>
</ul>
<h1 id="vim-90-發布" class="article-heading">Vim 9.0 發布 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vim-90-%e7%99%bc%e5%b8%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>從 Vim Script 改使用 Vim9 Script 。從 ThePrimeagen (下方 youtube 影片) 的觀點來看，針對自己的系統發明一個語言不是明智之選，Neovim  使用 Lua  是一個較好的方向，所以他仍會繼續使用 Neovim。</p>







 
<h1 id="跨平台開發套件" class="article-heading">跨平台開發套件 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%a8%e5%b9%b3%e5%8f%b0%e9%96%8b%e7%99%bc%e5%a5%97%e4%bb%b6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>原先一般會用 <a href="https://www.electronjs.org/" title="Electron" aria-label="Electron"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Electron</a> (GitHub 開發的開源框架 )，但是缺點太多 (檔案過大、記憶體使用量過多)，主因是使用 <a href="https://nodejs.org/en/about/" title="Node.js" aria-label="Node.js"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Node.js</a> 當作後端，且前端使用 <a href="https://www.chromium.org/chromium-projects/" title="Chromium" aria-label="Chromium"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Chromium</a>，有名的使用案例是 <a href="https://github.com/atom/atom" title="Atom editor" aria-label="Atom editor"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Atom editor</a> (可惜 GitHub 年底要收掉它了)。Tauri 將後端轉成 Rust，前端為自行開發的輕量框架 (TAO, WRY)，大幅減少相關資源的使用量。</p>
<ul>
<li>官網: <a href="https://tauri.app/" title="https://tauri.app/" aria-label="https://tauri.app/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://tauri.app/</a></li>
<li>GitHub: <a href="https://github.com/tauri-apps/tauri" title="https://github.com/tauri-apps/tauri" aria-label="https://github.com/tauri-apps/tauri"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/tauri-apps/tauri</a></li>
</ul>
<h1 id="jserv-分享有關-linux-核心程式碼開發風格" class="article-heading">Jserv 分享有關 Linux 核心程式碼開發風格 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#jserv-%e5%88%86%e4%ba%ab%e6%9c%89%e9%97%9c-linux-%e6%a0%b8%e5%bf%83%e7%a8%8b%e5%bc%8f%e7%a2%bc%e9%96%8b%e7%99%bc%e9%a2%a8%e6%a0%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.facebook.com/groups/system.software2022/posts/2088482591333140/" title="FB 貼文" aria-label="FB 貼文"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> FB 貼文</a></li>
<li>投影片: <a href="https://elinux.org/images/4/4f/Kernel-Coding-The-Upstream-Way.pdf" title="Kernel-Coding-The-Upstream-Way.pdf" aria-label="Kernel-Coding-The-Upstream-Way.pdf"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Kernel-Coding-The-Upstream-Way.pdf</a></li>
<li>線上說明:</li>
</ul>







 
<h1 id="各種-roadmap" class="article-heading">各種 roadmap 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%90%84%e7%a8%ae-roadmap">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://roadmap.sh/" title="https://roadmap.sh/" aria-label="https://roadmap.sh/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://roadmap.sh/</a></li>
</ul>
<h1 id="我们为何工作" class="article-heading">我们为何工作？ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%91%e4%bb%ac%e4%b8%ba%e4%bd%95%e5%b7%a5%e4%bd%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://jdhao.github.io/2022/07/07/thought_on_working/" title="我们为何工作？ - jdhao&amp;rsquo;s digital space" aria-label="我们为何工作？ - jdhao&amp;rsquo;s digital space"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 我们为何工作？ - jdhao&rsquo;s digital space</a></li>
<li>作者定義的 &ldquo;好公司&rdquo;:</li>
</ul>
<blockquote>
<p>工作时间灵活，不会耗在公司假装努力<br>
关心员工的职业发展，不会拼命压榨<br>
有时间去学习新东西，去成长，不会一直忙于业务<br>
开会要少，很多会长时间浪费参与者时间，没有任何用<br>
薪水达到平均水平，不一定最高</p>
</blockquote>
<h1 id="免費日系中文字體" class="article-heading">免費日系中文字體 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%8d%e8%b2%bb%e6%97%a5%e7%b3%bb%e4%b8%ad%e6%96%87%e5%ad%97%e9%ab%94">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>介紹: <a href="https://free.com.tw/naikaifont/?utm_content=buffer2571b&amp;utm_medium=social&amp;utm_source=facebook.com&amp;utm_campaign=buffer" title="內海字體：瀨戶字體繁體中文字型免費下載，五種字重可做商業用途" aria-label="內海字體：瀨戶字體繁體中文字型免費下載，五種字重可做商業用途"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 內海字體：瀨戶字體繁體中文字型免費下載，五種字重可做商業用途</a></li>
<li>GitHub: <a href="https://github.com/max32002/naikaifont" title="https://github.com/max32002/naikaifont" aria-label="https://github.com/max32002/naikaifont"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/max32002/naikaifont</a></li>
</ul>
<h1 id="有趣的ㄐㄐ知識" class="article-heading">有趣的ㄐㄐ知識 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%89%e8%b6%a3%e7%9a%84%e3%84%90%e3%84%90%e7%9f%a5%e8%ad%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.wildonetaiwan.org/node/258" title="鄉民的科學：淺嚐自然界勃大莖深的奧秘｜ Ep.2 重口味的交配行為與ㄐㄐ" aria-label="鄉民的科學：淺嚐自然界勃大莖深的奧秘｜ Ep.2 重口味的交配行為與ㄐㄐ"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 鄉民的科學：淺嚐自然界勃大莖深的奧秘｜ Ep.2 重口味的交配行為與ㄐㄐ</a></li>
</ul>
<h1 id="資訊梗圖" class="article-heading">資訊梗圖 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e8%a8%8a%e6%a2%97%e5%9c%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWl0rmmXILhksMnR52775RZAoH8rnhjM88d677SFuZdQenP4czBcOX8pGXxCRzKy172FnGUUfYK9wIXkwQu47bHf1AI5MbS4kfn5V3lTUuiuqnxyDrMa7RcCy8SkROwvtDE58VSHKuerjbx2jvA8ERDMw=w660-h738-no?authuser=1" alt='python 蒸蚌' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">python 蒸蚌</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUCqnJAu5HbDqKBAVIj70uYsvvF-DkeCkKq2iLd5_HyUeNztxIBw1CeyAYKek58Wl5T41v3njfzoP7LjzntvwOpojvIFXYJDbs_N8aV6D_AsCeusInQoqcPguIwux6_KZ44x-iU7ZznaHkWuMtQp6zDPw=w500-h760-no?authuser=1" alt='javascript 蒸蚌' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">javascript 蒸蚌</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>Weekly Collection</title><link>https://aben20807.github.io/posts/20220627-weekly-collection/</link><pubDate>Sun, 03 Jul 2022 16:20:36 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220627-weekly-collection/</guid><description><![CDATA[
          <p>資訊大爆炸，留下一些看過的痕跡 OuO。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220627-weekly-collection/"><img src="https://images.unsplash.com/photo-1654071976078-b3906c59719f?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220627-weekly-collection/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>資訊大爆炸，留下一些看過的痕跡 OuO。</p>
<p>目前不定期出沒。</p>
<h1 id="線性搜尋前把資料先排序會更快" class="article-heading">線性搜尋前把資料先排序會更快 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b7%9a%e6%80%a7%e6%90%9c%e5%b0%8b%e5%89%8d%e6%8a%8a%e8%b3%87%e6%96%99%e5%85%88%e6%8e%92%e5%ba%8f%e6%9c%83%e6%9b%b4%e5%bf%ab">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>C++ psudo code。有 <code>std::sort(data, data + array_size);</code> 的版本會比沒有的快，原因是 branch prediction 議題，詳情請參考下面連結。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span>std<span style="color:#ff79c6">::</span>sort(data, data <span style="color:#ff79c6">+</span> array_size);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">long</span> <span style="color:#8be9fd">long</span> sum <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i{<span style="color:#bd93f9">0</span>}; i <span style="color:#ff79c6">&lt;</span> array_size; <span style="color:#ff79c6">++</span>i) {
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (data[i] <span style="color:#ff79c6">&gt;=</span> <span style="color:#bd93f9">128</span>) {
</span></span><span style="display:flex;"><span>        sum <span style="color:#ff79c6">+=</span> data[i];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><ul>
<li>original post: <a href="https://www.facebook.com/bangye.wu/posts/pfbid02HbDgeRAonnCtxzFAjDipGcDKURcdKTYRnssV4fxwZ7y9nMyoHszFnvXRrsZc3Tozl" title="吳邦一 FB" aria-label="吳邦一 FB"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 吳邦一 FB</a></li>
<li>Related article:
<ul>
<li><a href="https://williammou.notion.site/f95a1e71188d4ff7a1f5e568ec054346" title="浪費時間排序陣列，程式執行卻變快了？" aria-label="浪費時間排序陣列，程式執行卻變快了？"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 浪費時間排序陣列，程式執行卻變快了？</a></li>
<li><a href="https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array" title="Why is processing a sorted array faster than processing an unsorted array?" aria-label="Why is processing a sorted array faster than processing an unsorted array?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Why is processing a sorted array faster than processing an unsorted array?</a></li>
</ul>
</li>
</ul>
<h1 id="如何面對-burnt-out-software-engineering" class="article-heading">如何面對 burnt out (software engineering) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e4%bd%95%e9%9d%a2%e5%b0%8d-burnt-out-software-engineering">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>很多時候沒有容易的解決方法，很難解釋為何這麼難過</li>
<li>很多種原因: 挑戰過低太無聊、自覺太過渺小無法改變任何事、工作太過困難遲遲找不到解法、持續累積的焦慮跟疲憊、把太多人生意義建立在工作上&hellip;</li>
<li>短暫休假其實也很難解決，這只是治標不治本</li>
<li>可能是正在討厭目前做的事情，花時間反思自己正在做的事情，可考慮改變</li>
</ul>







 
<h1 id="latex-符號手寫辨識" class="article-heading">Latex 符號手寫辨識 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#latex-%e7%ac%a6%e8%99%9f%e6%89%8b%e5%af%ab%e8%be%a8%e8%ad%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>想查詢某個符號的 latex code 直接畫一遍: <a href="http://detexify.kirelabs.org/classify.html" title="http://detexify.kirelabs.org/classify.html" aria-label="http://detexify.kirelabs.org/classify.html"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> http://detexify.kirelabs.org/classify.html</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUJyuc6fP_Q2sbDrRB_Am4uglvZ7Ck6_crXrw6UOVMkf2LbeKdtcmN6RnCe5z6-2x6rkvOlFsHdKs4OwhrG2cAs8U-ombwskgDGSTvQnl1TFrr5ncfAAs6o6FTbn3X8I8ZxNY0Njipk6gS__yjEUTkMBg=w1102-h613-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="latex-各種格式" class="article-heading">Latex 各種格式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#latex-%e5%90%84%e7%a8%ae%e6%a0%bc%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.notion.so/KaTeX-Formatting-8f2a6470b9d34fa98be19ad25dfc587d" title="https://www.notion.so/KaTeX-Formatting-8f2a6470b9d34fa98be19ad25dfc587d" aria-label="https://www.notion.so/KaTeX-Formatting-8f2a6470b9d34fa98be19ad25dfc587d"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.notion.so/KaTeX-Formatting-8f2a6470b9d34fa98be19ad25dfc587d</a></li>
</ul>
<h1 id="word-溫度符號陣營表" class="article-heading">word 溫度符號陣營表 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#word-%e6%ba%ab%e5%ba%a6%e7%ac%a6%e8%99%9f%e9%99%a3%e7%87%9f%e8%a1%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>來源: <a href="https://www.facebook.com/GraduateStudentMemes/posts/pfbid031tqyHvzrfaUBjeEXGsCJj6TZJ83HU5sj1SBRiysFtyxWFRAmr3KiRLUdU2Zcvdepl" title="研究生迷因Graduate Student Memes" aria-label="研究生迷因Graduate Student Memes"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 研究生迷因Graduate Student Memes</a></li>
<li>一堆符號真是麻煩 (x</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://scontent-tpe1-1.xx.fbcdn.net/v/t39.30808-6/290577601_5264627240320617_287340409103735574_n.png?_nc_cat=1&amp;ccb=1-7&amp;_nc_sid=0debeb&amp;_nc_ohc=hsj3D9jZ5mIAX_NGIE0&amp;_nc_ht=scontent-tpe1-1.xx&amp;oh=00_AT_asceZjG_Gc1_RbOTkSWVe_bihJSV3WaxyJ0jubdM6mA&amp;oe=62C49169" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<h1 id="罪惡王冠中量子加密系統" class="article-heading">罪惡王冠中量子加密系統 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%bd%aa%e6%83%a1%e7%8e%8b%e5%86%a0%e4%b8%ad%e9%87%8f%e5%ad%90%e5%8a%a0%e5%af%86%e7%b3%bb%e7%b5%b1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近重看小時候的神作中。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVWKhyM1FvIYB34snh08w5daiJHcnI8CLurZiKLsOLU9B2X5iLSWe5NyvMrle660LM_FeTufblXIC043w7B4EyUxmohR0CuZ9XO4WaIn1ZAq_pL9AUz8HqZYQt4aBdR5bFUTKElZNT6f0VhiJ-9GN5bhQ=w2021-h1137-no?authuser=1" alt='06 牢籠：leukocytes' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">06 牢籠：leukocytes</center>
    </figcaption>
  </figure>
</p>
<h1 id="陳天奇-tianqi-chen-線上課程" class="article-heading">陳天奇 (Tianqi Chen) 線上課程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%99%b3%e5%a4%a9%e5%a5%87-tianqi-chen-%e7%b7%9a%e4%b8%8a%e8%aa%b2%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>課程連結: <a href="https://mlc.ai/summer22-zh/" title="https://mlc.ai/summer22-zh/" aria-label="https://mlc.ai/summer22-zh/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://mlc.ai/summer22-zh/</a></li>
<li>內容應該是跟機器學習的編譯技術相關</li>
<li>可參考相關專案: <a href="https://github.com/apache/tvm" title="apache/tvm" aria-label="apache/tvm"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> apache/tvm</a></li>
</ul>
<h1 id="讓一般人動手打造屬於自己的晶片google-免費晶片開發平台有多佛" class="article-heading">讓一般人動手打造屬於自己的晶片！Google 免費晶片開發平台有多佛？ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%ae%93%e4%b8%80%e8%88%ac%e4%ba%ba%e5%8b%95%e6%89%8b%e6%89%93%e9%80%a0%e5%b1%ac%e6%96%bc%e8%87%aa%e5%b7%b1%e7%9a%84%e6%99%b6%e7%89%87google-%e5%85%8d%e8%b2%bb%e6%99%b6%e7%89%87%e9%96%8b%e7%99%bc%e5%b9%b3%e5%8f%b0%e6%9c%89%e5%a4%9a%e4%bd%9b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>文章連結: <a href="https://buzzorange.com/techorange/2022/06/16/physicalchip-google-opensource/" title="https://buzzorange.com/techorange/2022/06/16/physicalchip-google-opensource/" aria-label="https://buzzorange.com/techorange/2022/06/16/physicalchip-google-opensource/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://buzzorange.com/techorange/2022/06/16/physicalchip-google-opensource/</a></li>
<li>相關連結: <a href="https://developers.google.com/silicon" title="Build Custom Silicon with Google" aria-label="Build Custom Silicon with Google"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Build Custom Silicon with Google</a></li>
<li>短評: 竟然已經可以自己做晶片了。</li>
</ul>
<h1 id="over-engineering-是軟體開發者職涯中的一部分" class="article-heading">Over-engineering 是軟體開發者職涯中的一部分 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#over-engineering-%e6%98%af%e8%bb%9f%e9%ab%94%e9%96%8b%e7%99%bc%e8%80%85%e8%81%b7%e6%b6%af%e4%b8%ad%e7%9a%84%e4%b8%80%e9%83%a8%e5%88%86">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>文章連結: <a href="https://yurenju.medium.com/over-engineering-685ebc009fca" title="https://yurenju.medium.com/over-engineering-685ebc009fca" aria-label="https://yurenju.medium.com/over-engineering-685ebc009fca"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://yurenju.medium.com/over-engineering-685ebc009fca</a></li>
<li>短評: 很多時候真的會因為自己學到的酷東西把它加到專案中，但是反而增加了複雜度，不過我目前還是不太會拿捏。一開始建議先建立一個可以跑的雛型，然後再不斷重構，而不是一開始就新增許多未來不一定會用到的功能。</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUgc-Cme9qhDyTk13AaCBDlm7BVtEt6Z1VcrhYpUeL37cTxK3TXZ14QzFgmTkwH5g1kdClYT8KASST-0D2KL2WJwIOH79-ZRXjtaaArnj5XthO9nIO8IZ2TQfpBsh1SXPKiQ5m7vNsUbuK2jlRFy1wzAA=w1133-h1232-no?authuser=1" alt=' Refactoring!' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> Refactoring!</center>
    </figcaption>
  </figure>
</p>
<h1 id="廢棄物不能忽視的鋁渣難題廢鋁渣流竄全台如何解-我們的島-1162集-2022-06-27" class="article-heading">【廢棄物】不能忽視的鋁渣難題｜廢鋁渣流竄全台如何解？ (我們的島 1162集 2022-06-27) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bb%a2%e6%a3%84%e7%89%a9%e4%b8%8d%e8%83%bd%e5%bf%bd%e8%a6%96%e7%9a%84%e9%8b%81%e6%b8%a3%e9%9b%a3%e9%a1%8c%e5%bb%a2%e9%8b%81%e6%b8%a3%e6%b5%81%e7%ab%84%e5%85%a8%e5%8f%b0%e5%a6%82%e4%bd%95%e8%a7%a3-%e6%88%91%e5%80%91%e7%9a%84%e5%b3%b6-1162%e9%9b%86-2022-06-27">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>看了之後篇難過。</li>
</ul>







 
<h1 id="程式解題整理" class="article-heading">程式解題整理 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a8%8b%e5%bc%8f%e8%a7%a3%e9%a1%8c%e6%95%b4%e7%90%86">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://hackmd.io/@cube/H1Q4zMJmt" title="AP325 練習題單" aria-label="AP325 練習題單"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> AP325 練習題單</a></li>
<li><a href="https://drive.google.com/drive/mobile/folders/10hZCMHH0YgsfguVZCHU7EYiG8qJE5f-m?usp=sharing" title="AP325講義(中正大學 吳邦一教授)" aria-label="AP325講義(中正大學 吳邦一教授)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> AP325講義(中正大學 吳邦一教授)</a></li>
</ul>
<h1 id="回憶" class="article-heading">回憶 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9b%9e%e6%86%b6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近常常回去找以前的東西，發現有一些錄音檔但是是 ACT，搜尋了一下如何轉檔時赫然發現人因科技 (當年我用的 MP4 廠牌) 提供的程式還可以執行。連結: <a href="https://www.ergocity.com.tw/Page/Download_10" title="https://www.ergocity.com.tw/Page/Download_10" aria-label="https://www.ergocity.com.tw/Page/Download_10"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.ergocity.com.tw/Page/Download_10</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVqZcMB6CnPJzkuvOw7O-rbdPxhrqjepyiTqRwgJB2xPRG-Yx0SfRenmbRCuOdI4upTr1BUX4C1SsDW3iCqZ_czMZVVGNjVx4EPfkWcHy7MNynryUbgR2wjtwhjM34pXSlCnDcB9KQ1hhyv7sQwlzmGwA=w969-h960-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Hugo Code Block Language Label</title><link>https://aben20807.github.io/posts/20220701-hugo-code-block-language-label/</link><pubDate>Fri, 01 Jul 2022 15:21:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220701-hugo-code-block-language-label/</guid><description><![CDATA[
          <p>在程式碼區塊上標記使用的語言。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220701-hugo-code-block-language-label/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLXwUBbp_a6cib7ESAMRxzc2Jw6Qe-_mGWFhgsju7wUIHrF1-mZFpTjoaMn257S8nCPRTBvGRacmd3JxdRFNjY-mVI9F8zljf3Thau49GJ3GJHk9HnARXnpvnEMcRPbZeeskBLbwFNbMej2NzINyOqlb0A=w1013-h762-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220701-hugo-code-block-language-label/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>在程式碼區塊上標記使用的語言。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>原先看到可以用 CSS 的 <code>attr()</code> 來拿 <code>data-lang</code> 的內容再用 <code>:before</code> 或 <code>:after</code> 加在程式碼區塊，不過用起來有點受限 (只會出現在黑框內，無法如圖所示顯示在外面，且會影響到行數顯示)。因此還是暴力用 javascript 解決，目前還都是可以用就好，什麼寫法都來一點的狀態 (好險沒有維護的需求 OuO)。</p>
<p>另外，還是要給的警告，當然不是下面的程式貼到自己的 hugo 主題就可以動，還是需要用開發人員模式去觀察一下 code pre 的長相再去修改。</p>
<p>參考來源: <a href="https://github.com/highlightjs/highlight.js/issues/1108#issuecomment-608415953" title="https://github.com/highlightjs/highlight.js/issues/1108#issuecomment-608415953" aria-label="https://github.com/highlightjs/highlight.js/issues/1108#issuecomment-608415953"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/highlightjs/highlight.js/issues/1108#issuecomment-608415953</a></p>
<h1 id="程式碼" class="article-heading">程式碼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a8%8b%e5%bc%8f%e7%a2%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#6272a4">/* show the code label for code highlight block */</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">document</span>.addEventListener(<span style="color:#f1fa8c">&#39;DOMContentLoaded&#39;</span>, <span style="color:#8be9fd;font-style:italic">function</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd;font-style:italic">let</span> highlight <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">document</span>.querySelectorAll(<span style="color:#f1fa8c">&#39;div.highlight&#39;</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd;font-style:italic">Array</span>.prototype.forEach.call(highlight, <span style="color:#8be9fd;font-style:italic">function</span>(block) {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">let</span> code <span style="color:#ff79c6">=</span> block.querySelectorAll(<span style="color:#f1fa8c">&#39;pre code[data-lang]&#39;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">let</span> language <span style="color:#ff79c6">=</span> code[<span style="color:#bd93f9">0</span>].getAttribute(<span style="color:#f1fa8c">&#39;data-lang&#39;</span>);
</span></span><span style="display:flex;"><span>    block.insertAdjacentHTML(<span style="color:#f1fa8c">&#34;beforebegin&#34;</span>,<span style="color:#f1fa8c">`&lt;label class=&#34;code-label&#34;&gt;</span><span style="color:#f1fa8c">${</span>language<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&lt;/label&gt;`</span>);
</span></span><span style="display:flex;"><span>  });
</span></span><span style="display:flex;"><span>})
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span><span style="color:#ff79c6">label</span>.<span style="color:#50fa7b">code-label</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">font-size</span>: <span style="color:#bd93f9">60</span><span style="color:#8be9fd">%</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">color</span>: <span style="color:#bd93f9">#f6f6f6</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">background-color</span>: <span style="color:#50fa7b">var</span>(<span style="color:#ff79c6">--</span>deep<span style="color:#ff79c6">-</span><span style="color:#ff79c6">blue</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">padding</span>:<span style="color:#bd93f9">1</span><span style="color:#8be9fd">px</span> <span style="color:#bd93f9">5</span><span style="color:#8be9fd">px</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">border-radius</span>: <span style="color:#bd93f9">7</span><span style="color:#8be9fd">px</span> <span style="color:#bd93f9">7</span><span style="color:#8be9fd">px</span> <span style="color:#bd93f9">0</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">display</span>: <span style="color:#ff79c6">table-cell</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">vertical-align</span>: <span style="color:#ff79c6">bottom</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">text-align</span>: <span style="color:#ff79c6">center</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">min-width</span>: <span style="color:#bd93f9">1</span><span style="color:#8be9fd">rem</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXwUBbp_a6cib7ESAMRxzc2Jw6Qe-_mGWFhgsju7wUIHrF1-mZFpTjoaMn257S8nCPRTBvGRacmd3JxdRFNjY-mVI9F8zljf3Thau49GJ3GJHk9HnARXnpvnEMcRPbZeeskBLbwFNbMej2NzINyOqlb0A=w1013-h762-no?authuser=1" alt='成果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">成果</center>
    </figcaption>
  </figure>
</p>
<h1 id="問題" class="article-heading">問題 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%95%8f%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>目前還是有些缺點沒有解決，主要是 hugo 使用的 highlight 方法 (<a href="https://github.com/alecthomas/chroma" title="chroma" aria-label="chroma"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> chroma</a>) 在擴充性上不太方便，例如我想要新增別名 (alias)，而似乎只能改 code 達成，不太行。</p>
<h1 id="alias" class="article-heading">Alias 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#alias">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>上述問題已經 &ldquo;利用額外設定屬性的方式&rdquo; 繞過 OuO，將上面的 js 程式碼改用下面的版本即可。使用方式請參考 <a href="/posts/features/#code-block-alias"target="_blank" rel="noreferrer noopener">Features#code-block-alias</a>。</p>
<div class="highlight" name="OuO"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-javascript" data-lang="javascript"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">document</span>.addEventListener(<span style="color:#f1fa8c">&#39;DOMContentLoaded&#39;</span>, <span style="color:#8be9fd;font-style:italic">function</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd;font-style:italic">let</span> highlight <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">document</span>.querySelectorAll(<span style="color:#f1fa8c">&#39;div.highlight&#39;</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd;font-style:italic">Array</span>.prototype.forEach.call(highlight, <span style="color:#8be9fd;font-style:italic">function</span>(block) {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">let</span> code <span style="color:#ff79c6">=</span> block.querySelectorAll(<span style="color:#f1fa8c">&#39;pre code[data-lang]&#39;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">let</span> language <span style="color:#ff79c6">=</span> code[<span style="color:#bd93f9">0</span>].getAttribute(<span style="color:#f1fa8c">&#39;data-lang&#39;</span>);
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    <span style="color:#8be9fd;font-style:italic">let</span> alias <span style="color:#ff79c6">=</span> block.getAttribute(<span style="color:#f1fa8c">&#39;name&#39;</span>);
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    <span style="color:#ff79c6">if</span> (alias <span style="color:#ff79c6">!=</span> <span style="color:#ff79c6">null</span>) {
</span></span><span style="display:flex; background-color:#3d3f4a"><span>      language <span style="color:#ff79c6">=</span> alias;
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    }
</span></span><span style="display:flex;"><span>    block.insertAdjacentHTML(<span style="color:#f1fa8c">&#34;beforebegin&#34;</span>,<span style="color:#f1fa8c">`&lt;label class=&#34;code-label&#34;&gt;</span><span style="color:#f1fa8c">${</span>language<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&lt;/label&gt;`</span>);
</span></span><span style="display:flex;"><span>  });
</span></span><span style="display:flex;"><span>})
</span></span></code></pre></div>
        ]]></description></item><item><title>Shor's Algorithm Part2</title><link>https://aben20807.github.io/posts/20220630-shor-algorithm-part2/</link><pubDate>Thu, 30 Jun 2022 10:34:01 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220630-shor-algorithm-part2/</guid><description><![CDATA[
          <p>追加一些深入探討，以及解決上一篇留下的疑問。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>追加一些深入探討，以及解決上一篇留下的疑問。</p>
<p>有錯再麻煩指正，感謝。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>上一篇 <a href="/posts/20220626-shor-algorithm/" title="Shor&amp;rsquo;s Algorithm" aria-label="Shor&amp;rsquo;s Algorithm" >Shor&rsquo;s Algorithm</a> 中，圖形化範例使用的是 2-bit，後來仔細想想，因為剛好可以解決 $N = 15, g=7$ 的問題，導致看不出 phase kickback 的影響。因此本篇使用更多的 counting bit 來嘗試說明。</p>
<h1 id="使用更大的-t-來說明" class="article-heading">使用更大的 t 來說明 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8%e6%9b%b4%e5%a4%a7%e7%9a%84-t-%e4%be%86%e8%aa%aa%e6%98%8e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>在 $t = 4$ 的情況下，若使用之前文章 (<a href="/posts/20220623-quantum-phase-estimation/#邏輯閘" title="Quantum Phase Estimation - 邏輯閘" aria-label="Quantum Phase Estimation - 邏輯閘" >Quantum Phase Estimation - 邏輯閘</a>) 的公式 ($c[i]$ 在 IQFT 的輸入為 $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i (2^{t-i-1}\frac{s}{r})}\lvert 1\rangle), \frac{s}{r} = \varphi$)，會發現符合預期，即 $c[2], c[3]$ 會被抵銷掉。而會被抵銷的原因就是從下方 $\mu$ 的 phase kickback 所導致 (這在 $t = 2$ 時看不出來)。</p>
<p>$t = 4, 0\le i &lt;t, k = i+1, r = 4$</p>
<table>
<thead>
<tr>
<th style="text-align:center">$c[i]$</th>
<th style="text-align:center">$k$</th>
<th style="text-align:center">$e^{2\pi i (2^{t-k}\times\frac{0}{r})}$</th>
<th style="text-align:center">$e^{2\pi i (2^{t-k}\times\frac{1}{r})}$</th>
<th style="text-align:center">$e^{2\pi i (2^{t-k}\times\frac{2}{r})}$</th>
<th style="text-align:center">$e^{2\pi i (2^{t-k}\times\frac{3}{r})}$</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$c[0]$</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">$c[1]$</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">$c[2]$</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">$c[3]$</td>
<td style="text-align:center">4</td>
<td style="text-align:center">1</td>
<td style="text-align:center">i</td>
<td style="text-align:center">-1</td>
<td style="text-align:center">-i</td>
</tr>
</tbody>
</table>
<p>上方表格展示了 $c[i]$ 對應的輸出 (IQFT 的輸入)，若是增加 counting bit 的數量，後來增加的也都會因為週期關係使得總和為 $0$。這裡對應的就是 <a href="/posts/20220626-shor-algorithm/#eigenvector" title="Shor&amp;rsquo;s Algorithm - Eigenvector" aria-label="Shor&amp;rsquo;s Algorithm - Eigenvector" >Shor&rsquo;s Algorithm - Eigenvector</a> 的四個 eigenvector。圖形化對應如下圖，可以看到下方 $\mu$ 的輸出與有沒有 $c[2], c[3]$ 無關。因此 $t=4$ 只會有四種觀測結果 (&lsquo;0000&rsquo;, &lsquo;0100&rsquo;, &lsquo;1000&rsquo;, &lsquo;1100&rsquo;) 因為前兩個位元還是 0, 1 各半的疊加態，其餘為 0。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWU695gDORithWQjX8Ic8T8Q1xOthZGJYFqdgMB_Ug6dvS9-pQmJUOsSc6vFMdgj_8fjTorPzbfewdVo2GUmKk-09x8vYwQvkLoJjZbPat4Mocm1Ro-hWk0CURvPaaz9ADA_h6kEHM-RKbrGuRchWpDcg=w2021-h780-no?authuser=1" alt='t = 4; <a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/">CC BY 4.0 Huang, Po-Hsuan</a>' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">t = 4; <a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/">CC BY 4.0 Huang, Po-Hsuan</a></center>
    </figcaption>
  </figure>
</p>
<p>同理，$t$ 變大時一樣只會有四種觀測結果 (&lsquo;000&hellip;0&rsquo;, &lsquo;010&hellip;0&rsquo;, &lsquo;100&hellip;0&rsquo;, &lsquo;110&hellip;0&rsquo;) 因為前兩個位元還是 0, 1 各半的疊加態，其餘為 0。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6JQ0PnzZ2aIFde43E0uRDgKZEpF2kwb2vctNGAGFI_AM01EIwt_Gs8Ttym8kAYy_aslaIySzB_TMt2FZRo0ZZLR2umXPJCX6EO62aL6SWEducAQIXKdurDsntTCU0BkB-VLF0U6YoBo-AdgtFN2T1LA=w2021-h863-no?authuser=1" alt='Generalized; <a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/">CC BY 4.0 Huang, Po-Hsuan</a>' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Generalized; <a href="https://aben20807.github.io/posts/20220630-shor-algorithm-part2/">CC BY 4.0 Huang, Po-Hsuan</a></center>
    </figcaption>
  </figure>
</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>解決上一篇提出的兩個問題:</p>
<ul>
<li>$\mu$ 的部分，輸出似乎不是 $\mu$ 本身，而是四種狀態 (1, 4, 7, 13) 隨機出現。$\Rightarrow$ 沒錯，因為 1 是四種的疊加狀態，因此觀測時只會出現其中一種。</li>
<li>無法直觀看出 QPE 中 phase kickback 的影響。$\Rightarrow$ $t=2$ 時剛好無法呈現其影響，本篇使用更大的 $t$ 藉此說明該現象。</li>
</ul>
        ]]></description></item><item><title>Shor's Algorithm</title><link>https://aben20807.github.io/posts/20220626-shor-algorithm/</link><pubDate>Wed, 29 Jun 2022 13:58:58 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220626-shor-algorithm/</guid><description><![CDATA[
          <p>利用量子特性來質因數分解。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220626-shor-algorithm/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220626-shor-algorithm/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>利用量子特性來質因數分解。</p>
<p>有錯再麻煩指正，感謝。</p>
<h1 id="目標問題" class="article-heading">目標問題 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9b%ae%e6%a8%99%e5%95%8f%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>RSA 是一種常見的加密演算法，使用的是非對稱加密演算法，其中會利用到兩個極大質數相乘，因此 RSA 的可靠度建立於對極大整數因數分解的難度。</p>
<h2 id="example-refhttpswwwcsjhueduyairamircs437week12sld015htm" class="article-heading">Example <a href="https://www.cs.jhu.edu/~yairamir/cs437/week12/sld015.htm" title="ref" aria-label="ref"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ref</a> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-refhttpswwwcsjhueduyairamircs437week12sld015htm">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>Generate keys:
<ul>
<li>Pick two prime numbers $P, Q$, e.g., $P = 5, Q = 11$</li>
<li>$N = P\times Q = 55$</li>
<li>$Z = (P-1)\times(Q-1) = 40$</li>
<li>Pick $e$ such that $\gcd(e, Z) = 1$, e.g., $e = 13$</li>
<li>Pick $d$ such that $e\times d\equiv1(\text{mod }Z)$, e.g., $d = 37$</li>
<li>$\Rightarrow$ Public key: $(e, N)$; Private key: $(d, N)$</li>
</ul>
</li>
<li>Usage:
<ul>
<li>Encrypt: $E = M^e(\text{mod }N)\Rightarrow E = M^{13}(\text{mod }55)$</li>
<li>Decrypt: $M = E^d(\text{mod }N)\Rightarrow M = E^{37}(\text{mod }55)$</li>
</ul>
</li>
</ul>
<h1 id="several-lemmas-with-examples" class="article-heading">Several lemmas with examples 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#several-lemmas-with-examples">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這邊使用了比較直觀會用到的 Lemma，且使用範例當作說明，不使用證明。</p>

<div class="alert-block">

  <div class="info-title"><i class="fa fa-info-circle"></i></div>
  <div class="info-msg db">
    <p>Lemma 1:<br>
$g^2\equiv1(\text{mod }N), 1&lt;g&lt;N-1\Rightarrow$<br>
$\gcd(N, g-1)\mid N \text{ or }\gcd(N, g+1)\mid N$</p>
  </div>

</div>
<ul>
<li>
<p>Example 1: $N = 15$<br>
$4^2\equiv 1(\text{mod }15), \gcd(15, 3) = 3\mid 15, \gcd(15, 5) = 5 \mid 15$</p>
</li>
<li>
<p>Example 2: $N = 21$<br>
$8^2\equiv 1(\text{mod }21), \gcd(21, 7) = 7\mid 21, \gcd(21, 9) = 3 \mid 21$</p>
</li>
</ul>

<div class="alert-block">

  <div class="info-title"><i class="fa fa-info-circle"></i></div>
  <div class="info-msg db">
    <p>Lemma 2:<br>
$g^x\equiv1(\text{mod }N), 2\mid x, g^{\frac{x}{2}}\not\equiv1(\text{mod }N)\Rightarrow$<br>
$(g^{\frac{x}{2}})^2\equiv1(\text{mod }N), g^{\frac{x}{2}}\not\equiv 1(\text{mod }N) \text{, and }g^{\frac{x}{2}}\not\equiv N-1(\text{mod }N)<br>
\Rightarrow$<br>
$\gcd(N, g^{\frac{x}{2}}-1)\mid N \text{ or }\gcd(N, g^{\frac{x}{2}}+1)\mid N$</p>
  </div>

</div>
<ul>
<li>
<p>Example 1: $N = 15$<br>
$2^4\equiv 1(\text{mod }N), \gcd(15, 3) = 3\mid 15, \gcd(15, 5) = 5 \mid 15$</p>
</li>
<li>
<p>Example 2: $N = 21$<br>
$2^6\equiv 1(\text{mod }N), \gcd(21, 7) = 7\mid 21, \gcd(21, 9) = 3 \mid 21$</p>
</li>
</ul>

<div class="alert-block">

  <div class="info-title"><i class="fa fa-info-circle"></i></div>
  <div class="info-msg db">
    <p>Lemma 3:<br>
$g^p\equiv 1(\text{mod }N)\Rightarrow$<br>
$g^x\equiv g^{x+np}(\text{mod }N), n \in\mathbb{N}$</p>
  </div>

</div>
<ul>
<li>Example: $N = 15, g = 2$<br>
$2^1\equiv 2^5\equiv 2^9\equiv 2(\text{mod }15); 2^2\equiv 2^6\equiv 2^{10}\equiv 4(\text{mod }15)$<br>
$\Rightarrow p = 4\Rightarrow 2^4\equiv 1(\text{mod }15)$</li>
<li>Example: $N = 15, g = 7$<br>
$7^1\equiv 7^5\equiv 7^9\equiv 7(\text{mod }15); 7^2\equiv 7^6\equiv 7^{10}\equiv 4(\text{mod }15)$<br>
$\Rightarrow p = 4\Rightarrow 2^4\equiv 1(\text{mod }15)$</li>
</ul>
<h1 id="solving-by-quantum" class="article-heading">Solving by Quantum 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#solving-by-quantum">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>加速效果 (對 $N$ 作質因數分解):</p>
<ul>
<li>古典最佳: $O(e^{1.9(\log N)^{1/3}(\log\log N)^{2/3}})$ is <a href="https://en.wikipedia.org/wiki/Sub-exponential_time" title="sub-exponential time" aria-label="sub-exponential time"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> sub-exponential time</a></li>
<li>Shor&rsquo;s algorithm: $O((\log N)^2(\log\log N)(\log\log\log N))$ is <a href="https://en.wikipedia.org/wiki/Polynomial_time" title="polynomial time" aria-label="polynomial time"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> polynomial time</a></li>
</ul>
<h2 id="convert-to-u" class="article-heading">Convert to $U$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#convert-to-u">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$f(x) = g^x (\text{mod } N)$, where $g, N\in\mathbb{Z}, g &lt; N$, and $\gcd(g, N) = 1$<br>
$g^r \equiv 1 (\text{mod } N)$<br>
$U\lvert y\rangle\equiv \lvert g y (\text{mod } N)\rangle$<br>
$U^k\lvert y\rangle\equiv \lvert g^ky (\text{mod } N)\rangle, 0\le k$</p>
<ul>
<li>Example: $N = 15, g = 7$
<ul>
<li>$U^0\lvert 1\rangle = \lvert 1\rangle$</li>
<li>$U^1\lvert 1\rangle = \lvert 7\rangle$</li>
<li>$U^2\lvert 1\rangle = \lvert 4\rangle$</li>
<li>$U^3\lvert 1\rangle = \lvert 13\rangle$</li>
<li>$U^4\lvert 1\rangle = U^r\lvert 1\rangle = \lvert 1\rangle$</li>
<li>$U^5\lvert 1\rangle = \lvert 7\rangle$</li>
</ul>
</li>
</ul>
<h2 id="eigenvector" class="article-heading">Eigenvector 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvector">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$$\lvert \mu_s\rangle = \frac{1}{\sqrt{r}}\sum_{k = 0}^{r-1}<br>
e^{-\frac{2\pi i s k}{r}}\lvert g^k (\text{mod } N)\rangle, 0\le s &lt; r<br>
$$</p>
<p>$$U\lvert \mu_s\rangle = e^{\frac{2\pi i s}{r}}\lvert \mu_s\rangle$$</p>
<p>則 eigenvalue 可推得為 $e^{\frac{2\pi i s}{r}}$，再經過 IQFT 將相位資訊提出，可得 $\varphi = \frac{s}{r}$。</p>
<ul>
<li>Example: $N = 15, g = 7$
<ul>
<li>$\lvert \mu_0\rangle = \frac{1}{2}(\lvert 1\rangle+\qquad\lvert 7\rangle+\qquad<br>
\lvert 4\rangle+\qquad<br>
\lvert 13\rangle)$</li>
<li>$\lvert \mu_1\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{2\pi i}{4}}\lvert 7\rangle+e^{-\frac{4\pi i}{4}}<br>
\lvert 4\rangle+e^{-\frac{6\pi i}{4}}<br>
\lvert 13\rangle)$</li>
<li>$\lvert \mu_2\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{4\pi i}{4}}<br>
\lvert 7\rangle+e^{-\frac{8\pi i}{4}}<br>
\lvert 4\rangle+e^{-\frac{12\pi i}{4}}<br>
\lvert 13\rangle)$</li>
<li>$\lvert \mu_3\rangle = \frac{1}{2}(\lvert 1\rangle+e^{-\frac{6\pi i}{4}}<br>
\lvert 7\rangle+e^{-\frac{12\pi i}{4}}<br>
\lvert 4\rangle+e^{-\frac{18\pi i}{4}}<br>
\lvert 13\rangle)$</li>
</ul>
</li>
</ul>
<h2 id="eigenvectors-superposition" class="article-heading">Eigenvectors superposition 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvectors-superposition">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$$\frac{1}{\sqrt{r}}\sum_{s = 0}^{r-1}\lvert \mu_s\rangle = \lvert 1\rangle<br>
$$</p>
<ul>
<li>Example: $N = 15, g = 7$</li>
</ul>
<p>$$\frac{1}{\sqrt{r}}\sum_{s = 0}^{r-1}\lvert \mu_s\rangle =\lvert \mu_0\rangle +\lvert \mu_1\rangle+\lvert \mu_2\rangle+\lvert \mu_3\rangle<br>
=\lvert 1\rangle$$</p>
<h2 id="use-qpe-to-get-eigenvalue" class="article-heading">Use QPE to get eigenvalue 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#use-qpe-to-get-eigenvalue">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Eigenvector 輸入使用疊加態 (參考上一篇文章)。輸出時就有這些可能: $\lvert 2^t\frac{0}{r}\rangle,\lvert 2^t\frac{1}{r}\rangle,&hellip;, \lvert 2^t\frac{r-1}{r}\rangle$ 共 $r$ 種，$2^t$ 可以看作將小數變為整數的 scaling factor 表達時可以將其轉換成小數的表達方法即可，因此就可以透過統計的方式找出所求 $r$。另外可以看到 $\frac{0}{r} = 0$ 無法得知 $r$ 的資訊，因此有 $\frac{1}{r}$ 的機率會猜到 $0$ 進而無法推算出 $r$。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLURt5hmoOhaFNJzXaCwR39u_b2JQnHbLgsKiBYDTNFOVX2Ja1_QX3wwy4An4puT8MBMZPkJzLJh88EohLMTtVrI_Pm-HwVBP1BGVvAS63FK-Z9OohYqtFZ-31kg4oYFQKWemHppK1jEjEqE_xDRCD7-8Q=w2200-h365-no?authuser=1" alt='Shor’s algorithm 示意圖; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Shor’s algorithm 示意圖; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>以上就是利用量子來解決質因數分解的方法。再來進入實作部分。</p>
<h1 id="qiskit-implementation" class="article-heading">Qiskit implementation 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qiskit-implementation">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>因為程式已經大到我用 IBM Composer 無法簡單實作了，所以這邊改使用 IBM Qiskit 這個量子 python 工具以及從官方的範例 <a href="https://qiskit.org/textbook/ch-algorithms/shor.html" title="Shor&amp;rsquo;s Algorithm - IBM" aria-label="Shor&amp;rsquo;s Algorithm - IBM"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Shor&rsquo;s Algorithm - IBM</a> / <a href="https://github.com/qiskit-community/qiskit-textbook/blob/main/content/ch-algorithms/shor.ipynb" title="src" aria-label="src"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> src</a> 下去修改。並且由於 Qubit 數量已經超過官方提供的 5 位，因此先使用模擬器來進行運算。</p>
<p>差異性: 官方使用的 counting bit 數量是 8-bit (原始版 Shor&rsquo;s algorithm 需要兩個 register，一個, counting bit, 是 $2n$ bits，另一個, eigenvector, 是 $n$ bits，$n = \log N$。因為 $15$ 是 4-bit 整數，所以 counting bit 使用 8 位)。不過理論上 2-bit 就可以重現結果，但本篇為了說明大部分使用 4-bit。另外一些變數跟函式命名方式有針對本文所使用的符號進行修改。官方在 counting bit 使用 Little Endian 但 $U$ 的運算使用 Big Endian，本篇統一使用 Little Endian (高記憶體位置放 MSB)。</p>
<p>電路架構:</p>
<ol>
<li>U circuit: 實作 $g^x (\text{mod } N)$</li>
<li>IQFT</li>
<li>QPE: 包含對 t-bit counting bits 做疊加以及 1. 2.</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUdYVfbelD-M3FV9TA2rxrwUH3oViTvBaeQi5IWwaB4cy741estpmPv2pWNhNWk62jOZy8zMTCJ7_JVSrYCuaVZa2sVFII65dKcwQyEf6y4w90GQm2F7d0iJtPGdd-9u4eQK82xFqAifXzJyjyF3dccyA=w1733-h631-no?authuser=1" alt='High-level 量子電路圖' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">High-level 量子電路圖</center>
    </figcaption>
  </figure>
</p>
<h2 id="u-circuit" class="article-heading">U circuit 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u-circuit">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這個 circuit 是我個人認為最複雜的區塊，因為它似乎沒有一個直觀的建立方法，且隨著 $g$ 或 $N$ 不一樣就需要重新建立，因此不太像一般古典運算的函式一樣可以修改輸入的變數即可。U circuit 要做的事就是產生一個 $g^x (\text{mod } N)$ 其中 $x$ 隨著 $t$ 增加而增加。為何這邊的 $U$ 需要使用 4-bit，原因是 $\text{mod } 15$ ($0, 1, &hellip;, 14$) 的所有數字需要用 4-bit 表示。</p>
<p>另外可以看到這裡的 <code>gmod15_circ</code> 是比較一般化 (general) 的形式，可以同時支援不同的 $g$ 作為輸入，不過仍是需要重新產生不同的電路。有趣的是根據設計可以發現在 $g = 4$ 時可以用到最少的邏輯閘 (只需要 2 個 CSWAP  也就是 6 個 CCX )。</p>
<p>這裡以 $t = 2$ (counting bit: $c[0], c[1]$), $g = 7$ 為例 (因為 counting bit 兩位就足夠)，真值表可寫成下方表格。$[i]$ 表示二進位第 $i$ 位。請搭配下方圖片查看中間結果。</p>
<table>
<thead>
<tr>
<th style="text-align:center">$c[1]$</th>
<th style="text-align:center">$c[0]$</th>
<th style="text-align:center">$\mu[3]$</th>
<th style="text-align:center">$\mu[2]$</th>
<th style="text-align:center">$\mu[1]$</th>
<th style="text-align:center">$\mu[0]$</th>
<th style="text-align:center">$\mu$</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$0$</td>
<td style="text-align:center">${\color{red}0}$</td>
<td style="text-align:center">${\color{red}0}$</td>
<td style="text-align:center">${\color{red}0}$</td>
<td style="text-align:center">${\color{red}0}$</td>
<td style="text-align:center">${\color{red}1}$</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">$0$</td>
<td style="text-align:center">${\color{blue}1}$</td>
<td style="text-align:center">${\color{blue}0}$</td>
<td style="text-align:center">${\color{blue}1}$</td>
<td style="text-align:center">${\color{blue}1}$</td>
<td style="text-align:center">${\color{blue}1}$</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">$\fcolorbox{green}{}1$</td>
<td style="text-align:center">$0$</td>
<td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td>
<td style="text-align:center">${\color{red}\fcolorbox{green}{}1}$</td>
<td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td>
<td style="text-align:center">${\color{red}\fcolorbox{green}{}0}$</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">$\fcolorbox{green}{}1$</td>
<td style="text-align:center">$1$</td>
<td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td>
<td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td>
<td style="text-align:center">${\color{blue}\fcolorbox{green}{}0}$</td>
<td style="text-align:center">${\color{blue}\fcolorbox{green}{}1}$</td>
<td style="text-align:center">13</td>
</tr>
</tbody>
</table>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU70KkjJWaUVTLeIucWP9hjM1ET5Uk8_P-i3-u_mUTMwU3vpH64MXVbLH8R_A2vDoLRrOk4ZsDmXul_n2bvFHXSS_bshTX-HOnuqRC3TwxqhhgzbyKtSAXJzfol60LSjbZXcvQU5fxW9z9Teg7CMXbuPg=w2022-h1130-no?authuser=1" alt='t = 2, First U; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">t = 2, First U; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUB6ugWJKX0mwAhpGkMjpaBBVq447jpgAe80ArvdUEy0yASQY-qaoP6Hk7lfeDnlkAZqqM0yvZxKX5y2ef7St2AptuyxeNyL6mHtSoExfBz7xsMQhyfrhCRIsxgz-UrVQwaytJtceCEPpnk5YS-EVEWQQ=w2021-h569-no?authuser=1" alt='t = 2, Second U; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">t = 2, Second U; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">gmod15_circ</span>(g, power):
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">&#34;&#34;&#34;Controlled multiplication by g mod 15&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">not</span> <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">4</span>, <span style="color:#bd93f9">7</span>, <span style="color:#bd93f9">8</span>, <span style="color:#bd93f9">11</span>, <span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">raise</span> ValueError(<span style="color:#f1fa8c">&#34;&#39;g&#39; must be 2,4,7,8,11 or 13&#34;</span>)
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> QuantumCircuit(<span style="color:#bd93f9">4</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> _ <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(power):
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">2</span>,<span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">2</span>,<span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">7</span>,<span style="color:#bd93f9">8</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">2</span>,<span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">4</span>, <span style="color:#bd93f9">11</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>,<span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">7</span>, <span style="color:#bd93f9">11</span>, <span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">4</span>):
</span></span><span style="display:flex;"><span>                U<span style="color:#ff79c6">.</span>x(q)
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>reverse_bits() <span style="color:#6272a4"># reversed because IBM uses Big endian for U</span>
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>to_gate()
</span></span><span style="display:flex;"><span>    U<span style="color:#ff79c6">.</span>name <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">{</span>g<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">^</span><span style="color:#f1fa8c">{{</span><span style="color:#f1fa8c">2^</span><span style="color:#f1fa8c">{</span>log2(power)<span style="color:#f1fa8c">:</span><span style="color:#f1fa8c">.0f</span><span style="color:#f1fa8c">}}</span><span style="color:#f1fa8c">}</span><span style="color:#f1fa8c"> mod 15&#34;</span>
</span></span><span style="display:flex;"><span>    c_U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>control()
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> c_U
</span></span></code></pre></div><h2 id="iqft" class="article-heading">IQFT 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#iqft">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這部份我們之前討論過 (請參考前幾篇文章)，所以很容易可以實現。有兩種實作方式，IBM 這裡採用 SWAP 在前的版本。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">iqft_circ</span>(n):
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">&#34;&#34;&#34;n-qubit QFTdagger (IQFT) the first n qubits in circ&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    qc <span style="color:#ff79c6">=</span> QuantumCircuit(n)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> qubit <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(n <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>):
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>swap(qubit, n <span style="color:#ff79c6">-</span> qubit <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> j <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(n):
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">for</span> m <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(j):
</span></span><span style="display:flex;"><span>            qc<span style="color:#ff79c6">.</span>cp(<span style="color:#ff79c6">-</span>np<span style="color:#ff79c6">.</span>pi <span style="color:#ff79c6">/</span> <span style="color:#8be9fd;font-style:italic">float</span>(<span style="color:#bd93f9">2</span> <span style="color:#ff79c6">**</span> (j <span style="color:#ff79c6">-</span> m)), m, j)
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>h(j)
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>name <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;IQFT&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> qc
</span></span></code></pre></div><h2 id="qpe" class="article-heading">QPE 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qpe">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>將上述電路合併在一起。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">qpe_circ</span>(g):
</span></span><span style="display:flex;"><span>    qc <span style="color:#ff79c6">=</span> QuantumCircuit(<span style="color:#bd93f9">4</span> <span style="color:#ff79c6">+</span> CBIT_NUM, CBIT_NUM)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM):
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>h(q)  <span style="color:#6272a4"># Initialize counting qubits in state |+&gt;</span>
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>x(<span style="color:#bd93f9">0</span> <span style="color:#ff79c6">+</span> CBIT_NUM)  <span style="color:#6272a4"># And auxiliary register in state |1&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM):  <span style="color:#6272a4"># Do controlled-U operations</span>
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>append(
</span></span><span style="display:flex;"><span>            gmod15_circ(g, <span style="color:#bd93f9">2</span><span style="color:#ff79c6">**</span>q), [q] <span style="color:#ff79c6">+</span> [i <span style="color:#ff79c6">+</span> CBIT_NUM <span style="color:#ff79c6">for</span> i <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">4</span>)]
</span></span><span style="display:flex;"><span>        )
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>append(iqft_circ(CBIT_NUM), <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM))  <span style="color:#6272a4"># Do inverse-QFT</span>
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>measure(<span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM), <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM))
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> qc
</span></span></code></pre></div><h2 id="轉譯電路-transpile" class="article-heading">轉譯電路 Transpile 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bd%89%e8%ad%af%e9%9b%bb%e8%b7%af-transpile">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#6272a4"># Assign the backend</span>
</span></span><span style="display:flex;"><span>backend <span style="color:#ff79c6">=</span> Aer<span style="color:#ff79c6">.</span>get_backend(<span style="color:#f1fa8c">&#34;aer_simulator&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Build circuit</span>
</span></span><span style="display:flex;"><span>qc <span style="color:#ff79c6">=</span> qpe_circ(g)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Transpile circuit</span>
</span></span><span style="display:flex;"><span>t_qc <span style="color:#ff79c6">=</span> transpile(qc, backend)
</span></span><span style="display:flex;"><span>t_qc<span style="color:#ff79c6">.</span>metadata <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#34;backend&#34;</span>: backend}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Circuit visualization</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(qc<span style="color:#ff79c6">.</span>draw(fold<span style="color:#ff79c6">=-</span><span style="color:#bd93f9">1</span>, output<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;text&#34;</span>))
</span></span></code></pre></div><h2 id="執行電路" class="article-heading">執行電路 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e9%9b%bb%e8%b7%af">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>要執行一個量子電路需要先進行 <code>assemble</code> (將資訊打包並產生 task ID) 接著再使用對應的 backend 執行。執行過一次 QPE (如下方程式碼) 算一次 Attempt。可以看到每個 Attempt 只用到一個 shot。若是用 1024 shot 統計可以發現 counting bit 只會出現四種結果 (&lsquo;0000&rsquo;, &lsquo;0100&rsquo;, &lsquo;1000&rsquo;, &lsquo;1100&rsquo;)。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">run_qpe</span>(t_qc):
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Simulate Results</span>
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    qobj <span style="color:#ff79c6">=</span> assemble(t_qc, shots<span style="color:#ff79c6">=</span><span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Setting memory=True below allows us to see a list of each sequential reading</span>
</span></span><span style="display:flex;"><span>    result <span style="color:#ff79c6">=</span> t_qc<span style="color:#ff79c6">.</span>metadata[<span style="color:#f1fa8c">&#34;backend&#34;</span>]<span style="color:#ff79c6">.</span>run(qobj, memory<span style="color:#ff79c6">=</span><span style="color:#ff79c6">True</span>)<span style="color:#ff79c6">.</span>result()
</span></span><span style="display:flex;"><span>    readings <span style="color:#ff79c6">=</span> result<span style="color:#ff79c6">.</span>get_memory()
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Register Reading: &#34;</span> <span style="color:#ff79c6">+</span> readings[<span style="color:#bd93f9">0</span>])
</span></span><span style="display:flex;"><span>    phase <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">int</span>(readings[<span style="color:#bd93f9">0</span>], <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">/</span> (<span style="color:#bd93f9">2</span><span style="color:#ff79c6">**</span>CBIT_NUM)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Corresponding Phase: </span><span style="color:#f1fa8c">%f</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> phase)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> phase
</span></span></code></pre></div><p>運氣好只要一次 Attempt 就可以得到質因數結果，反之，要重複執行。因此會有一個迴圈去重複嘗試 <code>run_qpe</code> (第 81 行) 直到得到結果。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">solve</span>(t_qc, N, g):
</span></span><span style="display:flex;"><span>    factor_found <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">False</span>
</span></span><span style="display:flex;"><span>    attempt <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">while</span> <span style="color:#ff79c6">not</span> factor_found:
</span></span><span style="display:flex;"><span>        attempt <span style="color:#ff79c6">+=</span> <span style="color:#bd93f9">1</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">Attempt </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">:&#34;</span> <span style="color:#ff79c6">%</span> attempt)
</span></span><span style="display:flex; background-color:#3d3f4a"><span>        phase <span style="color:#ff79c6">=</span> run_qpe(t_qc)  <span style="color:#6272a4"># Phase = s/r</span>
</span></span><span style="display:flex;"><span>        frac <span style="color:#ff79c6">=</span> Fraction(phase)<span style="color:#ff79c6">.</span>limit_denominator(
</span></span><span style="display:flex;"><span>            N
</span></span><span style="display:flex;"><span>        )  <span style="color:#6272a4"># Denominator should (hopefully!) tell us r</span>
</span></span><span style="display:flex;"><span>        r <span style="color:#ff79c6">=</span> frac<span style="color:#ff79c6">.</span>denominator
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Result: r = </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> r)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> phase <span style="color:#ff79c6">!=</span> <span style="color:#bd93f9">0</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#6272a4"># Guesses for factors are gcd(x^{r/2} ±1 , 15)</span>
</span></span><span style="display:flex;"><span>            guesses <span style="color:#ff79c6">=</span> [gcd(g <span style="color:#ff79c6">**</span> (r <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>, N), gcd(g <span style="color:#ff79c6">**</span> (r <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">+</span> <span style="color:#bd93f9">1</span>, N)]
</span></span><span style="display:flex;"><span>            <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Guessed Factors: </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c"> and </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> (guesses[<span style="color:#bd93f9">0</span>], guesses[<span style="color:#bd93f9">1</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">for</span> guess <span style="color:#ff79c6">in</span> guesses:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">if</span> (
</span></span><span style="display:flex;"><span>                    guess <span style="color:#ff79c6">not</span> <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">1</span>, N] <span style="color:#ff79c6">and</span> (N <span style="color:#ff79c6">%</span> guess) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>                ):  <span style="color:#6272a4"># Check to see if guess is a factor</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;*** Non-trivial factor found: </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c"> ***&#34;</span> <span style="color:#ff79c6">%</span> guess)
</span></span><span style="display:flex;"><span>                    factor_found <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">True</span>
</span></span></code></pre></div><p> 

<details>
  <summary><span>展開查看完整程式碼 </span></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> qiskit <span style="color:#ff79c6">import</span> QuantumCircuit, Aer, transpile, assemble
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> qiskit.converters <span style="color:#ff79c6">import</span> circuit_to_dag
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> math <span style="color:#ff79c6">import</span> gcd, log2
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> fractions <span style="color:#ff79c6">import</span> Fraction
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Imports Successful&#34;</span>)
</span></span><span style="display:flex;"><span>CBIT_NUM <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">4</span>  <span style="color:#6272a4"># The number of counting bits</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">gmod15_circ</span>(g, power):
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">&#34;&#34;&#34;Controlled multiplication by g mod 15&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">not</span> <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">4</span>, <span style="color:#bd93f9">7</span>, <span style="color:#bd93f9">8</span>, <span style="color:#bd93f9">11</span>, <span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">raise</span> ValueError(<span style="color:#f1fa8c">&#34;&#39;g&#39; must be 2,4,7,8,11 or 13&#34;</span>)
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> QuantumCircuit(<span style="color:#bd93f9">4</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> _ <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(power):
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">7</span>, <span style="color:#bd93f9">8</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">4</span>, <span style="color:#bd93f9">11</span>]:
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">3</span>)
</span></span><span style="display:flex;"><span>            U<span style="color:#ff79c6">.</span>swap(<span style="color:#bd93f9">0</span>, <span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> g <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">7</span>, <span style="color:#bd93f9">11</span>, <span style="color:#bd93f9">13</span>]:
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">4</span>):
</span></span><span style="display:flex;"><span>                U<span style="color:#ff79c6">.</span>x(q)
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>reverse_bits()  <span style="color:#6272a4"># reversed because IBM uses Big endian for U</span>
</span></span><span style="display:flex;"><span>    U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>to_gate()
</span></span><span style="display:flex;"><span>    U<span style="color:#ff79c6">.</span>name <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">{</span>g<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">^</span><span style="color:#f1fa8c">{{</span><span style="color:#f1fa8c">2^</span><span style="color:#f1fa8c">{</span>log2(power)<span style="color:#f1fa8c">:</span><span style="color:#f1fa8c">.0f</span><span style="color:#f1fa8c">}}</span><span style="color:#f1fa8c">}</span><span style="color:#f1fa8c"> mod 15&#34;</span>
</span></span><span style="display:flex;"><span>    c_U <span style="color:#ff79c6">=</span> U<span style="color:#ff79c6">.</span>control()
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> c_U
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">iqft_circ</span>(n):
</span></span><span style="display:flex;"><span>    <span style="color:#f1fa8c">&#34;&#34;&#34;n-qubit QFTdagger (IQFT) the first n qubits in circ&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>    qc <span style="color:#ff79c6">=</span> QuantumCircuit(n)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> qubit <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(n <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>):
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>swap(qubit, n <span style="color:#ff79c6">-</span> qubit <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> j <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(n):
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">for</span> m <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(j):
</span></span><span style="display:flex;"><span>            qc<span style="color:#ff79c6">.</span>cp(<span style="color:#ff79c6">-</span>np<span style="color:#ff79c6">.</span>pi <span style="color:#ff79c6">/</span> <span style="color:#8be9fd;font-style:italic">float</span>(<span style="color:#bd93f9">2</span> <span style="color:#ff79c6">**</span> (j <span style="color:#ff79c6">-</span> m)), m, j)
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>h(j)
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>name <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;IQFT&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> qc
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">qpe_circ</span>(g):
</span></span><span style="display:flex;"><span>    qc <span style="color:#ff79c6">=</span> QuantumCircuit(<span style="color:#bd93f9">4</span> <span style="color:#ff79c6">+</span> CBIT_NUM, CBIT_NUM)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM):
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>h(q)  <span style="color:#6272a4"># Initialize counting qubits in state |+&gt;</span>
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>x(<span style="color:#bd93f9">0</span> <span style="color:#ff79c6">+</span> CBIT_NUM)  <span style="color:#6272a4"># And auxiliary register in state |1&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> q <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM):  <span style="color:#6272a4"># Do controlled-U operations</span>
</span></span><span style="display:flex;"><span>        qc<span style="color:#ff79c6">.</span>append(gmod15_circ(g, <span style="color:#bd93f9">2</span><span style="color:#ff79c6">**</span>q), [q] <span style="color:#ff79c6">+</span> [i <span style="color:#ff79c6">+</span> CBIT_NUM <span style="color:#ff79c6">for</span> i <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">range</span>(<span style="color:#bd93f9">4</span>)])
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>append(iqft_circ(CBIT_NUM), <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM))  <span style="color:#6272a4"># Do inverse-QFT</span>
</span></span><span style="display:flex;"><span>    qc<span style="color:#ff79c6">.</span>measure(<span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM), <span style="color:#8be9fd;font-style:italic">range</span>(CBIT_NUM))
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> qc
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">run_qpe</span>(t_qc):
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Simulate Results</span>
</span></span><span style="display:flex;"><span>    qobj <span style="color:#ff79c6">=</span> assemble(t_qc, shots<span style="color:#ff79c6">=</span><span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Setting memory=True below allows us to see a list of each sequential reading</span>
</span></span><span style="display:flex;"><span>    result <span style="color:#ff79c6">=</span> t_qc<span style="color:#ff79c6">.</span>metadata[<span style="color:#f1fa8c">&#34;backend&#34;</span>]<span style="color:#ff79c6">.</span>run(qobj, memory<span style="color:#ff79c6">=</span><span style="color:#ff79c6">True</span>)<span style="color:#ff79c6">.</span>result()
</span></span><span style="display:flex;"><span>    readings <span style="color:#ff79c6">=</span> result<span style="color:#ff79c6">.</span>get_memory()
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Register Reading: &#34;</span> <span style="color:#ff79c6">+</span> readings[<span style="color:#bd93f9">0</span>])
</span></span><span style="display:flex;"><span>    phase <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">int</span>(readings[<span style="color:#bd93f9">0</span>], <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">/</span> (<span style="color:#bd93f9">2</span><span style="color:#ff79c6">**</span>CBIT_NUM)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Corresponding Phase: </span><span style="color:#f1fa8c">%f</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> phase)
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> phase
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">solve</span>(t_qc, N, g):
</span></span><span style="display:flex;"><span>    factor_found <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">False</span>
</span></span><span style="display:flex;"><span>    attempt <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">while</span> <span style="color:#ff79c6">not</span> factor_found:
</span></span><span style="display:flex;"><span>        attempt <span style="color:#ff79c6">+=</span> <span style="color:#bd93f9">1</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">Attempt </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">:&#34;</span> <span style="color:#ff79c6">%</span> attempt)
</span></span><span style="display:flex;"><span>        phase <span style="color:#ff79c6">=</span> run_qpe(t_qc)  <span style="color:#6272a4"># Phase = s/r</span>
</span></span><span style="display:flex;"><span>        frac <span style="color:#ff79c6">=</span> Fraction(phase)<span style="color:#ff79c6">.</span>limit_denominator(
</span></span><span style="display:flex;"><span>            N
</span></span><span style="display:flex;"><span>        )  <span style="color:#6272a4"># Denominator should (hopefully!) tell us r</span>
</span></span><span style="display:flex;"><span>        r <span style="color:#ff79c6">=</span> frac<span style="color:#ff79c6">.</span>denominator
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Result: r = </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> r)
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> phase <span style="color:#ff79c6">!=</span> <span style="color:#bd93f9">0</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#6272a4"># Guesses for factors are gcd(x^{r/2} ±1 , 15)</span>
</span></span><span style="display:flex;"><span>            guesses <span style="color:#ff79c6">=</span> [gcd(g <span style="color:#ff79c6">**</span> (r <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>, N), gcd(g <span style="color:#ff79c6">**</span> (r <span style="color:#ff79c6">//</span> <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">+</span> <span style="color:#bd93f9">1</span>, N)]
</span></span><span style="display:flex;"><span>            <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;Guessed Factors: </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c"> and </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c">&#34;</span> <span style="color:#ff79c6">%</span> (guesses[<span style="color:#bd93f9">0</span>], guesses[<span style="color:#bd93f9">1</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">for</span> guess <span style="color:#ff79c6">in</span> guesses:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">if</span> (
</span></span><span style="display:flex;"><span>                    guess <span style="color:#ff79c6">not</span> <span style="color:#ff79c6">in</span> [<span style="color:#bd93f9">1</span>, N] <span style="color:#ff79c6">and</span> (N <span style="color:#ff79c6">%</span> guess) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>                ):  <span style="color:#6272a4"># Check to see if guess is a factor</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;*** Non-trivial factor found: </span><span style="color:#f1fa8c">%i</span><span style="color:#f1fa8c"> ***&#34;</span> <span style="color:#ff79c6">%</span> guess)
</span></span><span style="display:flex;"><span>                    factor_found <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">True</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">main</span>():
</span></span><span style="display:flex;"><span>    N <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">15</span>
</span></span><span style="display:flex;"><span>    g <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">7</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Assign the backend</span>
</span></span><span style="display:flex;"><span>    backend <span style="color:#ff79c6">=</span> Aer<span style="color:#ff79c6">.</span>get_backend(<span style="color:#f1fa8c">&#34;aer_simulator&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Build circuit</span>
</span></span><span style="display:flex;"><span>    qc <span style="color:#ff79c6">=</span> qpe_circ(g)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Transpile circuit</span>
</span></span><span style="display:flex;"><span>    t_qc <span style="color:#ff79c6">=</span> transpile(qc, backend)
</span></span><span style="display:flex;"><span>    t_qc<span style="color:#ff79c6">.</span>metadata <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#34;backend&#34;</span>: backend}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># Circuit visualization</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(qc<span style="color:#ff79c6">.</span>draw(fold<span style="color:#ff79c6">=-</span><span style="color:#bd93f9">1</span>, output<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;text&#34;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    solve(t_qc, N, g)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">if</span> __name__ <span style="color:#ff79c6">==</span> <span style="color:#f1fa8c">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    main()
</span></span></code></pre></div>
</details><br>
 

<details>
  <summary><span>執行環境 </span></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-env" data-lang="env"><span style="display:flex;"><span>$ cat /proc/version
</span></span><span style="display:flex;"><span>Linux version 5.10.16.3-microsoft-standard-WSL2 <span style="color:#ff79c6">(</span>oe-user@oe-host<span style="color:#ff79c6">)</span> <span style="color:#ff79c6">(</span>x86_64-msft-linux-gcc <span style="color:#ff79c6">(</span>GCC<span style="color:#ff79c6">)</span> 9.3.0, GNU ld <span style="color:#ff79c6">(</span>GNU Binutils<span style="color:#ff79c6">)</span> 2.34.0.20200220<span style="color:#ff79c6">)</span> <span style="color:#6272a4">#1 SMP Fri Apr 2 22:23:49 UTC 2021</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ uname -a
</span></span><span style="display:flex;"><span>Linux DESKTOP-M72RH5C 5.10.16.3-microsoft-standard-WSL2 <span style="color:#6272a4">#1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ python --version
</span></span><span style="display:flex;"><span>Python 3.8.10
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ pip list
</span></span><span style="display:flex;"><span>Package              Version
</span></span><span style="display:flex;"><span>-------------------- -----------
</span></span><span style="display:flex;"><span>certifi              2022.5.18.1
</span></span><span style="display:flex;"><span>cffi                 1.15.0
</span></span><span style="display:flex;"><span>charset-normalizer   2.0.12
</span></span><span style="display:flex;"><span>click                8.1.3
</span></span><span style="display:flex;"><span>cryptography         37.0.2
</span></span><span style="display:flex;"><span>Deprecated           1.2.13
</span></span><span style="display:flex;"><span>dill                 0.3.5.1
</span></span><span style="display:flex;"><span>idna                 3.3
</span></span><span style="display:flex;"><span>mpmath               1.2.1
</span></span><span style="display:flex;"><span>networkx             2.8.3
</span></span><span style="display:flex;"><span>ntlm-auth            1.5.0
</span></span><span style="display:flex;"><span>numpy                1.22.4
</span></span><span style="display:flex;"><span>pbr                  5.9.0
</span></span><span style="display:flex;"><span>pip                  20.0.2
</span></span><span style="display:flex;"><span>pkg-resources        0.0.0
</span></span><span style="display:flex;"><span>ply                  3.11
</span></span><span style="display:flex;"><span>psutil               5.9.1
</span></span><span style="display:flex;"><span>pycparser            2.21
</span></span><span style="display:flex;"><span>python-constraint    1.4.0
</span></span><span style="display:flex;"><span>python-dateutil      2.8.2
</span></span><span style="display:flex;"><span>python-tsp           0.2.1
</span></span><span style="display:flex;"><span>qiskit               0.36.2
</span></span><span style="display:flex;"><span>qiskit-aer           0.10.4
</span></span><span style="display:flex;"><span>qiskit-ibmq-provider 0.19.1
</span></span><span style="display:flex;"><span>qiskit-ignis         0.7.1
</span></span><span style="display:flex;"><span>qiskit-terra         0.20.2
</span></span><span style="display:flex;"><span>requests             2.27.1
</span></span><span style="display:flex;"><span>requests-ntlm        1.1.0
</span></span><span style="display:flex;"><span>retworkx             0.11.0
</span></span><span style="display:flex;"><span>scipy                1.8.1
</span></span><span style="display:flex;"><span>setuptools           44.0.0
</span></span><span style="display:flex;"><span>six                  1.16.0
</span></span><span style="display:flex;"><span>stevedore            3.5.0
</span></span><span style="display:flex;"><span>symengine            0.9.2
</span></span><span style="display:flex;"><span>sympy                1.10.1
</span></span><span style="display:flex;"><span>tabulate             0.8.9
</span></span><span style="display:flex;"><span>tsplib95             0.7.1
</span></span><span style="display:flex;"><span>tweedledum           1.1.1
</span></span><span style="display:flex;"><span>urllib3              1.26.9
</span></span><span style="display:flex;"><span>websocket-client     1.3.2
</span></span><span style="display:flex;"><span>websockets           10.3
</span></span><span style="display:flex;"><span>wheel                0.34.2
</span></span><span style="display:flex;"><span>wrapt                1.14.1
</span></span></code></pre></div>
</details></p>
<h2 id="執行結果" class="article-heading">執行結果 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>運氣較好:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Attempt 1:
</span></span><span style="display:flex;"><span>Register Reading: 0100
</span></span><span style="display:flex;"><span>Corresponding Phase: 0.250000
</span></span><span style="display:flex;"><span>Result: r = 4
</span></span><span style="display:flex;"><span>Guessed Factors: 3 and 5
</span></span><span style="display:flex;"><span>*** Non-trivial factor found: 3 ***
</span></span><span style="display:flex;"><span>*** Non-trivial factor found: 5 ***
</span></span></code></pre></div><ul>
<li>運氣較差:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Attempt 1:
</span></span><span style="display:flex;"><span>Register Reading: 0000
</span></span><span style="display:flex;"><span>Corresponding Phase: 0.000000
</span></span><span style="display:flex;"><span>Result: r = 1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Attempt 2:
</span></span><span style="display:flex;"><span>Register Reading: 0000
</span></span><span style="display:flex;"><span>Corresponding Phase: 0.000000
</span></span><span style="display:flex;"><span>Result: r = 1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Attempt 3:
</span></span><span style="display:flex;"><span>Register Reading: 0000
</span></span><span style="display:flex;"><span>Corresponding Phase: 0.000000
</span></span><span style="display:flex;"><span>Result: r = 1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Attempt 4:
</span></span><span style="display:flex;"><span>Register Reading: 1000
</span></span><span style="display:flex;"><span>Corresponding Phase: 0.500000
</span></span><span style="display:flex;"><span>Result: r = 2
</span></span><span style="display:flex;"><span>Guessed Factors: 3 and 1
</span></span><span style="display:flex;"><span>*** Non-trivial factor found: 3 ***
</span></span></code></pre></div><h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有些部分還是不能完全理解。尤其是 $U$ 的理論及實作，這裡留下一些我個人的疑問等待後續找到答案:</p>
<ul>
<li>$\mu$ 的部分，輸出似乎不是 $\mu$ 本身，而是四種狀態 (1, 4, 7, 13) 隨機出現。</li>
<li>無法直觀看出 QPE 中 phase kickback 的影響。</li>
</ul>
<p>上述兩點已解決，請參考 <a href="/posts/20220630-shor-algorithm-part2/"target="_blank" rel="noreferrer noopener">Shor&#39;s Algorithm Part2</a>。</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://en.wikipedia.org/wiki/RSA_%28cryptosystem%29" title="RSA (cryptosystem) - wiki" aria-label="RSA (cryptosystem) - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> RSA (cryptosystem) - wiki</a></li>
<li><a href="https://www.youtube.com/watch?v=lvTqbM5Dq4Q" title="How Quantum Computers Break Encryption | Shor&amp;rsquo;s Algorithm Explained - minutephysics youtube" aria-label="How Quantum Computers Break Encryption | Shor&amp;rsquo;s Algorithm Explained - minutephysics youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How Quantum Computers Break Encryption | Shor&rsquo;s Algorithm Explained - minutephysics youtube</a></li>
<li><a href="https://en.wikipedia.org/wiki/Shor%27s_algorithm" title="Shor&amp;rsquo;s algorithm - wiki" aria-label="Shor&amp;rsquo;s algorithm - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Shor&rsquo;s algorithm - wiki</a></li>
<li><a href="https://qiskit.org/textbook/ch-algorithms/shor.html" title="Shor&amp;rsquo;s Algorithm - IBM" aria-label="Shor&amp;rsquo;s Algorithm - IBM"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Shor&rsquo;s Algorithm - IBM</a></li>
<li><a href="https://jonathan-hui.medium.com/qc-period-finding-in-shors-algorithm-7eb0c22e8202" title="QC — Period finding in Shor’s Algorithm - Jonathan Hui" aria-label="QC — Period finding in Shor’s Algorithm - Jonathan Hui"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> QC — Period finding in Shor’s Algorithm - Jonathan Hui</a></li>
<li><a href="https://github.com/Qiskit/qiskit-aer/issues/585" title="The seed_simulator doesn&amp;rsquo;t work for list of circuits #585" aria-label="The seed_simulator doesn&amp;rsquo;t work for list of circuits #585"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The seed_simulator doesn&rsquo;t work for list of circuits #585</a></li>
<li><a href="https://sharkyspool.home.blog/2019/08/02/large-integer-factorization-number-field-sieve-vs-shor/" title="Large Integer Factorization: Number Field Sieve vs Shor - Vladimir Silva" aria-label="Large Integer Factorization: Number Field Sieve vs Shor - Vladimir Silva"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Large Integer Factorization: Number Field Sieve vs Shor - Vladimir Silva</a></li>
</ul>
 
        ]]></description></item><item><title>Quantum Phase Estimation</title><link>https://aben20807.github.io/posts/20220623-quantum-phase-estimation/</link><pubDate>Sun, 26 Jun 2022 20:36:01 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220623-quantum-phase-estimation/</guid><description><![CDATA[
          <p>範例導向學習量子相位估計 (Quantum Phase Estimation)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220623-quantum-phase-estimation/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220623-quantum-phase-estimation/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>範例導向學習量子相位估計 (Quantum Phase Estimation)。</p>
<p>有錯再麻煩指正。</p>
<h1 id="用途" class="article-heading">用途 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a8%e9%80%94">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Quantum phase estimation (QPE) 的主要功能: finding the eigenvalue of a unitary operator (找出么正算子 的特徵值)</p>
<h1 id="review-linear-algebra" class="article-heading">Review linear algebra 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#review-linear-algebra">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>$A$ is a matrix, $\lambda$ is the eigenvalue of $A$ where two $u$ vectors are the eigenvectors.</p>
<p>$$Au = \lambda u$$</p>
<p>特性:</p>
<ul>
<li>$(A-\lambda I )u =0$</li>
<li>$\det(A-\lambda I ) =0\iff u \ne \vec{0}$</li>
</ul>
<h1 id="quantum-form-for-eigenvalue-and-eigenvector" class="article-heading">Quantum form for eigenvalue and eigenvector 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-form-for-eigenvalue-and-eigenvector">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>$U$ is a unitary matrix, $\lambda$ is the eigenvalue of $U$ where two $\mu$ vectors are the eigenvectors (or eigenstates).</p>
<p>$$U\lvert\mu\rangle = \lambda \lvert\mu\rangle$$</p>
<p>特性:</p>
<ul>
<li>$\because U$ is a unitary matrix $\therefore \lvert\det(U)\rvert =\lvert\lambda\rvert= 1 \Rightarrow\lambda = e^{i\theta} = e^{2\pi i\varphi}, 0 \le\varphi &lt; 1$</li>
<li>$\Rightarrow U\lvert\mu\rangle = e^{2\pi i\varphi}\lvert\mu\rangle$</li>
</ul>
<h2 id="example-x" class="article-heading">Example: X 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-x">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$X$ gate has two eigenvalues ($\lambda_1, \lambda_2$) and corresponding eigenvectors ($\lvert \mu_1\rangle, \lvert \mu_2\rangle$)</p>
<p>$U = X =\begin{pmatrix}0&amp;1\\1&amp;0\end{pmatrix}$</p>
<p>$\det(X-\lambda I) = 0\Rightarrow$</p>
<p>$\begin{vmatrix}-\lambda&amp;1\\1&amp;-\lambda\end{vmatrix} = 0 = \lambda^2-1 \Rightarrow \lambda=\pm 1\Rightarrow$</p>
<p>$\begin{cases}<br>
\lambda_1 = 1, u_1 =\frac{1}{\sqrt{2}} \begin{pmatrix}1\\1\end{pmatrix}\Rightarrow \lvert \mu_1\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1 \rangle)\\<br>
\lambda_2 = -1, u_2 =\frac{1}{\sqrt{2}}<br>
\begin{pmatrix}1\\-1\end{pmatrix}\Rightarrow \lvert \mu_2\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1 \rangle<br>
\end{cases}$</p>
<h1 id="phase-kickback" class="article-heading">Phase kickback 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#phase-kickback">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Phase kickback 是在量子糾纏 (entanglement) 下的一種現象，原本在量子糾纏下 $C\mbox{-}U$ (controlled-U) 運算會由控制位元 (control bit) 影響目標位元 (target qubit)，然而在有些情況中目標位元會維持輸入的狀態反而是控制位元的相位 (phase) 會受到影響 (不影響 0, 1 的機率)。</p>
<p>可以看成 $\lambda\lvert xy\rangle$ 有兩種表達方式，但是展開後會發現確實是 control bit 受到影響，也就是 $(\lambda\lvert x\rangle)\lvert y\rangle$:</p>
<p>$\lambda\lvert xy\rangle = \lvert x\rangle(\lambda \lvert y\rangle) = (\lambda\lvert x\rangle)\lvert y\rangle$</p>
<h2 id="example-1-cx" class="article-heading">Example 1: CX 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-1-cx">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$U = X\Rightarrow C\mbox{-}U = CX = CNOT$</p>
<table>
<thead>
<tr>
<th>Before CX</th>
<th>After CX</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\small\lvert ++\rangle = \frac{1}{2}(\lvert00\rangle+\lvert01\rangle+\lvert10\rangle+\lvert11\rangle)$</td>
<td>$\small\frac{1}{2}(\lvert00\rangle+\lvert01\rangle+\lvert11\rangle+\lvert10\rangle = \lvert ++\rangle$</td>
</tr>
<tr>
<td>$\small\lvert +-\rangle = \frac{1}{2}(\lvert00\rangle-\lvert01\rangle+\lvert10\rangle-\lvert11\rangle)$</td>
<td>$\small\frac{1}{2}(\lvert00\rangle-\lvert01\rangle+\lvert11\rangle-\lvert10\rangle = {\color{red}\lvert- -\rangle}$</td>
</tr>
<tr>
<td>$\small\lvert -+\rangle = \frac{1}{2}(\lvert00\rangle+\lvert01\rangle-\lvert10\rangle-\lvert11\rangle)$</td>
<td>$\small\frac{1}{2}(\lvert00\rangle+\lvert01\rangle-\lvert11\rangle-\lvert10\rangle = \lvert -+\rangle$</td>
</tr>
<tr>
<td>$\small\lvert - -\rangle = \frac{1}{2}(\lvert00\rangle-\lvert01\rangle-\lvert10\rangle+\lvert11\rangle)$</td>
<td>$\small\frac{1}{2}(\lvert00\rangle-\lvert01\rangle-\lvert11\rangle+\lvert10\rangle = {\color{red}\lvert+-\rangle}$</td>
</tr>
</tbody>
</table>
<p>可以看到以 $\lvert +-\rangle, \lvert - -\rangle$ 為輸入的話其對應的結果反而是 control bit 的相位有變化。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV5K2MxurhOtvj645ycCpbgCKpMKife0d2ehu_vDTfe-xfIh6G-Mbm9Go2wZ3MfzI3GDeIB5Ga9kNL2jlcg0oXKcXv26IT9C5SwiXtiY6QoaM8gC1cclf5KyMce1ZKgApBOumCeZOeZNDcLEFbZnpojKg=w1625-h670-no?authuser=1" alt='$\lvert &#43;-\rangle$ for CX; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$\lvert &#43;-\rangle$ for CX; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-2-cz" class="article-heading">Example 2: CZ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-2-cz">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$U = Z\Rightarrow C\mbox{-}U = CZ$</p>
<p>$CZ\big(\frac{1}{\sqrt{2}}(<br>
\lvert 01\rangle+\lvert 11\rangle)\big) =\frac{1}{\sqrt{2}}<br>
(\lvert 01\rangle - \lvert 11\rangle)$</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUb1xcfRPJ1zQy88OXXceKap7FEYFlFYWwlL1JUS8Tad8yxF8UQQW5DUVrnfs864oK7lO0OJGB88MOQjAIM58jXA4teMaVVQwPBeQIWIvkp9YtwQ4S1Yu5VwbQYxKm9QyQTslWqX6FudBBV4l2PerVVpw=w1612-h704-no?authuser=1" alt='$\lvert &#43;1\rangle$ for CZ; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$\lvert &#43;1\rangle$ for CZ; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<h1 id="quantum-phase-estimation" class="article-heading">Quantum phase estimation 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-phase-estimation">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>利用 Phase kickback 的現象及 IQFT (請參考前幾篇文章) 來產生 $U$ 對應的 eigenvalue。</p>
<h2 id="運算式定義" class="article-heading">運算式定義 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e5%bc%8f%e5%ae%9a%e7%be%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$U$ 次方計算定義如下</p>
<p>$U^n\lvert\mu\rangle = \underbrace{U&hellip;U}_{n}\lvert\mu\rangle=\lambda^n \lvert\mu\rangle$</p>
<h2 id="邏輯閘" class="article-heading">邏輯閘 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%82%8f%e8%bc%af%e9%96%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>上方使用 $t$ 個 qubit 作為估計位 (counting qubits)，通常越多位會越精準，除非已被二進位小數完整表達。例如，$t = 3$，可以精確到 $\frac{1}{2^3} = \frac{1}{8}$。下方 $\lvert\mu\rangle$ 為 eigenvector 輸入，輸出 $\lvert 2^t\varphi\rangle$ 為 eigenvalue。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXgACFY_PCI6HuBVOVuJgRTLRps_Q7tvE3MhVdn8ywbQe0L0ml-DT8kPIlMdx97rGWzENy5j30GSTdXlzaEJ_082BOVjavuQPTctX4gwUJcST_qLTytYS20KWDBidsibypwLycZ8UCjnbgZxh7srD44ig=w1625-h660-no?authuser=1" alt='QPE, Little-Endian: 高記憶體位置放 MSB; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">QPE, Little-Endian: 高記憶體位置放 MSB; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-1-u--x-with-t--1" class="article-heading">Example 1: U = X with t = 1 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-1-u--x-with-t--1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>以其中一組 eigenvector、eigenvalue 示範。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXyRPDyzTMv96qdVNBjwAOSBq-orTIKIETTwrkh7FuCLt96Vgq8HXAzwGweJ8fyUeLl01la38JnGiKyi9yI3-hN5ZLoXIVpDL9XBBznUWaT_AgHbce2Ibs5ph6wwuOPe52JWe0-pJ4fn7eLXRCQJtqexg=w1625-h528-no?authuser=1" alt='QPE on $U = X, t = 1$; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">QPE on $U = X, t = 1$; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>從結果可以有以下推導: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i (2^{0}\varphi)}\lvert 1\rangle)\Rightarrow e^{2\pi i (2^0\varphi)} =\lambda = -1$，不過相位的資訊在觀測時就會消失，所以這邊要借助 IQFT 來將相位的資訊 (Fourier basis) 轉換到 qubit (Computational basis) 上，如下圖。</p>
<p>有 IQFT 的幫助下，測量的輸出是 $p = \lvert 1\rangle$，此時可以根據 $t = 1$ 代入求 eigenvalue 的公式: $\lambda = e^{2\pi i(\frac{p}{2^t})} = e^{2\pi i(\frac{1}{2^1})} = -1$。這邊因為剛好 $U = X$ 所需要的精確度是 0.5 所以 $t$ (counting qubits) 只需要 1 個位元即可。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWoNMnzYn7CRwQdflxmm9L2K1_S5QoUpbFdlA9wCrRBM8yJ8n0qpOpY1hfkhkfGrGfZVCcyKkcCbESHKYVX0n3VpRTT4mFFSVQmJJK78HlJvNXjNXRd-3ZEBPJbp3dxAJ4dpnAXUcFGA4GUPt0g5M6EJQ=w1265-h411-no?authuser=1" alt='QPE on $U = X, t = 1$ with IQFT; QPE_X_1bit; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">QPE on $U = X, t = 1$ with IQFT; QPE_X_1bit; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>實際執行</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUswU-FSrVYVwyQAz1kX4-wTK-CIQ9NQwec82-D2w8cWVENR0kvPG2g9BjK-rrVH9mR_w1v5nIy1_bn8bJFtSC2gyZFhI9yN8E8svJdRtwW4y19mJy2twYY4gDarOm_tsPLH96J4GAb4Z7P74pbw9Nwdg=w1265-h645-no?authuser=1" alt='IBM Composer circuit - QPE_X_1bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer circuit - QPE_X_1bit</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUnUmWP7vURMBk5kNCMFtplGHRfi0j-Z6x50YIEtIbsFOycklpPNOx8t7y_WLIPZvgDsm4klM_0WVVKdYCAp-2l5zqPEUtMUu_Z1FU9WSJM4B1YiI6aHVd2LNBnhv73ZLvsinkRK7tvhguIS_eKRin5LQ=w1266-h519-no?authuser=1" alt='IBM Composer result - QPE_X_1bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer result - QPE_X_1bit</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-2-u--x-with-t--2" class="article-heading">Example 2: U = X with t = 2 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-2-u--x-with-t--2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>雖然 $t$ (counting qubits) 只需要 1 個位元即可，這邊還是使用這個邏輯閘當作使用更多 $t$ 的情況。$t = 2$ 輸出為 $\lvert 10\rangle$ 代入公式 $\lambda = e^{2\pi i(\frac{p}{2^t})} = e^{2\pi i(\frac{2}{2^2})} = -1$。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVCSfWYS0s3LF7w_TE0XY7fZlQ59yp-QfvetmxT-LPkjI5_Exjh7E-8gK2j0VwzE2Vde6y93o-niA4M_QJNj-s3MC2DknQEnmfIBuy0TISCcIvQAGqqszC2KfRJUbwb1hJB9jq1gpQoNbR5dgyymY9dZg=w1265-h308-no?authuser=1" alt='QPE on $U = X, t = 2$ with IQFT; QPE_X_2bit; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">QPE on $U = X, t = 2$ with IQFT; QPE_X_2bit; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>實際執行</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVPgX4uASflbTaIlrM3dayKp1QUZB8azK0lkFqURz8Z5r3CPfK5muwo6PwiGCc53sbovGlztbQgg4BW4cfhoh_pYzLLGr84V-seUZEUJbP6E7zBCvns4fwjhjk8CVrJQHMGCTc4W9aRQNkghm-SXXmvEw=w1265-h413-no?authuser=1" alt='IBM Composer circuit - QPE_X_2bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer circuit - QPE_X_2bit</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUi57xrHcqhGeNOwqHpjB3cyI5eOSOvIR9jNp8J03napH3fHWiV3uGDt1Vc3CmrsLPZwIvOm_unxkQf0uXhl03lhrDfGtdke3AQ-DBKvn8qbAV4LVjYuXCcL1wJz0VGeSMJNn7YVmc1xbcseF-3TtsVqw=w1266-h513-no?authuser=1" alt='IBM Composer result - QPE_X_2bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer result - QPE_X_2bit</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-3-u--x-with-t--3" class="article-heading">Example 3: U = X with t = 3 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-3-u--x-with-t--3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXpgGU7CVt-4LR4UTo5jb858EC-_yquwv5bTvHqOIz6CWB6k7dDUx_InsHY_P4ZUWSD17EL9e8Tw8fyVj4r6fy1xNt579rTbthM07H4v0KtP0Xn0YGFx5rEUppuYdmLYSbGmXSXfECrFmcT1ptRC02HKw=w1266-h279-no?authuser=1" alt='QPE_X_3bit; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">QPE_X_3bit; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVJZiKduFAseFiwV1D7jPauNhSM2j_ElemITO0Ypf3bu57iPDiNm4P2Tlu1GL5rotJ2qdneo--HHoUmPi2bfabeVYu-T_sM58Kq8zcw20tQ4qyKupDGSggVajWdsR4eycPjiwGoQMVJWbHh_I9vbhhorA=w1265-h281-no?authuser=1" alt='IBM Composer circuit - QPE_X_3bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer circuit - QPE_X_3bit</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXMdx0k1D-axmC2_8agPZuldgV-rPL4RUAzMSw6PhO6_2bXNvKsTe7GnXcxSRWo06FiXoJpaH91P3an8u5mBlLJpgKFQxsCtwjalxQkeRi_LXXunVVQ2CYyYxzglWPq0ZJAPIwn18hHrmWLQTQ31xP6ig=w1265-h532-no?authuser=1" alt='IBM Composer result - QPE_X_3bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer result - QPE_X_3bit</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-4-u--x-with-t--4" class="article-heading">Example 4: U = X with t = 4 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-4-u--x-with-t--4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV1sJjJYivHBoUTu1jIMcEhUp9CY5AaPynEDW538XGkFxMvhUYplENnUQW2-AdDM30lb6Niq3K09PJl3Nww4yqaEluEaATUqYIRzhYWI-mgJv8hhSl8tcG0d7KtudxWU32GuL9ck9G2Aq9lnaN6TfXshA=w1265-h209-no?authuser=1" alt='IBM Composer circuit - QPE_X_4bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer circuit - QPE_X_4bit</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXhnOGo263e0jLa38kbYc26PeUh_rJ-oLOYy2n9dyXnWUP6ryAsy6ydQIOAiVKNpNJDcQaA3IIqSx4jrTkvxyrz6lufRQZtPuw4mWYQk5LcsT-8Q56SEXSCbSzoXiLJd1MRIzViVEtXAG7DObvr8H5hKg=w1265-h446-no?authuser=1" alt='IBM Composer result - QPE_X_4bit' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer result - QPE_X_4bit</center>
    </figcaption>
  </figure>
</p>
<h1 id="eigenvectors-superposition" class="article-heading">Eigenvectors superposition 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#eigenvectors-superposition">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>上面示範的都是事先已知 eigenvector，例如都使用 $X$ 的其中一個 eigenvector ($\lvert \mu_2\rangle$) 來求得 eigenvalue ($\lambda_2$)。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWdPpWotosWT0LDEJwmkC3HSoO46TEjaqFxoyrOAFErD0FrqNTS_sLKvllOcWTKTldmKJTH0ytMklNznu0_tfvUBO6EhNlN0jrAd2Fd18RG8byKYkH4FlheBu0L3r1wUJKsECqGdSNhNSkUiZJUXwy0EA=w1265-h317-no?authuser=1" alt='CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>但是一般情況沒這麼容易，因為若是知道 eigenvector 的話直接化簡就可以得到 eigenvalue。這裡可以利用疊加態同時存在不同狀態的能力，將 eigenvector 的疊加態當作輸入，則觀測輸出就會是其中一個 eigenvalue，利用統計的方式找出機率最大的幾個來代入公式。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXQuHaDe44KRxWm6XsYN4KToiLuRWvUWU-vyDf6WDrR6m7vFeaWYti20EheKTgFpBWwfTkiA5Fofn-lKN6pkR9_W3_njgB7tfTNVQdcHtWbNCcxznEyhFegC0ZsFFA7JV98pjIBMjnY6Syv0iCQkjc6KQ=w1265-h327-no?authuser=1" alt='CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<h2 id="example-u--x-with-t--4" class="article-heading">Example: U = X with t = 4 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example-u--x-with-t--4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>回顧 $X$ 有兩組 eigenvector、eigenvalue: $(\lambda_1, \mu_1), (\lambda_2, \mu_2)$</p>
<p>其中 $\mu_1\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1 \rangle)$、$\mu_2\rangle =\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1 \rangle)$，這邊可以發現 $\lvert\mu_1\rangle+ \lvert \mu_2\rangle =\lvert 0\rangle$，因此以疊加態當作輸入的會變得容易許多。</p>
<p><code>q[4]</code> 為 eigenvectors 疊加態:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWmB8gC_Xy72K7GBnCJh3U1cdD41pjG5W99HzXIc5dfm9jFftop4g-fgT6uuIdqcM_vatqylQh3gjdhPCUlzUTdBP9A5k_vqZxzpUtbBApUEDZoOWVcYSyAG30dioud3mUOic0JPttjheundNIlZ9Jc_g=w2200-h387-no?authuser=1" alt='IBM Composer circuit - QPE_X_4bit_super' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer circuit - QPE_X_4bit_super</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU2YZ3fKRt_fEfp3lejiOFmg7CGIjznB8rcL6doT0sIhKCElT1AuRkQPfXwcWpVWUuJFC7Z9y-kVOerxWAhjFZpKOVngcSwHTSgUlFFcjBwhK0bVRuvoakxLojfg0xRGRAf0xasQf3eDQttvSmN15yo_w=w2200-h760-no?authuser=1" alt='IBM Composer result - QPE_X_4bit_super' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">IBM Composer result - QPE_X_4bit_super</center>
    </figcaption>
  </figure>
</p>
<p>根據輸出結果，理論上可以得到兩個 eigenvalue:</p>
<ul>
<li>${\color{red}\lvert 1000\rangle} =\lvert 8\rangle\Rightarrow\lambda =  e^{2\pi i {\color{blue}(}\frac{\color{red}{8}}{2^4}{\color{blue})}} = -1$</li>
<li>${\color{red}\lvert 0000\rangle} =\lvert 0\rangle\Rightarrow\lambda =  e^{2\pi i {\color{blue}(}\frac{\color{red}{0}}{2^4}{\color{blue})}} = 1$</li>
</ul>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.bilibili.com/read/cv10995770" title="量子计算 [5] &amp;ndash; QFT &amp;amp; 相位估计 - nyasyamorina" aria-label="量子计算 [5] &amp;ndash; QFT &amp;amp; 相位估计 - nyasyamorina"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 量子计算 [5] &ndash; QFT &amp; 相位估计 - nyasyamorina</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/156046500" title="为什么量子相位估计可以求矩阵特征值 - 你是想难为我胖虎" aria-label="为什么量子相位估计可以求矩阵特征值 - 你是想难为我胖虎"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 为什么量子相位估计可以求矩阵特征值 - 你是想难为我胖虎</a></li>
<li><a href="https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html" title="Quantum Phase Estimation - IBM" aria-label="Quantum Phase Estimation - IBM"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum Phase Estimation - IBM</a></li>
<li><a href="https://jonathan-hui.medium.com/qc-phase-estimation-in-shors-algorithm-acef265ebe50" title="QC — Phase estimation in Shor’s Algorithm - Jonathan Hui" aria-label="QC — Phase estimation in Shor’s Algorithm - Jonathan Hui"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> QC — Phase estimation in Shor’s Algorithm - Jonathan Hui</a></li>
<li><a href="https://en.wikipedia.org/wiki/Controlled_NOT_gate" title="Controlled NOT gate - wiki" aria-label="Controlled NOT gate - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Controlled NOT gate - wiki</a></li>
<li><a href="https://towardsdatascience.com/quantum-phase-kickback-bb83d976a448" title="Quantum Phase Kickback - Frank Zickert | Quantum Machine Learning" aria-label="Quantum Phase Kickback - Frank Zickert | Quantum Machine Learning"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum Phase Kickback - Frank Zickert | Quantum Machine Learning</a></li>
</ul>
 
        ]]></description></item><item><title>4-bit QFT IQFT</title><link>https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/</link><pubDate>Mon, 20 Jun 2022 15:06:24 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/</guid><description><![CDATA[
          <p>發現 IQFT 有其他的形式。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220620-4-bit-qft-iqft/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>發現 IQFT 有其他的形式。</p>
<p>可依照開頭或是結尾擺放 SWAP gate，讓其運算在古典電腦上減少誤差。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWJ_REgf9dk1JXbzlFvbMx7pAE0twGmebQsEIm_1IyQ9Q9RY4PNd5xQgEgizRRTx6stPbltfd8_XL4mux6074Yn1HCmSOj2EZlalYaNy4FbPstJr8jdf7cSDvh8zG-YKcS683yrK3BxJ1KpawiwpTQpDQ=w809-h620-no?authuser=1" alt='模擬的理想輸出結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">模擬的理想輸出結果</center>
    </figcaption>
  </figure>
</p>
<h1 id="version-1" class="article-heading">Version 1 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#version-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXW7Al0t-UBKD-HhpBmQZEcVLYANR72aitOtaqSTE__Yn_NU8m1irX_a7E3LJpppXNUODVGeVgnmQh-mCbR7BsPT13f7qGg2q0D7FkUFPmsAtAlRfXk19aZMgu8PkJskTI6N76Hcd3C4wRxAG7mAY2MkQ=w2685-h468-no?authuser=1" alt='Version 1' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Version 1</center>
    </figcaption>
  </figure>
</p>
 

<details>
  <summary><span>Version 1 OpenQASM code </span></summary>
  <div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">8</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">8</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">0</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">1</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">2</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">3</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">3</span>];
</span></span></code></pre></div>
</details>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWv1--GuqjsOcV8mHiX-W8_Bg_5ZQSdK5rOqSdyrojtwYSy9__YJYZAuFtW3YJoFQp7p1x2LTQPq1HnbJYBenQhi9FkuF9kVyFJBtfDxt3hEoqmGqt2e1FoPcAO83_1HAyoo8_ZFTtWlAuNLRMBSzQv_A=w976-h741-no?authuser=1" alt='Version 1 result on ibmq_lima' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Version 1 result on ibmq_lima</center>
    </figcaption>
  </figure>
</p>
<h1 id="version-2" class="article-heading">Version 2 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#version-2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWuSfovX8z0EGFxGjFJIIjtPJAyrOOw9LXW2G-8B_Yv0Gc1hERKWDOjsBVjzi7iseB6tOsDw9F2sYNI_pwgE_O7qQQspUU_BgzGlS8-qi4FVAoumPjRXOFWTdx2O2sijVDQFKcGoDvY9DYUFKwvUaQHGA=w2673-h471-no?authuser=1" alt='Version 2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Version 2</center>
    </figcaption>
  </figure>
</p>
 

<details>
  <summary><span>Version 2 OpenQASM code </span></summary>
  <div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">8</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">8</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">4</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">0</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">1</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">2</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">3</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">3</span>];
</span></span></code></pre></div>
</details>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWwHz6DMl5OuFpyZqoowtN3hFkgJ-9KL47cOCcJhugwEQt6EtX3Cs5jmGIBiAkwFXgTxDfTw9HVByfOKb0rZH5OwZ3ZgFPGPykk88QSmiaRCb41UpllqrMj0dwnio15iOW_IhK5lptX-vFTcgB3iNLwDw=w991-h725-no?authuser=1" alt='Version 2 result on ibmq_lima' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Version 2 result on ibmq_lima</center>
    </figcaption>
  </figure>
</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>不過目前看起來 version 1 的執行結果好像似乎大概可能比 version 2 好。</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" title="Fundamentals of Quantum Programming in IBM’s Quantum Computers" aria-label="Fundamentals of Quantum Programming in IBM’s Quantum Computers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li>
</ul>
        ]]></description></item><item><title>Generalized Quantum Fourier Transform</title><link>https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/</link><pubDate>Thu, 19 May 2022 16:02:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/</guid><description><![CDATA[
          <p>上上篇 &ldquo;<a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/" title="Quantum Fourier Transform" aria-label="Quantum Fourier Transform" >Quantum Fourier Transform</a>&rdquo; 介紹了 DFT 與 QFT 之間的關係，並用一些小規模的範例讓讀者可以方便驗證該理論。接下來我們要往更一般化的形式以完善 QFT 的介紹。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220519-generalized-quantum-fourier-transform/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>上上篇 &ldquo;<a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/" title="Quantum Fourier Transform" aria-label="Quantum Fourier Transform" >Quantum Fourier Transform</a>&rdquo; 介紹了 DFT 與 QFT 之間的關係，並用一些小規模的範例讓讀者可以方便驗證該理論。接下來我們要往更一般化的形式以完善 QFT 的介紹。</p>
<p>有錯再麻煩指正，感謝。</p>
<h1 id="符號" class="article-heading">符號 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%ac%a6%e8%99%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>$i = \sqrt{-1}$</li>
<li>$N = 2^n, n = \log N$</li>
<li>為了避免搞混，這裡使用 $a, b$ 表示 n-bit 量子位元，原本的 $x, y$ 表示 N 個古典機率分佈。可以想作二進位編碼，例如，$a_0, &hellip;, a_{n-1}$ 皆為 $0$ 的 $\lvert 00&hellip;0\rangle$，表示 N 種情況中 $x_0$ 機率為 $1$ 其餘 $x_1, &hellip;, x_{N-1}$ 為 $0$ 的 $\begin{pmatrix}1&amp;0&amp;0&amp;&hellip;&amp;0\end{pmatrix}^T$。同理，$(b_0, &hellip;, b_{n-1})$ 可表示 $(y_0, &hellip;, y_{N-1})$。其實它們是在描述同一件事: $\lvert x\rangle = \begin{pmatrix}x_0 &amp; x_1 &amp; &hellip; &amp; x_{N-1}\end{pmatrix}^T = \lvert a\rangle = \lvert a_0 a_1&hellip;a_{n-1}\rangle$</li>
<li>$[0.a_0a_1&hellip;a_{n-1}]$ 的用法是二進位的分數表示，例如 $0.1$ 表示 $\frac{1}{2}$，用於方便表示連續 $\frac{1}{2^n}$。較嚴謹的定義為: $[0.a_0a_1&hellip;a_{n-1}] = \sum_{k = 0}^{n-1}a_k2^{-(k+1)}$。</li>
</ul>
<h1 id="recall" class="article-heading">Recall 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#recall">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>QFT:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br>
\newline<br>
\newline<br>
\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br>
\newline<br>
{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<h1 id="generalized-qft-matrix" class="article-heading">Generalized QFT Matrix 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#generalized-qft-matrix">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="矩陣形式" class="article-heading">矩陣形式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9f%a9%e9%99%a3%e5%bd%a2%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$\omega = e^{\frac{2\pi i}{N}}$, $\omega_N$ 的下標 $N$ 省略</p>
<p>$$<br>
M_{QFT} = {\frac{1}{\sqrt{N}} <br>
\small\begin{pmatrix} <br>
\omega^{0\times 0} &amp; \omega^{0\times 1} &amp; \omega^{0\times 2} &amp; \ldots &amp; \omega^{0\times (N-1)}\\ <br>
\omega^{1\times 0} &amp; \omega^{1\times 1} &amp; \omega^{1\times 2}&amp; \ldots &amp; \omega^{1\times (N-1)}\\ <br>
\omega^{2\times 0} &amp; \omega^{2\times 1} &amp; \omega^{2\times 2}&amp; \ldots &amp; \omega^{2\times (N-1)}\\ <br>
\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ <br>
\omega^{(N-1)\times 0} &amp; \omega^{(N-1)\times 1} &amp; \omega^{(N-1)\times 2}&amp; \ldots &amp; \omega^{(N-1)\times (N-1)}\end{pmatrix}_{N\times N}}<br>
$$</p>
<h2 id="運算過程" class="article-heading">運算過程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e9%81%8e%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
\lvert a \rangle&amp;\xrightarrow{QFT}\lvert b\rangle<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>其中依照情境 (因為 QFT 前後也可以有其他量子邏輯閘) 作古典跟量子之間的轉換:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
\begin{pmatrix}x_0 &amp; x_1 &amp; &hellip; &amp; x_{N-1}\end{pmatrix}^T&amp;\xrightarrow{encoding}\lvert a \rangle<br>
\newline<br>
\newline<br>
\lvert b\rangle&amp;\xrightarrow{decoding}\begin{pmatrix}y_0 &amp; y_1 &amp; &hellip; &amp; y_{N-1}\end{pmatrix}^T<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>Encoding 又可稱作 Quantum Embedding  用於將古典資料轉成量子狀態，可細分為 Basis Embedding、Amplitude Embedding 兩種。這裡用的比較偏向後者: $\lvert x\rangle = \sum^{N-1}_{k = 0}x_k\lvert k\rangle$。</p>
<p>Decoding 可視為用觀測 (measurement) 去統計各狀態出現機率。</p>
<h1 id="qft-implemented-by-quantum-gates" class="article-heading">QFT Implemented by Quantum gates 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-implemented-by-quantum-gates">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>為了一致性，這邊的電路或許跟其他地方的上下顛倒，不過這只是位元組順序 (Endianness )不同，這邊採用 IBM 使用的 little endian，也就是 <code>q[0]</code> 為 LSB (圖中靠上位置)，<code>q[n]</code> 為 MSB (圖中靠下位置)。</p>
<p>$R_k = CU1(\lambda) = {\small\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; e^{i\lambda}\end{pmatrix}}, \lambda = \frac{2\pi}{2^k}$</p>
<p>拓展到 n-bit 的電路如下圖，其支援 $2^n = N$ 種情況當作輸入:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXmpsNSAfStfWh-cxfT_iXDCbn16_NMBQBuE07gnylwvzNgvmbYet19R-3X7Bjr74TyVjL1Z8oVL3xbW4ZXDGn4kZCzZWhHqwT34VdC0Je2KJi3HzHJEcc5VLn3JPC_UKMDWFZdcb1AoKluWtcUBJFSOg=w2110-h722-no?authuser=1" alt='n-bit QFT; CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">n-bit QFT; CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<h1 id="derivation" class="article-heading">Derivation 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#derivation">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>由上圖可以看出 $a_0$ 被 $a_0, &hellip;, a_{n-1}$ 控制，其中 $H$ 就是巧妙地用來代表控制自己的旋轉。若簡化到只有 $a_0$ (1-bit QFT) 可以看成輸出為 $\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_0]}\lvert 1\rangle)$ 當 $a_0 = 0$ ($e^{2\pi i[0.a_0]} = 1$) 輸出不旋轉 Z 軸為 $\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)$；反之 ($e^{2\pi i[0.a_0]} = -1$) 旋轉變成 $\frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)$。</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
QFT(\lvert a\rangle) &amp;= \lvert b_0\rangle \otimes\lvert b_1\rangle\otimes &hellip;\otimes\lvert b_{n-1}\rangle<br>
\newline<br>
&amp;= <br>
\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_0&hellip;a_{n-1}]}\lvert 1\rangle) \otimes&hellip;\otimes<br>
\frac{1}{\sqrt{2}}(\lvert 0\rangle + e^{2\pi i[0.a_{n-1}]}\lvert 1\rangle)<br>
\newline<br>
&amp;= <br>
\frac{1}{\sqrt{2^n}}\big(\otimes^{n-1}_{k=0}(\lvert 0\rangle+e^{2\pi i[0.a_k&hellip;]}\lvert 1 \rangle)\big)<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
 
        ]]></description></item><item><title>2-Bit Inverse Quantum Fourier Transform Implementation</title><link>https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/</link><pubDate>Thu, 19 May 2022 10:31:04 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/</guid><description><![CDATA[
          <p>IQFT 邏輯閘實作。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220519-2-bit-inverse-quantum-fourier-transform-implementation/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>IQFT 邏輯閘實作。</p>
<h1 id="邏輯閘實作" class="article-heading">邏輯閘實作 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%82%8f%e8%bc%af%e9%96%98%e5%af%a6%e4%bd%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>根據上一篇 &ldquo;<a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/" title="Quantum Fourier Transform" aria-label="Quantum Fourier Transform" >Quantum Fourier Transform</a>&rdquo; 的內容，本篇延續相關知識並補充一些實作。</p>
<p>注意到這邊雖然看起來只是利用 $M_{QFT}\times M_{IQFT} = I$ 的特性，不過這是因為目前尚未有比較好的例子可以當作 IQFT 的輸入，所以這邊利用 QFT 先將輸入轉成 phase，接著再利用 IQFT 從這些 phase 分析出規律後輸出各個頻率。另外，為了保留完整性，所以 SWAP 並沒有被省略。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVLyQ3QtX-do_eqM6OkGECTMMNCQh3hw74-nWeCM1qO9b6CpJVBf3rF4Bh3dS-ANQuuSWYbQcxwl7hI8Cvl6tdJOsuEFst2LuJ8wokIoptOsSOpdVmQs3ZIg-UHpLnDxJfrDYQv2xUVt8TZozwKXCtxTg=w1075-h361-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Input
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// QFT
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// IQFT
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>swap q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>cu1(<span style="color:#ff79c6">-</span>pi <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Output
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>barrier q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">0</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">1</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">1</span>];
</span></span></code></pre></div><h1 id="實際使用-ibm-qpu-執行結果" class="article-heading">實際使用 IBM QPU 執行結果 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%9a%9b%e4%bd%bf%e7%94%a8-ibm-qpu-%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>資料的 encoding 是 <code>q[0]</code> 為 LSB，<code>q[1]</code> 為 MSB。所以輸出與輸入相同皆為 <code>01</code>。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWxR9tTSeZ9wXst2jNNQD7jDA_ktpbaCeHBtrPu1yMxgzP2IyD0uEFR7ciEZ09Pd23Nz0txVNNvskXI6Pkzth3qvGAQZBlEt3Ooc6133BYqr4VpE8qPz5sTUeaSErfE_G6AdzN9oyzE08EWMJcZmWiNHw=w1484-h1250-no?authuser=1" alt='1024 shots 機率分布' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">1024 shots 機率分布</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVomA1k5Dzpcefzhcn9WVPPp3waF4wwEhyFLxOUGQSMbCohztinL4zW7w-yWljr5zBQOis5Y7Gviyr8D4msf_ajSX3frUTs2J_oHFDXnROMiIpDim7F1kTArZGaXnBhKWzV-hcLroGkeuL7cBzysUTjgA=w2110-h492-no?authuser=1" alt='轉換過實際執行的邏輯閘' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">轉換過實際執行的邏輯閘</center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Quantum Fourier Transform</title><link>https://aben20807.github.io/posts/20220514-quantum-fourier-transform/</link><pubDate>Sat, 14 May 2022 16:38:16 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220514-quantum-fourier-transform/</guid><description><![CDATA[
          <p>有點感覺了，趕緊記錄。</p><br/><p>量子傅立葉轉換 (Quantum Fourier Transform, QFT) 是在量子運算上實現離散傅立葉轉換 (Discrete Fourier Transform, DFT)。QFT 的存在是為了之後 shor 演算法<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>，不過本篇先專注討論 QFT。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220514-quantum-fourier-transform/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>有點感覺了，趕緊記錄。</p>
<p>量子傅立葉轉換 (Quantum Fourier Transform, QFT) 是在量子運算上實現離散傅立葉轉換 (Discrete Fourier Transform, DFT)。QFT 的存在是為了之後 shor 演算法 ，不過本篇先專注討論 QFT。</p>
<p>有錯再麻煩指正，感謝。</p>
<p>另外，本文強調使用實際例子，所以用的規模比較小，一般化的公式及程式再請大家參考所附的資料或等待之後的文章。</p>
<h1 id="常用符號" class="article-heading">常用符號 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b8%b8%e7%94%a8%e7%ac%a6%e8%99%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>$\log$: 資訊領域多用以 $2$ 為底，也就是 $\log_2$，不過本文使用 $\log$。</li>
<li>$i$: 虛數單位，也就是 $\sqrt{-1}$。</li>
</ul>
<h1 id="discrete-fourier-transform" class="article-heading">Discrete Fourier Transform 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#discrete-fourier-transform">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>雖然<del>小時候</del>大一普物 (一) 有使用 Matlab 實作傅立葉級數，傅立葉轉換的部分在大二下修電機系的通訊導論也有遇到，不過還是有些不懂，所以就順便記錄。</p>
<h2 id="定義" class="article-heading">定義 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%9a%e7%be%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一般 DFT (classical Discrete Fourier Transform) 是針對一組長度為 $N = 2^n$ 的複數向量 $(x_0, x_1, &hellip;, x_{N-1})\in\mathbb{C}^N$ 轉換，其對應的結果也是一組複數向量 $(y_0, y_1, &hellip;, y_{N-1})\in\mathbb{C}^N$。函數對應如下:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{-kn}}, k = 0, 1, 2, &hellip;, N-1<br>
\newline<br>
\newline<br>
\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br>
\newline<br>
{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>根據尤拉公式 ，可以將公式表示為:</p>
<p>$$<br>
y_k = \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n\big(\cos(\frac{2\pi}{N}kn)-i\sin(\frac{2\pi}{N}kn)\big)}<br>
$$</p>
<p>對 DFT 來說，正規化並不重要，不過為了方便跟量子形式，$\frac{1}{\sqrt{N}}$ 做的事就是使此函數為么正變換 。一般 DFT 的物理意義如下圖所示，將時間軸的資料作為輸入，接著輸出不同頻率下的發生率。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXHUOJThi5oyv6mHqE20bwv02o5fWAhnkz_xhuLy4Z1jKBrHngbfb2FBL_ri62hIlWUTmmboMxuhVvFmEepFNzBpqf12Uzbo8rHOdM4C76grYhcPX_znqMk3_11QTgfUlu8ZLCIgZDxJ0iu_55_xCgB8Q=w540-h378-no?authuser=1" alt='來源:  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源:  link</center>
    </figcaption>
  </figure>
</p>
<h2 id="與單位根的關係" class="article-heading">與單位根的關係 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%87%e5%96%ae%e4%bd%8d%e6%a0%b9%e7%9a%84%e9%97%9c%e4%bf%82">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>傅立葉轉換利用的複數平面的旋轉特性。其中與 Root of unity 單位根 有關，其定義為 $z^n = 1$ 在複數平面上有 n 次單位根，這裡有一個旋轉及取模的概念也呈現在下圖中。同時注意若 $kn$ 前有負號的話就會順時針取根如下圖；反之，沒有負號就會逆時針，如稍後會提到的 IDFT。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXo3JDdTnTQcaApY0MpkaA6Z7KK2jPmqlKlaJZ7h0mkv_JfCmU_uTBz2BDUhF0WYZ1st5j-_Rp3pHSTeuAWq-AoG-XmhrMv8uoEtsRiOQ6v-NhXTIsUqaoiJgXMFwUVnCyAQZz4dXXp19w43EUxDnnpag=w571-h486-no?authuser=1" alt='MarekSchmidt, Public domain, via Wikimedia Commons  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">MarekSchmidt, Public domain, via Wikimedia Commons  link</center>
    </figcaption>
  </figure>
</p>
<h2 id="離散傅里葉變換矩陣-dft-matrix" class="article-heading">離散傅里葉變換矩陣 (DFT Matrix) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%a2%e6%95%a3%e5%82%85%e9%87%8c%e8%91%89%e8%ae%8a%e6%8f%9b%e7%9f%a9%e9%99%a3-dft-matrix">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$\omega_N$ 所構成的運算可以看作一個矩陣，離散傅里葉變換矩陣 ，$N = 4, (\omega = e^{-\frac{2\pi i}{4}} = -i)$ 時如下:</p>
<p>$$<br>
M_{DFT} = {\frac{1}{\sqrt{N}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{pmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{pmatrix}} = {\frac{1}{2}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; -i &amp; -1 &amp; i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; i &amp; -1 &amp; -i\end{pmatrix}}<br>
$$</p>
<p>$$\small<br>
DFT: \begin{pmatrix}y_0 \\ y_1 \\ y_2 \\ y_3\end{pmatrix} = M_{DFT} \begin{pmatrix}x_0 \\ x_1 \\ x_2 \\ x_3\end{pmatrix}<br>
$$</p>
<p>實際運算把輸入乘上該矩陣即可得到結果 (範例來自: <a href="https://www.dsprelated.com/showarticle/901.php" title="The DFT Output and Its Dimensions" aria-label="The DFT Output and Its Dimensions"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The DFT Output and Its Dimensions</a>，為了方便把向量轉置):</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
\begin{pmatrix}0 &amp; 1 &amp; 0 &amp; -1\end{pmatrix}^T&amp;\xrightarrow{DFT}\begin{pmatrix}0 &amp; -2i &amp; 0 &amp; 2i\end{pmatrix}^T<br>
\newline<br>
\newline<br>
\begin{pmatrix}1 &amp; 0 &amp; -1 &amp; 0\end{pmatrix}^T&amp;\xrightarrow{DFT}\begin{pmatrix}0 &amp; 2 &amp; 0 &amp; 2\end{pmatrix}^T<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>DFT Matrix 視覺化呈現如下圖:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV_q9eedvqwTvlqI4g6CNXScKEFpG0Wt8zdTvtxrn73yWnGbaljqgPwXj2Ru5xuExfBRZ2NCwgo2g5K3THJAGLa_awQQ6aJn9EtmvsZiK-3lH6uLzbiKxLhyi3E0ByQaTaauXwdcSxmrJuMzdIzlTsffQ=w884-h899-no?authuser=1" alt='John Ringland,  CC BY-SA 4.0, via Wikimedia Commons  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">John Ringland,  CC BY-SA 4.0, via Wikimedia Commons  link</center>
    </figcaption>
  </figure>
</p>
<p>此外，我這邊極度推薦看 3Blue1Brown &ldquo;利用旋轉找出質心&rdquo; 的高品質視覺化解釋影片: <a href="https://www.youtube.com/watch?v=spUNpyF58BY" title="But what is the Fourier Transform? A visual introduction. - youtube" aria-label="But what is the Fourier Transform? A visual introduction. - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> But what is the Fourier Transform? A visual introduction. - youtube</a> 和續集 <a href="https://www.youtube.com/watch?v=MBnnXbOM5S4" title="The more general uncertainty principle, beyond quantum - youtube" aria-label="The more general uncertainty principle, beyond quantum - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The more general uncertainty principle, beyond quantum - youtube</a> (就不附在本篇，自行前往觀看)。</p>







 
<h2 id="idft" class="article-heading">IDFT 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#idft">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>DFT (時間到頻率) 的逆轉換是 IDFT (Inverse DFT)，也就是頻率到時間。其定義跟 DFT 在次方上差一個負號:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br>
\newline<br>
\newline<br>
\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br>
\newline<br>
{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUN7Holy5ZrW_P-xM5ag9tziUlnutIhO8ql4wpCNRU95rcTGtGVbqzk6KI7rFgccnFGjnHQjMzyJg4wTKHsOiTHwYuc1T0AbSs7grDQFjOd8J5anuwiCEEWiYg9b8OlNNJj2hQ93S1ba6rm4HyT3geNcw=w1520-h738-no?authuser=1" alt='來源: 3Blue1Brown  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源: 3Blue1Brown  link</center>
    </figcaption>
  </figure>
</p>
<p>$N = 4, (\omega = e^{\frac{2\pi i}{4}} = i)$ 時 IDFT Matrix 如下:</p>
<p>$$<br>
M_{IDFT} = {\frac{1}{\sqrt{N}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{pmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{pmatrix}} = {\frac{1}{2}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; i &amp; -1 &amp; -i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; -i &amp; -1 &amp; i\end{pmatrix}}<br>
$$</p>
<p>以上是大部分人使用的版本，我取自下方來源:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Discrete_Fourier_transform" title="Discrete Fourier transform - wiki" aria-label="Discrete Fourier transform - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Discrete Fourier transform - wiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/Quantum_Fourier_transform" title="Quantum Fourier transform - wiki" aria-label="Quantum Fourier transform - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum Fourier transform - wiki</a></li>
<li><a href="https://www.youtube.com/watch?v=1JnayXHhjlg" title="Introduction to the Fourier Transform (Part 1) - youtube" aria-label="Introduction to the Fourier Transform (Part 1) - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Introduction to the Fourier Transform (Part 1) - youtube</a></li>
<li><a href="https://numpy.org/doc/stable/reference/routines.fft.html#implementation-details" title="Discrete Fourier Transform (numpy.fft) - numpy" aria-label="Discrete Fourier Transform (numpy.fft) - numpy"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Discrete Fourier Transform (numpy.fft) - numpy</a></li>
<li><a href="https://ocw.mit.edu/courses/2-161-signal-processing-continuous-and-discrete-fall-2008/resources/lecture_10/" title="2.161 Signal Processing: Continuous and Discrete Fall 2008 LECTURE 10 - MIT OpenCourseWare" aria-label="2.161 Signal Processing: Continuous and Discrete Fall 2008 LECTURE 10 - MIT OpenCourseWare"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 2.161 Signal Processing: Continuous and Discrete Fall 2008 LECTURE 10 - MIT OpenCourseWare</a></li>
</ul>
<p>另外有發現有些文章會將 DFT, IQFT 的運算對調以便說明 QFT。例如 IBM 教學中: <a href="https://qiskit.org/textbook/ch-algorithms/quantum-fourier-transform.html#1.-Introduction-" title="Quantum Fourier Transform" aria-label="Quantum Fourier Transform"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum Fourier Transform</a> 就把 DFT 的負號移除。</p>
<h1 id="quantum-fourier-transform" class="article-heading">Quantum Fourier Transform 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-fourier-transform">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>量子傅立葉轉換也是一個對應關係，原先對資料旋轉的操作在量子上改成對 Z 軸來旋轉</p>
<ul>
<li>使用 $n = \log N$ 個量子位元的疊加態，來疊加出 $2^n = N$ 種可能，由這 $N$ 種可能當作輸入 $\lvert x\rangle = \sum^{N-1}_{j = 0}x_j\lvert j\rangle$，$x_j \in \mathbb{C}$ 且 $\lvert {x_j}\rvert^2$ 代表第 j 個 state $\lvert j\rangle$ 出現的機率。</li>
<li>輸出為 $\lvert y\rangle = \sum^{N-1}_{j = 0}y_j\lvert j\rangle$，與輸入的設定相同。</li>
<li>其量子形式的函數定義如下:</li>
</ul>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
y_k =&amp; \frac{1}{\sqrt{N}}\sum^{N-1}_{n = 0}{x_n{\omega_N}^{kn}}, k = 0, 1, 2, &hellip;, N-1<br>
\newline<br>
\newline<br>
\omega_N =&amp; e^{\frac{2 \pi i}{N}}<br>
\newline<br>
{\omega_N}^k =&amp; e^{{\frac{2 \pi i}{N}}k}, \text{Root of unity}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>根據<a href="https://qiskit.org/textbook/ch-algorithms/quantum-fourier-transform.html#2.-Intuition-" title="IBM 教學" aria-label="IBM 教學"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> IBM 教學</a>抽象一點可以看作下方的形式:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
\lvert \text{State in Computational Basis} \rangle &amp;\xrightarrow{QFT} \lvert \text{State in Fourier Basis}\rangle<br>
\newline<br>
\newline<br>
\lvert x \rangle &amp;\xrightarrow{QFT} \lvert y\rangle = \lvert \tilde{x}\rangle<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>其中 $\omega$ 的定義一樣是來自單位根:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXTNLvhRZaiJD0t72Rvw-9uasChZTuhEgdZySIddOOn8dKCNgfaMTG0Cn-ojg7VO4M8Dn-QtpeSjTCDQmxAJqdQkhCYfVlG3jItDE97TVrudgu-p4PJzc9J-kFjicWi3gFphvDafPtmykOtmBLC2bZZuA=w1842-h1162-no?authuser=1" alt='$N = 4$ 的情況，驗證6。CC BY 4.0 Huang, Po-Hsuan' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$N = 4$ 的情況，驗證6。CC BY 4.0 Huang, Po-Hsuan</center>
    </figcaption>
  </figure>
</p>
<p>可以注意到其實 QFT 是跟 IDFT 比較像，同樣是逆時針旋轉。這裡一開始可能會比較困惑，因為也有些人也是反過來看，兩種都有人用。常見的原因是使用慣例 (convention)。這邊可以參考 <a href="https://quantumcomputing.stackexchange.com/questions/17703/what-are-the-input-and-output-of-qft-and-iqft-respectively" title="What are the input and output of QFT and IQFT, respectively?" aria-label="What are the input and output of QFT and IQFT, respectively?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> What are the input and output of QFT and IQFT, respectively?</a> 中的討論。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLX6WJ4R0cKsDaB99KDyM47gPZHxcO7V1TCayUrWGc-KWs1AjLUV3mKFRowzplBMPDl-p9Jsno_WDHrek0novXkGWJBjySG01idtFjPK2nYMHqnKT00_qMaxW6s7GF9uZtQKHE-iMPxvDmqAHJiGz_xlSw=w828-h315-no?authuser=1" alt='$N = 8 = 2^n (n = 3)$。來源:  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$N = 8 = 2^n (n = 3)$。來源:  link</center>
    </figcaption>
  </figure>
</p>
<h2 id="qft-matrix" class="article-heading">QFT Matrix 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-matrix">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$N = 4, (\omega = e^{\frac{2\pi i}{4}} = i)$ 時 QFT Matrix 如下 (跟 IDFT Matrix 一樣):</p>
<p>$$<br>
M_{QFT} = {\frac{1}{\sqrt{N}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{pmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{pmatrix}} = {\frac{1}{2}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; i &amp; -1 &amp; -i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; -i &amp; -1 &amp; i\end{pmatrix}}<br>
$$</p>
<h2 id="iqft-matrix" class="article-heading">IQFT Matrix 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#iqft-matrix">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>在公式補上負號，就變成 Inverse Quantum Fourier Transform。</p>
<p>$N = 4, (\omega = e^{-\frac{2\pi i}{4}} = -i)$ 時 IQFT Matrix 如下 (跟 DFT Matrix 一樣):</p>
<p>$$<br>
M_{IQFT} = {\frac{1}{\sqrt{N}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; \omega^4 &amp; \omega^6\\ 1 &amp; \omega^3 &amp; \omega^6 &amp; \omega^9\end{pmatrix}} = {\frac{1}{\sqrt{4}}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; \omega &amp; \omega^2 &amp; \omega^3\\ 1 &amp; \omega^2 &amp; 1 &amp; \omega^2\\ 1 &amp; \omega^3 &amp; \omega^2 &amp; \omega\end{pmatrix}} = {\frac{1}{2}\small\begin{pmatrix}1 &amp; 1 &amp; 1 &amp; 1\\ 1 &amp; -i &amp; -1 &amp; i\\ 1 &amp; -1 &amp; 1 &amp; -1\\ 1 &amp; i &amp; -1 &amp; -i\end{pmatrix}}<br>
$$</p>
<p>對我來說很特別的是，$M_{QFT}$ 跟 $M_{IQFT}$ 剛好互為共軛轉置 ，所以 ${M_{QFT}}^\dagger = M_{IQFT}$ 且 $M_{QFT}\times M_{IQFT} = I$。</p>
<h2 id="量子邏輯閘實作" class="article-heading">量子邏輯閘實作 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8f%e5%ad%90%e9%82%8f%e8%bc%af%e9%96%98%e5%af%a6%e4%bd%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="controlled-rotation" class="article-heading">Controlled rotation 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#controlled-rotation">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>一般用 CU1 實作對 Z 軸的旋轉，且控制控制位元為 $\lvert 1 \rangle$ 才會讓目標位元轉。$k$ 為控制位元與目標位元距離再加 1，例如第一個位元被第二個位元控制時，$k = (2-1)+1 = 2$ 則 $e^{i\lambda} = e^{\frac{\pi i}{2}} = i$，而也就是利用 $k$ 來實現不同角度的旋轉。</p>
<p>$$<br>
CU1(\lambda) = {\small\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; e^{i\lambda}\end{pmatrix}}, \lambda = \frac{2\pi}{2^k}<br>
$$</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" alt='對 Z 軸旋轉不會影響 quantum state 出現的機率，只會變更 phase。來源:  link' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">對 Z 軸旋轉不會影響 quantum state 出現的機率，只會變更 phase。來源:  link</center>
    </figcaption>
  </figure>
</p>
<h3 id="swap" class="article-heading">SWAP 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#swap">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>最後輸出會用到交換 (SWAP)，讓輸出可以跟公式相同。Qiskit QFT 文件中 有提到，若是 SWAP 是整個電路的末端的話，可以將 SWAP 的工作移動到古典運算實作就可以。</p>
<h3 id="qft-邏輯閘" class="article-heading">QFT 邏輯閘 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qft-%e9%82%8f%e8%bc%af%e9%96%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>透過 IBM Quantum Composer 實作 $N = 4$ ($n = 2$) 的 QFT，輸入為 $[0 1 0 0]$ 為例。可透過 NOT 對兩個原為 $\lvert 0 \rangle$ 的值產生 $\lvert 1 \rangle$，因此有四種輸入可能:</p>
<ul>
<li>$\lvert 00\rangle$ ($\lvert 0 \rangle= \begin{pmatrix}1&amp;0&amp;0&amp;0\end{pmatrix}^T$)</li>
<li>$\lvert 01\rangle$ ($\lvert 1 \rangle= \begin{pmatrix}0&amp;1&amp;0&amp;0\end{pmatrix}^T$): 下圖中使用的</li>
<li>$\lvert 10\rangle$ ($\lvert 2 \rangle= \begin{pmatrix}0&amp;0&amp;1&amp;0\end{pmatrix}^T$)</li>
<li>$\lvert 11\rangle$ ($\lvert 3 \rangle= \begin{pmatrix}0&amp;0&amp;0&amp;1\end{pmatrix}^T$)</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW0mGdVRAIizVnXS3RltKFUaLg9sXHiB5jRFlnMNvs1yD25Qd4PFjvNxLM4PKq2StG7it2WsG7UXbbdUAleG3V4oPXmcCBJi6NqKKHVMkem-vA5lpGcqmI1OodMlLSVdAYbd3ARTubpaUoKJGvLEsn2eQ=w678-h265-no?authuser=1" alt='2-bit QFT with $\lvert 01 \rangle$ as input' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">2-bit QFT with $\lvert 01 \rangle$ as input</center>
    </figcaption>
  </figure>
</p>
<p>輸出說明:</p>
<ul>
<li><code>q[0]</code>: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i\cdot\frac{1}{2}}\lvert 1\rangle) = \frac{1}{\sqrt{2}}(\lvert 0\rangle - \lvert 1\rangle)$</li>
<li><code>q[1]</code>: $\frac{1}{\sqrt{2}}(\lvert 0\rangle+e^{2\pi i\cdot\frac{1}{4}}\lvert 1\rangle) = \frac{1}{\sqrt{2}}(\lvert 0\rangle + i \lvert 1\rangle)$</li>
<li>$\Rightarrow \frac{1}{2}(\lvert00\rangle+i\lvert01\rangle-\lvert10\rangle-i\lvert11\rangle)$</li>
</ul>
<div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>cu1(pi<span style="color:#ff79c6">/</span><span style="color:#bd93f9">2</span>) q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>swap q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>];
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVNwjAtYsh9i2IX_FpWoYNHI7kDIekG05_DKC7zUt_jY-pV1RBNX3VixSkeEKmO2YkUdhXzMAoNX9CwP2zFK2hYHjhZdEuEp9ExCLwQHaTrBJmDmtwPpqqmekBsbVZfk6AcCVPULfG2mdO2kXmyTBKtEg=w818-h570-no?authuser=1" alt='$\lvert 01 \rangle$ 為輸入的輸出模擬結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$\lvert 01 \rangle$ 為輸入的輸出模擬結果</center>
    </figcaption>
  </figure>
</p>
<h3 id="驗證實作與公式是否對應" class="article-heading">驗證實作與公式是否對應 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a9%97%e8%ad%89%e5%af%a6%e4%bd%9c%e8%88%87%e5%85%ac%e5%bc%8f%e6%98%af%e5%90%a6%e5%b0%8d%e6%87%89">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>這邊為了減少手殘，所以使用 numpy 幫忙驗證。$N = 4 (n = 2)$，的公式驗證如下，<code>CU1</code> 中有一個 <code>j</code> 是因為 $e^{\frac{2\pi i}{4}}$ 是 $i$。 <code>si</code> 為輸入，可自行更改。這裡感謝 <a href="https://www.youtube.com/watch?v=rRblvBZkz7A" title="Small Quantum Fourier transforms | QuTech Academy - youtube" aria-label="Small Quantum Fourier transforms | QuTech Academy - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Small Quantum Fourier transforms | QuTech Academy - youtube</a> 影片示範推導過程 (雖然影片中的邏輯閘位置有錯誤)。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>si <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#39;0100&#39;</span>
</span></span><span style="display:flex;"><span>Input <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>matrix(<span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#39;</span><span style="color:#f1fa8c">{</span>si[<span style="color:#bd93f9">0</span>]<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">;</span><span style="color:#f1fa8c">{</span>si[<span style="color:#bd93f9">1</span>]<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">;</span><span style="color:#f1fa8c">{</span>si[<span style="color:#bd93f9">2</span>]<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">;</span><span style="color:#f1fa8c">{</span>si[<span style="color:#bd93f9">3</span>]<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>I <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>matrix(<span style="color:#f1fa8c">&#39;</span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        1 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 1&#39;</span>)
</span></span><span style="display:flex;"><span>H <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>matrix(<span style="color:#f1fa8c">&#39;</span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        1 1; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        1 -1&#39;</span>)<span style="color:#ff79c6">*</span>(<span style="color:#bd93f9">1</span><span style="color:#ff79c6">/</span>np<span style="color:#ff79c6">.</span>sqrt(<span style="color:#bd93f9">2</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>IH <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>kron(I, H) <span style="color:#6272a4"># tensor product</span>
</span></span><span style="display:flex;"><span>HI <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>kron(H, I) <span style="color:#6272a4"># tensor product</span>
</span></span><span style="display:flex;"><span>SWAP <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>matrix(<span style="color:#f1fa8c">&#39;</span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        1 0 0 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 0 1 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 1 0 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 0 0 1&#39;</span>)
</span></span><span style="display:flex;"><span>CU1 <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>matrix(<span style="color:#f1fa8c">&#39;</span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        1 0 0 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 1 0 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 0 1 0; </span><span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span><span style="color:#f1fa8c">        0 0 0 1j&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>QFT <span style="color:#ff79c6">=</span> SWAP<span style="color:#ff79c6">.</span>dot(IH)<span style="color:#ff79c6">.</span>dot(CU1)<span style="color:#ff79c6">.</span>dot(HI)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#39;QFT:</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">{</span>QFT<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#39;QFT(|</span><span style="color:#f1fa8c">{</span>si<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&gt;):</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">{</span>QFT<span style="color:#ff79c6">.</span>dot(Input)<span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&#39;</span>)
</span></span></code></pre></div><p>驗證執行結果 (numpy 用 j 表示虛數單位 $i$):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>QFT:
</span></span><span style="display:flex;"><span>[[ 0.5+0.j   0.5+0.j   0.5+0.j   0.5+0.j ]
</span></span><span style="display:flex;"><span> [ 0.5+0.j   0. +0.5j -0.5+0.j   0. -0.5j]
</span></span><span style="display:flex;"><span> [ 0.5+0.j  -0.5+0.j   0.5+0.j  -0.5+0.j ]
</span></span><span style="display:flex;"><span> [ 0.5+0.j   0. -0.5j -0.5+0.j   0. +0.5j]]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>QFT(|0100&gt;):
</span></span><span style="display:flex;"><span>[[ 0.5+0.j ]
</span></span><span style="display:flex;"><span> [ 0. +0.5j]
</span></span><span style="display:flex;"><span> [-0.5+0.j ]
</span></span><span style="display:flex;"><span> [ 0. -0.5j]]
</span></span></code></pre></div><h1 id="複雜度比較" class="article-heading">複雜度比較 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a4%87%e9%9b%9c%e5%ba%a6%e6%af%94%e8%bc%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>參考 <a href="https://www.youtube.com/watch?v=mZ--1ldN7fU" title="QC Theory Lecture 20 Shor&amp;rsquo;s algorithm part III Quantum Fourier Transform QFT - youtube" aria-label="QC Theory Lecture 20 Shor&amp;rsquo;s algorithm part III Quantum Fourier Transform QFT - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> QC Theory Lecture 20 Shor&rsquo;s algorithm part III Quantum Fourier Transform QFT - youtube</a> 內的說法得出下列複雜度比較 ($N = 2^n$)。最主要提升的原因是量子版本只需要 $\log N$ 位元即可運算 $N$ 種狀態。另外 <a href="https://www.youtube.com/watch?v=uuBgK44JrnA" title="Quantum Fourier Transform and Inverse QFT in Python - QISKit - youtube" aria-label="Quantum Fourier Transform and Inverse QFT in Python - QISKit - youtube"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum Fourier Transform and Inverse QFT in Python - QISKit - youtube</a> 提到 QFT 無法加速 DFT 在古典資料上的運算，原因是輸入輸出資料的表達。不過也有相關研究是在用量子版本取代古典版本，例如: QFFT 。</p>
<ul>
<li>DFT: $O(N^2) = O(2^{2n})$</li>
<li>FFT: $O(N\log N) = O(n2^n)$</li>
<li>QFT: $O(\log^2N) = O(n^2)$</li>
</ul>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>本篇利用從 DFT 的原理介紹到實際用小規模的範例完整示範 QFT 的原理及實作過程，應該可以稱得上是目前最完整的文章 (除非是一些學校超長的課程)，若有其他更完整資料再請提供給我參考。接下來 &ldquo;有空的話&rdquo; 會拓展到一般化的形式，到時候會有更多公式。另外，本文章也沒實作 IQFT，雖然是正負號換一下就好，不過因為篇幅已經過長所以就保留到下次。</p>
 
        ]]></description></item><item><title>Must-Do Setup for Programmer's New Windows PC</title><link>https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/</link><pubDate>Thu, 05 May 2022 09:50:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/</guid><description><![CDATA[
          <p>實驗室新設備 OuO<br><br/>記錄一些設定環境 (windows) 的過程<br><br/>未來會以雙系統安裝 Ubuntu 20.04</p>
          
            <p><a href="https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLWY9-XZXtjazLf8oOytALmQHfc6tWRtBNgcpNUI6hL_Vtb3ho-Ok-ki5hnwmMdLnzI0yL3j3rCEi8ICseGmH7LvlZQcr00h6QLIEgSHjsqtDWbewSHpsRMNEj8xGG0qOQ0tGWWA_p5nlSjWoS5iaon2cw=w1585-h1189-no?authuser=1" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220505-must-do-setup-for-new-win-pc/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>實驗室新設備 OuO<br>
記錄一些設定環境 (windows) 的過程<br>
未來會以雙系統安裝 Ubuntu 20.04</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUev1XFOtviqEMNI1sbVaO13E8FLOgLnbMN_aBzTKL32qWxvwrcZOpatSoAGoKXjCx0bVywIs1GM5DVNvNbpUqVfba6HCZ5ybzqyyaoBn_u88h1PsM6JsCCLdg1yH5-csH3aeAwuteuZajJdNOD3Nz6Uw=w1585-h1189-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="安裝實用軟體" class="article-heading">安裝實用軟體 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%af%a6%e7%94%a8%e8%bb%9f%e9%ab%94">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://picpick.app/zh-tw/download" title="PicPick" aria-label="PicPick"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> PicPick</a>: 截圖神器</li>
<li><a href="https://code.visualstudio.com/download" title="VSCode" aria-label="VSCode"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> VSCode</a>: 寫扣神器</li>
<li><a href="https://obsproject.com/download" title="OBS" aria-label="OBS"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> OBS</a>: 畫面錄製神器</li>
<li><a href="https://www.videolan.org/vlc/download-windows.zh_TW.html" title="VLC" aria-label="VLC"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> VLC</a>: 影音播放器</li>
<li><a href="https://apps.microsoft.com/store/detail/microsoft-powertoys/XP89DCGQ3K6VLD" title="Microsoft PowerToys" aria-label="Microsoft PowerToys"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Microsoft PowerToys</a>: 各種小工具</li>
<li><a href="https://www.7-zip.org/download.html" title="7-zip" aria-label="7-zip"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 7-zip</a>: 壓縮、解壓縮</li>
<li><a href="https://www.mindgems.com/products/Folder-Size/Folder-Size-Tutorials.htm?postinstall=1" title="FolderSize - MindGems" aria-label="FolderSize - MindGems"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> FolderSize - MindGems</a> 查看整個硬碟的資料大小分布</li>
<li>Synology Drive Client: 從網頁登入後安裝，用於同步備份資料夾</li>
<li><a href="https://zealdocs.org/download.html" title="Zeal" aria-label="Zeal"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Zeal</a>: 離線文件 (沒網路不用怕)，內建找不到的話可以去 <a href="https://github.com/hashhar/dash-contrib-docset-feeds" title="hashhar/dash-contrib-docset-feeds" aria-label="hashhar/dash-contrib-docset-feeds"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> hashhar/dash-contrib-docset-feeds</a> 看看，記得用 raw 才能加到 feed。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/C8amR8q20wdr6z0BHhAk5ZHFM7V74HGz87D8KfUXSo76TJZDCEXWIB_n6wU-nGuvgtdX9IWPdmzf8GnpseUES0meyC3KuPEfEIWYaDt4V2G2FBjfD2eGjgAme9m6ONAphr3iQhFk1kPoVfIRiQmZ98ZCHT99lDCNi2OyxbvZGTs11ha0BunbnSHqyQliSbFjpiAG4PRpQN_TH6n0vDDakn-G0JLdjpsuBQ-WArJJ-Kps0fK-2abPHVa9h_tmgIF0IxEOTVNFfO-xhsRsx0gkMTfaf7XbSRAUjODwrdnWdwW7ddQ-f-auZy5PLESWy6kV83jE0lteC2rsJv3UFBxs0IKQUI6WuZZUmQ6X5GAKLmtM_KwLAEnN6uJdyeZbmzVEM-_o9JlLpEb1FGGX3kwqGe1iORpey4Hpr10_ayeVK9GIjP0xxN7yMEhY7DrOIVqCNm0gPcyjaD9SiY0Pgc3z8lG7hzAby4tq9GJfqV409XYPxBT8lKU-XnSwrKfplUp5ySiaq_fHEqb5BVUlVFlDYnp5Q5qz5ADl8JNFVmwkw7UY73X6zz8T3GFqZaaIxhffax4m4AQcW418rAIwwhDCrxJ9DzlUyyMexYPzZbZeAdlFA4NjhpK5emjbwikk4mlRPor0MGZL5DjFQ1X-RkD7KsQs_RwVmMd1bDWSJYEzmfjzII9zIr9Isok7cr5uGR_IUnwBfz2PZr9QbNhKjs36SIElVlMA_t9gsdCaCeSN3UX32DczcOhBOcg5c4HX9lGzAPwrvHuS2Zap_nWhpP1I82U_my1FFCh9Pbin=w2110-h1175-no?authuser=1" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</li>
<li><a href="https://brave.com/zh/download/" title="Brave browser" aria-label="Brave browser"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Brave browser</a>: 目前用最順手的瀏覽器沒有之一，<del>Edge bye bye</del><br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVt6K7y2KiRckJ95lzSnwiv1JuWh8g06LwLhNNHftPldmtAjaEmixiVCppOTMhy2z0nPR7AiXGJHlrH8a7A4Qa4mFFLNAgB7fEVS2bvd0KJmQ5WQ7g5VhX1fEiqz4GdKOzdfW19cdJhgSlKPB6JZ3ELig=w701-h404-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
</ul>
<h1 id="設定-brave-sync" class="article-heading">設定 Brave Sync 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e5%ae%9a-brave-sync">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>直接同步所有設定，超好用。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWOeQx1BMcoZfhdAIMnL0TLEeNMTF0idLwJdmDejuFs8t2KYV3SFYZ_TMcf0Y9zVQDYmAZt6RXo5ByB-_qfPC1Jv1CLA5eWK4j6T0_0aA06aTft3b6gr3pChBsow-UidpV_RbGEej4TMAIIu_EO-sKaig=w2330-h1268-no?authuser=1" alt='從原有的設備複製同步代碼' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">從原有的設備複製同步代碼</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXvY2tpbNzTMcCJiHGNqXJsutRbhPEf4qjDjslWczDaJDFNgFG2rgEhDAVy2MTq1mKr-KwgAzXgoB_vwJ2KhPe0s2xIhmHq52NGJExHtY9b8JQh2wrnRpTHGK9ChK6JKO3jnXLyr7ttri1cPM8msHe_pw=w1069-h862-no?authuser=1" alt='我會開啟的選項' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">我會開啟的選項</center>
    </figcaption>
  </figure>
</p>
<h1 id="調整-win10" class="article-heading">調整 win10 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%bf%e6%95%b4-win10">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="取消登入畫面讓我直接打密碼" class="article-heading">取消登入畫面，讓我直接打密碼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%96%e6%b6%88%e7%99%bb%e5%85%a5%e7%95%ab%e9%9d%a2%e8%ae%93%e6%88%91%e7%9b%b4%e6%8e%a5%e6%89%93%e5%af%86%e7%a2%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUV7MUJePrvc54x9Da9a46bKh7X9oUorhWzJX40-WtNSe_RqxdT9q2UItmrpQYHQr0ienuEYknrRH8izqtvFTs2_RHJmJ0vnZBhKeG5g_sPeS5Izzs7UIQYF1nhE6dnh0wa7dgLh-DGl919y_9hunhU5g=w2254-h1268-no?authuser=1" alt='我不太需要這個登入前的畫面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">我不太需要這個登入前的畫面</center>
    </figcaption>
  </figure>
</p>
<ul>
<li>Steps:
<ul>
<li>打開登錄編輯程式<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6RRPipWBBNuaEJfqDhUWq0_xKa3Xxfu55vLpiyskOYHF7FiufqrJBs_nqCMQ3ieNBGM7VKL7WszdtJdl0ZaZBT6GgmPAY0z6s-Guuc7sY-XP96AV1vPimLpjSNjRk2ZDjzcXR_LYV9-xU5GIu3LNkLQ=w1477-h1242-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
<li>在 &ldquo;電腦\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows&rdquo; 上新增 Personalization 的機碼<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXOOeq9MR1vGJClmWK3aKoSoNQ4pwQxwbBAtIWeWzZtj1W5J7qmvaYTbV7O3rI_ysBZ-IMj9abQuLpBN3enno2I2fAc4uXzFqWcQvTp9u015aaITRZ4bIhRIhKdjN0FMqaklKXiaKZTQrXa2RKEs1hxug=w1430-h999-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
<li>在該機碼中新增 NoLockScreen 的 32-bit DWORD 值<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWMVLMzzbzE7PYA7c4QeWhrOpzjaIJxNcwc3G6SK8PQMiBGJNhqEE4kwm8bnncySamYJyMF-nzqunSaZz7VMDfUZuAMEdQpimepRjQaRz0fHZBg4HtlhKzBIekHTJ9egkB58ohK70bP1-KamGpG2L_idw=w1430-h999-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
<li>修改值為 1<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVMeCXCbH93QC7dka5M_wdTGufLYcP3fRKKjBygfpLiOQ-SQqfBwcAidf2NnjAIQm3V0vAMhuBgL99mPihBoBBoBpTCAyQKAcr97H8n9X8sUjGiOWddriCEUIhSEPB2CGRtvu634EE4IzjiOJDsWwaBsA=w1430-h999-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
</ul>
</li>
<li>若要取消此修改，即把登入畫面恢復，將新增的東西 (NoLockScreen 或 Personalization) 刪除即可<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUo6k0i6epDeMt67x9QEzZ3kwTSKtBXmYpnBRiKu49WZAGrfAQgtbALo3v4Do0qTB3mCZIjROfXgwsI1L5nLwIjBRvSF4TDyNsTFNACjWC8vj0lyzBHcCiFD84AYBhJa2gctPBfCKGzKov3YWOEPeBJcg=w1424-h739-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
</ul>
<h2 id="caps-lock-換成-esc" class="article-heading">Caps lock 換成 esc 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#caps-lock-%e6%8f%9b%e6%88%90-esc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>請參考: <a href="https://aben20807.blogspot.com/2017/07/1060726-win10-caps-lockesc.html#more" title="106.07.26 win10 caps lock換成esc" aria-label="106.07.26 win10 caps lock換成esc"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 106.07.26 win10 caps lock換成esc</a>。</p>
<h1 id="安裝及設定-wsl2" class="article-heading">安裝及設定 WSL2 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%8f%8a%e8%a8%ad%e5%ae%9a-wsl2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>安裝參考: <a href="https://docs.microsoft.com/zh-tw/windows/wsl/install" title="https://docs.microsoft.com/zh-tw/windows/wsl/install" aria-label="https://docs.microsoft.com/zh-tw/windows/wsl/install"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://docs.microsoft.com/zh-tw/windows/wsl/install</a></li>
<li>更新至 WSL2
<ul>
<li>從<a href="https://docs.microsoft.com/zh-tw/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package" title="此處" aria-label="此處"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 此處</a>下載更新檔案並安裝</li>
<li><code>wsl --set-default-version 2</code></li>
<li><code>wsl --set-version Ubuntu-20.04 2</code></li>
</ul>
</li>
<li>接著安裝 <a href="https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=zh-tw&amp;gl=TW" title="windows terminal" aria-label="windows terminal"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> windows terminal</a><br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVG6EnhpZRztAnezKjJi6DuPWrjFaOvHiQQyaIUlNllYian_z55QXS47HxuZSjK6dr2ZOkwj5Cxm_jojzw-dIWScFdk81P3DB58uzHdqzHwpN9udXjVEh2jFXWrim5XBAqIsgA55DtNbVpl_wwVeW8XrA=w1642-h1268-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</li>
</ul>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.windowscentral.com/how-disable-windows-10-lock-screen" title="https://www.windowscentral.com/how-disable-windows-10-lock-screen" aria-label="https://www.windowscentral.com/how-disable-windows-10-lock-screen"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.windowscentral.com/how-disable-windows-10-lock-screen</a></li>
</ul>
        ]]></description></item><item><title>Quantum Search for Boolean Satisfiability Problem</title><link>https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/</link><pubDate>Sun, 10 Apr 2022 20:31:38 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/</guid><description><![CDATA[
          <p>進入量子演算法了。<br><br/>越來越複雜，勉強能跟上。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220410-quantum-search-for-boolean-satisfiability-problem/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>進入量子演算法了。<br>
越來越複雜，勉強能跟上。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>證明部分看情況再補上</p>
<p>有錯再麻煩指正。</p>
<h1 id="boolean-satisfiability-problem" class="article-heading">Boolean satisfiability problem 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#boolean-satisfiability-problem">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>布林可滿足性問題，可簡稱為 SAT  。給定一個邏輯電路，求是否存在一種輸入使得該電路輸出為真 (True, 1)。</p>
<p>舉例: $F(x_1, x_2) = (x_1\lor x_2)\land (\lnot x_1 \lor \lnot x_2) \land (x_1)$, where $x_1, x_2 \in \{0, 1\}$，<br>
透過演算法可得 $x_1 = 1, x_2 = 0$ 時 $F(x_1, x_2) = 1$。求存在的其中一組解即可。</p>
<h1 id="complexity" class="article-heading">Complexity 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#complexity">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>SAT 問題屬於 NP-Complete  ，一般解法的複雜度需要花費到指數時間 $O(2^n)$。</p>
<p>簡單釐清一下 P、NP、NP-Complete、NP-Hard 之間的關係:</p>
<ul>
<li>P: 能以多項式時間演算法計算答案的問題之集合</li>
<li>NP: 能以指數時間演算法計算答案，且能以多項式時間演算法驗證答案的問題之集合。P 也可以用指數時間演算法求解，因此 P $\subset$ NP。</li>
<li>NP-Complete: NP 中最難問題的集合，若其中一個問題存在多項式時間的解法的話，則此集合所有問題都可用多項式解決。NP-Complete $\subset$ NP。</li>
<li>NP-Hard: 難度至少為 NP，代表可能比 NP-Complete 還難 (例如，Halting problem  )。NP-Complete $\subset$ NP-Hard。</li>
</ul>
<p>若 P = NP 則 P = NP = NP-Complete $\subset$ NP-Hard。</p>
<h1 id="quantum-solution-for-sat" class="article-heading">Quantum Solution for SAT 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-solution-for-sat">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="goal" class="article-heading">Goal 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#goal">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>使用量子特性 (Grover&rsquo;s algorithm  ) 對解決 SAT 達到平方加速: $O(2^{\frac{n}{2}}) = O(\sqrt{2^n})$</p>
<h2 id="simple-example" class="article-heading">Simple example 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#simple-example">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$F(x_1, x_2) = x_1 \land x_2$, where $x_1, x_2 \in \{0, 1\}$</p>
<h2 id="setup" class="article-heading">Setup 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#setup">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><code>q[0]</code>: auxiliary working bit</li>
<li><code>q[1]</code>: unused</li>
<li><code>q[2]</code>: auxiliary Boolean variable, $s_2$</li>
<li><code>q[3]</code>: $x_0$</li>
<li><code>q[4]</code>: $x_1$</li>
</ul>
<p>一開始會先將兩個輸入位元進行疊加，所以 <code>q[3], q[4]</code> 都會先使用 H gate 進入到疊加態。另外 <code>q[0]</code> 會先用 X gate 使其變為 $\lvert 1\rangle$ 再用 H gate，目的是讓其疊加成 $\frac{\lvert 0\rangle-\lvert 1\rangle}{\sqrt{2}}$，稍後會利用到此特性。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWOQurcL9sjq7UV_xxB8P3SNnnzlGL3wYZI5u8ev_yTL90CA5pHhVp_w8P8JQx598vVz3PnhjJMmIKHavCVV1XNyz8t1NI712JkauxUB6hYYguuF7fegvDKxWUBK7lRynDSKzhvbf-1jXwWoj_ylo3ug=w713-h536-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="step-1-find-the-oracle" class="article-heading">Step 1: Find the Oracle 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#step-1-find-the-oracle">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Oracle (Oracle Machine，預言機)  可以把它看作是一個 black box，其功能是可以透過單次運算解答特定問題。例如此簡化後問題的 oracle 可寫成 $B$ 矩陣如下。有了此矩陣，就可以做振幅放大。<br>
$$B = \small\begin{pmatrix}<br>
1&amp;0&amp;0&amp;0 \\<br>
0&amp;1&amp;0&amp;0 \\<br>
0&amp;0&amp;1&amp;0 \\<br>
0&amp;0&amp;0&amp;-1\end{pmatrix}$$</p>
<p>但是這裡有一個明顯的疑問，$B$ 矩陣不就是把答案解出來了嗎 ($x_0, x_1$ 皆為 1)，怎麼還需要解問題? 其實這是因為此問題已經簡化過，所以可以示範 oracle 的模樣。在較複雜的情況下這個 oracle 是表示不出來的。因此需要靠量子特性去找出這個 oracle。</p>
<p>實際情況是使用量子邏輯閘。若大家還有印象我們之前練習了一堆古典邏輯閘的轉換 (<a href="/posts/20220324-programming-on-quantum-computers-ch2-exercises/" title="Programming on Quantum Computers Chapter 2 Exercises" aria-label="Programming on Quantum Computers Chapter 2 Exercises" >Programming on Quantum Computers Chapter 2 Exercises</a>) 這些技巧在這邊就會使用到。以本次範例為例，目的是找出 <code>q[3], q[4]</code> AND 的結果為 1 的情況，所以可以利用 CCNOT 建構 AND，接著將其結果存放在 <code>q[2]</code>，並透過 CNOT 讓 <code>q[2]</code> 控制 <code>q[0]</code>，因此當 AND 輸出結果為 1 時就會影響到 <code>q[0]</code>。而這也是整個演算法的核心。</p>
<p>透過 CNOT 去抓去 1 的結果就代表我們拿到 oracle 了，接下來需要回復 AND 的動作，以讓狀態只有 oracle。因此透過量子的其中一項特性: 可逆性，將運算反著操作就可以回復狀態。則這步驟的邏輯閘可表示成下圖，有點像是個翅膀 (為了對稱性有加一些 ID gate, 深藍色 I)。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXi_i3vdYiT2lC2moxu6JdSgVNk4IJW8FISfOnms_xSgFwAciHTU-3tlGsz0-s04rBCMMO-ST8kXK_2LFW6XFF7ATE0FX_a4zYQ3W-8pGapAtNAHE0fYiXL5GbEAlW7blkjIVwv92AapAWttZcaRRk74A=w2687-h537-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="step-2-amplitude-amplification" class="article-heading">Step 2: Amplitude Amplification 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#step-2-amplitude-amplification">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>有了 oracle 後再來只需要透過 Grover&rsquo;s algorithm 來操作振幅放大的工作。其中一般性的 Grover Diffusion Operator $D$ 定義為一個大小為 $2^n\times 2^n$ 內容為 $D_{i,j} = \frac{2}{2^n}$ if $i\ne j$, and $D_{i,j} = \frac{2}{2^n}-1$ if $i = j$。其中 $D = D^\dagger$ 且因為 $D\times D^\dagger = I_{2^n\times 2^n}$，符合 Unitary matrix  定義。$D$ 展開如下:</p>
<p>$$<br>
D = \begin{pmatrix}<br>
\frac{2}{2^n}-1 &amp; \frac{2}{2^n} &amp; \ldots &amp; \frac{2}{2^n} \\<br>
\frac{2}{2^n} &amp; \frac{2}{2^n}-1 &amp; \ldots &amp; \frac{2}{2^n} \\<br>
\vdots&amp;\vdots&amp;\ddots&amp;\vdots\\<br>
\frac{2}{2^n} &amp; \frac{2}{2^n} &amp; \ldots &amp; \frac{2}{2^n}-1\end{pmatrix}_{2^n\times 2^n}<br>
$$</p>
<p>接下來使用量子邏輯閘實作 $D$。首先介紹張量積 Tensor product  , $\otimes$，範例如下:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXWdJdNx89JNTLNox50BvYulLeratVXqmYTVji4dK7NrwefqYR0HWNImL8YESlMAwNXvK5lTWfNbd-tMMma-K2Ii6ByLZHPU9cOceL9bxy7lufYOdZOd2eWYfCimey0OxlAAdTwlDatklNqf43_n8Z5tg=w3716-h479-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>接著定義 $\lvert\psi\rangle$ (對 $n$ 個輸入, $\lvert 0\rangle$ , 做 H gate，每個輸入對應兩種可能結果，所以整體共有 $2^n$ 種結果且機率都相同)，$\langle\psi\rvert$ 為轉置後結果。</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
\lvert\psi\rangle =&amp; H^{\otimes n}\lvert 0^{\otimes n}\rangle<br>
\newline<br>
=&amp; \otimes^n_{k=1}\big(\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\big) = \frac{1}{\sqrt{2^n}}\begin{pmatrix}1 \\ 1 \\ \vdots \\ 1 \end{pmatrix}_{2^n\times 1}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>則 $D$ 矩陣的實作定義為第一行等式，並可簡化成第二行的版本方便使用量子邏輯閘實作:</p>
<p>$$<br>
\begin{equation*}<br>
\begin{split}<br>
D =&amp; 2\lvert\psi\rangle\langle\psi\rvert - I_{2^n\times 2^n}<br>
\newline<br>
\newline<br>
=&amp; H^{\otimes n}(2\lvert 0^{\otimes n} \rangle\langle 0^{\otimes n}\rvert - I_{2^n\times 2^n})H^{\otimes n}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<p>回頭看本文使用的範例，可知 $n = 2$，因此 $D$ 為:</p>
<p>$$<br>
D = \begin{pmatrix}<br>
\frac{2}{4}-1 &amp; \frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4} \\<br>
\frac{2}{4} &amp; \frac{2}{4}-1 &amp; \frac{2}{4} &amp; \frac{2}{4} \\<br>
\frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4}-1 &amp; \frac{2}{4}\\<br>
\frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4} &amp; \frac{2}{4}-1\end{pmatrix}_{4\times 4}<br>
$$</p>
<p>並可由下方邏輯閘實作 (詳細關聯待確認)，以及測量最終機率:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXRRuuDScPY9_PzBp56KDxYUrwfvivH98VVwhFY6kObtBwxvkTYayBR7B_7eXDxpbBuePpSMLTuy0bYYQsRPqIIhDyg7QX6aB1qROW7M4av3vK8-o5xpawXNBjqvVQcnzvEKEcawfyux1ZF1NKaWx7AFg=w1097-h565-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="run-on-ibm-quantum-composer" class="article-heading">Run on IBM Quantum Composer 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#run-on-ibm-quantum-composer">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="source-code" class="article-heading">Source code 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#source-code">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">5</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">5</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Setup
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Step1: Find the Oracle
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>cx q[<span style="color:#bd93f9">4</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">4</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>id q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>id q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">4</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>t q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>tdg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">4</span>],q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Step 2: Amplitude Amplification
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>cx q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>u3(<span style="color:#bd93f9">2</span><span style="color:#ff79c6">*</span>pi,<span style="color:#bd93f9">0</span><span style="color:#ff79c6">*</span>pi,<span style="color:#bd93f9">0</span><span style="color:#ff79c6">*</span>pi) q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// Measurement
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>measure q[<span style="color:#bd93f9">4</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">3</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">3</span>];
</span></span></code></pre></div><h2 id="simulation-result" class="article-heading">Simulation result 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#simulation-result">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUad9IY7ZzwmhNVOaHuOM1T_R7AfPO8rQEfKYqsGX7ed0ahsVuoDdtI5z6OebC4Qo1SAjmsdUdk1BkzpieJ9XkAHSoFupZ0ioLpLwufrzi0MIBPdGMTSCgNEmgCUQfqooA9lTcpWnQ2ChWeNJ8wp7F0mA=w980-h703-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="actual-result-from-qpu" class="article-heading">Actual result from QPU 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#actual-result-from-qpu">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>可以看到其實誤差蠻大，正確率是 365/1024 = 35.6%</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU6VHp2Wt5IP36ZLs2RcMEx4vdc11Uwunel_GH508rFb9ocAka1eP7KfD1mqFaTZPF57zOdtV3kUGLOjAjd-SX9EfPk5deUuGpyRNniKUlnk5XW-2sH_mr2FavWu407zdeFFesGzhoocQahQOiM23oxKg=w3104-h1933-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" title="Fundamentals of Quantum Programming in IBM’s Quantum Computers" aria-label="Fundamentals of Quantum Programming in IBM’s Quantum Computers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li>
</ul>
 
        ]]></description></item><item><title>Birthday Review</title><link>https://aben20807.github.io/posts/20220404-birthday-review/</link><pubDate>Mon, 04 Apr 2022 22:01:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220404-birthday-review/</guid><description><![CDATA[
          <p>大家好，今天剛好我生日，來寫寫我個人的近況以及一些回顧。簡而言之，還沒畢業XD</p>
          
            <p><a href="https://aben20807.github.io/posts/20220404-birthday-review/"><img src="https://images.unsplash.com/photo-1647180116710-6b5da0fade46?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1974&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220404-birthday-review/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>大家好，今天剛好我生日，來寫寫我個人的近況以及一些回顧。簡而言之，還沒畢業XD</p>
 
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>在讀書過程中老闆強調的是分辨 must have 和 nice to have，很明顯的我做了很多 nice to have ，不過事後想想這些更多是 must have。例如在本站寫文章，雖然跟未來沒什麼關係，不過後來發現是不錯的抒發管道 ，儘管是一些純學術、技術的文章，這種把較艱深的知識科普化的過程也能夠釋放一些在腦袋中佔據的空間。</p>
<h1 id="上一個專案結束" class="article-heading">上一個專案結束 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8a%e4%b8%80%e5%80%8b%e5%b0%88%e6%a1%88%e7%b5%90%e6%9d%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>如果有看我之前提到的 SAC2021 論文 的作者列，就會發現我是跟工研院合作，類似產學合作的概念，那邊提供計畫的經費給我們，我們這邊根據那邊有興趣的主題做研究以及相關的開發。合作過程整體不錯，老師和主管給的意見都相當有幫助，讓整體計畫進度持續推進。論文中有提到我們實作了兩種方案，其實是一開始我們沒有先作好相關調查，等做完之後才發現有更好的選擇。不過我們已經有相關經驗，因此在使用另一方案的時程縮短不少，這也讓我有了教訓：應該要有更完整的調查後才開始動作。就這樣做了三年期的計畫，最後算是有完整交接，程式碼部分目前沒有開源，但是我的貢獻數目應該是可以公開才對，畢竟第三方工具可以拿到相關數據。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW-s1DU1WbC5qUxqEaEmyDOMCkusxtexbDHs7P0TQQlT0USDMCKaYRACiL22edgJ10c27Lr0l1dVky2rxIo_SNL4ZEp2G9qKI4ksdiLUvUnhsfzIKESiQo2rm7Wev2Ivs0ltcZYnIzNpmUQoSEdDesNlw=w822-h879-no?authuser=1" alt='Contributed commits' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Contributed commits</center>
    </figcaption>
  </figure>
</p>
<p>在這個主題下目前已經寫了幾篇論文，如果幸運的話，以這些論文我應該可以過畢業的門檻，再來只需要有幾篇幫忙的大概就可以。</p>
<h1 id="接下來的研究方向" class="article-heading">接下來的研究方向 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a5%e4%b8%8b%e4%be%86%e7%9a%84%e7%a0%94%e7%a9%b6%e6%96%b9%e5%90%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>如果有關注本站的話，會發現近期發了許多量子相關的文章。其實除了正在修相關課程之外，目前也規劃往這邊研究，但是可能貢獻可能就不會有前一個方向這麼多。</p>
<h1 id="廣告營利" class="article-heading">廣告營利 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bb%a3%e5%91%8a%e7%87%9f%e5%88%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>前言提到了寫文章的療效(x，個人雖然被老闆評斷為淡泊名利，不過畢竟這塊是會花時間的，因此想說能否順便用廣告賺外快。我把本站以及之前的 Blogger 拿去申請，結果只有流量低不少的本站通過…以這個流量短時間看起來是沒有什麼廣告點擊吧，申請也有被告知不能自行點擊或宣傳讓大家點擊，可能是因為會影響 google 針對興趣的推測吧。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWx6vAgIMHyaewOreyF6jjLVuA80a4DFLH-a4_MiQGJrvEuZbD6ahQzeRqEZ9xwqphl62yObucE9cuetireJTdbNbAPn7EqEEHaIjqsX5S2fZmrNLiDunvaBem2_SQssT8EgGaaMq0E5x7HaWQhQh65NQ=w1498-h812-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>雖然我個人頗討厭廣告，我平時也使用 Brave 當作主流瀏覽器來擋廣告，所以我也只放置在一些區塊，應該不至於影響文章閱讀體驗，討厭的話用擋廣告軟體也是可以的。話說我的觀眾超過一半來自 China，這樣廣告是不是派不上用場…</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV730_OolGXoGxZrtEDzEdASiDhJxu1sBVNIk4F4wa-4nl0nyGMG_aMecfZgEJNlG3tyNvOOWzbCDf0w2yFcWpQCW4JYjLQSIfc299WK7PkK2CdOMuL64jJxV_RaxzX-Gi4zQsoUK9KPe5MExikq-5zfg=w1049-h670-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="nice-to-have" class="article-heading">Nice to have？ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#nice-to-have">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>另外一個比較大型的東西，是我為了老闆開的編譯器系統寫了一個改作業的工具 local-judge 。想當初我剛進來是每個助教要分一些然後半手動批改。為了更好的節省時間，我們規定了需要遵守的格式，但是用一般 shell script 批改會遇到許多情況需要手動排除，因此這個用 python 寫的工具就誕生了。用這個工具省下大量批改同學作業時間，一般常見錯誤也都有自動處理並記錄，現在只要一個人十分鐘就可以改完一百多份作業。</p>
<p>如今已經打包到 pypi 所以可以直接用 pip 安裝。結果才接到通知說因為教課年限快到，因此再來老闆可能會改教其他科目。原本想薛一波下載人數的打算就這樣落空XD</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXm7ETVbwoXkcLU25JHjntQHla4oOY19N85VE_j9iq9fiAVJbcgm4GP1cfZY7fTkRx1QpbtG2YbawEbkbv4DsbdrNNuEYO1ZS7KT-t-u0NLDelo1sDKcc0Oi7JTTMU5sLdBZ_0c7i_6M8cbjYvkR85N3A=w1165-h790-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWV-uyJWpbu_42P1qHfjgGZxkE8gKLX0hPZFo1FSNMlVzE92BvQ3Fk150fU05hgg05ruzkayaXLSj83YZBuDi-SuJI3dYbQpD3qXok1UdK5Gp9Hn9GwpyjzQ53uG0-_tc9Zerko_cFz7Raf_KD_JmdxsQ=w871-h570-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="近況" class="article-heading">近況 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bf%91%e6%b3%81">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近大概在休息、讀論文、報論文、練習審論文、改期刊論文。這麼好像都是論文，不過其實休息比重比較大。平時還是穩定跟女友在想宇宙最難問題：三餐要吃啥？</p>
<p>接下來有時間有毅力的話是有打算將之前研究的內容寫一些較口語化的文章，可能還是會偏學術，要到科普的境界可能有難度。當然目前的量子也會繼續，我會努力聽懂@@</p>
<p>另外之前有提到手機換了 S21U，目前用下來偶爾相機會顯示正在使用不能打開的問題，且這台的相機近距離拍出來的相片繪差相當嚴重，還被 Unsplash 退件多次，這邊原先的 V30+ 就幾乎沒這個問題。</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>不知不覺活了25年 (三百個月)。感謝大家的祝福。希望世界疫情趕快好轉，這樣大家才能各種出國玩，假日才不用一直看到一堆人(x</p>
 
        ]]></description></item><item><title>Programming on Quantum Computers Chapter 2 Exercises</title><link>https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/</link><pubDate>Thu, 24 Mar 2022 14:16:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/</guid><description><![CDATA[
          <p>寫個修課的作業。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220324-programming-on-quantum-computers-ch2-exercises/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>寫個修課的作業。</p>
<p>有錯再麻煩指正。</p>
<h1 id="實作邏輯閘" class="article-heading">實作邏輯閘 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e4%bd%9c%e9%82%8f%e8%bc%af%e9%96%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>第二章的內容就是先介紹了 CCNOT 邏輯閘 (請參考之前文章 &ldquo;<a href="/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/" title="Quantum Toffoli Gate (CCNOT) Decomposition" aria-label="Quantum Toffoli Gate (CCNOT) Decomposition" >Quantum Toffoli Gate (CCNOT) Decomposition</a>)&quot;。此邏輯閘的出現可以讓古典運算做對照，也就是可以用量子邏輯閘來模擬古典邏輯閘的特性。不過並非純粹模擬，而是利用同樣輸入輸出的特性來得以描述同一問題，並嘗試利用量子特性來加速解決問題的時間。</p>
<p>本章作業內容是利用 CCNOT 可類推到 AND 的特性 (如下圖) 來將給定的邏輯閘轉換成使用 CCNOT。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUpe9b_MtBGHyroPABW-B-tbXJ35irNVZQ5l374Ob1SFQ_wi-HqmogLUefkIRkP7RS9NKuoD8onfePy56C4WHNteOS1zorN0duvAPQj6iMjPUlbFwM6HtknbjQJsCWNY6JIJRDFYIi2R6eRw87Gtv0qfw=w1892-h1012-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVegjkbXCJ4PyXvmtKssyvfON0ZRgn3j1uQ2gXZJ4zHNtR1zt0g_tjPZpkr3EdZZKXgPZMXg-b7YiJFckRxqFlzen25IDpORR65Phni597kttxVjmOUxAycmBTI3Ntm0T4VcAUQDhE2CKARl7LHwEfwNg=w1892-h1012-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>這裡會大量使用笛摩根定理   將主要邏輯閘換成 AND。另外這裡使用的符號跟課本所用的符號不太一樣 (因為 $\bar{x}$ 在多層下不太方便):</p>
<ul>
<li>$\lnot x$: NOT x</li>
<li>$x\lor y$: x OR y</li>
<li>$x\land y$: x AND y</li>
</ul>
<p>另外量子的表達方法用 OpenQASM 的方式呈現，$x$ 對應 <code>q[0]</code>, $y$ 對應 <code>q[1]</code>, 輸出為 <code>q[2]</code>，其中 <code>q[0], q[1]</code> 會用 Hadamard 使輸入變成疊加態。篇幅問題重複部分 (標頭檔、宣告、Hadamard、測量) 就不寫如簡化後版本:</p>
<ul>
<li>例如: $\lnot x \land y$ 簡化前:
<div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">5</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>h q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// ---
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>]; <span style="color:#6272a4">// 回復 q[0]
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">// ---
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>measure q[<span style="color:#bd93f9">0</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">1</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">2</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">2</span>];
</span></span></code></pre></div></li>
<li>例如: $\lnot x \land y$ 簡化後:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>]; <span style="color:#6272a4">// 回復 q[0]
</span></span></span></code></pre></div></li>
</ul>
<h2 id="lnot-x-lor-y" class="article-heading">$\lnot x \lor y$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-lor-y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$\lnot x \lor y \Longleftrightarrow \lnot(\lnot\lnot x \land \lnot y) \Longleftrightarrow \lnot(x \land \lnot y)$</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">2</span>]; <span style="color:#6272a4">// AND 後 NOT 的做法是把 target bit 先 NOT
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span></code></pre></div><h2 id="x-lor-lnot-y" class="article-heading">$x \lor \lnot y$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#x-lor-lnot-y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$x \lor \lnot y \Longleftrightarrow \lnot(\lnot x \land \lnot\lnot y) \Longleftrightarrow \lnot(\lnot x \land y)$</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">2</span>]; <span style="color:#6272a4">// AND 後 NOT 的做法是把 target bit 先 NOT
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span></code></pre></div><h2 id="lnot-y-land-x-lor-lnot-x" class="article-heading">$\lnot y \land (x \lor \lnot x)$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-y-land-x-lor-lnot-x">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>比較特別是 $x$ 跟 $\lnot x$ 需要分開，另外會需要用到兩個暫存 qubit (<code>q[3], q[4]</code>)。</p>
<p>$\lnot y \land (x \lor \lnot x)<br>
\Longleftrightarrow (\lnot y \land x) \lor (\lnot y \land \lnot x)<br>
\Longleftrightarrow \lnot \Big(\lnot (\lnot y \land x) \land \lnot(\lnot y \land \lnot x)\Big)$</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// (\lnot y \land x)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// (\lnot y \land \lnot x)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">3</span>], q[<span style="color:#bd93f9">4</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU4MCnC3tKyN0VTu3ZymgJnQa9DoZZpQgJKYKQYhrrVPcZ5cC7_gIJNsxpSaYhz00ND1lXCF7ECcGxudz66e-0wFWr2mkhWXmKupK0_NycqS-2M_HgVr_ss2TvhbcJrPK0YwK-UhYf_Sri9oABp92p1WA=w1203-h968-no?authuser=1" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="lnot-x-land-y-lor-lnot-y" class="article-heading">$\lnot x \land (y \lor \lnot y)$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-land-y-lor-lnot-y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>其實跟上面類似，只是 $x, y$ 互換</p>
<p>$\lnot x \land (y \lor \lnot y)<br>
\Longleftrightarrow \lnot \Big(\lnot (\lnot x \land y) \land \lnot(\lnot x \land \lnot y)\Big)$</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// (\lnot x \land y)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// (\lnot x \land \lnot y)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>barrier q[<span style="color:#bd93f9">0</span>],q[<span style="color:#bd93f9">1</span>],q[<span style="color:#bd93f9">2</span>],q[<span style="color:#bd93f9">3</span>],q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">3</span>], q[<span style="color:#bd93f9">4</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">3</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">4</span>];
</span></span></code></pre></div><h2 id="lnot-x-land-y" class="article-heading">$\lnot x \land y$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lnot-x-land-y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>直接用 CCNOT 實作 AND。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span></code></pre></div><h2 id="x-land-lnot-y" class="article-heading">$x \land \lnot y$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#x-land-lnot-y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>同上。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>ccx q[<span style="color:#bd93f9">0</span>], q[<span style="color:#bd93f9">1</span>], q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span></code></pre></div><h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" title="Fundamentals of Quantum Programming in IBM’s Quantum Computers" aria-label="Fundamentals of Quantum Programming in IBM’s Quantum Computers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li>
</ul>
 
        ]]></description></item><item><title>WSL2 Size Too Large Compact</title><link>https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/</link><pubDate>Wed, 23 Mar 2022 11:44:44 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/</guid><description><![CDATA[
          <p>WSL2 太佔硬碟空間了，看可否壓縮一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLUAahOMO1WJ53qQJCnqreDbs0ci8XMnJtWWq9vBtrxy49mpucvChEbRI3blKmOF4s6fXb6pX5Wehh774WM0YXA1kuZR_YzkVBRKMLMS7x39KGMzAN_MoKDHWXroYPE54IFLosm40aa2YFNttwXcbkyE_Q=w614-h353-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220323-wsl2-size-too-large-compact/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>WSL2 太佔硬碟空間了，看可否壓縮一下。</p>
<p>WSL2 跟 visualbox 的動態硬碟類似，用多少會動態調整，不過是只增不減。導致空間會越來越大。封面圖就是已經占用到 23 GB 了，查了一下如何縮減。剛好看到有方法，就記錄一下過程方便之後使用。</p>
<h1 id="建議前置動作-optional" class="article-heading">建議前置動作 (Optional) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bb%ba%e8%ad%b0%e5%89%8d%e7%bd%ae%e5%8b%95%e4%bd%9c-optional">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>建議先打開 WSL2 刪除那些不會用到或是暫存檔。</p>
<p>例如，用下面指令刪除 <code>/tmp/</code> 底下所以資料 (有重要資料請備份)。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ yes | rm -r /tmp/*
</span></span></code></pre></div><h1 id="ext4vhdx" class="article-heading">ext4.vhdx 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ext4vhdx">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>找出 ext4.vhdx 檔案位置，之後會用到。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV6-I6oUyopxc8rPRc-LczPBOXs2rE4AOqjLi0KmZgJky-YXVaTWPu5YvqlL6PrqWlqBJRa5HenInH0Srya0da1k1mfmSjCNqRWmzWSDVkdsRV3HWQVGDjl-fZ251z66bhdfNpImIO0NXZOlHly5lnRGg=w991-h201-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="powershell" class="article-heading">Powershell 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#powershell">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>使用管理員權限打開 Windows Powershell</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWHeTUgvY-gnJNdkGPLzwb54-03sgN1jt4_edrSQo3S2DisZA52IFBzN2i-MN_jViGSa6Hf1UndxBZ3jmMH-nqa2bgi1OhcKGjWzjKjrIyZtNu3nLdZmIY7eGeA2FGaOyAwzsDJI--Wn91KzMuhZvpEvg=w425-h238-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>依序執行下列指令 (路徑為 ext4.vhdx 所在位置):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>wsl --shutdown
</span></span><span style="display:flex;"><span>diskpart
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># open window Diskpart</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">select</span> vdisk <span style="color:#8be9fd;font-style:italic">file</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;C:\WSL-Distros\…\ext4.vhdx&#34;</span>
</span></span><span style="display:flex;"><span>attach vdisk <span style="color:#8be9fd;font-style:italic">readonly</span>
</span></span><span style="display:flex;"><span>compact vdisk
</span></span><span style="display:flex;"><span>detach vdisk
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">exit</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVyPzuO9Q4ntuSCZ3XSZ5c3KyJ5B5nf0MKy5zr_Bwdu1hBJvONxkaj2BMXDuGFFLaajqBff5_Y0OP-ujbD_MF8asKA3Fjw3i2yw9qUJtdJrtE67VZqDJBI8zBNv3nsASR2E4ozpuxTIrpMrqAk-XMTJWg=w1297-h563-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="成果" class="article-heading">成果 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%90%e6%9e%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最後會壓縮大小，不過還是很大就是&hellip;</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUsTv73doQGTZp0iQnSKtdvJh7snaaInoiy16p2jCpQJoKgGA-l2AEkq-92tMCSlIuaM0XeJMEyh3RNNS-NcYvkcIpZCO-6uthcmFpTRr3io3YY74JzAYFgnhmE5e_dYGulb9_j27KjHW-eDWRs2KbwVw=w985-h223-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://github.com/microsoft/WSL/issues/4699#issuecomment-627133168" title="@merkuriy &amp;rsquo;s comment - WSL 2 should automatically release disk space back to the host OS" aria-label="@merkuriy &amp;rsquo;s comment - WSL 2 should automatically release disk space back to the host OS"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> @merkuriy &rsquo;s comment - WSL 2 should automatically release disk space back to the host OS</a></li>
</ul>
        ]]></description></item><item><title>C++ Shared Library Compile</title><link>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</link><pubDate>Mon, 21 Mar 2022 17:28:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/</guid><description><![CDATA[
          <p>看到 C/C++初學者 FB 社團的<a href="https://www.facebook.com/groups/C.and.CPP.beginner/posts/2097833393706803/" title="發問" aria-label="發問"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 發問</a>，<br><br/>情境是沒有 header file 下要如何使用 .so 編譯 C++ 的程式。<br><br/>因為沒有後續，所以也不確定是否解決，不過最後的回答的確是突破口。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVwPUvaPN2bZddB_qbWZFO_JbbC-gYcfLp5cAmsEKOBaCdXwKzZoipiV460LvChHNLdrf7yNMyYe4YccM7-hcoiWZrmbkZco5py-LBDF5eg8kKW_WMzFaIJZaJmdYx-PQo86ueiOiQh6TPxDuW_-xkv2w=w845-h583-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220321-cpp-shared-library-compile/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>看到 C/C++初學者 FB 社團的<a href="https://www.facebook.com/groups/C.and.CPP.beginner/posts/2097833393706803/" title="發問" aria-label="發問"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 發問</a>，<br>
情境是沒有 header file 下要如何使用 .so 編譯 C++ 的程式。<br>
因為沒有後續，所以也不確定是否解決，不過最後的回答的確是突破口。</p>
<p>我之前有記錄過 &ldquo;<a href="https://aben20807.blogspot.com/2018/08/1070825-c-static-shared.html" title="107.08.25 C 語言 static 和 shared 函式庫" aria-label="107.08.25 C 語言 static 和 shared 函式庫"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 107.08.25 C 語言 static 和 shared 函式庫</a>&rdquo; 不過是純 C 不適用此問題。以下為此問題的解決過程記錄。</p>
<h1 id="tldr" class="article-heading">TL;DR 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="#c-g-可行版本" title="C&#43;&#43; (g&#43;&#43;) 可行版本" aria-label="C&#43;&#43; (g&#43;&#43;) 可行版本" >C++ (g++) 可行版本</a></p>
<h1 id="問題定義" class="article-heading">問題定義 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%95%8f%e9%a1%8c%e5%ae%9a%e7%be%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>手邊有 libabc.so, libabc.a，沒有 *.h, *.c</p>
<p>這邊就使用 libabc.so 為主要問題 (因為解決後，libabc.a 可用相同步驟解決)</p>
<p>libabc.so 中有 <code>xyz()</code> 可供呼叫</p>
<p>為了重現問題以下為 libabc 的測試程式 (因為問題中提到用 gcc 與 c 是可以使用，代表該函式庫有使用 <code>extern &quot;C&quot; {...}</code>):</p>
<ul>
<li><code>abc.cpp</code>:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#ff79c6">extern</span> <span style="color:#f1fa8c">&#34;C&#34;</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">xyz</span>() { std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#34;xyz&#34;</span> <span style="color:#ff79c6">&lt;&lt;</span> std<span style="color:#ff79c6">::</span>endl; }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>產生 <code>libabc.so</code>:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c -fPIC -o libabc.o abc.cpp
</span></span><span style="display:flex;"><span>$ g++ -shared -o libabc.so libabc.o <span style="color:#ff79c6">&amp;&amp;</span> rm libabc.o
</span></span></code></pre></div></li>
</ul>
<h1 id="c-gcc-可行版本" class="article-heading">C (gcc) 可行版本 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-gcc-%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>test0.c</code>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">xyz</span>();
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>    xyz();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>編譯並執行
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o <span style="color:#8be9fd;font-style:italic">test</span> test0.c -L. -labc -Wl,-rpath<span style="color:#ff79c6">=</span>.
</span></span><span style="display:flex;"><span>$ ./test
</span></span><span style="display:flex;"><span>xyz
</span></span></code></pre></div></li>
</ul>
<h1 id="c-g-無法鏈結版本" class="article-heading">C++ (g++) 無法鏈結版本 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-%e7%84%a1%e6%b3%95%e9%8f%88%e7%b5%90%e7%89%88%e6%9c%ac">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>test1.cpp</code>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">xyz</span>();
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>    xyz();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>編譯
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -o <span style="color:#8be9fd;font-style:italic">test</span> test1.cpp -L. -labc -Wl,-rpath<span style="color:#ff79c6">=</span>.
</span></span><span style="display:flex;"><span>/tmp/ccL0SPL8.o: In <span style="color:#ff79c6">function</span> <span style="color:#f1fa8c">`</span>main<span style="color:#f1fa8c">&#39;:
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">t1.cpp:(.text+0x10): undefined reference to `xyz()&#39;</span>
</span></span><span style="display:flex;"><span>collect2: error: ld returned <span style="color:#bd93f9">1</span> <span style="color:#8be9fd;font-style:italic">exit</span> status
</span></span></code></pre></div></li>
<li>找出問題: 可以看到需要 <code>_Z3xyzv</code> 這個 symbol 但是在 linker 鏈結時找不到，因為 <code>libabc</code> 所提供的 <code>xyz()</code> 有定義 <code>extern &quot;C&quot; {...}</code> 所以其 symbol 是 <code>xyz</code>。
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c test1.cpp
</span></span><span style="display:flex;"><span>$ nm test1.o
</span></span><span style="display:flex;"><span>                 U _GLOBAL_OFFSET_TABLE_
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000064</span> t _GLOBAL__sub_I_main
</span></span><span style="display:flex;"><span>                 U _Z3xyzv
</span></span><span style="display:flex;"><span>000000000000001b t _Z41__static_initialization_and_destruction_0ii
</span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitC1Ev
</span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitD1Ev
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> r _ZStL19piecewise_construct
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> b _ZStL8__ioinit
</span></span><span style="display:flex;"><span>                 U __cxa_atexit
</span></span><span style="display:flex;"><span>                 U __dso_handle
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> T main
</span></span></code></pre></div></li>
</ul>
<h1 id="c-g-可行版本" class="article-heading">C++ (g++) 可行版本 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>test2.cpp</code>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#ff79c6">extern</span> <span style="color:#f1fa8c">&#34;C&#34;</span> <span style="color:#8be9fd">void</span> xyz();
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>    xyz();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>編譯並執行
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o <span style="color:#8be9fd;font-style:italic">test</span> test2.cpp -L. -labc -Wl,-rpath<span style="color:#ff79c6">=</span>.
</span></span><span style="display:flex;"><span>$ ./test
</span></span><span style="display:flex;"><span>xyz
</span></span></code></pre></div></li>
<li>確認
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -c t1.cpp
</span></span><span style="display:flex;"><span>$ nm t1.o
</span></span><span style="display:flex;"><span>                 U _GLOBAL_OFFSET_TABLE_
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000064</span> t _GLOBAL__sub_I_main
</span></span><span style="display:flex;"><span>000000000000001b t _Z41__static_initialization_and_destruction_0ii
</span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitC1Ev
</span></span><span style="display:flex;"><span>                 U _ZNSt8ios_base4InitD1Ev
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> r _ZStL19piecewise_construct
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> b _ZStL8__ioinit
</span></span><span style="display:flex;"><span>                 U __cxa_atexit
</span></span><span style="display:flex;"><span>                 U __dso_handle
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">0000000000000000</span> T main
</span></span><span style="display:flex;"><span>                 U xyz
</span></span></code></pre></div></li>
</ul>
<h1 id="c-g-dlopen-噁心可行版本" class="article-heading">C++ (g++) dlopen <del>噁心</del>可行版本 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#c-g-dlopen-%e5%99%81%e5%bf%83%e5%8f%af%e8%a1%8c%e7%89%88%e6%9c%ac">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>原先我覺得沒有 header file (*.h) 應該無法做到，所以就先繞了遠路用 dlopen   解決，後來才想到可以先用 <code>extern</code> 宣告尚未定義的函式。需要注意的是 dlopen 可能會影響效能。</p>
<ul>
<li><code>test3.cpp</code>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;dlfcn.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">using</span> func_t <span style="color:#ff79c6">=</span> <span style="color:#8be9fd">void</span> (<span style="color:#ff79c6">*</span>)();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>error;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">auto</span> lib <span style="color:#ff79c6">=</span> dlopen(<span style="color:#f1fa8c">&#34;libabc.so&#34;</span>, RTLD_LAZY <span style="color:#ff79c6">|</span> RTLD_GLOBAL);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> ((error <span style="color:#ff79c6">=</span> dlerror()) <span style="color:#ff79c6">!=</span> <span style="color:#8be9fd;font-style:italic">NULL</span>) {
</span></span><span style="display:flex;"><span>        std<span style="color:#ff79c6">::</span>cerr <span style="color:#ff79c6">&lt;&lt;</span> error;
</span></span><span style="display:flex;"><span>        exit(EXIT_FAILURE);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    func_t xyz <span style="color:#ff79c6">=</span> (func_t)dlsym(lib, <span style="color:#f1fa8c">&#34;xyz&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> ((error <span style="color:#ff79c6">=</span> dlerror()) <span style="color:#ff79c6">!=</span> <span style="color:#8be9fd;font-style:italic">NULL</span>) {
</span></span><span style="display:flex;"><span>        std<span style="color:#ff79c6">::</span>cerr <span style="color:#ff79c6">&lt;&lt;</span> error;
</span></span><span style="display:flex;"><span>        exit(EXIT_FAILURE);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    xyz();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> EXIT_SUCCESS;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>編譯並執行
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -o <span style="color:#8be9fd;font-style:italic">test</span> test3.cpp -ldl -Wl,-rpath<span style="color:#ff79c6">=</span>.
</span></span><span style="display:flex;"><span>$ ./test
</span></span><span style="display:flex;"><span>xyz
</span></span></code></pre></div></li>
</ul>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://aben20807.blogspot.com/2018/08/1070825-c-static-shared.html" title="107.08.25 C 語言 static 和 shared 函式庫" aria-label="107.08.25 C 語言 static 和 shared 函式庫"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 107.08.25 C 語言 static 和 shared 函式庫</a></li>
<li><a href="https://www.quora.com/How-can-I-use-some-C-library-so-in-my-C-code" title="How can I use some C library (.so) in my C code?" aria-label="How can I use some C library (.so) in my C code?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How can I use some C library (.so) in my C code?</a></li>
<li><a href="https://iq.opengenus.org/create-shared-library-in-cpp/" title="How to create shared library (.SO) in C&#43;&#43; (G&#43;&#43;)?" aria-label="How to create shared library (.SO) in C&#43;&#43; (G&#43;&#43;)?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to create shared library (.SO) in C++ (G++)?</a></li>
<li><a href="https://www.toptal.com/c-plus-plus/c-plus-plus-understanding-compilation" title="How C&#43;&#43; Works: Understanding Compilation" aria-label="How C&#43;&#43; Works: Understanding Compilation"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How C++ Works: Understanding Compilation</a></li>
</ul>
 
        ]]></description></item><item><title>Programming on Quantum Computers Chapter 1 Exercises</title><link>https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/</link><pubDate>Mon, 14 Mar 2022 09:52:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/</guid><description><![CDATA[
          <p>寫個修課的作業。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220314-programming-on-quantum-computers-ch1-exercises/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>寫個修課的作業。</p>
<p>有錯再麻煩指正。</p>
<p>⭐: 與解答有出入，待確認。</p>
<h1 id="to-u3-gate" class="article-heading">To U3 gate 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#to-u3-gate">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>本章節作業目標是把常見的 single qubit gate 轉換成用 U3 表達。</p>
<p>$U3(\theta, \phi, \lambda) = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<h2 id="not-x-" class="article-heading">NOT $X$ ⭐ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#not-x-">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$X = {\small\begin{pmatrix}0 &amp; 1\\1 &amp; 0\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p>$\Rightarrow \cos(\frac{\theta}{2}) = 0$</p>
<p>$\Rightarrow \theta = \pi, \theta \in [0, \pi] \Rightarrow \sin(\frac{\theta}{2}) = 1$</p>
<p>$\Rightarrow e^{i\phi} = 1, -e^{i\lambda} = 1 \Rightarrow \phi = 0, \lambda = \pi$</p>
<p>$\therefore X = U3(\pi, 0, \pi)$</p>
<h2 id="hadamard-h" class="article-heading">Hadamard $H$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#hadamard-h">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$H = {\small\begin{pmatrix}\frac{1}{\sqrt{2}} &amp; \frac{1}{\sqrt{2}}\\ \frac{1}{\sqrt{2}} &amp; -\frac{1}{\sqrt{2}}\end{pmatrix}}  = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p>$\Rightarrow \cos(\frac{\pi}{4}) = \frac{1}{\sqrt{2}}$</p>
<p>$\Rightarrow \theta = \frac{\pi}{2} \Rightarrow \sin(\frac{\theta}{2}) = \frac{1}{\sqrt{2}}$</p>
<p>$\Rightarrow e^{i\phi} = 1, -e^{i\lambda} = 1 \Rightarrow \phi = 0, \lambda = \pi$</p>
<p>$\therefore H = U3(\frac{\pi}{2}, 0, \pi)$</p>
<h2 id="z" class="article-heading">$Z$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#z">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$Z = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; -1\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p>$\Rightarrow \cos(\frac{\theta}{2}) = 1$</p>
<p>$\Rightarrow \theta = 0 \Rightarrow \sin(\frac{\theta}{2}) = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = -1 \Rightarrow \lambda+\phi = \pi$</p>
<p>$\therefore Z = U3(0, \phi, \lambda), \lambda+\phi = \pi$</p>
<h2 id="y" class="article-heading">$Y$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#y">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$Y = {\small\begin{pmatrix}0 &amp; -i\\i &amp; 0\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p>$\Rightarrow \cos(\frac{\theta}{2}) = 0$</p>
<p>$\Rightarrow \theta = \pi \Rightarrow \sin(\frac{\theta}{2}) = 1$</p>
<p>$\Rightarrow e^{i\phi} = \cos(\phi)+i\sin(\phi) = i, -e^{i\lambda} = -(\cos(\lambda)+i\sin(\lambda)) = -i$</p>
<p>$\Rightarrow \phi = \frac{\pi}{2}, \lambda = \frac{\pi}{2}$</p>
<p>$\therefore Y = U3(\pi, \frac{\pi}{2}, \frac{\pi}{2})$</p>
<h2 id="s" class="article-heading">$S$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#s">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$S = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; i\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = i \Rightarrow \lambda+\phi = \frac{\pi}{2}$</p>
<p>$\therefore S = U3(0, \phi, \lambda), \lambda+\phi = \frac{\pi}{2}$</p>
<h2 id="sdagger" class="article-heading">$S^\dagger$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#sdagger">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$S^\dagger = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; -i\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = -i \Rightarrow \lambda+\phi = \frac{3\pi}{2}$</p>
<p>$\therefore S^\dagger = U3(0, \phi, \lambda), \lambda+\phi = \frac{3\pi}{2}$</p>
<h2 id="t" class="article-heading">$T$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#t">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$T = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; \frac{1+i}{\sqrt{2}}\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) +i\sin(\lambda+\phi) = \frac{1}{\sqrt{2}} + i\frac{1}{\sqrt{2}} \Rightarrow \lambda+\phi = \frac{\pi}{4}$</p>
<p>$\therefore T = U3(0, \phi, \lambda), \lambda+\phi = \frac{\pi}{4}$</p>
<h2 id="tdagger" class="article-heading">$T^\dagger$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tdagger">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$T^\dagger = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; \frac{1-i}{\sqrt{2}}\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = \frac{1}{\sqrt{2}} + i\frac{-1}{\sqrt{2}} \Rightarrow \lambda+\phi = \frac{7\pi}{4}$</p>
<p>$\therefore T^\dagger = U3(0, \phi, \lambda), \lambda+\phi = \frac{7\pi}{4}$</p>
<h2 id="identity-" class="article-heading">Identity ⭐ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#identity-">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$ID = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; 1\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = 1 \Rightarrow \lambda+\phi = 0$</p>
<p>$\therefore ID = U3(0, \phi, \lambda), \lambda+\phi = 0$</p>
<h2 id="u1lambda" class="article-heading">$U1(\lambda)$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u1lambda">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$U1(\lambda) = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; e^{i\lambda}\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p><a href="#z" title="同 Z gate" aria-label="同 Z gate" >同 Z gate</a>, $\theta = 0$</p>
<p>$\Rightarrow e^{i(\lambda+\phi)} = \cos(\lambda+\phi) + i\sin(\lambda+\phi) = e^{i\lambda} \Rightarrow \phi = 0$</p>
<p>$\therefore U1(\lambda) = U3(0, 0, \lambda)$</p>
<h2 id="u2phi-lambda" class="article-heading">$U2(\phi, \lambda)$ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#u2phi-lambda">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>$U2(\phi, \lambda) = {\small\begin{pmatrix}\frac{1}{\sqrt{2}} &amp; -\frac{e^{i\lambda}}{\sqrt{2}}\\ \frac{e^{i\phi}}{\sqrt{2}} &amp; \frac{e^{i(\lambda+\phi)}}{\sqrt{2}}\end{pmatrix}} = {\small\begin{pmatrix}\cos(\frac{\theta}{2}) &amp; -e^{i\lambda}\sin(\frac{\theta}{2})\\ e^{i\phi}\sin(\frac{\theta}{2}) &amp; e^{i(\lambda+\phi)}\cos(\frac{\theta}{2})\end{pmatrix}}$</p>
<p>$\Rightarrow \cos(\frac{\pi}{4}) = \frac{1}{\sqrt{2}}$</p>
<p>$\Rightarrow \theta = \frac{\pi}{2} \Rightarrow \sin(\frac{\theta}{2}) = \frac{1}{\sqrt{2}}$</p>
<p>$\therefore U2(\phi, \lambda) = U3(\frac{\pi}{2}, \phi, \lambda)$</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" title="Fundamentals of Quantum Programming in IBM’s Quantum Computers" aria-label="Fundamentals of Quantum Programming in IBM’s Quantum Computers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li>
</ul>
        ]]></description></item><item><title>Markdown 文件轉成 pdf 檔</title><link>https://aben20807.github.io/posts/20220312-typora-alternative/</link><pubDate>Sat, 12 Mar 2022 16:12:28 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220312-typora-alternative/</guid><description><![CDATA[
          <p>Typora 突然要收費了，原先我用這個工具來將一些用 markdown 寫的文件轉換成 pdf 版本，現在要找個替代方案了。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220312-typora-alternative/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220312-typora-alternative/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>Typora 突然要收費了，原先我用這個工具來將一些用 markdown 寫的文件轉換成 pdf 版本，現在要找個替代方案了。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>老實說，軟體業的商業模式真的頗難。前些陣子 HackMD 也是提出了 Prime 方案  ，主打一些免費版沒有的進階功能，但是免不了的那些免費仔還是佔多數 (包括目前覺得那些功能可有可無的我)。Typora 直接將 stable 版本轉成必須付費才能使用，這兩種我個人覺得都各有優缺，畢竟生存下去的才是贏家。不過使用者付費的意識逐漸抬頭，這類情況應該會越來越常發生，請珍惜目前能使用到的免費服務，若能接受這些收費軟體也歡迎付費支持。延伸閱讀: <a href="https://benson-lee.blog/2019/03/21/%E9%96%8B%E6%BA%90%E8%BB%9F%E9%AB%94%E7%9A%84%E5%95%86%E6%A5%AD%E6%A8%A1%E5%BC%8F%E5%88%86%E6%9E%90-%E4%B8%89/" title="Benson的跨域商業人生 - 開源軟體的商業模式分析 (三)" aria-label="Benson的跨域商業人生 - 開源軟體的商業模式分析 (三)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Benson的跨域商業人生 - 開源軟體的商業模式分析 (三)</a>。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVbuugIN2JsOYS5BLYfiR--HFQ2g3uCYn0FAv-ObqaHgAko8_8gsjpUgaA4qW0ZEekG875Hrm8dEr-AQVw14edWJzpOQT9AP7k4zQfi5ba19Wi3RNagtQj5EwJUQffMv6-SoA4ldDb_s8atCqVmrDhU_A=w946-h697-no" alt='https://typora.io/#download' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">https://typora.io/#download</center>
    </figcaption>
  </figure>
</p>
<p>由於我個人只是懶得為了轉換成 pdf 而用 word 打文件，所以替代方案算是很容易找。本篇將使用 VSCode 的一款 Extension 來達成 markdown 轉 PDF 的功能。</p>
<h1 id="markdown-in-vscode" class="article-heading">Markdown in VSCode 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#markdown-in-vscode">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>VSCode 中編輯 markdown 雖然不能像 Typora 那樣幾乎所見即所得  ，不過能夠及時渲染算是相當堪用。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWsd8jL4qaNVxdvGSZKS16IpVy60PLtEbgTFoYJVINEIddEb3fWYwBr9Yn_XwYjfJ1H_2GP6jQY5FNYqw2VEPyXA-tjonCI7pUp08a2ouNFbKrHpCNbrBR2PHMkGOf_zg_cpMUvh-lVL0ofCmciyNFKRA=w1898-h731-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="convert-to-pdf" class="article-heading">Convert to PDF 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#convert-to-pdf">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這裡使用的工具是 <a href="https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf" title="yzane.markdown-pdf" aria-label="yzane.markdown-pdf"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> yzane.markdown-pdf</a>，下載後可以做一些設定如下使其產生的檔案跟 github 渲染的結果類似。其中 &ldquo;markdown-pdf.styles&rdquo; 所需要的 &ldquo;github.css&rdquo; 可以到 <a href="https://gist.github.com/tuzz/3331384" title="tuzz/github.css" aria-label="tuzz/github.css"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> tuzz/github.css</a> 拿到，並放在跟 &ldquo;.md&rdquo; 同一個路徑。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    &#34;markdown-pdf.highlightStyle&#34;: &#34;github.css&#34;,
</span></span><span style="display:flex;"><span>    &#34;markdown-pdf.breaks&#34;: true,
</span></span><span style="display:flex;"><span>    &#34;markdown-pdf.headerTemplate&#34;: &#34;&#34;,
</span></span><span style="display:flex;"><span>    &#34;markdown-pdf.stylesRelativePathFile&#34;: true,
</span></span><span style="display:flex;"><span>    &#34;markdown-pdf.styles&#34;: [
</span></span><span style="display:flex;"><span>        &#34;github.css&#34;
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><ul>
<li>breaks: 預設 markdown 要兩個空格才換行，設定成 <code>true</code> 可以在 markdown 換行時就在 pdf 產生換行</li>
<li>headerTemplate 原先會在每一頁的 header 產生檔名，我的設定把它移除</li>
</ul>
<p>另外，附上我微調過的 <a href="https://gist.github.com/aben20807/a61a640579fb941546dd831f81b4ed9f" title="&amp;ldquo;github.css&amp;rdquo;" aria-label="&amp;ldquo;github.css&amp;rdquo;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> &ldquo;github.css&rdquo;</a>，有以下調整:</p>
<ul>
<li>Add support for chinese font</li>
<li>Force the color of single code block e.g., <code>x</code>, to black</li>
</ul>
<p>轉換時使用 <code>Ctrl-Shift-P</code> 使用 <code>markdown pdf: export (pdf)</code></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXpwSFgfVrjoTNVjI4LiXYcW8rGvGIprtycBsKO1t90zWjNBWoVJyQM7hPQv5__-136WJLaKl6ojgsVqcH__6fR_D0Dxrqpt2aXqXMKhmQvl4go8ap-qaPACLpYLQ6CDMxGbWV0zDEVNx2a0YLF0c2agg=w778-h115-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXuzky495YbRBGdUQjHV_ZfXf3ZRNpkyvZSu4YbtNMOs1zXo1sIMAZ1uacQKs9p4oyKLj0ItEtLAU6Fl5g4VRP_dkwjuHxcWd67KzMCM7g0xWhHnfPjov1BBGhovB3OJCDH47wy1wcrmSCTBTcFH6MTTw=w1857-h918-no" alt='簡單範例轉換結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">簡單範例轉換結果</center>
    </figcaption>
  </figure>
</p>
<h1 id="注意事項" class="article-heading">注意事項 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>沒有 footnote 功能</li>
<li>footer 會自動產生頁碼，這點很棒</li>
<li>螢光筆標示要從 <code>==XXX==</code> 改成 <code>&lt;mark&gt;XXX&lt;/mark&gt;</code></li>
<li>強制換頁可以使用 <code>&lt;div class=&quot;page&quot;/&gt;</code></li>
<li>網址部分不會自動產生連結，所以 <code>https://aben20807.github.io/</code> 要改成 <code>[https://aben20807.github.io/](https://aben20807.github.io/)</code></li>
</ul>
 
        ]]></description></item><item><title>Fastest Plot by Matplotlib on Large CSV</title><link>https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/</link><pubDate>Fri, 04 Mar 2022 14:56:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/</guid><description><![CDATA[
          <p>畫大量資料發現效能太差，光讀取 CSV 就可以差一百倍，輸出的 pdf 檔案大小也有五倍差距。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220304-fastest-plot-by-matplotlib-on-large-csv/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>畫大量資料發現效能太差，光讀取 CSV 就可以差一百倍，輸出的 pdf 檔案大小也有五倍差距。</p>
<h1 id="tldr" class="article-heading">TL;DR 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="#最佳化版本" title="{{ 最佳化版本 }}" aria-label="{{ 最佳化版本 }}" >{{ 最佳化版本 }}</a></p>
<h1 id="environment" class="article-heading">Environment 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#environment">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>WSL2 Ubuntu 18.04</li>
</ul>
<h1 id="資料產生範例" class="article-heading">資料產生範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e6%96%99%e7%94%a2%e7%94%9f%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Fixed point 與 floating point 的乘法絕對誤差 </p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;cstdint&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;fstream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;random&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#ff79c6">constexpr</span> <span style="color:#8be9fd">int</span> N <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">5&#39;000&#39;000</span>;
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#ff79c6">constexpr</span> <span style="color:#8be9fd">float</span> RANGE <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10.0</span>;
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#ff79c6">constexpr</span> <span style="color:#8be9fd">int</span> FRACTION_BITS <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#ff79c6">constexpr</span> <span style="color:#8be9fd">int</span> SCALING_FACTOR <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">1</span> <span style="color:#ff79c6">&lt;&lt;</span> FRACTION_BITS;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>std<span style="color:#ff79c6">::</span>mt19937 gen(<span style="color:#bd93f9">0</span>);
</span></span><span style="display:flex;"><span>std<span style="color:#ff79c6">::</span>uniform_real_distribution<span style="color:#ff79c6">&lt;</span><span style="color:#8be9fd">float</span><span style="color:#ff79c6">&gt;</span> dis(<span style="color:#ff79c6">-</span>RANGE, RANGE);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">#define FLOAT_TO_FIXED(x)                                  \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">  (static_cast&lt;uint32_t&gt;(                                  \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">      static_cast&lt;int32_t&gt;(x *                             \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">      static_cast&lt;float&gt;(SCALING_FACTOR))))
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#define FIXED_TO_FLOAT(x)                                  \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">  (static_cast&lt;float&gt;(static_cast&lt;int32_t&gt;(x)) /           \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">   static_cast&lt;float&gt;(SCALING_FACTOR))
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">uint32_t</span> <span style="color:#50fa7b">fixed_point_mul</span>(<span style="color:#8be9fd">uint32_t</span> x, <span style="color:#8be9fd">uint32_t</span> y) {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">return</span> <span style="color:#ff79c6">static_cast</span><span style="color:#ff79c6">&lt;</span><span style="color:#8be9fd">uint32_t</span><span style="color:#ff79c6">&gt;</span>(
</span></span><span style="display:flex;"><span>      (<span style="color:#ff79c6">static_cast</span><span style="color:#ff79c6">&lt;</span><span style="color:#8be9fd">int32_t</span><span style="color:#ff79c6">&gt;</span>(x) <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">static_cast</span><span style="color:#ff79c6">&lt;</span><span style="color:#8be9fd">int32_t</span><span style="color:#ff79c6">&gt;</span>(y))
</span></span><span style="display:flex;"><span>      <span style="color:#ff79c6">&gt;&gt;</span> FRACTION_BITS);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  std<span style="color:#ff79c6">::</span>ofstream out(<span style="color:#f1fa8c">&#34;data.csv&#34;</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i{<span style="color:#bd93f9">0</span>}; i <span style="color:#ff79c6">&lt;</span> N; <span style="color:#ff79c6">++</span>i) {
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">auto</span> x <span style="color:#ff79c6">=</span> dis(gen);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">auto</span> y <span style="color:#ff79c6">=</span> dis(gen);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">auto</span> z_float <span style="color:#ff79c6">=</span> x <span style="color:#ff79c6">*</span> y;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">auto</span> z_fixed <span style="color:#ff79c6">=</span>
</span></span><span style="display:flex;"><span>        FIXED_TO_FLOAT(
</span></span><span style="display:flex;"><span>            fixed_point_mul(FLOAT_TO_FIXED(x), 
</span></span><span style="display:flex;"><span>                            FLOAT_TO_FIXED(y)));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (i <span style="color:#ff79c6">&gt;</span> <span style="color:#bd93f9">0</span>) {
</span></span><span style="display:flex;"><span>      out <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;,&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    out <span style="color:#ff79c6">&lt;&lt;</span> std<span style="color:#ff79c6">::</span>abs(z_float <span style="color:#ff79c6">-</span> z_fixed);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  out.close();
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ g++ -std<span style="color:#ff79c6">=</span>c++1z -o data_gen data_gen.cpp
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> ./data_gen
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    0m1.862s
</span></span><span style="display:flex;"><span>user    0m1.829s
</span></span><span style="display:flex;"><span>sys     0m0.030s
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ ls -lh data.csv
</span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name
</span></span><span style="display:flex;"><span>.rw-r--r--   54M ben   <span style="color:#bd93f9">4</span> Mar 16:58  data.csv
</span></span></code></pre></div><h1 id="python-environment" class="article-heading">Python Environment 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#python-environment">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ virtualenv -p python3.7 venv3.7
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">source</span> venv3.7/bin/activate
</span></span><span style="display:flex;"><span>$ pip install matplotlib numpy pandas
</span></span></code></pre></div><h1 id="read-csv" class="article-heading">Read CSV 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#read-csv">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>首先第一個遇到的困難就是讀取 CSV 太慢，按照網路上找的各種方法 ，其實在小量資料下可以採用，不過我測試了一些方法，最後發現第三種版本可以最快的讀取 CSV 到 numpy array 中。</p>
<ul>
<li>v1_read_csv.py</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span>data <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>genfromtxt(fin, delimiter<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;,&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(data)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> python3 v1_read_csv.py
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#ff79c6">]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    0m38.557s
</span></span><span style="display:flex;"><span>user    0m35.961s
</span></span><span style="display:flex;"><span>sys     0m2.834s
</span></span></code></pre></div><ul>
<li>v2_read_csv.py</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> pandas <span style="color:#ff79c6">as</span> pd
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span>df <span style="color:#ff79c6">=</span> pd<span style="color:#ff79c6">.</span>read_csv(fin, sep<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;,&#39;</span>,header<span style="color:#ff79c6">=</span><span style="color:#ff79c6">None</span>)
</span></span><span style="display:flex;"><span>data <span style="color:#ff79c6">=</span> df<span style="color:#ff79c6">.</span>to_numpy()[<span style="color:#bd93f9">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(data)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> python3 v2_read_csv.py
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#ff79c6">]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    2m44.089s
</span></span><span style="display:flex;"><span>user    2m41.911s
</span></span><span style="display:flex;"><span>sys     0m2.388s
</span></span></code></pre></div><ul>
<li>v3_read_csv.py</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> csv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span>(fin, newline<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;&#34;</span>) <span style="color:#ff79c6">as</span> csvfile:
</span></span><span style="display:flex;"><span>    data <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>asarray([<span style="color:#8be9fd;font-style:italic">float</span>(x) <span style="color:#ff79c6">for</span> x <span style="color:#ff79c6">in</span> (<span style="color:#8be9fd;font-style:italic">list</span>(csv<span style="color:#ff79c6">.</span>reader(csvfile, delimiter<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;,&#34;</span>))[<span style="color:#bd93f9">0</span>])])
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(data)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> python3 v3_read_csv.py
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#ff79c6">]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    0m1.583s
</span></span><span style="display:flex;"><span>user    0m1.393s
</span></span><span style="display:flex;"><span>sys     0m0.525s
</span></span></code></pre></div><h1 id="plot" class="article-heading">Plot 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#plot">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>接下來是畫圖的部份。把所有點畫到畫布中會發現產生的 pdf 檔案蠻大，而且開啟時間蠻久。</p>
<ul>
<li>v4_plot.py</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> csv
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> matplotlib.pyplot <span style="color:#ff79c6">as</span> plt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span>(fin, newline<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;&#34;</span>) <span style="color:#ff79c6">as</span> csvfile:
</span></span><span style="display:flex;"><span>    data <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>asarray([<span style="color:#8be9fd;font-style:italic">float</span>(x) <span style="color:#ff79c6">for</span> x <span style="color:#ff79c6">in</span> (<span style="color:#8be9fd;font-style:italic">list</span>(csv<span style="color:#ff79c6">.</span>reader(csvfile, delimiter<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;,&#34;</span>))[<span style="color:#bd93f9">0</span>])])
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fout <span style="color:#ff79c6">=</span> fin<span style="color:#ff79c6">+</span><span style="color:#f1fa8c">&#34;.pdf&#34;</span>
</span></span><span style="display:flex;"><span>fig, ax <span style="color:#ff79c6">=</span> plt<span style="color:#ff79c6">.</span>subplots()
</span></span><span style="display:flex;"><span>ax<span style="color:#ff79c6">.</span>boxplot(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ax<span style="color:#ff79c6">.</span>autoscale()
</span></span><span style="display:flex;"><span>plt<span style="color:#ff79c6">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#ff79c6">.</span>savefig(fout, bbox_inches<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;tight&#34;</span>, dpi<span style="color:#ff79c6">=</span><span style="color:#bd93f9">300</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> python3 v4_plot.py
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#ff79c6">]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    0m5.063s
</span></span><span style="display:flex;"><span>user    0m4.875s
</span></span><span style="display:flex;"><span>sys     0m2.854s
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ ls -lh data.csv.pdf
</span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name
</span></span><span style="display:flex;"><span>.rw-r--r--  206k ben   <span style="color:#bd93f9">5</span> Mar 10:25  data.csv.pdf
</span></span></code></pre></div><h1 id="最佳化版本" class="article-heading">最佳化版本 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e4%bd%b3%e5%8c%96%e7%89%88%e6%9c%ac">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有很多資料點其實是重複的，我當下覺得應該有辦法可以忽略重複的點，但是又不能對資料做過濾，因為這樣分佈就錯誤了。一個比較好的方法其實是在 python 先計算好分佈 (最大，最小，中位數，第一分位數，第三分位數)。</p>
<p>不過 matplotlib 提供 box plot 可以根據資料繪製盒狀圖，代表應該可以不用自行計算。因此朝向如何讓重複的點可以不被重複繪製。</p>
<p>後來查到 rasterized 選項 ，可以將向量圖形轉成點陣圖，很大程度縮小產生的檔案大小。至此完整版的整理如下。</p>
<ul>
<li>v5_plot.py</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> csv
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> matplotlib.pyplot <span style="color:#ff79c6">as</span> plt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> <span style="color:#8be9fd;font-style:italic">open</span>(fin, newline<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;&#34;</span>) <span style="color:#ff79c6">as</span> csvfile:
</span></span><span style="display:flex;"><span>    data <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>asarray([
</span></span><span style="display:flex;"><span>      <span style="color:#8be9fd;font-style:italic">float</span>(x) <span style="color:#ff79c6">for</span> x <span style="color:#ff79c6">in</span> 
</span></span><span style="display:flex;"><span>        (<span style="color:#8be9fd;font-style:italic">list</span>(csv<span style="color:#ff79c6">.</span>reader(csvfile, delimiter<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;,&#34;</span>))[<span style="color:#bd93f9">0</span>])])
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fout <span style="color:#ff79c6">=</span> fin<span style="color:#ff79c6">+</span><span style="color:#f1fa8c">&#34;.pdf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fig, ax <span style="color:#ff79c6">=</span> plt<span style="color:#ff79c6">.</span>subplots()
</span></span><span style="display:flex;"><span>ax<span style="color:#ff79c6">.</span>boxplot(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ax<span style="color:#ff79c6">.</span>set_rasterized(<span style="color:#ff79c6">True</span>)
</span></span><span style="display:flex;"><span>ax<span style="color:#ff79c6">.</span>autoscale()
</span></span><span style="display:flex;"><span>plt<span style="color:#ff79c6">.</span>tight_layout()
</span></span><span style="display:flex;"><span>plt<span style="color:#ff79c6">.</span>savefig(fout, bbox_inches<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;tight&#34;</span>, dpi<span style="color:#ff79c6">=</span><span style="color:#bd93f9">300</span>)
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">time</span> python3 v5_plot.py
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">[</span>0.00228202 0.00304794 0.00644779 ... 0.00259626 0.00812531 0.00063801<span style="color:#ff79c6">]</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>real    0m3.128s
</span></span><span style="display:flex;"><span>user    0m3.212s
</span></span><span style="display:flex;"><span>sys     0m2.050s
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ ls -lh data.csv.pdf
</span></span><span style="display:flex;"><span>Permissions Size User Date Modified Name
</span></span><span style="display:flex;"><span>.rw-r--r--   37k ben   <span style="color:#bd93f9">5</span> Mar 11:46  data.csv.pdf
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVWFTCEBBD1wWbQlg0TuK9NHv_6su0Z189Qu9_c9tGnZvAHvNYVGcbqFaWAwexSvGgGxlB16QKCMV9gKbC0j1geGEygrA_CsHa2QqK5TKfMwEegGP-ik7k5ovCmutEDPf-Teo5QcDRq4NsK28NDLWcavA=w1205-h894-no" alt='繪製結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">繪製結果</center>
    </figcaption>
  </figure>
</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://medium.com/casual-inference/the-most-time-efficient-ways-to-import-csv-data-in-python-cc159b44063d" title="The most (time) efficient ways to import CSV data in Python" aria-label="The most (time) efficient ways to import CSV data in Python"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The most (time) efficient ways to import CSV data in Python</a></li>
<li><a href="https://docs.python.org/3/library/csv.html" title="csv — CSV File Reading and Writing" aria-label="csv — CSV File Reading and Writing"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> csv — CSV File Reading and Writing</a></li>
</ul>
 
        ]]></description></item><item><title>Quantum Toffoli Gate (CCNOT) IBM Quantum</title><link>https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/</link><pubDate>Thu, 03 Mar 2022 16:05:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/</guid><description><![CDATA[
          <p>使用 IBM Quantum Composer 去執行 CCNOT gate</p>
          
            <p><a href="https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLW7J_uP_OIDxEAQW-kgUL7IN4QvBNhkYIuIhZXlxIYV3AnjbMvXjAYTChJ3zuw2a9zOFLosrTmT9iv6yUI9J4gdlrfIrQ5LHv7L2kZR7JHETDBAbbZn97hWE9Q-bxmPi--2ELMSTTOwCqGYdrU-rUdieg=w1462-h928-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220303-quantum-toffoli-gate-ccnot-ibm-quantum/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>使用 IBM Quantum Composer 去執行 CCNOT gate</p>
 
<h1 id="執行分解後的-ccnot-步驟" class="article-heading">執行分解後的 CCNOT 步驟 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%b7%e8%a1%8c%e5%88%86%e8%a7%a3%e5%be%8c%e7%9a%84-ccnot-%e6%ad%a5%e9%a9%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="註冊" class="article-heading">註冊 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e5%86%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>IBM Quantum 網站: <a href="https://quantum-computing.ibm.com/" title="https://quantum-computing.ibm.com/" aria-label="https://quantum-computing.ibm.com/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://quantum-computing.ibm.com/</a></p>
<p>選擇一種方式註冊並登入</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWWEhIyTyin9-Cge_xkB3fYXaKPlZT2nW4ZqwiasvMc9bVF7ibjkaxDuoqit5MFDCSiHEwBVX6xB0yoyAleCEJ9GugJje_CTshi2HDSwKqiXmX-XnPgxbBG8Lr8_OgWeuwTs22w6trcjcckMD8yYdKEeg=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="點選-lunch-composer" class="article-heading">點選 Lunch Composer 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%bb%9e%e9%81%b8-lunch-composer">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVDonbejKxg0UZHiAjt9YQGSFurdzA3PqHGo1a9Pv5DPVRjLAWgK9ywtVJIiIBgUE-DxW1QC-bvw32L40BrciU8-ZgTaEjX3nUSf0JzrUqahCm_EdHuOCK4iOdu0AUQMdau1xITtv-ib2AQr7F6vsWHEw=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="開啟編輯介面後直接開始拉方塊-不需要按左邊的的-new-file我點超久都沒反應結果方塊一放就有新檔案" class="article-heading">開啟編輯介面後直接開始拉方塊 (不需要按左邊的的 New file，我點超久都沒反應，結果方塊一放就有新檔案)。 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e5%95%9f%e7%b7%a8%e8%bc%af%e4%bb%8b%e9%9d%a2%e5%be%8c%e7%9b%b4%e6%8e%a5%e9%96%8b%e5%a7%8b%e6%8b%89%e6%96%b9%e5%a1%8a-%e4%b8%8d%e9%9c%80%e8%a6%81%e6%8c%89%e5%b7%a6%e9%82%8a%e7%9a%84%e7%9a%84-new-file%e6%88%91%e9%bb%9e%e8%b6%85%e4%b9%85%e9%83%bd%e6%b2%92%e5%8f%8d%e6%87%89%e7%b5%90%e6%9e%9c%e6%96%b9%e5%a1%8a%e4%b8%80%e6%94%be%e5%b0%b1%e6%9c%89%e6%96%b0%e6%aa%94%e6%a1%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUkLalBYydKF1MqC9IoRuUVN43dHBXrCDMo_Cdq0fduJ2ejewbXMfJXmHYzQWjERhp0_jzPfXwRArAuOmltc3AvN99Br_7Mh0_SZtjOm6JJ7Tte3nHCcZbAM8bFtQs2uS2BV-Jzowheu9LZq0xI_X2drA=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="本次的電路圖跟上一篇相同對應的程式碼會自動生成-綠框機率也有模擬出來-藍框" class="article-heading">本次的電路圖跟上一篇相同，對應的程式碼會自動生成 (綠框)，機率也有模擬出來 (藍框) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%ac%e6%ac%a1%e7%9a%84%e9%9b%bb%e8%b7%af%e5%9c%96%e8%b7%9f%e4%b8%8a%e4%b8%80%e7%af%87%e7%9b%b8%e5%90%8c%e5%b0%8d%e6%87%89%e7%9a%84%e7%a8%8b%e5%bc%8f%e7%a2%bc%e6%9c%83%e8%87%aa%e5%8b%95%e7%94%9f%e6%88%90-%e7%b6%a0%e6%a1%86%e6%a9%9f%e7%8e%87%e4%b9%9f%e6%9c%89%e6%a8%a1%e6%93%ac%e5%87%ba%e4%be%86-%e8%97%8d%e6%a1%86">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLU-oFi2NjE_arGe3wEjOuKgwBPsah6zXAZEQ-rffhT-fvXmSn1A7thBugROYfcxW-11fuQgZXEFmGlmDDpkiQqlZXoR-NpPfozMZNh1ZN7lJHX8l-Q8hCwGuPXgM-dYV6SbqKp8A5SqTDm0upVz4wsj8g=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="接著可以改檔案名稱並儲存然後按右上角的-setup-and-run" class="article-heading">接著可以改檔案名稱並儲存，然後按右上角的 Setup and run 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a5%e8%91%97%e5%8f%af%e4%bb%a5%e6%94%b9%e6%aa%94%e6%a1%88%e5%90%8d%e7%a8%b1%e4%b8%a6%e5%84%b2%e5%ad%98%e7%84%b6%e5%be%8c%e6%8c%89%e5%8f%b3%e4%b8%8a%e8%a7%92%e7%9a%84-setup-and-run">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLViA5eCyd1j1emYrjoz9JYQqxFheIBhOqO3xF_-t5x0EUEuBaiIK709MJqyAniBzLbUQd71XBu7LUaJgLL8bvIKIr4aaSZn0HiwQLRGjt5eO1--R1At6EhGwKHYs78GhCUjPglsCJHOJbUIRrIL-H6uOg=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="這裡會列出很多可以使用的量子電腦點-see-details-可以看到該量子電腦的設定以及排隊情況如下" class="article-heading">這裡會列出很多可以使用的量子電腦，點 See details 可以看到該量子電腦的設定以及排隊情況如下 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%80%99%e8%a3%a1%e6%9c%83%e5%88%97%e5%87%ba%e5%be%88%e5%a4%9a%e5%8f%af%e4%bb%a5%e4%bd%bf%e7%94%a8%e7%9a%84%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e9%bb%9e-see-details-%e5%8f%af%e4%bb%a5%e7%9c%8b%e5%88%b0%e8%a9%b2%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e7%9a%84%e8%a8%ad%e5%ae%9a%e4%bb%a5%e5%8f%8a%e6%8e%92%e9%9a%8a%e6%83%85%e6%b3%81%e5%a6%82%e4%b8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXLH4FY2CixOQwra1LAy8MKdBbAA_ESjHl8A_HUAgkXFbDjcuQeGF1DQqBerpuiFJzz4gDyF1YThlhxqsP8c77IHSvA34QicJBoSd6FQafIrP93_FwBTKoOyN8CeTlpjQRTzagFJbAUwwSW9J2PdA7AZw=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="挑選一個量子電腦設定-job-名稱後就可以執行" class="article-heading">挑選一個量子電腦、設定 job 名稱後就可以執行 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%91%e9%81%b8%e4%b8%80%e5%80%8b%e9%87%8f%e5%ad%90%e9%9b%bb%e8%85%a6%e8%a8%ad%e5%ae%9a-job-%e5%90%8d%e7%a8%b1%e5%be%8c%e5%b0%b1%e5%8f%af%e4%bb%a5%e5%9f%b7%e8%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVCva1NqIs-SRZYY3NKZ084nLETp3ybH-HicGbSFIr6LVqrKiTCyQgcH0p0Rvr_M_OrCcrlUT9-FlNkoF4UapM-HINKvDzibFENmIgOiFiYefe8b3b2k-TXRUEwb1vIPU394QPR6C7-esjJZK79eHDx-w=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="左邊欄位會顯示目前狀態" class="article-heading">左邊欄位會顯示目前狀態 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b7%a6%e9%82%8a%e6%ac%84%e4%bd%8d%e6%9c%83%e9%a1%af%e7%a4%ba%e7%9b%ae%e5%89%8d%e7%8b%80%e6%85%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWgiP8R-0sTfTTJPBdpOZTw4gN__T-Sh1zEaFYGoFuv6P7CWGDW81QhFCeBXrBazMQhCV99eKSn_GegWJhalOsNed-rmp6svMMCJVDC0e0SiiiruU_0MoFySofVHjSZZUFi4c-YSLFX-Wh-vtUoWYHfjQ=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="跑完後結果會顯示出來" class="article-heading">跑完後結果會顯示出來 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%91%e5%ae%8c%e5%be%8c%e7%b5%90%e6%9e%9c%e6%9c%83%e9%a1%af%e7%a4%ba%e5%87%ba%e4%be%86">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLX7gbRZ-Kb6TCo3suz7FoIpbcrHigsj5cQs7fxvfPBZURKN_MBmYYufPgf7Kj1T3zuE9sR0VyWqGbcNruMt9DVZCACRrV30QzGMiepfvUdebtqEUKcH2ExGWh9h4XsF39WBJrnwPwomlsy7jc5CMrn_Lw=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="也可以選擇-see-more-details-查看執行細節" class="article-heading">也可以選擇 See more details 查看執行細節 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b9%9f%e5%8f%af%e4%bb%a5%e9%81%b8%e6%93%87-see-more-details-%e6%9f%a5%e7%9c%8b%e5%9f%b7%e8%a1%8c%e7%b4%b0%e7%af%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6nFPz2wKvWga5GmfyWsyTviDShyRlLZGqMVUa568rzum_NC1mWmk3sxzXxr9GGYYJL-1temWb6NDk_y5_Dsm3PLGODaj5Pgrd1nx2w0qDYKrbaOk61PBSYdZHpsJnZ6GYYcMO1lN1EsJbZUXWNeB-Fw=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="ccnot-不用分解" class="article-heading">CCNOT 不用分解!? 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ccnot-%e4%b8%8d%e7%94%a8%e5%88%86%e8%a7%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="後來發現有一個-ccnot-的方塊不過突然要等-9-個小時之後有結果再更新" class="article-heading">後來發現有一個 CCNOT 的方塊，不過突然要等 9 個小時&hellip;之後有結果再更新 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e4%be%86%e7%99%bc%e7%8f%be%e6%9c%89%e4%b8%80%e5%80%8b-ccnot-%e7%9a%84%e6%96%b9%e5%a1%8a%e4%b8%8d%e9%81%8e%e7%aa%81%e7%84%b6%e8%a6%81%e7%ad%89-9-%e5%80%8b%e5%b0%8f%e6%99%82%e4%b9%8b%e5%be%8c%e6%9c%89%e7%b5%90%e6%9e%9c%e5%86%8d%e6%9b%b4%e6%96%b0">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXPlejfwyXhXdO3a3mTJdyzeN-gqRxYUXwl3QL-a6oMUnjMg0LwBZTuntOkBgYGPsdOIxOpOnSkt9aIM0OO6RRa1dvQ6ZgsxITPMRPNwsp94ZweXyflV8siEmoIypUpTDc2qb5kIq9WD277yoP-uXc90Q=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="看起來是有類似-function-的結構" class="article-heading">看起來是有類似 function 的結構 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%9c%8b%e8%b5%b7%e4%be%86%e6%98%af%e6%9c%89%e9%a1%9e%e4%bc%bc-function-%e7%9a%84%e7%b5%90%e6%a7%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXWj9WuU0eHjO3jajkSy2caM389G80yHRCmYSbb-8L9TGq18Go2w-wX93v7P4MTpFz1x8fLQGCVUVdph21NEaeprGDeTkhp8PnEAQzsYZoX7Oukn-DiNsaZ2mSQqp-haieinvxbiJQPdGnCcvu8Wh51UA=w390-h451-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="更新-執行結果" class="article-heading">更新: 執行結果 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9b%b4%e6%96%b0-%e5%9f%b7%e8%a1%8c%e7%b5%90%e6%9e%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUwSRM1ZhZzSnMHaiIQu1Gw1sx-6w3TARRjK6a2W-ar97ZKlhMRjSb4EqRAkS7v7lVNozvJDPhV-anIEQEUR3ySG1OG-eKqw_OStSMOORM_lcn-duowKLDslw9XdyfnRo-yy6CIEANs9pRdJ7kj9XB_JQ=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUMeBqpCAf4XH3ZfmVM3LOiBb3L5N4XRv15cVdEVrfPeBRugq9AEtgupEDAbVVl0V3D0Kw0uDFglOzHnx17A9upCg7swAy-BPug8h44tw2a79NbytBkfSiuI2yz_M7RtkQOdEJsg2C2mH3C6XIu8LJ7aw=w2560-h1267-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Quantum Toffoli Gate (CCNOT) Decomposition</title><link>https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/</link><pubDate>Wed, 02 Mar 2022 09:12:55 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/</guid><description><![CDATA[
          <p>在課堂 &ldquo;量子電腦程式設計&rdquo; 學到的推導過程。<br><br/>主要是將一個 CCNOT 分解成使用 6 個 CNOT。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/"><img src="https://images.unsplash.com/photo-1462331940025-496dfbfc7564?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2422&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220302-quantum-toffoli-gate-ccnot-decomposition/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>在課堂 &ldquo;量子電腦程式設計&rdquo; 學到的推導過程。<br>
主要是將一個 CCNOT 分解成使用 6 個 CNOT。</p>
 
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>算是很久沒上課了，而更久沒體會到數學推導的有趣。剛好本學期修到這堂課，老師半強迫要我們搞懂整個流程，意外找回國高中時寫數學的樂趣。在此附上我認為最詳盡易懂的推導過程。</p>
<p>gif 來自 cduck/bloch_sphere，references 中有附上連結。<br>
另外，公式繁多可能有錯，再麻煩指正。</p>
<h1 id="先備知識" class="article-heading">先備知識 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%88%e5%82%99%e7%9f%a5%e8%ad%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Gate 只會介紹本篇用到的。</p>
<h2 id="math" class="article-heading">Math 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#math">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>複數 ($\mathbb{C}$ ): 實部 (real part) + 虛部 (imaginary part), e.g., $x + yi, i = \sqrt{-1}$.</li>
<li>Euler&rsquo;s identity: $e^{i\pi} + 1 = 0$.  </li>
</ul>
<h2 id="quantum-bit-qubit" class="article-heading">Quantum bit (Qubit) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#quantum-bit-qubit">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>Quantum state 
<ul>
<li>Classical state 0: $\lvert 0\rangle = {\small\begin{pmatrix}1 \\ 0\end{pmatrix}}$ (0 的機率為 100%)</li>
<li>Classical state 1: $\lvert 1\rangle = {\small\begin{pmatrix}0 \\ 1\end{pmatrix}}$ (1 的機率為 100%)</li>
<li>Arbitrary state: $\lvert\Phi \rangle= \alpha\lvert 0\rangle + \beta\lvert 1\rangle = {\small\begin{pmatrix}\alpha \\ \beta\end{pmatrix}}, \alpha, \beta\in\mathbb{C}$
<ul>
<li>(0 的機率為 $\lvert \alpha\lvert^2$, 1 的機率為 $\lvert \beta\lvert^2$)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="1-bit-gate" class="article-heading">1-bit Gate 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-bit-gate">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>Hadamard gate: $H = \frac{1}{\sqrt{2}}{\small\begin{pmatrix}1 &amp; 1\\ 1 &amp; -1\end{pmatrix}}$
<ul>
<li>最常用作將 classical state 轉為疊加態 (superposition)。E.g.,</li>
<li>$H\lvert 0\rangle = \frac{1}{\sqrt{2}}{\small\begin{pmatrix}1 &amp; 1\\ 1 &amp; -1\end{pmatrix}}{\small\begin{pmatrix}1 \\ 0\end{pmatrix}} = \frac{1}{\sqrt{2}}{\small\begin{pmatrix}1 \\ 1\end{pmatrix}} = \frac{\lvert 0\rangle+\lvert 1\rangle}{\sqrt{2}}$</li>
<li>$H\lvert 1\rangle = \frac{1}{\sqrt{2}}{\small\begin{pmatrix}1 &amp; 1\\ 1 &amp; -1\end{pmatrix}}{\small\begin{pmatrix}0 \\ 1\end{pmatrix}} = \frac{1}{\sqrt{2}}{\small\begin{pmatrix}1 \\ -1\end{pmatrix}} = \frac{\lvert 0\rangle-\lvert 1\rangle}{\sqrt{2}}$</li>
<li>解釋: $\lvert 0\rangle, \lvert 1\rangle$ 經過 $H$ 後其 $0, 1$ 的機率皆各為 $\lvert \frac{1}{\pm\sqrt{2}}\lvert^2 = \frac{1}{2} = $ 50%</li>
</ul>
</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/hh_gate.gif" alt='Z 軸與 X 軸交換' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Z 軸與 X 軸交換</center>
    </figcaption>
  </figure>
</p>
<ul>
<li>Phase shift gate: $T = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; e^{i\frac{\pi}{4}}\end{pmatrix}}$</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://raw.githubusercontent.com/aben20807/bloch_sphere/master/examples/ststs_gate.gif" alt='$T$ 轉 $\frac{\pi}{4}$；$S$ 轉 $\frac{\pi}{2}$，不過後者在本篇不會使用到' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">$T$ 轉 $\frac{\pi}{4}$；$S$ 轉 $\frac{\pi}{2}$，不過後者在本篇不會使用到</center>
    </figcaption>
  </figure>
</p>
<ul>
<li>$T$&rsquo;s conjugate transpose : $T^\dagger = {\small\begin{pmatrix}1 &amp; 0\\0 &amp; e^{-i\frac{\pi}{4}}\end{pmatrix}}$</li>
</ul>
<h2 id="2-bit-gate" class="article-heading">2-bit Gate 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#2-bit-gate">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>Controlled NOT gate ($CNOT, CX, U_{CN}$): $U_{CN} ={\small\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}}$
<ul>
<li>control qubit ($\lvert C\rangle$) 為 1 時，target qubit ($\lvert T\rangle$) 會翻轉 (flip)。E.g.,</li>
<li>$U_{CN}(\frac{\lvert 0\rangle+\lvert 1\rangle}{\sqrt{2}})\lvert 0\rangle = {\small\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}} \frac{\lvert 00\rangle+\lvert 10\rangle}{\sqrt{2}} = {\small\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1\\ 0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}} \frac{1}{\sqrt{2}} {\small\begin{pmatrix}1\\0\\1\\0\end{pmatrix}} = \frac{1}{\sqrt{2}} {\small\begin{pmatrix}1\\0\\0\\1\end{pmatrix}} = \frac{\lvert 00\rangle+\lvert 11\rangle}{\sqrt{2}}$</li>
<li>解釋: 用 control bit 經過 $H$ 後會有 50-50 的機率，target bit 輸入為 0。則在 control bit 為 1 時，target bit 會轉為 1。因此輸出僅有兩種可能: 00 或 11。</li>
</ul>
</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV7c8ZHg0TZh0i7yFMz1EgAktYeO6iW22d53R47cDyiGwrG0XyUs0SrKqENSw5UlQt_Fvw1HBulxV5AxQTcPpLddQLFG784UHvn-Hx7DU_K8yqGUD5Q9U9JjbE44G2HAHpBR2tf_QWw0zZeh-TN1dnxYA=w422-h232-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="toffoli-gate-ccnot" class="article-heading">Toffoli Gate (CCNOT) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#toffoli-gate-ccnot">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>顧名思義，有兩個 control bit，不過是兩個同時為 1 時才會影響 target bit。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWN7STxJXBZjouz7ERqxJBegn9wendBx2BgUMt9o6fL-xTPRUGUZXhnbpV-7V7eOWj4RHZW2rZiICvfFPA576n29fpOGU5NTvWYgURwY5IVFAt2qIsiVHikDv7Vz-2KCq-R8laieVOM8LTlWjHwLjhSsA=w472-h252-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>不過它其實等價於下面的形式:</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUHKHYDE_SeNuNya8Pu1S9gh28MSlVVunxK6mYbhTsKQgKaK2p0sLmhGUTMnYH4Lw4nz3LJpjvnCOoWt8hiux9hsoHmQS50H8ODd4FHsIRlJlbHwdpxQ9aCuCsUIDOQC2GnPdYOH4kqYe8kllJ_dBRrcw=w1156-h262-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="推導過程" class="article-heading">推導過程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8e%a8%e5%b0%8e%e9%81%8e%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這邊要先注意，輸入的兩個 control bit 有經過 $H$ 變成疊加態，也就是下圖。不同階段的狀態使用不同符號 ($\lvert\Phi_i\rangle, i = 1&hellip;16$) 以便對應。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLX4-2YX3so43rmOGPzHAGCXdjqjG6Zb5OPkPGRijQCv09nAq-rJMoezlZFq5Si_3ItjAUVkfjGjgE7Tkar7VwH5y1nyOvNpzk4vGJ8Nh7DiyP24r8aNuIGstBdgXALjNXj_HJv1xOy6EjYHQOV5GwKjPg=w1203-h372-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>$$<br>
\def\TT{i\frac{\pi}{4}}<br>
\begin{equation*}<br>
\small<br>
\begin{split}<br>
\lvert\Phi_1\rangle =&amp; \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \lvert 0\rangle \\ =&amp; \frac{1}{2}(\lvert 000\rangle+\lvert 010\rangle+\lvert 100\rangle+\lvert 110\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_2\rangle =&amp; \frac{1}{2} \Biggr(\lvert 00\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 01\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 10\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\quad+\lvert 11\rangle\frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\Biggr)\newline =&amp; \frac{1}{2\sqrt{2}}(\lvert 000\rangle+\lvert 001\rangle+\lvert 010\rangle+\lvert 011\rangle+\lvert 100\rangle+\lvert 101\rangle+\lvert 110\rangle+\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_3\rangle =&amp; \frac{1}{2\sqrt{2}}(\lvert 000\rangle+\lvert 001\rangle+\lvert 011\rangle+\lvert 010\rangle+\lvert 100\rangle+\lvert 101\rangle+\lvert 111\rangle+\lvert 110\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_4\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
e^{-\TT}\lvert 001\rangle+<br>
e^{-\TT}\lvert 011\rangle+<br>
\lvert 010\rangle+<br>
\lvert 100\rangle+<br>
e^{-\TT}\lvert 101\rangle+<br>
e^{-\TT}\lvert 111\rangle+<br>
\lvert 110\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_5\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
e^{-\TT}\lvert 001\rangle+<br>
e^{-\TT}\lvert 011\rangle+<br>
\lvert 010\rangle+<br>
\lvert 101\rangle+<br>
e^{-\TT}\lvert 100\rangle+<br>
e^{-\TT}\lvert 110\rangle+<br>
\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_6\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
e^{\TT}e^{-\TT}\lvert 001\rangle+<br>
e^{\TT}e^{-\TT}\lvert 011\rangle+<br>
\lvert 010\rangle\newline &amp;\qquad+<br>
e^{\TT}\lvert 101\rangle+<br>
e^{-\TT}\lvert 100\rangle+<br>
e^{-\TT}\lvert 110\rangle+<br>
e^{\TT}\lvert 111\rangle)\newline<br>
=&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+\lvert 001\rangle+<br>
\lvert 011\rangle+\lvert 010\rangle+e^{\TT}\lvert 101\rangle+<br>
e^{-\TT}\lvert 100\rangle+<br>
e^{-\TT}\lvert 110\rangle+<br>
e^{\TT}\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_7\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+\lvert 001\rangle+<br>
\lvert 010\rangle+\lvert 011\rangle+e^{\TT}\lvert 101\rangle+<br>
e^{-\TT}\lvert 100\rangle+<br>
e^{-\TT}\lvert 111\rangle+<br>
e^{\TT}\lvert 110\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_8\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
e^{-\TT}\lvert 001\rangle+<br>
\lvert 010\rangle+<br>
e^{-\TT}\lvert 011\rangle+<br>
\lvert 101\rangle+<br>
e^{-\TT}\lvert 100\rangle+<br>
e^{-2\TT}\lvert 111\rangle+<br>
e^{\TT}\lvert 110\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{9}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
e^{-\TT}\lvert 001\rangle+<br>
\lvert 010\rangle+<br>
e^{-\TT}\lvert 011\rangle+<br>
\lvert 100\rangle+<br>
e^{-\TT}\lvert 101\rangle+<br>
e^{-2\TT}\lvert 110\rangle+<br>
e^{\TT}\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{10}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
\lvert 001\rangle+<br>
\lvert 010\rangle+<br>
\lvert 011\rangle+<br>
\lvert 100\rangle+<br>
\lvert 101\rangle+<br>
e^{-2\TT}\lvert 110\rangle+<br>
e^{2\TT}\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{11}\rangle =&amp; \frac{1}{2\sqrt{2}}(<br>
\lvert 000\rangle+<br>
\lvert 001\rangle+<br>
e^{\TT}\lvert 010\rangle+<br>
e^{\TT}\lvert 011\rangle+<br>
\lvert 100\rangle+<br>
\lvert 101\rangle+<br>
e^{-\TT}\lvert 110\rangle+<br>
e^{3\TT}\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{12}\rangle =&amp; \frac{1}{2\sqrt{2}}\Biggr(<br>
\lvert 00\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle) \newline &amp;\qquad+<br>
\lvert 00\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)\newline &amp;\qquad+<br>
\lvert 01\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)e^{\TT}\newline &amp;\qquad+<br>
\lvert 01\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)e^{\TT}\newline &amp;\qquad+<br>
\lvert 10\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)\newline &amp;\qquad+<br>
\lvert 10\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)\newline &amp;\qquad+<br>
\lvert 11\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle+\lvert 1\rangle)e^{-\TT}\newline &amp;\qquad+<br>
\lvert 11\rangle \frac{1}{\sqrt{2}}(\lvert 0\rangle-\lvert 1\rangle)e^{3\TT}\Biggr)\newline<br>
=&amp; \frac{1}{2\sqrt{2}}(<br>
\frac{2}{\sqrt{2}}\lvert 000\rangle+<br>
e^{\TT}\frac{2}{\sqrt{2}}\lvert 010\rangle+<br>
\frac{2}{\sqrt{2}}\lvert 100\rangle+<br>
e^{-\TT}\frac{2}{\sqrt{2}}\lvert 111\rangle<br>
)\newline<br>
=&amp; \frac{1}{2}(\lvert 000\rangle + e^{\TT}\lvert 010\rangle + \lvert 100\rangle + e^{-\TT}\lvert 111\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{13}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + e^{\TT}\lvert 010\rangle + \lvert 110\rangle + e^{-\TT}\lvert 101\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{14}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + e^{-\TT}\lvert 110\rangle + e^{-\TT}\lvert 101\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{15}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + \lvert 110\rangle + \lvert 101\rangle)<br>
\newline<br>
\newline<br>
\lvert\Phi_{16}\rangle =&amp; \frac{1}{2}(\lvert 000\rangle + \lvert 010\rangle + \lvert 100\rangle + \lvert 111\rangle)<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<h1 id="解釋" class="article-heading">解釋 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a7%a3%e9%87%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最終結果推出這樣的輸入下 (前兩位元疊加態，第三位元 0) 只有四種輸出可能 (000, 010, 100, 111) 各佔 25%，前三種因為前兩位元不全為 1 所以第三位元維持 0。第四種因為前兩位元皆為 1，第三位元因此翻轉成 1。</p>
<h1 id="補充說明" class="article-heading">補充說明 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a3%9c%e5%85%85%e8%aa%aa%e6%98%8e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>其中我認為最精采的是 $\lvert\Phi_{12}\rangle$，在這步驟中，原先 8 個狀態透過 $H$ 作用後可以抵消掉 4 個狀態。比較需要注意的是 $e^{-\TT} = -1 \cdot e^{3\TT}$ 因此會消掉 $\lvert 11\rangle\lvert 0\rangle$ 這項。</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://en.wikipedia.org/wiki/Quantum_logic_gate" title="Quantum logic gate - wiki" aria-label="Quantum logic gate - wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Quantum logic gate - wiki</a></li>
<li><a href="https://github.com/cduck/bloch_sphere" title="Qubit Bloch Sphere Visualization: cduck/bloch_sphere - github" aria-label="Qubit Bloch Sphere Visualization: cduck/bloch_sphere - github"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Qubit Bloch Sphere Visualization: cduck/bloch_sphere - github</a></li>
<li><a href="https://link.springer.com/book/10.1007/978-3-030-63583-1" title="Fundamentals of Quantum Programming in IBM’s Quantum Computers" aria-label="Fundamentals of Quantum Programming in IBM’s Quantum Computers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Fundamentals of Quantum Programming in IBM’s Quantum Computers</a></li>
</ul>
 
        ]]></description></item><item><title>Vscode Latex Workshop Pdf Viewer Auto Refresh</title><link>https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/</link><pubDate>Sun, 23 Jan 2022 11:20:21 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/</guid><description><![CDATA[
          <p>每次要重開 pdf viewer 很麻煩，而且最近突然無法在編譯好 pdf 後自動更新 viewer 了，很惱人。找了方法來解決，雖然不夠完美，不過很夠用了。</p><br/><p><mark>更新: 有時候會失靈需要重新安裝 VSCode</mark></p>
          
            <p><a href="https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/"><img src="https://images.unsplash.com/photo-1638164570687-28edd5f0a124?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220123-vscode-latex-workshop-pdf-viewer-auto-refresh/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>每次要重開 pdf viewer 很麻煩，而且最近突然無法在編譯好 pdf 後自動更新 viewer 了，很惱人。找了方法來解決，雖然不夠完美，不過很夠用了。</p>
<p><mark>更新: 有時候會失靈需要重新安裝 VSCode</mark></p>
<p>Related post: <a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/" title="[Use VSCode to Write LaTeX Paper]" aria-label="[Use VSCode to Write LaTeX Paper]" >[Use VSCode to Write LaTeX Paper]</a></p>
<h1 id="environment" class="article-heading">Environment 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#environment">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>Win10</li>
<li>VSCode Version: 1.63.2</li>
<li>Latex Workshop: v8.23.0</li>
<li>Trigger Task on Save: v0.2.17</li>
</ul>
<h1 id="steps" class="article-heading">Steps 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#steps">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ol>
<li>
<p>Install <a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.triggertaskonsave" title="Trigger Task on Save" aria-label="Trigger Task on Save"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Trigger Task on Save</a> (ID: gruntfuggly.triggertaskonsave)</p>
</li>
<li>
<p><code>settings.json</code> (global):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">// your other settings...
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#ff79c6">&#34;latex-workshop.latex.autoBuild.run&#34;</span>: <span style="color:#f1fa8c">&#34;onSave&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">&#34;latex-workshop.view.pdf.viewer&#34;</span>: <span style="color:#f1fa8c">&#34;tab&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">&#34;triggerTaskOnSave.tasks&#34;</span>: {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;update pdf&#34;</span>: [
</span></span><span style="display:flex;"><span>            <span style="color:#f1fa8c">&#34;*.tex&#34;</span>
</span></span><span style="display:flex;"><span>        ]
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
<li>
<p><code>.vscode/tasks.json</code> (local):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">&#34;version&#34;</span>: <span style="color:#f1fa8c">&#34;2.0.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">&#34;tasks&#34;</span>: [
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;label&#34;</span>: <span style="color:#f1fa8c">&#34;build&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;command&#34;</span>: <span style="color:#f1fa8c">&#34;${command:latex-workshop.build}&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;problemMatcher&#34;</span>: [],
</span></span><span style="display:flex;"><span>        },
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;label&#34;</span>: <span style="color:#f1fa8c">&#34;update pdf&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;command&#34;</span>: <span style="color:#f1fa8c">&#34;${command:latex-workshop.refresh-viewer}&#34;</span>,
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;dependsOn&#34;</span>:[<span style="color:#f1fa8c">&#34;build&#34;</span>],
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;problemMatcher&#34;</span>: [],
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">&#34;group&#34;</span>: {
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">&#34;kind&#34;</span>: <span style="color:#f1fa8c">&#34;build&#34;</span>,
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">&#34;isDefault&#34;</span>: <span style="color:#ff79c6">true</span>
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    ]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div></li>
</ol>
<h1 id="說明" class="article-heading">說明 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%aa%e6%98%8e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>會需要 Trigger Task on Save 是因為要在儲存 *.tex 的檔案時觸發 &ldquo;update pdf&rdquo; 的 task，由於 &ldquo;update pdf&rdquo; 依賴 (dependsOn) &ldquo;build&rdquo;，所以會先執行 &ldquo;build&rdquo; 的 task，結束後呼叫 refresh-viewer。</p>
<h1 id="不完美之處" class="article-heading">不完美之處 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8d%e5%ae%8c%e7%be%8e%e4%b9%8b%e8%99%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>可以看到整個流程會呼叫兩次 build (一次是 onSave、一次是 triggerTaskOnSave)，取消其中一者會導致 pdf viewer 在 pdf 還沒編譯好時就更新。兩個都存在就會等第一次編譯好才更新 (真是奇怪的 bug)，因此缺點就是會編譯兩次，不過第二次因為是重複所以速度很快幾乎不影響使用。</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.reddit.com/r/vscode/comments/dhsff9/comment/f8fmdhj/?utm_source=share&amp;utm_medium=web2x&amp;context=3" title="Auto-update pdf-viewer - reddit" aria-label="Auto-update pdf-viewer - reddit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Auto-update pdf-viewer - reddit</a></li>
<li><a href="https://code.visualstudio.com/docs/editor/tasks" title="Integrate with External Tools via Tasks - vscode" aria-label="Integrate with External Tools via Tasks - vscode"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Integrate with External Tools via Tasks - vscode</a></li>
</ul>
        ]]></description></item><item><title>本週回顧</title><link>https://aben20807.github.io/posts/20220115-weekly-review/</link><pubDate>Sat, 15 Jan 2022 12:04:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20220115-weekly-review/</guid><description><![CDATA[
          <p>沒有要固定更新，不過分享一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20220115-weekly-review/"><img src="https://images.unsplash.com/photo-1639977299489-a3d5a8f78811?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20220115-weekly-review/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>沒有要固定更新，不過分享一下。</p>
 
<h1 id="機車漏油" class="article-heading">機車漏油 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a9%9f%e8%bb%8a%e6%bc%8f%e6%b2%b9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>原本星期三預計要跟女友去看奈良美智特展  ，結果出發前發現機車發不動，然後有很重的汽油味，才看到地板已經一堆油，好險沒燒起來。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVXRncFYR27ZhH-JmvDJItbkexsy3cd2FosFso81s8Hjr6BWjMOrqzABmpwRYVRA-ujzz6gJHvPZq7hpz9e6pIDie_lZssKWGgjWsZOFo4rIZf-Il_HIjq1koM_z1dVx1ZIEZYoc_thnvLzFr2zeVwiIw=w1692-h1268-no" alt='漏油' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">漏油</center>
    </figcaption>
  </figure>
</p>
<p>記得上次一樣跟女友去漁光島的時候就有聞到，以為只是一般廢氣。所以只好先放棄 (之後再預約)，然後我就找了附近評價最好的機車行，直接把車牽過去。老闆人蠻好的，又修得算快，說之後有問題可以叫他過去不用自己牽過來，在此推薦。</p>
<ul>
<li>駿陞機車行:
   
</li>
</ul>
<h1 id="重訓肌肉拉傷" class="article-heading">重訓肌肉拉傷 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8d%e8%a8%93%e8%82%8c%e8%82%89%e6%8b%89%e5%82%b7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>女友之前抽到動滋券 ，結果這次似乎只能用在健身房或是去看球賽，剛好附近健身房有優惠用動滋券體驗一個月，我有時候會陪她去，結果這禮拜去練二頭肌後疼痛感蠻明顯，感覺是拉傷。幸好沒有到很嚴重，休息幾天後有逐漸恢復。</p>
<h1 id="放棄-evernote" class="article-heading">放棄 Evernote 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%be%e6%a3%84-evernote">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Evernote 突然說網頁版的也算是一個裝置，而又只限定兩個裝置，所以感覺不夠用了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV5EoUg9_j5f9U7mhWHfeFug8mZQTQ6MCuObaJVUJy8KqcNkXSIjNUxwx3MF1Ar3MkjamrwyCIC13uUQXQ9CDQdbsRWhQpCIQVG0WSjTZJBzXEWyTkwUgwqDUAKUfehtCCWEK9rqeHIYRY83tjPKBCagA=w994-h746-no" alt='撤銷裝置' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">撤銷裝置</center>
    </figcaption>
  </figure>
</p>
<p>我就直接把所有筆記移植到 Notion (我用 enex2notion  ，不過上傳蠻花時間)，過程中才發現我的筆記太雜亂，分類又直接用記事本。總之目前轉用 Notion，教育版還可以免費使用 pro 的功能。我之前多少有用過 Notion，不過當時的效能不太好，現在使用感覺進步許多。</p>
<h1 id="新玩具" class="article-heading">新玩具 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e7%8e%a9%e5%85%b7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>新手機沒有 3.5mm 耳機孔了，剛好被打廣告，所以就腦波弱下單，品質不錯 (應該是我耳機太爛聽不出差異)。另外不知道為何 S21U 預設會把高音調弱，進到 Adapt Sound 裡面測試一下耳朵狀態後才能全開。</p>
<p>這樣我的 LG V30+ 連當隨身聽的機會都沒有了，算是真的退休了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVp8y_S4KSi2nWJ11u9V_-Uhxp_aqNH9cGEqXsoylkQ5Live_hbpq7uOaWH14FZCyLCxrNAgxI-jG8T0zk2OBsNX0n_WX2wWV0aP_PDNb-3HzLLsOEQLpz-89_BSppon7H7pucofsRYo7U9h5D1pGvLvg=w1692-h1268-no" alt='BGVP T01s' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">BGVP T01s</center>
    </figcaption>
  </figure>
</p>
<h1 id="實驗室尾牙火鍋" class="article-heading">實驗室尾牙火鍋 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%a9%97%e5%ae%a4%e5%b0%be%e7%89%99%e7%81%ab%e9%8d%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>結果沒有開瓶器，後來把螺絲釘鎖進去後靠剪刀把軟木塞取出。</p>
<blockquote>
<p>酒後不開車，安全有保障。</p>
</blockquote>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXw18ZuSfFzLaOsBzMMoLZhsW-3uo5Ky17tXpM_HWZRyKLZpciZlvKPEzoIt83BLLby6pXb2lv8eCtfIPtOq4yAmD8WDXYW6Ilx8jEG2OcjLHCwoP3Di_kyNygdDsp7Phk9RH-qMknK6uoiljZMvR3q-w=w1692-h1268-no" alt='用螺絲釘開紅酒' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">用螺絲釘開紅酒</center>
    </figcaption>
  </figure>
</p>
<h1 id="網站更新" class="article-heading">網站更新 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b6%b2%e7%ab%99%e6%9b%b4%e6%96%b0">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>Add footnote tooltip popup bubble (不用再移到下方看 footnote 了)<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUJV1Q7aqI_GNiL8wsHQTekjz6A_BDWydsh9cETtlyogcNSMviTfJo03hyY23JOAogkIlJMMyp7BZGNlL5zPC9M_yC-VfKTdzzjxOAaa4uIvNyuEkJFl_BVyYn89MYA53-4sk7qjsEu5o1c5DALYSrx8g=w373-h121-no" alt='footnote tooltip' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">footnote tooltip</center>
    </figcaption>
  </figure>
</li>
<li>Reduce the size of the image from unsplash on homepage</li>
<li>Improve media print</li>
</ul>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>我比較懶惰，目前還沒有打算定時更新，請見諒。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVbwAyRINy95lOA0baTwPlePUx0Z8wE3arMsvOr9lpB4H3xrumk95bqkDxbtQjayRiHcnywbzoWSMgCc2YUYpXDDUVPj_VT3F4m56eTSnyqUPcVZhHYuruEXKP2R-WhJ1fdB3U_9Tw72Uj_6iFErocqeg=w1692-h1268-no" alt='用實驗室老鼠結束這回合' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">用實驗室老鼠結束這回合</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>cmake + gdb 簡易流程</title><link>https://aben20807.github.io/posts/20211208-cmake-gdb/</link><pubDate>Wed, 08 Dec 2021 16:33:26 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211208-cmake-gdb/</guid><description><![CDATA[
          
          
            <p><a href="https://aben20807.github.io/posts/20211208-cmake-gdb/"><img src="https://images.unsplash.com/photo-1582845512747-e42001c95638?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2070&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211208-cmake-gdb/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>使用教材: <a href="https://github.com/aben20807/learn_cmake" title="aben20807/learn_cmake" aria-label="aben20807/learn_cmake"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/learn_cmake</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone https://github.com/aben20807/learn_cmake.git
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> learn_cmake
</span></span></code></pre></div><h1 id="基本編譯及執行" class="article-heading">基本編譯及執行 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9f%ba%e6%9c%ac%e7%b7%a8%e8%ad%af%e5%8f%8a%e5%9f%b7%e8%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir build
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> build
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ cmake ..
</span></span><span style="display:flex;"><span>$ make
</span></span><span style="display:flex;"><span>$ ./bin/exec
</span></span><span style="display:flex;"><span>hello
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">$ls</span>
</span></span><span style="display:flex;"><span>bin/  CMakeFiles/  extern/  lib/  src/  cmake_install.cmake  CMakeCache.txt  Makefile
</span></span></code></pre></div><h1 id="改用-ninja-來取代-make-可跳過" class="article-heading">改用 ninja 來取代 make [可跳過] 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%b9%e7%94%a8-ninja-%e4%be%86%e5%8f%96%e4%bb%a3-make-%e5%8f%af%e8%b7%b3%e9%81%8e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><a href="https://ninja-build.org/" title="Ninja" aria-label="Ninja"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Ninja</a>，跟 make 相同地位，但號稱是更快速的建置系統，主要可以善用平行化編譯，且沒有 make 那樣的歷史包袱導致過於複雜，ninja 生來就是用來被產生，沒錯，cmake 也可以產生 ninja 使用的編譯腳本。目前相當多大型專案 (Google Chrome, parts of Android, LLVM) 都仰賴 ninja。</p>
<p>因為用不同工具編譯的指令不同 make 用 <code>make</code>， ninja 用 <code>ninja</code>，所以 cmake 有一個指令 (<code>$ cmake --build .</code>) 是可以依照當初產生的來自動呼叫對應的指令，後面章節會用到。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install ninja-build
</span></span></code></pre></div><p>刪除使用 make 的版本並指定使用 ninja</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> ..
</span></span><span style="display:flex;"><span>$ rm -r build
</span></span><span style="display:flex;"><span>$ mkdir build
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> build
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ cmake -G Ninja ..
</span></span><span style="display:flex;"><span>$ ninja
</span></span><span style="display:flex;"><span>$ ./bin/exec
</span></span><span style="display:flex;"><span>hello
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ls
</span></span><span style="display:flex;"><span>bin/  CMakeFiles/  extern/  lib/  src/  build.ninja  cmake_install.cmake  CMakeCache.txt  rules.ninja
</span></span></code></pre></div><h1 id="使用-gdb" class="article-heading">使用 gdb 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-gdb">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>建議可以先參考舊文 <a href="https://aben20807.blogspot.com/2018/06/1070618-gdb-gdb-dashboard.html" title="107.06.18 好看的 gdb, gdb-dashboard" aria-label="107.06.18 好看的 gdb, gdb-dashboard"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 107.06.18 好看的 gdb, gdb-dashboard</a> 來提升 gdb 的顏值 (x</p>
<p>使用 gdb 主要原因就是因為程式只有印出 Segmentation fault 然後就沒有其他了，不會通靈的話基本上無法解決。不過本篇使用的是最簡單的例子，一般會更複雜，不過使用 gdb 還是比通靈實在多了。</p>
<p>為了演示，我將 <code>../src/main.cpp</code> 改為下面內容，當前目錄都在 <code>learn_cmake/build/</code> 中:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;say_hello_util/hello.hpp&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;sum_header/sum.hpp&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdlib.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">struct</span> <span style="color:#50fa7b">Foo</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> x;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>() {
</span></span><span style="display:flex;"><span>    hh<span style="color:#ff79c6">::</span>hello();
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> ss<span style="color:#ff79c6">::</span>sum(<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">2</span>) <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    Foo<span style="color:#ff79c6">*</span> ptr <span style="color:#ff79c6">=</span> (Foo<span style="color:#ff79c6">*</span>)malloc(<span style="color:#ff79c6">sizeof</span>(Foo));
</span></span><span style="display:flex;"><span>    ptr<span style="color:#ff79c6">-&gt;</span>x <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">42</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> ptr<span style="color:#ff79c6">-&gt;</span>x;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    free(ptr);
</span></span><span style="display:flex;"><span>    ptr <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">NULL</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> ptr<span style="color:#ff79c6">-&gt;</span>x;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="使用流程" class="article-heading">使用流程: 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8%e6%b5%81%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ol>
<li>發現問題</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cmake --build . <span style="color:#6272a4"># 呼叫 make 或 ninja</span>
</span></span><span style="display:flex;"><span>$ ./bin/exec
</span></span><span style="display:flex;"><span>hello
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span><span style="display:flex;"><span>Segmentation fault
</span></span></code></pre></div><ol start="2">
<li>利用 cmake 產生 debug 專用的編譯指令，讓額外的程式碼資訊一起編譯到執行檔中 (稍後可以試試不經過這一步會如何，需要先 <code>$ rm CMakeCache.txt</code>)，此步驟在 ninja 或 make 都可以適用。</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cmake -G Ninja -DCMAKE_BUILD_TYPE<span style="color:#ff79c6">=</span>Debug ..
</span></span><span style="display:flex;"><span>$ cmake --build .
</span></span></code></pre></div><ol start="3">
<li>使用 gdb 開啟並執行編譯好的檔案</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gdb -q -ex run --args ./bin/exec
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWzgME7xChueCMU3Du2i7Rbwpf7NkaItrB81ASPPNCKofxcG3b6Z7KSkXvjpEZW-J_2JOr4R4ifWxuMIoFaWdHLElryG6pdftZmFlYXaDvnMWUU6dkxM7jauDN2rK2MIN8brp5V24JqpoNZ_naFX35KOg=w959-h516-no" alt='顯示出錯位置，第 19 行 ptr 已經不可用' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">顯示出錯位置，第 19 行 ptr 已經不可用</center>
    </figcaption>
  </figure>
</p>
<h1 id="參考資料" class="article-heading">參考資料 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://ithelp.ithome.com.tw/articles/10221101" title="Day 11: 中場休息 CMake 教學 - renewang" aria-label="Day 11: 中場休息 CMake 教學 - renewang"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Day 11: 中場休息 CMake 教學 - renewang</a></li>
<li><a href="https://stackoverflow.com/questions/7724569/debug-vs-release-in-cmake/7725055#7725055" title="Debug vs Release in CMake" aria-label="Debug vs Release in CMake"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Debug vs Release in CMake</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10241563" title="拯救資工系學生的基本素養—使用 GDB 除錯基本教學 - 微中子" aria-label="拯救資工系學生的基本素養—使用 GDB 除錯基本教學 - 微中子"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 拯救資工系學生的基本素養—使用 GDB 除錯基本教學 - 微中子</a></li>
</ul>
        ]]></description></item><item><title>安裝 Ubuntu 後必做的事</title><link>https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/</link><pubDate>Wed, 08 Dec 2021 11:39:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/</guid><description><![CDATA[
          <p>大幅提高方便性</p>
          
            <p><a href="https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/"><img src="https://images.unsplash.com/photo-1638874992371-55c089919a2d?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1974&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211208-must-do-after-installing-ubuntu/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>大幅提高方便性</p>
 
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>本篇不包含如何安裝作業系統，而是在作業系統 (不限於直接安裝，大部分在虛擬機、WSL2 也適用) 上調整設定或安裝一些工具</p>
<h1 id="inputrc" class="article-heading">inputrc 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#inputrc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1> 
<p>[如果稍後會安裝 oh-my-bash 可以跳過]</p>
<p>在 home 下編輯 <code>vim ~/.inputrc</code>，內容如下，儲存後關閉重開終端機，就可以實現打前幾個字按&quot;上&quot;然後搜尋歷史紀錄了。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;\e[A&#34;</span>: history-search-backward
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;\e[B&#34;</span>: history-search-forward
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWN4ATYRzzDi5CeNZORHf-lg_CvoTXD8j-xeBkRUBpb3hiwrQssYIFZcZhAcwwXiXI1S4vMLzEyFCPN4PsqEP19NXX5Nhidyoyakp9BMtMgJP3yZNUVVHnwiu-_oeXpeZfvtetLI9ogCwPYgCb6JBb9wA=w600-h338-no" alt='使用前' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">使用前</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXdjWL35yAlAOv87Lmc-C1ZZHx_nOCSDyvk0a59wfAa2BTexFNKZiMjfGrX-bRERbenem4CsOT7-er0uUCKID4KbNcCOWVBXBzPPspjeRzRc_C5gj4gTc-frKTT1RIZK7M9MCRoYrk2kn-b_lKTjb6ynw=w600-h338-no" alt='使用後' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">使用後</center>
    </figcaption>
  </figure>
</p>
<p>進階參考: <a href="https://www.topbug.net/blog/2017/07/31/inputrc-for-humans/" title="A ~/.inputrc for Humans" aria-label="A ~/.inputrc for Humans"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> A ~/.inputrc for Humans</a></p>
<h1 id="oh-my-bash" class="article-heading">oh-my-bash 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#oh-my-bash">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1> 
<p>先前我有試用過 Fish shell  ，真的蠻人性化的，不過因為後來大部分要跑實驗，主流還是使用 bash，fish 也無法支援部分 bash 的功能，因此就放棄使用了。也因此就研究 bash 相關的內容，也沒有機會使用 Zsh  。</p>
<p><a href="https://github.com/ohmybash/oh-my-bash" title="ohmybash/oh-my-bash" aria-label="ohmybash/oh-my-bash"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ohmybash/oh-my-bash</a> 提供了許多功能，雖然無法到達 fish 那樣提供視覺化的指令補全  ，不過跟原生的 bash 比較還是方便許多。</p>
<ul>
<li>oh-my-bash 安裝方式: <a href="https://github.com/ohmybash/oh-my-bash#basic-installation" title="https://github.com/ohmybash/oh-my-bash#basic-installation" aria-label="https://github.com/ohmybash/oh-my-bash#basic-installation"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/ohmybash/oh-my-bash#basic-installation</a></li>
</ul>
<p>我也有設計一個主題，不過沒有 PR，所以要使用的話在安裝完 oh-my-bash 後再透過下面連結提供的指令安裝:</p>
<ul>
<li>oh-my-ouo 主題安裝方式: <a href="https://github.com/aben20807/oh-my-ouo#install" title="https://github.com/aben20807/oh-my-ouo#install" aria-label="https://github.com/aben20807/oh-my-ouo#install"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/aben20807/oh-my-ouo#install</a></li>
</ul>
<h2 id="方便的功能" class="article-heading">方便的功能 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b9%e4%be%bf%e7%9a%84%e5%8a%9f%e8%83%bd">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ol>
<li><code>mcd</code> 可以取代 <code>mkdir</code> + <code>cd</code></li>
<li>git 會顯示修改狀態</li>
<li>bashmarks (<code>bm</code>) 可以提供書籤功能，快速到達指定資料夾</li>
<li>virtualenv 會標註目前在虛擬 python 環境 (ouo 主題)</li>
<li>不需要修改 <code>~/.inputrc</code> 就可以搜尋歷史紀錄</li>
</ol>
<h1 id="file-manager-nautilus-copy-file-path" class="article-heading">file manager (nautilus) copy file path 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#file-manager-nautilus-copy-file-path">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1> 
<p>[WSL2 不適用]</p>
<p>有時候透過 GUI 找檔案時要複製它的路徑，這個套件就有點類似 VSCode 的功能，讓檔案管理員也可以直接複製檔案路徑。</p>
<ul>
<li>安裝步驟: <a href="https://github.com/chr314/nautilus-copy-path#manual-installation" title="https://github.com/chr314/nautilus-copy-path#manual-installation" aria-label="https://github.com/chr314/nautilus-copy-path#manual-installation"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://github.com/chr314/nautilus-copy-path#manual-installation</a></li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://raw.githubusercontent.com/chr314/nautilus-copy-path/master/screenshot.png" alt='效果，圖片來源: chr314/nautilus-copy-path' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">效果，圖片來源: chr314/nautilus-copy-path</center>
    </figcaption>
  </figure>
</p>
<h1 id="ag---silver-searcher" class="article-heading">Ag - silver searcher 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ag---silver-searcher">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1> 
<p>搜尋文字檔案內容用，在找程式碼時下頗方便的。有時候在 GitHub 網頁內的搜尋結果找不到的用 ag 就對了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVA4aVBfYPy0w7cWmFGLsqf3HZ0NPTrfys01Gb50uV1_Bww1PAZKqNUPpDubcBstAHK2Xl5kDZTp-qSnlvo3b7SoOtYK5g6tiCj0p7ncpcMer9-XHzW2qpW023SYlB6zKTK8-tI2ESJk1OV5ISiuZw7lw=w959-h723-no" alt='找出有 “hugo “，內容及在哪個檔案裡' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">找出有 “hugo “，內容及在哪個檔案裡</center>
    </figcaption>
  </figure>
</p>
<h1 id="rust-相關工具" class="article-heading">Rust 相關工具 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#rust-%e7%9b%b8%e9%97%9c%e5%b7%a5%e5%85%b7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Rust 最近越來越穩定，也有許多工具都用 Rust 重寫且使用起來更為友善，不過要使用這些工具前要先安裝 Rust。</p>
<ul>
<li>Rust 環境安裝方式: <a href="https://www.rust-lang.org/tools/install" title="https://www.rust-lang.org/tools/install" aria-label="https://www.rust-lang.org/tools/install"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://www.rust-lang.org/tools/install</a></li>
<li>另外要將下方內容放到 <code>~/.bashrc</code> 中</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#6272a4"># Rust</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">export</span> <span style="color:#8be9fd;font-style:italic">RUST_HOME</span><span style="color:#ff79c6">=</span><span style="color:#8be9fd;font-style:italic">$HOME</span>/.cargo/
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">export</span> <span style="color:#8be9fd;font-style:italic">PATH</span><span style="color:#ff79c6">=</span><span style="color:#8be9fd;font-style:italic">$PATH</span>:<span style="color:#8be9fd;font-style:italic">$RUST_HOME</span>/bin
</span></span></code></pre></div><h2 id="exahttpsgithubcomoghamexa-取代-ls" class="article-heading"><a href="https://github.com/ogham/exa" title="exa" aria-label="exa"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> exa</a> 取代 ls 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#exahttpsgithubcomoghamexa-%e5%8f%96%e4%bb%a3-ls">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2> 
<p>因為我們已經有 Rust 環境了，所以可以使用 <code>$ cargo install exa</code> 安裝。</p>
<p><code>~/.bashrc</code> 中可以加入以下來取代 <code>ls</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">ls</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;exa -F --group-directories-first&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">ll</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;exa -alF&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">lls</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;exa --sort=size -l&#39;</span>
</span></span></code></pre></div><h2 id="bathttpsgithubcomsharkdpbat-取代-cat" class="article-heading"><a href="https://github.com/sharkdp/bat" title="bat" aria-label="bat"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> bat</a> 取代 cat 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#bathttpsgithubcomsharkdpbat-%e5%8f%96%e4%bb%a3-cat">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>安裝:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cargo install --locked bat
</span></span></code></pre></div><p>alias:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">cat</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;bat&#39;</span>
</span></span></code></pre></div><h2 id="dusthttpsgithubcombootandydust-取代-du" class="article-heading"><a href="https://github.com/bootandy/dust" title="dust" aria-label="dust"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> dust</a> 取代 du 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#dusthttpsgithubcombootandydust-%e5%8f%96%e4%bb%a3-du">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>安裝:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cargo install du-dust
</span></span></code></pre></div><p>alias:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">disk</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;dust&#39;</span>
</span></span></code></pre></div> 
        ]]></description></item><item><title>Human Resource Machine</title><link>https://aben20807.github.io/posts/20211205-human-resource-machine/</link><pubDate>Sun, 05 Dec 2021 14:23:22 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211205-human-resource-machine/</guid><description><![CDATA[
          <p>[非業配] 最近 (12/7 前) <a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" title="steam" aria-label="steam"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> steam</a> 特價中 (Human Resource Machine + 7 Billion Humans 兩款合併只需要 NT$114)。</p>
          
            <p><a href="https://aben20807.github.io/posts/20211205-human-resource-machine/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211205-human-resource-machine/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>[非業配] 最近 (12/7 前) <a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" title="steam" aria-label="steam"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> steam</a> 特價中 (Human Resource Machine + 7 Billion Humans 兩款合併只需要 NT$114)。</p>
 
<p>如果是寫程式寫到走火入魔，連玩遊戲也要找一款可以鍛鍊邏輯的，那我推薦這款 <a href="https://store.steampowered.com/app/375820/Human_Resource_Machine/" title="Human Resource Machine" aria-label="Human Resource Machine"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Human Resource Machine</a>。遊戲做畫蠻精緻的，也有大量跟程式相關的內容。另外此遊戲有續作 <a href="https://store.steampowered.com/app/792100/7_Billion_Humans/" title="7 Billion Humans" aria-label="7 Billion Humans"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 7 Billion Humans</a>，同樣也是相關的內容。我玩前幾關發現前者是低階 (low-level) 指令，遊戲過程像是用 instructions  、assembly code   去解決問題，例如費波那契數列  、排序  ；後者有出現 if-else 等高階語言特性，可能會比較像 Scratch   或是 MIT App Inventor   那樣拉方塊寫程式的感覺。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUSQMHkdrqkmpz22I1d7bvqY7gsEaAYNSqTJ485lm2TW5ft5Eh4PgLjzmFhCtA2rD6suoGuXZAypqMoPUEUCJHvHrp_WCuB-CavFNEcDfMZmiZ9c9QqWy-wRudcNDkk_uCbz7Kpm9JIi2-CY08Pb8_Ugw=w1737-h1337-no" alt='Human Resource Machine 真實遊戲畫面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Human Resource Machine 真實遊戲畫面</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUB52uq9J-F1T9pIypzlABm0adH8l2GlMoXo5UYRZwIcxN7ZScCIv_L1I170cngeM8-QHgC2YOp1jn-aGkp6zDPh5gaslk59E58SFIXNE8M1VruOk22tBECKcST4bMwnkMyUAGBoHiwUFsoOGuCr-3R7g=w2560-h1440-no" alt='7 Billion Humans 真實遊戲畫面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">7 Billion Humans 真實遊戲畫面</center>
    </figcaption>
  </figure>
</p>
<p>判定方式除了是否解決問題外還有針對指令數量以及執行速度當作可以最佳化的面向。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVYEQctI5PEqAfa_n6y0kgIHndEyhXGLvjqFrLv2jCt9panxRbicj1ciZhjtJTBN9jX_A0V7Rn1OtNJuAvFK4uWCByl_0bvfyQKF7KjnYQ2cyKICopWnXdWqexJ2FJI88Fg5uKUDozI8Gl04k7HGbRAUQ=w1737-h1337-no" alt='Human Resource Machine 真實遊戲畫面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Human Resource Machine 真實遊戲畫面</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>Find and Count Words Using Vim</title><link>https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/</link><pubDate>Sat, 04 Dec 2021 16:54:07 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/</guid><description><![CDATA[
           <br/><p>用 vim 計算出現次數</p>
          
            <p><a href="https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/"><img src="https://images.unsplash.com/photo-1586769852836-bc069f19e1b6?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2670&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211204-find-and-count-words-using-vim/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>用 vim 計算出現次數</p>
<p>因為我預設的搜尋是大小寫無關 (Case insensitive, 可自行用 <code>:echo &amp;ignorecase</code> 確認)，因此搜尋有時候會包含非目標的字，若要區分大小寫可以使用下方的指令。把 <code>target word</code> 換成你想找的字或句子即可。</p>
<p>Command 模式下執行：</p>
<ul>
<li>Case insensitive:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:%s<span style="color:#f1fa8c">/target word/</span>/ng
</span></span></code></pre></div><ul>
<li>Case sensitive:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:%s<span style="color:#f1fa8c">/target word/</span>/ngI
</span></span></code></pre></div><p>執行完會顯示類似 <code>4 matches on 4 lines</code> 來呈現搜尋結果。</p>
        ]]></description></item><item><title>大 大 大更新</title><link>https://aben20807.github.io/posts/20211203-huge-update-on-this-website/</link><pubDate>Fri, 03 Dec 2021 09:50:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211203-huge-update-on-this-website/</guid><description><![CDATA[
           <br/><p>本網站最近的更新項目</p>
          
            <p><a href="https://aben20807.github.io/posts/20211203-huge-update-on-this-website/"><img src="https://images.unsplash.com/photo-1588671789988-d0c186cb9e84?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211203-huge-update-on-this-website/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>本網站最近的更新項目</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近做了許多大更新，果然還是有一個自己的主題 (theme) 比較自由，但是缺點就是會一直改來改去，似乎沒有盡頭。</p>
<p><del>哎呀，昨天 20211202 沒發到文。</del></p>
<p>寫完發現太長了，所以右邊有開啟 toc。</p>
<h1 id="auto-deploy-from-the-private-repo" class="article-heading">Auto deploy from the private repo 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#auto-deploy-from-the-private-repo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="private-repo" class="article-heading">Private repo 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#private-repo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>本網站已經從原先開源發文內容的方式改為把該 repo 設定為私人，主要原因是為了防止別人輕易拿到原始內容進而能夠輕鬆盜取。先前我也已經檢舉了一堆內容農場，雖然防不勝防，不過我看到有些討論是建議把原始內容隱藏起來。再來私人模式下我也比較能夠控制一些內容何時可以公開發佈，這大概可以適用在鐵人賽預先囤文 (雖然我還不知道會不會參加)。原先舊的因為星星數頗多，所以維持公開並改為純記錄 issue (發文靈感)。</p>
<h2 id="github-action" class="article-heading">GitHub Action 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#github-action">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>此外，為了發文方便性，佈署方式已經從原先在本地端編譯好網站再推上去改為利用 GitHub Action。也就是我只要將內容更新推上 private repo，則 GitHub 那邊會自動幫忙編譯及推到<a href="https://github.com/aben20807/aben20807.github.io" title="目標 repo" aria-label="目標 repo"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 目標 repo</a>。因此整理一下，為了這個網站我現在有4個 repo：</p>
<ul>
<li><a href="https://github.com/aben20807/hugOuO" title="aben20807/hugOuO" aria-label="aben20807/hugOuO"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/hugOuO</a>：主題</li>
<li><a href="https://github.com/aben20807/blog-post" title="aben20807/blog-post (private)" aria-label="aben20807/blog-post (private)"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/blog-post (private)</a>：發文內容</li>
<li><a href="https://github.com/aben20807/blog-post-issues" title="aben20807/blog-post-issues" aria-label="aben20807/blog-post-issues"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/blog-post-issues</a>：記錄靈感，<del>收集星星</del></li>
<li><a href="https://github.com/aben20807/aben20807.github.io" title="aben20807/aben20807.github.io" aria-label="aben20807/aben20807.github.io"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/aben20807.github.io</a>：渲染成此網站的目標 repo</li>
</ul>
<p>為了使用 GitHub Action 完成自動佈署，我用了以下工具：</p>
<ul>
<li><a href="https://github.com/peaceiris/actions-hugo" title="peaceiris/actions-hugo" aria-label="peaceiris/actions-hugo"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> peaceiris/actions-hugo</a>：用於使用 hugo 編譯網站</li>
<li><a href="https://github.com/cpina/github-action-push-to-another-repository" title="cpina/github-action-push-to-another-repository-directory" aria-label="cpina/github-action-push-to-another-repository-directory"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> cpina/github-action-push-to-another-repository-directory</a>：因為我的內容跟渲染 repo 分離，所以需要這個工具推到另外一個 repo，需要按照教學申請 <code>API_TOKEN_GITHUB</code></li>
<li><a href="https://github.com/nektos/act" title="nektos/act" aria-label="nektos/act"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> nektos/act</a>：用於本地端測試 yaml 可不可以動</li>
</ul>
<p>另外有一些小技巧會用到：</p>
<ul>
<li><code>set-output</code>: <a href="https://stackoverflow.com/a/65616499" title="https://stackoverflow.com/a/65616499" aria-label="https://stackoverflow.com/a/65616499"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://stackoverflow.com/a/65616499</a></li>
<li>Multiple lines for git message in yaml: <a href="https://stackoverflow.com/a/5064653" title="https://stackoverflow.com/a/5064653" aria-label="https://stackoverflow.com/a/5064653"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://stackoverflow.com/a/5064653</a></li>
</ul>
 

<details>
  <summary><span>完整 <code>blog-post/.github/workflows/deploy.yml</code> 內容 </span></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#ff79c6">name</span>: Deploy
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">on</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">push</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">branches</span>:
</span></span><span style="display:flex;"><span>      - master
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">jobs</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">deploy</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">runs-on</span>: ubuntu-18.04
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">concurrency</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#ff79c6">group</span>: ${{ github.workflow }}-${{ github.ref }}
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">steps</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Dump GitHub context
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">env</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">GITHUB_CONTEXT</span>: ${{ toJson(github) }}
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">run</span>: echo &#34;$GITHUB_CONTEXT&#34;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">uses</span>: actions/checkout@v2
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">submodules</span>: <span style="color:#ff79c6">true</span>  <span style="color:#6272a4"># Fetch Hugo themes (true OR recursive)</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">fetch-depth</span>: <span style="color:#bd93f9">0</span>    <span style="color:#6272a4"># Fetch all history for .GitInfo and .Lastmod</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Setup Hugo
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">uses</span>: peaceiris/actions-hugo@v2
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">hugo-version</span>: <span style="color:#f1fa8c">&#39;0.89.4&#39;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">extended</span>: <span style="color:#ff79c6">true</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Build
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">run</span>: hugo --gc --minify --cleanDestinationDir
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Copy README.md
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">run</span>: cp README_web.md public/README.md
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Retrieve commit message
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">run</span>: | <span style="color:#6272a4"># https://trstringer.com/github-actions-multiline-strings/</span>
</span></span><span style="display:flex;"><span>          CMT_MSG_STR=$(cat &lt;&lt; EOF
</span></span><span style="display:flex;"><span>          Deploy site `date &#39;+%Y-%m-%d %H:%M:%S&#39;`
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>          by `hugo version`
</span></span><span style="display:flex;"><span>          from ORIGIN_COMMIT
</span></span><span style="display:flex;"><span>          EOF
</span></span><span style="display:flex;"><span>          )
</span></span><span style="display:flex;"><span>          CMT_MSG_STR=&#34;${CMT_MSG_STR//$&#39;\n&#39;/&#39;%0A&#39;}&#34;
</span></span><span style="display:flex;"><span>          echo &#34;::set-output name=CMT_MSG::$CMT_MSG_STR&#34;
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">id</span>: message
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ff79c6">name</span>: Deploy
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">uses</span>: cpina/github-action-push-to-another-repository@main
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">env</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">API_TOKEN_GITHUB</span>: ${{ secrets.API_TOKEN_GITHUB }}
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">with</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">source-directory</span>: <span style="color:#f1fa8c">&#39;public&#39;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">destination-github-username</span>: <span style="color:#f1fa8c">&#39;aben20807&#39;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">destination-repository-name</span>: <span style="color:#f1fa8c">&#39;aben20807.github.io&#39;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">commit-message</span>: ${{ steps.message.outputs.CMT_MSG }}
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">user-email</span>: aben20807@gmail.com
</span></span><span style="display:flex;"><span>          <span style="color:#ff79c6">target-branch</span>: master
</span></span></code></pre></div>
</details>
<h1 id="dark-mode" class="article-heading">Dark mode 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#dark-mode">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近流行深色模式，主要可能是因為 OLED 螢幕比較省電，另外是可以減低藍光對眼睛的傷害。原先我打算跳槽到其他炫炮主題 (e.g., <a href="https://github.com/dillonzq/LoveIt" title="LoveIt" aria-label="LoveIt"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> LoveIt</a>)，不過後來查到深色模式可能沒有很複雜，所以就自己用了。我直接從 <a href="https://yonkov.github.io/post/add-dark-mode-toggle-to-hugo/" title="SWITCHING OFF THE LIGHTS PART TWO - ADDING DARK MODE TO HUGO" aria-label="SWITCHING OFF THE LIGHTS PART TWO - ADDING DARK MODE TO HUGO"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> SWITCHING OFF THE LIGHTS PART TWO - ADDING DARK MODE TO HUGO</a> 複製過來，比較麻煩的是 CSS 的控制。因為我原先都是手動硬改，所以這裡也需要比較多功 (細節可以去<a href="https://github.com/aben20807/hugOuO/blob/75d26d4f0eae8e796d0c781b3fd6cbd9641149fc/static/css/hugouo.css#L545-L622" title="主題 repo" aria-label="主題 repo"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 主題 repo</a> 看)。不過算是有完成，最右上角有一個切換的按鈕，也是因為這次機會我才知道原來有 <code>localStorage</code> 可以用。</p>
<h1 id="go-top-button" class="article-heading">Go top button 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#go-top-button">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>捲動一段距離後，右下角會出現一個前往最上面的按鈕。我的舊網站其實有這個功能，不過一直沒有移植過來，所以就趁這個更新的機會順便。這樣之後手機版就不用再手動滑到最上面。</p>
<h1 id="prevnext-post" class="article-heading">Prev/Next post 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#prevnext-post">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>偶然發現有這個技巧，所以順便&hellip;，我是從 <a href="https://brianli.com/adding-next-previous-post-links-in-hugo/" title="Adding Next and Previous Post Links in Hugo" aria-label="Adding Next and Previous Post Links in Hugo"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Adding Next and Previous Post Links in Hugo</a> 直接複製，然後加上一些 CSS 的 class 以便符合主題。因此回覆的上面就會有上、下一篇的連結。</p>
<h1 id="series" class="article-heading">Series 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#series">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>後來發現還是需要有一個分類來管理系列文章，這跟原先的分類、標籤不同，主要針對同一高度相關的議題 (會標記 ep 幾)。例如：<a href="https://aben20807.github.io/series/build-a-simple-compiler/" title="Build a simple compiler" aria-label="Build a simple compiler"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Build a simple compiler</a>。</p>
<h1 id="license-section" class="article-heading">License section 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#license-section">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>發現還不錯的設計：<a href="https://jdhao.github.io/2021/11/28/how_i_write_blog/" title="jdhao&amp;rsquo;s blog" aria-label="jdhao&amp;rsquo;s blog"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> jdhao&rsquo;s blog</a>，不過我是自己找如何讓分號對齊：<a href="https://stackoverflow.com/a/9891619" title="How to align about the colon in each line of text like movie credits often do" aria-label="How to align about the colon in each line of text like movie credits often do"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How to align about the colon in each line of text like movie credits often do</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://user-images.githubusercontent.com/14831545/143805190-77ad75c9-f91c-40cd-b220-587446c9cee2.png" alt='成果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">成果</center>
    </figcaption>
  </figure>
</p>
<h1 id="與網站無關" class="article-heading">與網站無關 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%87%e7%b6%b2%e7%ab%99%e7%84%a1%e9%97%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="new-phone" class="article-heading">New phone 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#new-phone">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>本人換新手機了，雖然已經過一個多月，不過還是無法適應這個重量，可能是原先 LG V30+ 實在是太輕。這3年的區間感覺最大升級是相機的軟體部份。螢幕雖然有 120Hz 但是實在是太耗電所以我預設是關閉。螢幕下指紋比起實體辨識還是有準確率問題。內建喇叭有立體感我蠻喜歡的。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://images.unsplash.com/photo-1637924681501-458bb899b071?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=3774&amp;q=80" alt='S21U 拍攝滿月' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">S21U 拍攝滿月</center>
    </figcaption>
  </figure>
</p>
<h2 id="instagram" class="article-heading">Instagram 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#instagram">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>已斷捨離，聯絡請用 messenger，近況更新暫用 FB 或本網站，如果是最近拍了什麼可以去我的 <a href="https://unsplash.com/@aben20807" title="unsplash" aria-label="unsplash"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> unsplash</a>。</p>
<h1 id="最後來一段-ouo" class="article-heading">最後來一段 OuO 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%80%e5%be%8c%e4%be%86%e4%b8%80%e6%ae%b5-ouo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>雖然我沒玩，也沒業配&hellip;</p>







 
        ]]></description></item><item><title>Ubuntu 中文輸入法 Hime</title><link>https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/</link><pubDate>Mon, 18 Oct 2021 09:28:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/</guid><description><![CDATA[
           <br/><p>更新一下設定部分</p>
          
            <p><a href="https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/"><img src="https://images.unsplash.com/photo-1524668951403-d44b28200ce0?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1374&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20211018-ubuntu-chinese-input-hime/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>更新一下設定部分</p>
<blockquote>
<p>輸入法編輯器（英語：input method editor，縮寫為IME），是指鍵盤擊鍵或滑鼠移動翻譯成字符來輸入的作業系統組件。 &ndash; <a href="https://zh.wikipedia.org/wiki/%E8%BE%93%E5%85%A5%E6%B3%95" title="wiki" aria-label="wiki"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> wiki</a></p>
</blockquote>
<p>舊文: <a href="https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html" title="https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html" aria-label="https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://aben20807.blogspot.com/2015/10/1041008-kali-linux20_8.html</a></p>
<h1 id="安裝" class="article-heading">安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install hime
</span></span></code></pre></div><h1 id="設定系統預設輸入法" class="article-heading">設定系統預設輸入法 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e5%ae%9a%e7%b3%bb%e7%b5%b1%e9%a0%90%e8%a8%ad%e8%bc%b8%e5%85%a5%e6%b3%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ im-config
</span></span></code></pre></div> 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUbOang03O8QLfNgCt31S1uKjZAMzZVEsBZM_oLGP8AaOp_A1uIFTM4mLf3_zBCgi7P536M6mot8rC11ELl27ZXPIplKNTyLvmE8iM8DwejJppStaBawybZFzg2pvaKowYVTmeWGX5xeJThZL_vJQsJGg=w600-h430-no" alt='Step 1' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Step 1</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW71pHLSR-juKxKpiKl71wc1Twd0hAh7BDLLkY5_R2p5Z6ckd_n6DdnXXTUHwUX_iwjHmpKfVogN3hERJbqYG8DU2bvWY2YualojziwUMk5sePNVnmz9SprmCPcv1rglo-60TcI1MCH6rFxVoqbIYBaXw=w683-h430-no" alt='Step 2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Step 2</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWDFFlbFkxs4pIvIuMFOiXQVwnz6sDFWR9OMvaVQf5uu0XLsLntDtm6D6ZcNscv9qGJ3AO9SirvZ7QNYUWnpaGGp3b623GQBuSexsZvFuahTce7inE1w7Pl6ZIazEacK20I_a9eBSSQFKHseh0_qPnqbQ=w635-h435-no" alt='Step 3' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Step 3</center>
    </figcaption>
  </figure>
</p>

</details>
<h1 id="輸入法設定" class="article-heading">輸入法設定 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bc%b8%e5%85%a5%e6%b3%95%e8%a8%ad%e5%ae%9a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUSWO732Q9q6vSsG9Lm9V3XJHIYbLTls36rcHG9vNaLty9LRYOtG4tEDbO7-0zulzbuUnxIR7H6eJl8cUhOcIi6lMEtQ2JOxQFeV8Yo2JWklozOVJWTY_LZz5OHhcULsLvwk1M-bmwFw_20B8rWvi_Vpw=w124-h134-no" alt='點擊圖示' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">點擊圖示</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUt_uTDW10lidV_mFZNoSTne7Qi8PlBQ7bg2Vw27vO150iQc9RoBF1No-194kN37mRlDeKCaJ4GFPmXkoJnM2TS7uTkhkltHFdJ1vV60rTEQFHv8DnmU5yBTkDmpcMklEevPc65cAJQQORfyxFnLBu20g=w1178-h1135-no" alt='分頁 1' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">分頁 1</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVKtjanJ9oPB1XNoLpuGb0mw1Dx5mXJhJRdCOaPK69GG-Hj3hmHQLzNGzvSIu8mzuGeYYt9_na2GZbjtKW40S8_k46WzuA2riE3EwwDQ1vvxoLhjpIMYRbC4dau9kmD1ZoPaoGpjiHXO59pIfRbPWm79A=w1176-h1134-no" alt='分頁 2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">分頁 2</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWFCgJUi1ONy8R7c8zXUKKk7UfrTdfgJylwTmPD_aSa4caaIuL1RkA17BW-TGyoGOIjS31YEQRR3i_CtOsRAmUQUQ1yDslFNaWrTkWNgaa_tD5B-dBd9y0fgD-Hu4jTLRaZyfq66skqCa-d6-4VrmaGCQ=w1179-h1133-no" alt='分頁 3' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">分頁 3</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6pS9SMeM6Y36SAJTF2emFj0nQyGNF5Wy2yu0fAaN2W0DzHIVIzRB0hq24bWDq0grqYV9MiSyrCpS5lLJPa5mAkIxZDuA59R5cDtvAK3vWhLX0jwVPoyaaMa0l8DmUzJPrES0yuV6auSvpe4f6E0Xicw=w1176-h1135-no" alt='分頁 4' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">分頁 4</center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Ubuntu Multiple Audio Devices</title><link>https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/</link><pubDate>Sat, 14 Aug 2021 15:08:12 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/</guid><description><![CDATA[
           <br/><p>聲音同時輸出多個裝置 (藍芽、喇叭、螢幕)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/"><img src="https://images.unsplash.com/photo-1535406208535-1429839cfd13?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1655&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210814-ubuntu-multiple-audio-devices/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>聲音同時輸出多個裝置 (藍芽、喇叭、螢幕)</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>假日用電腦看電影，找不到 win10 可以設定同時多個音訊輸出 (網路提供的都不能用)。所以就看看 Ubuntu 可不可以，結果只需要安裝 paprefs 這個套件就好，也太簡單了吧 👍</p>
<h1 id="使用-paprefs" class="article-heading">使用 paprefs 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-paprefs">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install paprefs <span style="color:#6272a4"># 安裝</span>
</span></span><span style="display:flex;"><span>$ paprefs <span style="color:#6272a4"># 開啟設定視窗</span>
</span></span></code></pre></div><p>選擇 Simultaneous Output 頁面，並勾選如下圖</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV-ZBr1zarhENeHCexK-1txjCCnWoW16_nWJrJxFUCq3g4aSuAbNjyNa4BvtgbsqvITH4FkCYHadg9nm0ctVw6xdijpSHL363TYp3GC5_QU4pQ0N9DRa_XLsDsLp2REkckaXh1IApGrL0fFKSO8kBKZyg=w757-h339-no" alt='virtual output device' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">virtual output device</center>
    </figcaption>
  </figure>
</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ pulseaudio -k <span style="color:#6272a4"># 重新整理音訊卡</span>
</span></span></code></pre></div><p>接著就會出現一個新的輸出卡如下圖，選擇這個就會在所有裝置輸出聲音了，個別聲音的音量在個別去設定，或是關閉螢幕聲音即可。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVmz3mgDsg5iz7CVmmL2qDpR_QwR4u6u2nRCP-X4GVkBesON9AFMESBPVEapnZ4n3hGTjyKWOSrvy6IVlgzfCoAxi2r3cZsqLnR9rEerj5OzLZfV1xnYSdSP0cE9CHGxbbJNQx3tdujqm498DmMDlp9zg=w1291-h713-no" alt='音效輸出卡' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">音效輸出卡</center>
    </figcaption>
  </figure>
</p>
<h1 id="回復" class="article-heading">回復 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9b%9e%e5%be%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>取消勾選後執行 <code>pulseaudio -k</code> 即可。</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><blockquote>
<p>大哥沒有輸 QuQ</p>
</blockquote>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://askubuntu.com/a/78179" title="Play sound through two or more outputs/devices" aria-label="Play sound through two or more outputs/devices"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Play sound through two or more outputs/devices</a></li>
</ul>
        ]]></description></item><item><title>Use Matplotlib to Plot Academic Figures</title><link>https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/</link><pubDate>Thu, 12 Aug 2021 13:18:37 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/</guid><description><![CDATA[
           <br/><p>輕鬆畫出有學術質感的圖表</p>
          
            <p><a href="https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLWQU7NG5P2FICQUsbsbsSnd4OvpK-J5gAkHa9oU5S-lsJ7sKXktgA6WWqHpPY90VfQLGi9XvBid3PoGZ6kM0Bfdu8Q9V8E4H_mG3flfFYzpYX2xUKvOgck0jmvXV8Thaoq7sNv4pY3K2PCWUlrF-Ft2ow=w1891-h1112-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210812-use-matplotlib-to-plot-academic-figures/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>輕鬆畫出有學術質感的圖表</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>本篇示範一個用 matplotlib 畫一個基本的折線圖，在 ubuntu 跟 windows 10 都有試過，不過本篇以 windows 10 的指令為主。</p>
<p>雖然有想過寫成一個工具，使用者只要提供資料，就可以自動畫出圖。不過後來發現這個想法是不實際，因為每張圖幾乎都需要客製化，所以就改成提供一個模板，要做任何調整會比較方便。</p>
<h1 id="安裝套件" class="article-heading">安裝套件 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%a5%97%e4%bb%b6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="python39" class="article-heading">Python3.9 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#python39">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Windows 直接到官網下載即可，Ubuntu 需要使用 PPA 。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXjOlfhfiQNgWI02_rZb4Wb574Fu4Wur9o6OKhoyNMjexMuCOxm0CCZcVHN_2J3unY1gLHsXw-brNYZcu-_ZTs391zX9dh568EJUTUZevMF626zka1_CuOirPByW0xVteY8pA5Wj3hcah8FtnX_cDPFsQ=w1705-h1291-no" alt='windows python3.9' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">windows python3.9</center>
    </figcaption>
  </figure>
</p>

</details>
<h3 id="安裝-virtualenv-並進入虛擬環境" class="article-heading">安裝 virtualenv 並進入虛擬環境 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d-virtualenv-%e4%b8%a6%e9%80%b2%e5%85%a5%e8%99%9b%e6%93%ac%e7%92%b0%e5%a2%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; pip install virtualenv
</span></span></code></pre></div><p>要進入虛擬環境時需要執行 active 的腳本，在 Ubuntu 就很方便執行 <code>$ source venv/bin/activate</code>，但是 powershell 有權限問題，所以要先設定 。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; mkdir matplotlib_test
</span></span><span style="display:flex;"><span>&gt; <span style="color:#8be9fd;font-style:italic">cd </span>matplotlib_test
</span></span><span style="display:flex;"><span>&gt; virtualenv --python python3.9 venv
</span></span><span style="display:flex;"><span>&gt; <span style="color:#8be9fd;font-style:italic">Set-ExecutionPolicy</span> -ExecutionPolicy Bypass -Scope <span style="color:#ff79c6">Process</span> -Force
</span></span><span style="display:flex;"><span>&gt; .\venv\Scripts\activate.ps1
</span></span><span style="display:flex;"><span>(venv)&gt; pip list
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV60iyL8ezSo7VKOvo5mleP9Ur5NEK2nNV2ABbdR9zMWJZGaaqMQYJLTaQNxPHcPQ56avYFMRh1-cZFBRqFOPDMJbhZ_lMI_UL4ZdddicANA6fAitgOUyzkxRt7ncqv9vVcZuKrkQuuXns2epiRY7NDvw=w624-h148-no" alt='pip list of a clear venv' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">pip list of a clear venv</center>
    </figcaption>
  </figure>
</p>
<h3 id="matplotlib-and-scienceplots" class="article-heading">Matplotlib and SciencePlots 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#matplotlib-and-scienceplots">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>圖表樣式主要靠 SciencePlots  來完成，所以我們只要專注使用 Matplotlib 來製作圖表即可。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>(venv)&gt; pip install matplotlib==3.4.2
</span></span><span style="display:flex;"><span>(venv)&gt; pip install SciencePlots==1.0.8
</span></span><span style="display:flex;"><span>(venv)&gt; pip list <span style="color:#6272a4"># 詳細版本資訊參考用</span>
</span></span><span style="display:flex;"><span>Package         Version
</span></span><span style="display:flex;"><span>--------------- -------
</span></span><span style="display:flex;"><span>cycler          0.10.0
</span></span><span style="display:flex;"><span>kiwisolver      1.3.1
</span></span><span style="display:flex;"><span>matplotlib      3.4.2
</span></span><span style="display:flex;"><span>numpy           1.21.1
</span></span><span style="display:flex;"><span>Pillow          8.3.1
</span></span><span style="display:flex;"><span>pip             21.2.3
</span></span><span style="display:flex;"><span>pyparsing       2.4.7
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">python-dateutil</span> 2.8.2
</span></span><span style="display:flex;"><span>SciencePlots    1.0.8
</span></span><span style="display:flex;"><span>setuptools      57.4.0
</span></span><span style="display:flex;"><span>six             1.16.0
</span></span><span style="display:flex;"><span>wheel           0.37.0
</span></span></code></pre></div><h1 id="畫圖技巧" class="article-heading">畫圖技巧 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%95%ab%e5%9c%96%e6%8a%80%e5%b7%a7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>強烈建議先去看一下這篇 <a href="https://zhuanlan.zhihu.com/p/93423829" title="matplotlib：先搞明白plt. /ax./ fig再画" aria-label="matplotlib：先搞明白plt. /ax./ fig再画"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> matplotlib：先搞明白plt. /ax./ fig再画</a>。我原先用 matplotlib 也是亂用，看過之後了解大概的區塊是哪個模組在控制。</p>
<p>下圖的各個部位的名稱可以大概記一下，這樣在搜尋時會比較方便。主要中心思想就是關於實際畫圖的都使用 <code>ax</code>，只有在建立跟輸出時才用 <code>plt</code>。下方會有範例。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV39YBiIYsdoJnTbBEfB23amAIXrpG65S-cq4ozucbJ13wlQNkKfsV7w0pWLeCnIDAYgVkj6tTpEv1tIPdm_v5S2Vv8n_Uvw1102twnZMG9OZhC2yxgNj6-c-hFpnRggyEL4nNPjpwzf5-fUcWH0ZUHBg=w385-h401-no" alt='Parts of a Figure' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Parts of a Figure</center>
    </figcaption>
  </figure>
  </p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLX_WJxX_h8KTZjCPicenrC56Y2v4B4Trd6ft1DHJDG_YxycOsar94WCx073O9GWS7wSZZKH0QSSEQrWRAosK3zz16F73MvbT3J0O6ERQB0U2dCbhSis7RlQdWDSG95_TQmYua9DBi3kdTFpw4DmqwtHSA=s800-no" alt='components of a Matplotlib figure' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">components of a Matplotlib figure</center>
    </figcaption>
  </figure>
  </p>
<h1 id="實際範例" class="article-heading">實際範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%a6%e9%9a%9b%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>data.csv</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>n,A,B,C,D
</span></span><span style="display:flex;"><span>10,1,2,1,6
</span></span><span style="display:flex;"><span>100,3,3,6,6
</span></span><span style="display:flex;"><span>1000,2,9,1,6
</span></span><span style="display:flex;"><span>10000,3,7,7,6
</span></span><span style="display:flex;"><span>100000,3,10,8,6
</span></span><span style="display:flex;"><span>1000000,16,19,2,6
</span></span><span style="display:flex;"><span>10000000,125,86,41,6
</span></span></code></pre></div><ul>
<li><code>plot.py</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> matplotlib.pyplot <span style="color:#ff79c6">as</span> plt
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Config</span>
</span></span><span style="display:flex;"><span>fin <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;data.csv&#34;</span>
</span></span><span style="display:flex;"><span>fout <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;result.pdf&#34;</span>
</span></span><span style="display:flex;"><span>x_str <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;x label&#34;</span>
</span></span><span style="display:flex;"><span>y_str <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;y label&#34;</span>
</span></span><span style="display:flex;"><span>title_str <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;Title&#34;</span>
</span></span><span style="display:flex;"><span>col_names <span style="color:#ff79c6">=</span>         [<span style="color:#f1fa8c">&#39;n&#39;</span>, <span style="color:#f1fa8c">&#39;A&#39;</span>, <span style="color:#f1fa8c">&#39;B&#39;</span>, <span style="color:#f1fa8c">&#39;C&#39;</span>, <span style="color:#f1fa8c">&#39;D&#39;</span>] <span style="color:#6272a4"># cannot contain any special char</span>
</span></span><span style="display:flex;"><span>col_label_names <span style="color:#ff79c6">=</span>   [<span style="color:#f1fa8c">&#39;A (a)&#39;</span>, <span style="color:#f1fa8c">&#39;B (b)&#39;</span>, <span style="color:#f1fa8c">&#39;C&#39;</span>]
</span></span><span style="display:flex;"><span>skip_cols <span style="color:#ff79c6">=</span> [<span style="color:#f1fa8c">&#39;D&#39;</span>]
</span></span><span style="display:flex;"><span>label_cols <span style="color:#ff79c6">=</span> [<span style="color:#f1fa8c">&#39;A&#39;</span>, <span style="color:#f1fa8c">&#39;C&#39;</span>]
</span></span><span style="display:flex;"><span>add_dot_points <span style="color:#ff79c6">=</span> [(<span style="color:#bd93f9">10000</span>, <span style="color:#f1fa8c">&#39;B&#39;</span>), (<span style="color:#bd93f9">1000000</span>, <span style="color:#f1fa8c">&#39;A&#39;</span>)]
</span></span><span style="display:flex;"><span>colors <span style="color:#ff79c6">=</span> [<span style="color:#f1fa8c">&#39;red&#39;</span>, <span style="color:#f1fa8c">&#39;black&#39;</span>, <span style="color:#f1fa8c">&#39;blue&#39;</span>, <span style="color:#f1fa8c">&#39;green&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Read data</span>
</span></span><span style="display:flex;"><span>table <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>genfromtxt(fin, delimiter<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;,&#39;</span>, skip_header<span style="color:#ff79c6">=</span><span style="color:#bd93f9">1</span>, names<span style="color:#ff79c6">=</span>col_names)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(table)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Plot the figure</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> plt<span style="color:#ff79c6">.</span>style<span style="color:#ff79c6">.</span>context([<span style="color:#f1fa8c">&#39;science&#39;</span>, <span style="color:#f1fa8c">&#39;ieee&#39;</span>]):
</span></span><span style="display:flex;"><span>    fig, ax <span style="color:#ff79c6">=</span> plt<span style="color:#ff79c6">.</span>subplots()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    color_idx <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> i, col_name <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">enumerate</span>(col_names[<span style="color:#bd93f9">1</span>:]):
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> col_name <span style="color:#ff79c6">in</span> skip_cols:
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">continue</span>
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Plot line</span>
</span></span><span style="display:flex;"><span>        line <span style="color:#ff79c6">=</span> ax<span style="color:#ff79c6">.</span>plot(table[col_names[<span style="color:#bd93f9">0</span>]], table[col_name], label<span style="color:#ff79c6">=</span>col_label_names[i], color<span style="color:#ff79c6">=</span>colors[color_idx])
</span></span><span style="display:flex;"><span>        color_idx <span style="color:#ff79c6">+=</span> <span style="color:#bd93f9">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Plot data label</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> col_name <span style="color:#ff79c6">in</span> label_cols:
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">for</span> x, y <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">zip</span>(table[col_names[<span style="color:#bd93f9">0</span>]], table[col_name]):
</span></span><span style="display:flex;"><span>                ax<span style="color:#ff79c6">.</span>annotate(<span style="color:#f1fa8c">f</span><span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">{</span>y<span style="color:#f1fa8c">:</span><span style="color:#f1fa8c">.1f</span><span style="color:#f1fa8c">}</span><span style="color:#f1fa8c">&#34;</span>, xy<span style="color:#ff79c6">=</span>(x<span style="color:#ff79c6">-</span><span style="color:#bd93f9">0.0</span><span style="color:#ff79c6">*</span>x, y<span style="color:#ff79c6">-</span><span style="color:#bd93f9">0.2</span><span style="color:#ff79c6">*</span>y), textcoords<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;data&#39;</span>, fontsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">4</span>, color<span style="color:#ff79c6">=</span>line[<span style="color:#bd93f9">0</span>]<span style="color:#ff79c6">.</span>get_color())
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#6272a4"># Plot special points</span>
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">for</span> x, y <span style="color:#ff79c6">in</span> <span style="color:#8be9fd;font-style:italic">zip</span>(table[col_names[<span style="color:#bd93f9">0</span>]], table[col_name]):
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">if</span> (x, col_name) <span style="color:#ff79c6">in</span> add_dot_points:
</span></span><span style="display:flex;"><span>                ax<span style="color:#ff79c6">.</span>plot(x, y, marker<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#34;.&#34;</span>, markersize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">4</span>, color<span style="color:#ff79c6">=</span>line[<span style="color:#bd93f9">0</span>]<span style="color:#ff79c6">.</span>get_color(), linestyle<span style="color:#ff79c6">=</span>line[<span style="color:#bd93f9">0</span>]<span style="color:#ff79c6">.</span>get_linestyle())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>legend(fontsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">6</span>) <span style="color:#6272a4"># according to col_label_names</span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># ax.set_title(title_str) # not used by default</span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># x, y label</span>
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>set_xlabel(x_str, fontsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">6</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>set_ylabel(y_str, fontsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">7</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># x, y tick</span>
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>set_xscale(<span style="color:#f1fa8c">&#39;log&#39;</span>, base<span style="color:#ff79c6">=</span><span style="color:#bd93f9">2</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>set_yscale(<span style="color:#f1fa8c">&#39;log&#39;</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>xaxis<span style="color:#ff79c6">.</span>set_tick_params(labelsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">5</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>yaxis<span style="color:#ff79c6">.</span>set_tick_params(labelsize<span style="color:#ff79c6">=</span><span style="color:#bd93f9">5</span>)
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>yaxis<span style="color:#ff79c6">.</span>tick_left()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ax<span style="color:#ff79c6">.</span>autoscale()
</span></span><span style="display:flex;"><span>    plt<span style="color:#ff79c6">.</span>tight_layout()
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4"># plt.show()</span>
</span></span><span style="display:flex;"><span>    plt<span style="color:#ff79c6">.</span>savefig(fout, bbox_inches<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;tight&#39;</span>)
</span></span></code></pre></div><ul>
<li>程式碼解釋
<ul>
<li>[10], [11] 會有兩個 name 主要是因為讀取時的欄位名稱不能有特殊符號，所以在繪製時才綁定顯示名稱 [31]</li>
<li>[12] 某些資料要跳過但是檔案裡還是會有</li>
<li>[13] 哪些需要標出資料標籤的數值</li>
<li>[14] 哪些資料點需要特別用圓點標記</li>
<li>[37] <code>f&quot;{y:.1f}&quot;</code> 可設定資料標籤輸出格式，例如: 取到小數點第一位。<code>x-0.0*x, y-0.2*y</code> 後方有減去一個位移是用來避免線段與資料標籤重疊</li>
<li>[46] 一般論文中的圖表標題是用 Latex 語法 (caption) 來定義，所以生成時不需要，不過若是要拿來做簡報的話有標題會比較好。</li>
<li>[48] ~ [56] 設定 x、y 軸資訊</li>
<li>[61] 存成 pdf</li>
</ul>
</li>
<li>成果<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXIabK6jEA9LyeJs0waYEXbROoY0OIfFGN8i2JckUubn_eMd6YrGWZsLjEnhiH0_oym_7TYHVlbima_KBLsDxEQhmB_tYKyDcAI0pPFcQkJKsxVrcHxbMcuxaARAGxk9kaNiI3HA_nRXbia5RuxmjnJLQ=w1738-h1301-no" alt='折線圖' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">折線圖</center>
    </figcaption>
  </figure>
</li>
</ul>
<p>[2021.08.13] 修正 linestyle</p>
<h1 id="其他" class="article-heading">其他 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>用 Matplotlib 在一個 Figure 中塞入多個 Axes 是可以的，不過我目前遇到的都是用 Latex 的 minipage 來完成，這樣就可以有各自的 label 可以分開 ref。如下，不過這就有點離題了。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>[tbh!]
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\centering</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.47<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/A.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>AAA<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:A<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\qquad</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\begin</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>[t]<span style="color:#8be9fd;font-style:italic">{</span>.47<span style="color:#ff79c6">\linewidth</span><span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\includegraphics</span><span style="color:#50fa7b">[width=\linewidth]</span><span style="color:#8be9fd;font-style:italic">{</span>figures/B.pdf<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\captionof</span><span style="color:#8be9fd;font-style:italic">{</span>figure<span style="color:#8be9fd;font-style:italic">}{</span>BBB<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">\label</span><span style="color:#8be9fd;font-style:italic">{</span>fig:B<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>minipage<span style="color:#8be9fd;font-style:italic">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">\end</span><span style="color:#8be9fd;font-style:italic">{</span>table<span style="color:#8be9fd;font-style:italic">}</span>
</span></span></code></pre></div><h1 id="錯誤排除" class="article-heading">錯誤排除 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8c%af%e8%aa%a4%e6%8e%92%e9%99%a4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="filenotfounderror-missing-font-metrics-file-rsfs10" class="article-heading"><code>FileNotFoundError: missing font metrics file: rsfs10</code> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#filenotfounderror-missing-font-metrics-file-rsfs10">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Solution  </p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; <span style="color:#8be9fd;font-style:italic">miktex-maketfm</span>.exe rsfs10
</span></span></code></pre></div><h2 id="permissionerror-errno-13-permission-denied-resultpdf" class="article-heading"><code>PermissionError: [Errno 13] Permission denied: 'result.pdf'</code> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#permissionerror-errno-13-permission-denied-resultpdf">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>輸出覆寫 pdf 時有視窗開著該檔案，把 result.pdf 關掉即可。</p>
 
        ]]></description></item><item><title>Use VSCode to Write LaTeX Paper</title><link>https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/</link><pubDate>Wed, 11 Aug 2021 13:50:05 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/</guid><description><![CDATA[
           <br/><p>記錄一下如何用 VSCode 寫 paper</p>
          
            <p><a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/"><img src="https://images.unsplash.com/photo-1532153975070-2e9ab71f1b14?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210811-use-vscode-to-write-latex-paper/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>記錄一下如何用 VSCode 寫 paper</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>為了測完整的安裝流程，我用 virtualbox 裝了一個乾淨的 windows 10。記錄到可以編譯 latex 的最簡化流程就好，所以本篇的終端機使用的是 powershell 而不是 WSL。在 Ubuntu 理論上也可以套用這個方法，不過安裝的套件就不同，例如: MikTex 就要換成 Tex Live  。</p>
<p>本篇範例使用 ACM 釋出的模板  ，因此 IEEE 或是學校畢業論文的模板可能會有所不同。</p>
<p>因為圖太多了，所以使用 &ldquo;示意圖&rdquo; 按鈕來隱藏圖片，想參考時打開即可。</p>
<h2 id="latex-cheat-sheet" class="article-heading">LaTeX Cheat sheet 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#latex-cheat-sheet">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><a href="https://www.andy-roberts.net/writing/latex/formatting" title="Getting to Grips with LaTeX" aria-label="Getting to Grips with LaTeX"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Getting to Grips with LaTeX</a></li>
<li><a href="https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols" title="List of LaTeX mathematical symbols" aria-label="List of LaTeX mathematical symbols"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> List of LaTeX mathematical symbols</a></li>
<li><a href="https://www.tablesgenerator.com/latex_tables#" title="Latex Tables Generator" aria-label="Latex Tables Generator"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Latex Tables Generator</a></li>
</ul>
<h1 id="安裝套件" class="article-heading">安裝套件 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d%e5%a5%97%e4%bb%b6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>安裝順序應該沒關係，本篇測試順序是 VSCode → MikTex → Perl。</p>
<h2 id="perl" class="article-heading">Perl 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#perl">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這裡直接安裝推薦的版本: <a href="https://strawberryperl.com/" title="Strawberry Perl" aria-label="Strawberry Perl"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Strawberry Perl</a>，選 64-bit 版本。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXs_PdqsqpM2mkMvhICdIe37zPtDQsvKfVtuWNfwjcUk2SnzbBnOkSrtPApkKZjIJonrr2POWGVmwTJLCj-BbRQA5z_ZakRrts1mL_9yUm4woKKtn6sO9ivljF58cjZaaZEaOmZ8-lhTREJW6uBRxV4BQ=w1600-h1200-no" alt='Strawberry Perl' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Strawberry Perl</center>
    </figcaption>
  </figure>
</p>

</details>
<h2 id="miktex" class="article-heading">MikTex 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#miktex">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這個是 Latex 編譯器包，安裝網址: <a href="https://miktex.org/download" title="https://miktex.org/download" aria-label="https://miktex.org/download"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://miktex.org/download</a>。</p>
<p>安裝完後會跳出提醒來安裝所有更新。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUyFhHoqLOl0ud9GfH2YxuUAQGRPdyNVWIaO4NB9AhaxmKnLUdBhxyiW7750RNHiqIlYTj1IUAzfDFqPOy_XDyvvF3Lb4XW8hv5JOo2tm4L-UI6Q0tvlyaUe_G_SIobWkL8FLf_VFUHu70ZCP1kQE8aBQ=w1600-h1200-no" alt='安裝所有更新' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">安裝所有更新</center>
    </figcaption>
  </figure>
</p>

</details>
<p>打開 powershell 輸入 <code>latexmk.exe</code> 確認安裝正確。可能會先跳出一個視窗要安裝新套件，點選 install 即可。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV2gfq28ff0fnfv74PB_m6DHG-hl9a4wgEfxOdrQ2idrQoNu52LWlBXMjtmngSETOVxsKiHrFO4YI0npZ5UMw_FRvyMkzYdd3AIIa3oBGazrXP1hJqwL2PYAGh4tOV9SS-iUhMq5zZZu-N8ofNGYn0W6w=w1600-h1200-no" alt='powershell' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">powershell</center>
    </figcaption>
  </figure>
</p>

</details>
<h2 id="vscode" class="article-heading">VSCode 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vscode">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>建議安裝時打開 &ldquo;以 Code 開啟&rdquo; 的功能。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXlBw7vOU2XUjDrJR7KfMSu416nevszajoo2n9NAHIKO58wgb7xrkPdbewM3lvoXGzCZTZXAx7cGxIdlEDYWqXAv4TcdkvhjOCFKXt-aA8jpgvXWcovW56py_GJD2jvhNkNCV4KcZEAJxBOeRPdmdwmqg=w1600-h1200-no" alt='以 Code 開啟' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">以 Code 開啟</center>
    </figcaption>
  </figure>
</p>

</details>
<h3 id="外掛" class="article-heading">外掛 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%96%e6%8e%9b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>理論上必要的只有 latex-workshop，其他的選用。</p>
<ul>
<li>james-yu.latex-workshop</li>
<li>mhutchie.git-graph</li>
<li>coenraads.bracket-pair-colorizer</li>
<li>valentjn.vscode-ltex: 英文文法檢查，需要安裝 Java</li>
<li>vscode-icons-team.vscode-icons</li>
</ul>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUhazz8sW9uiCIu6fkCbTaBQXRJu2-a2Il_r6qWN_EjoWCqvqxHrP-DY_e7JQ8GITghx60BCYwzQ5eamEfv2ni1zbVps5rT2CV_y9CkRgEAuPwJCrZFv4j9g0VC7PO3IiAmeCo-gQyuNX04jEhRX76kIg=w1600-h1200-no" alt='vscode 外掛' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">vscode 外掛</center>
    </figcaption>
  </figure>
</p>

</details>
<h3 id="針對-latex-文字顯示設定" class="article-heading">針對 latex 文字顯示設定 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%9d%e5%b0%8d-latex-%e6%96%87%e5%ad%97%e9%a1%af%e7%a4%ba%e8%a8%ad%e5%ae%9a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>使用 <code>Ctrl-Shift-P</code>，輸入 setting，打開 json 檔。可加入如下設定，這樣只會針對 latex 設定，而不會影響程式編輯。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">&#34;[latex]&#34;</span>: {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.fontSize&#34;</span>: <span style="color:#bd93f9">18</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.fontFamily&#34;</span>: <span style="color:#f1fa8c">&#34;&#39;Georgia&#39;&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.lineNumbers&#34;</span>: <span style="color:#f1fa8c">&#34;on&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.wordWrap&#34;</span>: <span style="color:#f1fa8c">&#34;bounded&#34;</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.letterSpacing&#34;</span>: <span style="color:#bd93f9">0.1</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.lineHeight&#34;</span>: <span style="color:#bd93f9">38</span>,
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">&#34;editor.formatOnSave&#34;</span>: <span style="color:#ff79c6">false</span>,
</span></span><span style="display:flex;"><span>    },
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div> 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVyoAzzgE5xs4JLPpuXtcx8_CPKlIfKZmtu-an-S94W5TUdBtUJ_A904RSGZEK0G4JZMC9gD4C9GOO4tiZnXs-lU3qfuwiAcE303UhtyN7cunSkswmlUwiPsSLkrvnt1DribaWwWPFAFX_U-kP-I1sy8Q=w1600-h1200-no" alt='setting.json' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">setting.json</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV1YqPWPVOaUPtlh4ZeC4j4SrbcJKeRRDDVnk9MT4627oJVYfFIxPVpmICFv8-EQg1lyCv76dN0cIA8HtSdbmyp6rgTQ6ESejTwpxXoiJSnY9oUqo0mwo43U-dS6U_quVyzinCgdVcj7yY7suNaXAL5HA=w1600-h1200-no" alt='latex setting' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">latex setting</center>
    </figcaption>
  </figure>
</p>

</details>
<h1 id="範例" class="article-heading">範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這裡直接使用 git 來拉範例 (使用 ACM 模板)，因此會需要用到 git，可直接安裝 <a href="https://gitforwindows.org/" title="git for windows" aria-label="git for windows"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> git for windows</a>，或直接上 github 下載也可以。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVzP-_HMuTJhu1eGgAI1OJVBik9t1idYqKj9GdBjiBIuRgPaVohradkWO3RzPDmIpTVodYZ6_S2T9OJ64XYorCieaPqS3DCEmfw6LZkEPBEEbLyD3KRIWd_qeQmLjVYkMVCcbTqZakB5v29B8qR3ZMaCQ=w1600-h1200-no" alt='git for windows' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">git for windows</center>
    </figcaption>
  </figure>
</p>

</details>
<p>直接在 powershell 執行下面指令 (前方 <code>&gt;</code> 不需要複製)，就會看到 vscode 打開範例資料夾。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>&gt; git clone https://github.com/aben20807/<span style="color:#8be9fd;font-style:italic">paper-template</span>.git
</span></span><span style="display:flex;"><span>&gt; code .\<span style="color:#8be9fd;font-style:italic">paper-template</span>\
</span></span></code></pre></div><p>點開 paper.tex 檔案後，左方會出現 TEX 的圖示，點開後執行編譯的 recipe (最長那個)。這時候會跳出安裝套件的視窗。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLWp9ZNMNj-yePUCWIj1AvQquVNlK6QYqXWTje1vL6U7JN8fC4OuqhFdhyIIgDlD4ydMI-x_Gvu2hqWEE49NDhQgIbmJoLqsM8VAkiz5Q5eaBCBCMSU-z1EX6KiJfcX-WomSZokxHHJNZhgnZrSUAE9kSg=w1600-h1200-no" alt='編譯' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">編譯</center>
    </figcaption>
  </figure>
</p>

</details>
<p>如果不想要一個一個點的話可以從開始選單中找 &ldquo;MiKTex Console&rdquo;，在 setting 中把自動安裝套件改成 Always。</p>
 

<details>
  <summary><span>示意圖 </span></summary>
  <p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLXm4NBSLxHqiFM2ISIUKqJ-p8IFzCb9wQRMBwxU1VCrCUqRTNFpc8zwqWGonri1KFM0uQY7WNGgBMVwolb4dYcpMWBbFiSrjtOmaAKbM0ImvtpnmcpOoW8515RVAH9nRgZVWySfY0eBe_pzi16mM6mh0w=w1600-h1200-no" alt='MiKTex Console' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">MiKTex Console</center>
    </figcaption>
  </figure>
</p>

</details>
<p>最後就成功把範例編譯完成</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVawO6vCeLTqrKvREekjNGd0G-Ogq9g4OBBtJlNmtsNcA_C75WBFS5qPZgrVK97JjQO05GU9HPMIrLMQpINWsLKDDczZayHama0igM0yuOJqkbp7GXE9Lz3IihhuCRfivOfhvtI6jpUfcXWmkcz60BJLg=w1600-h1200-no" alt='完成' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">完成</center>
    </figcaption>
  </figure>
</p>
<h1 id="錯誤排除" class="article-heading">錯誤排除 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8c%af%e8%aa%a4%e6%8e%92%e9%99%a4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>有時候 pdf viewer 在編譯後不會自動更新，這時候要先關閉那個分頁，再重新打開即可。</li>
<li>編譯失敗時會出現打開錯誤訊息的視窗，或是可以直接開啟 LaTeX Compiler 的 Output，如上圖 (完成) 下方視窗所示。</li>
</ul>
 
        ]]></description></item><item><title>使用 FileLocator 在資料夾中搜尋文件內容</title><link>https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/</link><pubDate>Fri, 06 Aug 2021 15:20:27 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/</guid><description><![CDATA[
           <br/><p>知識實在不容易累積</p>
          
            <p><a href="https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/"><img src="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210806-search-text-in-multiple-files/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>知識實在不容易累積</p>
<p>這其實是我個人覺得，不知道其他人感覺?</p>
<p>為何不容易累積?</p>
<p>最主要原因就是沒有一個好的管理系統來整理這些知識，而時間一久自然就逐漸忘記，自已最近就很常遇到明明就看過且解決過，但是臨時遇到相同問題時無法找到當時解決的方法，只好再重新來一遍，來來回回已經耗費許多時間。</p>
<p>因此我現在遇到問題時，在解決過程我就盡量把所有步驟都寫起來，但是不是很完整的整理，就僅是將使用到的參考網址、指令流程複製下來放到文件或報告投影片 (利用隱藏投影片)，這樣做法一來快速方便，二來與報告放在一起可以做最大化的連結效果。</p>
<p>然而，時間一久就會發現要在這些報告中搜尋內容不太容易，因為這些檔案大多不是純文字檔，例如: word、ppt，最暴力的方法就一個一個檔案開起來然後用 Ctrl-F 輸入關鍵字搜尋，真的不太方便。如果是純文字檔 (txt, md) 可以用 <code>ag</code> (silversearcher-ag  ) 或是直接用 vscode 開啟資料夾來搜尋。</p>
<p>也是因為這樣我某些時段就會想把這些報告改成用 markdown，但是做投影片又離不開 ppt、google slide，所以後來才找到這個可以直接搜尋資料夾內所有檔案的方法。我所使用的是 FileLocator Lite  (雖然有 pro 的試用期，但是我選 Lite，不過不確定是否被迫強制試用，希望不要 QuQ)。</p>
<p>這裡示範一下在資料夾中找出有提及 &ldquo;memcheck&rdquo; 的文件，可以限制文件的種類，但注意要用分號 <code>;</code> 隔開，目標資料夾也同理。比較可惜是搜尋字串不能用正規表達式。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVrBASd3V8HLIHeqrvn951PzqHkaT2Nxy2HUbNrmY_6L4IKCw3IeDoz5KLsYeTDwP0o7-RPpS6zvPRAkFafKuVD5cztcOOvXGgwpG9QzYSDIzo0LkbNgU0bwjd4rnGQ-eXIY0jtaRfx_P70FpC97Po3Wg=w1245-h870-no" alt='搜尋範例' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">搜尋範例</center>
    </figcaption>
  </figure>
</p>
<p>找出檔案後，我還是點開然後用 Ctrl-F 搜尋，不過比原先的 &ldquo;遍歷搜尋法&rdquo; 快多了。</p>
 
        ]]></description></item><item><title>Build a Simple Compiler Ep3</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/</link><pubDate>Thu, 22 Jul 2021 20:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/</guid><description><![CDATA[
           <br/><p>指令生成 (Codegen)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/"><img src="https://images.unsplash.com/photo-1534631615537-d8f2af94b6ae?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>指令生成 (Codegen)</p>
<ul>
<li>Series: <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/" title="[ep0]" aria-label="[ep0]" >[ep0]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/" title="[ep1]" aria-label="[ep1]" >[ep1]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/" title="[ep2]" aria-label="[ep2]" >[ep2]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/" title="[ep3]" aria-label="[ep3]" >[ep3]</a></li>
<li>Source code: <a href="https://github.com/aben20807/learn_compiler" title="aben20807/learn_compiler" aria-label="aben20807/learn_compiler"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/learn_compiler</a></li>
</ul>
<h1 id="指令生成-codegen" class="article-heading">指令生成 (Codegen) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%87%e4%bb%a4%e7%94%9f%e6%88%90-codegen">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p><del>由於是簡化版的編譯器</del>，我們不產生中間的表達式 (Intermediate representation, IR)  ，也不會有 Abstract syntax tree (AST)  ，而是直接利用上一篇的螢幕輸出改成對應的 Java bytecode 指令  。有興趣的可以去參考完整列表   看有支援什麼神奇功能。會寫 Java 的也可以參考如何使用反組譯的方式   找出對應的 bytecode 來觀察行為。</p>
<h1 id="jasmin" class="article-heading">Jasmin 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#jasmin">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Jasmin   為一 JVM 的組譯器，其會將可讀指令形式的 bytecode 轉換成 .class 的形式 (可執行的 bytecode)。</p>
<h2 id="j-檔格式" class="article-heading"><code>.j</code> 檔格式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#j-%e6%aa%94%e6%a0%bc%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>開頭及結尾如下，只需要在一開始開檔時就寫入開頭，等到全部指令產生完畢，離開前再寫入結尾即可。</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-asm" data-lang="asm"><span style="display:flex;"><span><span style="color:#50fa7b">.source</span> bytecode.j
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.class</span> public Main
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.super</span> java/lang/Object
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.method</span> public static main([Ljava/lang/String<span style="color:#6272a4">;)V
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>.limit stack <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.limit</span> locals <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">; generated instructions
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	
</span></span><span style="display:flex;"><span>    <span style="color:#50fa7b">return</span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.end</span> method
</span></span></code></pre></div><h1 id="完整程式碼" class="article-heading">完整程式碼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>仔細看的話就會發現跟 ep2 的程式碼幾乎差不多，只有加了寫檔把對應操作的指令寫入 bytecode.j。</p>

<div class="alert-block">

  <div class="danger-title"><i class="fa fa-times-circle"></i></div>
  <div class="alert danger-msg">
    下方程式碼的 symbol table 為求簡單所以使用一維陣列實作，僅適用於本範例，容易造成記憶體錯誤且無法套用至多層級的 scope，所以請勿學習。
  </div>

</div>
<ul>
<li><code>mycompiler.y</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">/*	Definition section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>{
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">//Extern variables that communicate with lex
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&#34;common.h&#34; </span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>    <span style="color:#6272a4">// #define YYDEBUG 1
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#6272a4">// int yydebug = 1;
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">int</span> yylineno;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">yylex</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> FILE <span style="color:#ff79c6">*</span>yyin;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">yyerror</span> (<span style="color:#8be9fd">char</span> <span style="color:#ff79c6">const</span> <span style="color:#ff79c6">*</span>s)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;error:%d: %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yylineno, s);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">#define codegen(...) \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">        do { \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">            for (int i = 0; i &lt; indent_cnt; i++) { \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">                fprintf(fout, &#34;\t&#34;); \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">            } \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">            fprintf(fout, __VA_ARGS__); \
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">        } while (0)
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Symbol table function */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">create_symbol</span>(<span style="color:#6272a4">/* ... */</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">insert_symbol</span>(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">lookup_symbol</span>(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">dump_symbol</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#50fa7b">get_op_name</span>(op_t op) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">switch</span> (op) {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_ADD</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;ADD&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_SUB</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;SUB&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_MUL</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;MUL&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_DIV</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;DIV&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">default</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;unknown&#34;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#50fa7b">get_op_instruction</span>(op_t op) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">switch</span> (op) {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_ADD</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;iadd&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_SUB</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;isub&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_MUL</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;imul&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_DIV</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;idiv&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">default</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;unknown&#34;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Global variables */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> example_symbol_cnt <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">#define MAX_SYMBOL_NUM 10
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>example_symbol[MAX_SYMBOL_NUM] <span style="color:#ff79c6">=</span> {};
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> indent_cnt <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; <span style="color:#6272a4">// control the number of ident in bytecode
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    FILE<span style="color:#ff79c6">*</span> fout <span style="color:#ff79c6">=</span> <span style="color:#8be9fd;font-style:italic">NULL</span>;
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>error<span style="color:#ff79c6">-</span>verbose
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Use variable or self-defined structure to represent
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"> * nonterminal and token type
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"> */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span><span style="color:#ff79c6">union</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> val;
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>id_name;
</span></span><span style="display:flex;"><span>    op_t op;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Token without return */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token DECL PRINT NEWLINE
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Token with return, which need to sepcify type */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token <span style="color:#ff79c6">&lt;</span>val<span style="color:#ff79c6">&gt;</span> NUMLIT
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token <span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span> IDENT
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Nonterminal with return, which need to sepcify type */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>type <span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span> AddOp MulOp
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Yacc will start at this nonterminal */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>start Program
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Grammar section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Program</span>
</span></span><span style="display:flex;"><span>    : StatementList
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">StatementList</span>
</span></span><span style="display:flex;"><span>    : Statement StatementList
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span>
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Statement</span>
</span></span><span style="display:flex;"><span>    : DeclStmt
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> PrintStmt
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">DeclStmt</span>
</span></span><span style="display:flex;"><span>    : DECL IDENT <span style="color:#f1fa8c">&#39;=&#39;</span> Expression NEWLINE {
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd">int</span> ref <span style="color:#ff79c6">=</span> insert_symbol($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;IDENT %s, ref: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>, ref);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;STORE</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        free($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;istore %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, ref);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">PrintStmt</span>
</span></span><span style="display:flex;"><span>    : PRINT Expression NEWLINE {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;PRINT</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;getstatic java/lang/System/out Ljava/io/PrintStream;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;swap</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;invokevirtual java/io/PrintStream/print(I)V</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Expression</span>
</span></span><span style="display:flex;"><span>    : AddExpr
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">AddExpr</span>
</span></span><span style="display:flex;"><span>    : AddExpr AddOp MulExpr {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_name($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_instruction($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> MulExpr
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">AddOp</span>
</span></span><span style="display:flex;"><span>    : <span style="color:#f1fa8c">&#39;+&#39;</span>  {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_ADD;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;-&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_SUB;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">MulExpr</span>
</span></span><span style="display:flex;"><span>    : MulExpr MulOp Operand {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_name($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_instruction($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> Operand
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">MulOp</span>
</span></span><span style="display:flex;"><span>    : <span style="color:#f1fa8c">&#39;*&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_MUL;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;/&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_DIV;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Operand</span>
</span></span><span style="display:flex;"><span>    : NUMLIT {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;NUMLIT %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>val<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;ldc %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>val<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> IDENT {
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd">int</span> ref <span style="color:#ff79c6">=</span> lookup_symbol($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;IDENT %s, ref: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>, ref);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;LOAD</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        free($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>        codegen(<span style="color:#f1fa8c">&#34;iload %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, ref);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;(&#39;</span> Expression <span style="color:#f1fa8c">&#39;)&#39;</span>
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* C code section */</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> main(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[])
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (argc <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">2</span>) {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> fopen(argv[<span style="color:#bd93f9">1</span>], <span style="color:#f1fa8c">&#34;r&#34;</span>);
</span></span><span style="display:flex;"><span>    } <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> stdin;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Codegen output init */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>bytecode_filename <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;bytecode.j&#34;</span>;
</span></span><span style="display:flex;"><span>    fout <span style="color:#ff79c6">=</span> fopen(bytecode_filename, <span style="color:#f1fa8c">&#34;w&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.source bytecode.j</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.class public Main</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.super java/lang/Object</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.method public static main([Ljava/lang/String;)V</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.limit stack 10</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.limit locals 10</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    indent_cnt<span style="color:#ff79c6">++</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    create_symbol();
</span></span><span style="display:flex;"><span>    yyparse();
</span></span><span style="display:flex;"><span>    dump_symbol();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Codegen end */</span>
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;return</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    indent_cnt<span style="color:#ff79c6">--</span>;
</span></span><span style="display:flex;"><span>    codegen(<span style="color:#f1fa8c">&#34;.end method</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    fclose(fout);
</span></span><span style="display:flex;"><span>    fclose(yyin);
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;Total lines: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yylineno);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> create_symbol()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Create symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">// do nothing...
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> insert_symbol(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Insert {%s} into symbol table; assign it as ref {%d}</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, 
</span></span><span style="display:flex;"><span>        id_name, example_symbol_cnt);
</span></span><span style="display:flex;"><span>    example_symbol[example_symbol_cnt] <span style="color:#ff79c6">=</span> strdup(id_name);
</span></span><span style="display:flex;"><span>    example_symbol_cnt<span style="color:#ff79c6">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> example_symbol_cnt <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> lookup_symbol(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Lookup in symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> example_symbol_cnt; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> (strcmp(id_name, example_symbol[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">return</span> i;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;{%s} not found in symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> dump_symbol()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Dump symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> example_symbol_cnt; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>        free(example_symbol[i]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="測試範例" class="article-heading">測試範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>input/in01.lc</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>decl x = 1 + 4
</span></span><span style="display:flex;"><span>decl y = 2
</span></span><span style="display:flex;"><span>decl num = x + y * (3 + 5)
</span></span><span style="display:flex;"><span>print num
</span></span></code></pre></div><ul>
<li>Result (其他檔案，如 Makefile 請參考 Source code):</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ make
</span></span><span style="display:flex;"><span>$ ./mycompiler &lt; input/in01.lc
</span></span><span style="display:flex;"><span>$ java -jar jasmin.jar -g bytecode.j
</span></span><span style="display:flex;"><span>Generated: Main.class
</span></span><span style="display:flex;"><span>$ java Main
</span></span><span style="display:flex;"><span>21
</span></span></code></pre></div> 
        ]]></description></item><item><title>Build a Simple Compiler Ep2</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/</link><pubDate>Thu, 22 Jul 2021 19:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/</guid><description><![CDATA[
           <br/><p>語法剖析器 (Parser)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/"><img src="https://images.unsplash.com/photo-1445294211564-3ca59d999abd?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>語法剖析器 (Parser)</p>
<ul>
<li>Series: <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/" title="[ep0]" aria-label="[ep0]" >[ep0]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/" title="[ep1]" aria-label="[ep1]" >[ep1]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/" title="[ep2]" aria-label="[ep2]" >[ep2]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/" title="[ep3]" aria-label="[ep3]" >[ep3]</a></li>
<li>Source code: <a href="https://github.com/aben20807/learn_compiler" title="aben20807/learn_compiler" aria-label="aben20807/learn_compiler"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/learn_compiler</a></li>
</ul>

<div class="alert-block">

  <div class="info-title"><i class="fa fa-info-circle"></i></div>
  <div class="info-msg db">
    <p>從文章長度跟作業繳交期限就可以知道 parser 的難度遠大於 scanner，所以請提早動手開始，<del>雖然不斷宣導下還是一定有人會不信邪前一個禮拜才開始</del>。</p>
  </div>

</div>
<h1 id="語法剖析器-parser" class="article-heading">語法剖析器 (Parser) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%9e%e6%b3%95%e5%89%96%e6%9e%90%e5%99%a8-parser">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>與詞法分析器 (Scanner) 相同，這裡我們仰賴語法剖析器產生器來建構符合我們定義文法的語法剖析器。</p>
<p>由於我們再來會使用到的 JVM 功能是屬於 stack-based 的 virtual machine  ，所以在語法剖析時就要預先考慮產生對應的指令順序。</p>
<h2 id="bison-yacc-三大區塊" class="article-heading">bison (yacc) 三大區塊 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#bison-yacc-%e4%b8%89%e5%a4%a7%e5%8d%80%e5%a1%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這裡其實與上一篇幾乎相同 (用 <code>%%</code> 切了三個區塊出來)，只是中間區塊從 Rules section 換成 Grammar section，用來定義文法。</p>
<p>寫法如下，其實跟課本學到的文法表示差不多只是換個符號表示。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Parent</span>
</span></span><span style="display:flex;"><span>    : Child1 Child2 Child3
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> Child4
</span></span><span style="display:flex;"><span>;
</span></span></code></pre></div><h2 id="action" class="article-heading">Action 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#action">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Action   可以在 parse 過程中插入某些定義的動作，如下方程式範例中大括號部分。可以看到並不限於在最後方加上，也可以在 child 間加上 action。所以在建構不同層的 symbol table 時可以利用這個特性。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Parent</span>
</span></span><span style="display:flex;"><span>    : Child1 {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;after reducing Child1; before reducing Parent&#34;</span>);
</span></span><span style="display:flex;"><span>    } Child2 Child3 {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;reduce Parent!&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> Child4 {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;reduce Parent from Child4&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span></code></pre></div><h2 id="利用-semantic-value-將下方資訊向上傳遞" class="article-heading">利用 Semantic value 將下方資訊向上傳遞 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%a9%e7%94%a8-semantic-value-%e5%b0%87%e4%b8%8b%e6%96%b9%e8%b3%87%e8%a8%8a%e5%90%91%e4%b8%8a%e5%82%b3%e9%81%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>為了向上傳遞資訊，bison (yacc) 提供了這項功能，讓下方的 action 可以用 <code>$$</code> 來作為回傳值，而上方的 action 可以用 <code>$1</code>, <code>$2</code> 來存取對應來自下方的回傳值。要使用這項功能需要注意需要在 Definition section 宣告相關的型別 (包含 <code>%union</code>, <code>%token</code>, <code>%type</code>)   。另外，數字所表示的位子需要把 action 也計算進去，如下方範例第一個 rule <code>$1</code> 來自 <code>Child1</code>; <code>$2</code> 來自 <code>Child1</code> 的 action, <code>$3</code> 來自 <code>Child2</code>, <code>$4</code> 來自 <code>Child3</code>。換 rule 則再從 1 開始，如 <code>$1</code> 來自 <code>Child4</code>。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Parent</span>
</span></span><span style="display:flex;"><span>    : Child1 {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;after reducing Child1; before reducing Parent&#34;</span>);
</span></span><span style="display:flex;"><span>    } Child2 Child3 {
</span></span><span style="display:flex;"><span>        $$ <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">123</span> <span style="color:#ff79c6">+</span> $<span style="color:#bd93f9">1</span> <span style="color:#ff79c6">+</span> $<span style="color:#bd93f9">3</span> <span style="color:#ff79c6">+</span> $<span style="color:#bd93f9">4</span>;
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;reduce Parent!&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> Child4 {
</span></span><span style="display:flex;"><span>        $$ <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">4</span> <span style="color:#ff79c6">+</span> $<span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;reduce Parent from Child4&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span></code></pre></div><h1 id="symbol-table" class="article-heading">Symbol table 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#symbol-table">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>由於硬體 (或是虛擬機器) 是看不懂你程式所寫的 <code>x</code>, <code>y</code> 變數，所以編譯器需要給這些變數一個位址 (address) 或是參考 (reference) 來代表不同的變數 (因為 JVM 常用參考來說明，所以這裡以後者來表示這個專有名詞)，因此 symbol table 最大用意就在生成 &ldquo;變數&rdquo; 與 &ldquo;參考&rdquo; 的一對一對應表，當有 scope 的概念時必須考慮變數是否在外層已經被定義並且從中獲取對應的參考，再來就是作業會遇到的內容就不多加贅述，不過可以提示: 是要利用 linked list 來實作 (沒意外大二資料結構就教過)。</p>
<h1 id="stack-based" class="article-heading">Stack-based 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#stack-based">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="運算範例" class="article-heading">運算範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>利用 Stack-based 的運算可以大幅減少硬體的相依性，也因為 JVM 採用這個運算模式，所以我們產生的指令需要符合可執行的順序。下圖簡單示範一個加法的運作流程，左方為對應的虛擬指令，①: 第 1,2 行會把 x 變數存放的值放入 stack；②: y 也放入後遇到第 5 行的加法運算，因此將 stack 中兩個值 pop 出來進行加法運算；③: 最後將運算結果放回。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVeUXwOtg_rkDa19Jd4yQ7AT2_7Ijf_6iQhaDiplgQf4-ZrvVvvl50lP0o2d3aime409KsaCtxmeyr4VN5_jZNaiFm0fBwazef5yNccep0_4hCuYok2BtO8qH9eMgOF_za2GpGjZONQGY-C6f40kMuFhQ=w611-h332-no" alt='Stack 版本的運算' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Stack 版本的運算</center>
    </figcaption>
  </figure>
</p>
<p><strong>進階版本</strong> <code>decl num = x + y * (3 + 5)</code> 應該要產生如下的指令順序，則在 JVM 執行流程會是: 第一個遇到的運算是 <code>ADD</code>，所以 <code>3</code>、<code>5</code> 做完後放回 <code>8</code>，再來是 <code>MUL</code>，就是剛剛放回的 <code>8</code> 與 <code>y</code>，依此類推，最後才將結果存到 <code>num</code> 中</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>IDENT x, ref: 0
</span></span><span style="display:flex;"><span>LOAD
</span></span><span style="display:flex;"><span>IDENT y, ref: 1
</span></span><span style="display:flex;"><span>LOAD
</span></span><span style="display:flex;"><span>NUMLIT 3
</span></span><span style="display:flex;"><span>NUMLIT 5
</span></span><span style="display:flex;"><span>ADD
</span></span><span style="display:flex;"><span>MUL
</span></span><span style="display:flex;"><span>ADD
</span></span><span style="display:flex;"><span>IDENT num, ref: 2
</span></span><span style="display:flex;"><span>STORE
</span></span></code></pre></div><h2 id="轉成-stack-based-順序" class="article-heading">轉成 stack-based 順序 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bd%89%e6%88%90-stack-based-%e9%a0%86%e5%ba%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這裡就不包含詳細的從頭教學，這裡示範怎麼透過 action 來將原先的順序轉換成 stack-baced 順序。根據輸入的字串 <code>x * 2</code>，parser 會以同樣的順序跑過，符合可以 reduce 時才會向上合併，例如，<code>MulExpr</code> (從 <code>IDENT</code> ① 來), <code>MulOp</code>, <code>Operand</code> (從 <code>NUMLIT</code> ② 來) 都走過就會 reduce 成 <code>MulExpr</code> 接著執行它的 action ③。為了在 ③ 才印出運算子，這裡我們需要在 ③ 時知道下方上來的運算子是哪一個，因此利用上面提到的 <a href="#%e5%88%a9%e7%94%a8-semantic-value-%e5%b0%87%e4%b8%8b%e6%96%b9%e8%b3%87%e8%a8%8a%e5%90%91%e4%b8%8a%e5%82%b3%e9%81%9e" title="Semantic value" aria-label="Semantic value" >Semantic value</a> 來傳遞 (注意 <code>%union</code> 中有 <code>op</code> 這個欄位，中間使用到 <code>\$&lt;op&gt;\$</code> 代表指定的回傳型別) 讓 ③ 的 <code>\$2</code> 獲得運算子資訊。所以就會達到先印出 <code>x</code> 的參考及數字 <code>2</code> 後再印出運算子類型。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW6ZMC2XfsnZg8jHI64e3dKCSezHqXX3QGtvRlmC9ZN2z8isdz0fU7BpkalJRei9VrdiOMPcYX1J_cacpu3iiXN3EZaQPNdEoc72iKKLKHpykzNxfMX7wjvUHBtGh18vRx389qK2SxuOU-028GIcUStCw=w1371-h821-no" alt='action 被執行的步驟' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">action 被執行的步驟</center>
    </figcaption>
  </figure>
</p>
<h1 id="程式碼除錯" class="article-heading">程式碼除錯 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a8%8b%e5%bc%8f%e7%a2%bc%e9%99%a4%e9%8c%af">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有時候想要確認 shift、reduce 的中間過程可以加入下方兩行程式，不過就需要自行簡化輸入的程式不然會資訊量過多難以觀察。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#define YYDEBUG 1
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#8be9fd">int</span> yydebug <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">1</span>;
</span></span></code></pre></div><h2 id="測試範例" class="article-heading">測試範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>decl x = 2
</span></span></code></pre></div> 

<details>
  <summary><span>輸出內容太多請點擊查看 </span></summary>
  <div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ ./mycompiler &lt; input/in02.cl
</span></span><span style="display:flex;"><span>&gt; Create symbol table
</span></span><span style="display:flex;"><span>Starting parse
</span></span><span style="display:flex;"><span>Entering state 0
</span></span><span style="display:flex;"><span>Reading a token: Next token is token DECL ()
</span></span><span style="display:flex;"><span>Shifting token DECL ()
</span></span><span style="display:flex;"><span>Entering state 1
</span></span><span style="display:flex;"><span>Reading a token: Next token is token IDENT ()
</span></span><span style="display:flex;"><span>Shifting token IDENT ()
</span></span><span style="display:flex;"><span>Entering state 8
</span></span><span style="display:flex;"><span>Reading a token: Next token is token &#39;=&#39; ()
</span></span><span style="display:flex;"><span>Shifting token &#39;=&#39; ()
</span></span><span style="display:flex;"><span>Entering state 18
</span></span><span style="display:flex;"><span>Reading a token: Next token is token NUMLIT ()
</span></span><span style="display:flex;"><span>Shifting token NUMLIT ()
</span></span><span style="display:flex;"><span>Entering state 9
</span></span><span style="display:flex;"><span>Reducing stack by rule 17 (line 166):
</span></span><span style="display:flex;"><span>   $1 = token NUMLIT ()
</span></span><span style="display:flex;"><span>NUMLIT 2
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm Operand ()
</span></span><span style="display:flex;"><span>Stack now 0 1 8 18
</span></span><span style="display:flex;"><span>Entering state 15
</span></span><span style="display:flex;"><span>Reducing stack by rule 14 (line 153):
</span></span><span style="display:flex;"><span>   $1 = nterm Operand ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm MulExpr ()
</span></span><span style="display:flex;"><span>Stack now 0 1 8 18
</span></span><span style="display:flex;"><span>Entering state 14
</span></span><span style="display:flex;"><span>Reading a token: Next token is token NEWLINE ()
</span></span><span style="display:flex;"><span>Reducing stack by rule 10 (line 136):
</span></span><span style="display:flex;"><span>   $1 = nterm MulExpr ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm AddExpr ()
</span></span><span style="display:flex;"><span>Stack now 0 1 8 18
</span></span><span style="display:flex;"><span>Entering state 13
</span></span><span style="display:flex;"><span>Next token is token NEWLINE ()
</span></span><span style="display:flex;"><span>Reducing stack by rule 8 (line 128):
</span></span><span style="display:flex;"><span>   $1 = nterm AddExpr ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm Expression ()
</span></span><span style="display:flex;"><span>Stack now 0 1 8 18
</span></span><span style="display:flex;"><span>Entering state 27
</span></span><span style="display:flex;"><span>Next token is token NEWLINE ()
</span></span><span style="display:flex;"><span>Shifting token NEWLINE ()
</span></span><span style="display:flex;"><span>Entering state 31
</span></span><span style="display:flex;"><span>Reducing stack by rule 6 (line 109):
</span></span><span style="display:flex;"><span>   $1 = token DECL ()
</span></span><span style="display:flex;"><span>   $2 = token IDENT ()
</span></span><span style="display:flex;"><span>   $3 = token &#39;=&#39; ()
</span></span><span style="display:flex;"><span>   $4 = nterm Expression ()
</span></span><span style="display:flex;"><span>   $5 = token NEWLINE ()
</span></span><span style="display:flex;"><span>&gt; Insert {x} into symbol table; assign it as ref {0}
</span></span><span style="display:flex;"><span>IDENT x, ref: 0
</span></span><span style="display:flex;"><span>STORE
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm DeclStmt ()
</span></span><span style="display:flex;"><span>Stack now 0
</span></span><span style="display:flex;"><span>Entering state 6
</span></span><span style="display:flex;"><span>Reducing stack by rule 4 (line 104):
</span></span><span style="display:flex;"><span>   $1 = nterm DeclStmt ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm Statement ()
</span></span><span style="display:flex;"><span>Stack now 0
</span></span><span style="display:flex;"><span>Entering state 5
</span></span><span style="display:flex;"><span>Reading a token: Now at end of input.
</span></span><span style="display:flex;"><span>Reducing stack by rule 3 (line 100):
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm StatementList ()
</span></span><span style="display:flex;"><span>Stack now 0 5
</span></span><span style="display:flex;"><span>Entering state 17
</span></span><span style="display:flex;"><span>Reducing stack by rule 2 (line 99):
</span></span><span style="display:flex;"><span>   $1 = nterm Statement ()
</span></span><span style="display:flex;"><span>   $2 = nterm StatementList ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm StatementList ()
</span></span><span style="display:flex;"><span>Stack now 0
</span></span><span style="display:flex;"><span>Entering state 4
</span></span><span style="display:flex;"><span>Reducing stack by rule 1 (line 95):
</span></span><span style="display:flex;"><span>   $1 = nterm StatementList ()
</span></span><span style="display:flex;"><span>-&gt; $$ = nterm Program ()
</span></span><span style="display:flex;"><span>Stack now 0
</span></span><span style="display:flex;"><span>Entering state 3
</span></span><span style="display:flex;"><span>Now at end of input.
</span></span><span style="display:flex;"><span>Shifting token $end ()
</span></span><span style="display:flex;"><span>Entering state 16
</span></span><span style="display:flex;"><span>Stack now 0 3 16
</span></span><span style="display:flex;"><span>Cleanup: popping token $end ()
</span></span><span style="display:flex;"><span>Cleanup: popping nterm Program ()
</span></span><span style="display:flex;"><span>&gt; Dump symbol table
</span></span><span style="display:flex;"><span>Total lines: 2
</span></span></code></pre></div>
</details>
<h1 id="完整程式碼" class="article-heading">完整程式碼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1>
<div class="alert-block">

  <div class="danger-title"><i class="fa fa-times-circle"></i></div>
  <div class="alert danger-msg">
    下方程式碼的 symbol table 為求簡單所以使用一維陣列實作，僅適用於本範例，容易造成記憶體錯誤且無法套用至多層級的 scope，所以請勿學習。
  </div>

</div>
<ul>
<li><code>mycompiler.y</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">/*	Definition section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>{
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">// Extern variables that communicate with lex
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&#34;common.h&#34; </span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>    <span style="color:#6272a4">// #define YYDEBUG 1
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#6272a4">// int yydebug = 1;
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">int</span> yylineno;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">yylex</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">extern</span> FILE <span style="color:#ff79c6">*</span>yyin;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">yyerror</span> (<span style="color:#8be9fd">char</span> <span style="color:#ff79c6">const</span> <span style="color:#ff79c6">*</span>s)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;error:%d: %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yylineno, s);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Symbol table function */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">create_symbol</span>(<span style="color:#6272a4">/* ... */</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">insert_symbol</span>(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> <span style="color:#50fa7b">lookup_symbol</span>(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">dump_symbol</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">/* Global variables */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> example_symbol_cnt <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">#define MAX_SYMBOL_NUM 10
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>example_symbol[MAX_SYMBOL_NUM] <span style="color:#ff79c6">=</span> {};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#50fa7b">get_op_name</span>(op_t op) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">switch</span> (op) {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_ADD</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;ADD&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_SUB</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;SUB&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_MUL</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;MUL&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">case</span> <span style="color:#8be9fd;font-style:italic">OP_DIV</span>:
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;DIV&#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">default</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>                <span style="color:#ff79c6">return</span> <span style="color:#f1fa8c">&#34;unknown&#34;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>error<span style="color:#ff79c6">-</span>verbose
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Use variable or self-defined structure to represent
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"> * nonterminal and token type
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"> */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span><span style="color:#ff79c6">union</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> val;
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>id_name;
</span></span><span style="display:flex;"><span>    op_t op;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Token without return */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token DECL PRINT NEWLINE
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Token with return, which need to sepcify type */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token <span style="color:#ff79c6">&lt;</span>val<span style="color:#ff79c6">&gt;</span> NUMLIT
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>token <span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span> IDENT
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Nonterminal with return, which need to sepcify type */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>type <span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span> AddOp MulOp
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Yacc will start at this nonterminal */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>start Program
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Grammar section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Program</span>
</span></span><span style="display:flex;"><span>    : StatementList
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">StatementList</span>
</span></span><span style="display:flex;"><span>    : Statement StatementList
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span>
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Statement</span>
</span></span><span style="display:flex;"><span>    : DeclStmt
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> PrintStmt
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">DeclStmt</span>
</span></span><span style="display:flex;"><span>    : DECL IDENT <span style="color:#f1fa8c">&#39;=&#39;</span> Expression NEWLINE {
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd">int</span> ref <span style="color:#ff79c6">=</span> insert_symbol($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;IDENT %s, ref: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>, ref);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;STORE</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        free($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">PrintStmt</span>
</span></span><span style="display:flex;"><span>    : PRINT Expression NEWLINE {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;PRINT</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Expression</span>
</span></span><span style="display:flex;"><span>    : AddExpr
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">AddExpr</span>
</span></span><span style="display:flex;"><span>    : AddExpr AddOp MulExpr {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_name($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> MulExpr
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">AddOp</span>
</span></span><span style="display:flex;"><span>    : <span style="color:#f1fa8c">&#39;+&#39;</span>  {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_ADD;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;-&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_SUB;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">MulExpr</span>
</span></span><span style="display:flex;"><span>    : MulExpr MulOp Operand {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;%s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, get_op_name($<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">2</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> Operand
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">MulOp</span>
</span></span><span style="display:flex;"><span>    : <span style="color:#f1fa8c">&#39;*&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_MUL;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;/&#39;</span> {
</span></span><span style="display:flex;"><span>        $<span style="color:#ff79c6">&lt;</span>op<span style="color:#ff79c6">&gt;</span>$ <span style="color:#ff79c6">=</span> OP_DIV;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">Operand</span>
</span></span><span style="display:flex;"><span>    : NUMLIT {
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;NUMLIT %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>val<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> IDENT {
</span></span><span style="display:flex;"><span>        <span style="color:#8be9fd">int</span> ref <span style="color:#ff79c6">=</span> lookup_symbol($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;IDENT %s, ref: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, $<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>, ref);
</span></span><span style="display:flex;"><span>        printf(<span style="color:#f1fa8c">&#34;LOAD</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>        free($<span style="color:#ff79c6">&lt;</span>id_name<span style="color:#ff79c6">&gt;</span><span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">|</span> <span style="color:#f1fa8c">&#39;(&#39;</span> Expression <span style="color:#f1fa8c">&#39;)&#39;</span>
</span></span><span style="display:flex;"><span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* C code section */</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> main(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[])
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (argc <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">2</span>) {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> fopen(argv[<span style="color:#bd93f9">1</span>], <span style="color:#f1fa8c">&#34;r&#34;</span>);
</span></span><span style="display:flex;"><span>    } <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> stdin;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    create_symbol();
</span></span><span style="display:flex;"><span>    yyparse();
</span></span><span style="display:flex;"><span>    dump_symbol();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    fclose(yyin);    
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;Total lines: %d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yylineno);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> create_symbol()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Create symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">// do nothing...
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> insert_symbol(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Insert {%s} into symbol table; assign it as ref {%d}</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, 
</span></span><span style="display:flex;"><span>        id_name, example_symbol_cnt);
</span></span><span style="display:flex;"><span>    example_symbol[example_symbol_cnt] <span style="color:#ff79c6">=</span> strdup(id_name);
</span></span><span style="display:flex;"><span>    example_symbol_cnt<span style="color:#ff79c6">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> example_symbol_cnt <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">int</span> lookup_symbol(<span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> id_name)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Lookup in symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> example_symbol_cnt; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> (strcmp(id_name, example_symbol[i]) <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>) {
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">return</span> i;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;{%s} not found in symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, id_name);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> dump_symbol()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;&gt; Dump symbol table</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> example_symbol_cnt; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>        free(example_symbol[i]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="測試範例-1" class="article-heading">測試範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>input/in01.lc</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>decl x = 1 + 4
</span></span><span style="display:flex;"><span>decl y = 2
</span></span><span style="display:flex;"><span>decl num = x + y * (3 + 5)
</span></span><span style="display:flex;"><span>print num
</span></span></code></pre></div><ul>
<li>Result (其他檔案，如 Makefile 請參考 Source code):</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ make
</span></span><span style="display:flex;"><span>$ ./myparser &lt; input/in01.lc
</span></span><span style="display:flex;"><span>&gt; Create symbol table
</span></span><span style="display:flex;"><span>NUMLIT 1
</span></span><span style="display:flex;"><span>NUMLIT 4
</span></span><span style="display:flex;"><span>ADD
</span></span><span style="display:flex;"><span>&gt; Insert {x} into symbol table; assign it as ref {0}
</span></span><span style="display:flex;"><span>IDENT x, ref: 0
</span></span><span style="display:flex;"><span>STORE
</span></span><span style="display:flex;"><span>NUMLIT 2
</span></span><span style="display:flex;"><span>&gt; Insert {y} into symbol table; assign it as ref {1}
</span></span><span style="display:flex;"><span>IDENT y, ref: 1
</span></span><span style="display:flex;"><span>STORE
</span></span><span style="display:flex;"><span>&gt; Lookup in symbol table
</span></span><span style="display:flex;"><span>IDENT x, ref: 0
</span></span><span style="display:flex;"><span>LOAD
</span></span><span style="display:flex;"><span>&gt; Lookup in symbol table
</span></span><span style="display:flex;"><span>IDENT y, ref: 1
</span></span><span style="display:flex;"><span>LOAD
</span></span><span style="display:flex;"><span>NUMLIT 3
</span></span><span style="display:flex;"><span>NUMLIT 5
</span></span><span style="display:flex;"><span>ADD
</span></span><span style="display:flex;"><span>MUL
</span></span><span style="display:flex;"><span>ADD
</span></span><span style="display:flex;"><span>&gt; Insert {num} into symbol table; assign it as ref {2}
</span></span><span style="display:flex;"><span>IDENT num, ref: 2
</span></span><span style="display:flex;"><span>STORE
</span></span><span style="display:flex;"><span>&gt; Lookup in symbol table
</span></span><span style="display:flex;"><span>IDENT num, ref: 2
</span></span><span style="display:flex;"><span>LOAD
</span></span><span style="display:flex;"><span>PRINT
</span></span><span style="display:flex;"><span>&gt; Dump symbol table
</span></span><span style="display:flex;"><span>Total lines: 5
</span></span></code></pre></div><h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://thiagoh.github.io/bison/" title="Bison 3.0.4 Manual" aria-label="Bison 3.0.4 Manual"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Bison 3.0.4 Manual</a></li>
</ul>
 
        ]]></description></item><item><title>Build a Simple Compiler Ep1</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/</link><pubDate>Thu, 22 Jul 2021 18:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/</guid><description><![CDATA[
           <br/><p>詞法分析器 (Scanner)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/"><img src="https://images.unsplash.com/photo-1582899973294-9851630b69ec?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>詞法分析器 (Scanner)</p>
<ul>
<li>Series: <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/" title="[ep0]" aria-label="[ep0]" >[ep0]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/" title="[ep1]" aria-label="[ep1]" >[ep1]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/" title="[ep2]" aria-label="[ep2]" >[ep2]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/" title="[ep3]" aria-label="[ep3]" >[ep3]</a></li>
<li>Source code: <a href="https://github.com/aben20807/learn_compiler" title="aben20807/learn_compiler" aria-label="aben20807/learn_compiler"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/learn_compiler</a></li>
</ul>
<h1 id="詞法分析器-scanner" class="article-heading">詞法分析器 (Scanner) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a9%9e%e6%b3%95%e5%88%86%e6%9e%90%e5%99%a8-scanner">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這裡我們不需要像編譯系統的課本或課程中提到的演算法來用 C 語言寫一個詞法分析器，而是利用 flex (lex) 這個詞法分析器產生器，它讓使用者可以用一些高階的定義詞法分析的模式，接著自動產生對應的詞法分析器。</p>
<p>使用這類工具的原因如下:</p>
<ul>
<li>減少人工撰寫造成的錯誤</li>
<li>開發快速且方便除錯</li>
<li><del>修課學生不是每一個都對編譯器有興趣，但這是必修課</del></li>
</ul>
<p>然而實際上真實的複雜語言，如 C++、Rust、Go       大多都是手寫來達到更高的設計彈性。</p>
<h1 id="flex-lex-三大區塊" class="article-heading">flex (lex) 三大區塊 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#flex-lex-%e4%b8%89%e5%a4%a7%e5%8d%80%e5%a1%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>用兩個 <code>%%</code> 來作為區隔:</p>
<ul>
<li>Definition section: 又分作兩個小區塊 (可對照下方完整程式碼): %{ 定義標頭檔、全域變數 %}、正規表達式標籤、condition (<code>%x</code>)  、選項 (<code>%option</code>)  </li>
<li>Rules section: 定義判斷為 token 的規則。定義的順序會影響優先度所以要考慮是否會覆蓋其他規則，例如關鍵字應該要優先於變數名，否則像是 <code>decl</code>, <code>print</code> 會被判定為 ident。這同時也是為何 <code>.</code> (匹配所有字元) 會放在最下面</li>
<li>C Code section: 定義 main 函式、其他函式</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>&lt;&lt; Definition section &gt;&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>%%
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>&lt;&lt; Rules section &gt;&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>%%
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>&lt;&lt; C Code section &gt;&gt;
</span></span></code></pre></div><h1 id="正規表達式" class="article-heading">正規表達式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e8%a6%8f%e8%a1%a8%e9%81%94%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這裡主要利用正規表達式 (Regular Expression, regex, regexp, RE) 來判斷一個輸入中有那些 token，例如 <code>apple</code> 不是任何一個保留關鍵字，所以就是一般的變數名稱。由於本系列所採用的是簡化版的語言，變數只有大小寫字母組成，所以這裡就直接定義 <code>ident</code> 個標籤負責對應 <code>{letter}+</code> 其中 <code>letter</code> 對應 a~z 或是 A~Z 其中一個字元。</p>
<h1 id="完整程式碼" class="article-heading">完整程式碼 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%a8%8b%e5%bc%8f%e7%a2%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>mycompiler.l</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">/* Definition section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%</span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">#define YY_NO_UNPUT
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>    <span style="color:#ff79c6">#define YY_NO_INPUT
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span><span style="color:#ff79c6">%</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Define regular expression label */</span>
</span></span><span style="display:flex;"><span>letter [a<span style="color:#ff79c6">-</span>zA<span style="color:#ff79c6">-</span>Z]
</span></span><span style="display:flex;"><span>digit [<span style="color:#bd93f9">0</span><span style="color:#ff79c6">-</span><span style="color:#bd93f9">9</span>]
</span></span><span style="display:flex;"><span>ident {letter}<span style="color:#ff79c6">+</span>
</span></span><span style="display:flex;"><span>num_lit {digit}<span style="color:#ff79c6">+</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* Rules section */</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;+&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;ADD&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;-&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;SUB&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;*&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;MUL&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;/&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;DIV&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;(&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;LPAR&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;)&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;RPAR&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;=&#34;</span>         { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;ASSIGN&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>        { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, <span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\\</span><span style="color:#f1fa8c">n&#34;</span>, <span style="color:#f1fa8c">&#34;NEWLINE&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;decl&#34;</span>      { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;DECL&#34;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#f1fa8c">&#34;print&#34;</span>     { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;PRINT&#34;</span>); }
</span></span><span style="display:flex;"><span>{ident}     { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;IDENT&#34;</span>); }
</span></span><span style="display:flex;"><span>{num_lit}   { printf(<span style="color:#f1fa8c">&#34;%-8s </span><span style="color:#f1fa8c">\t</span><span style="color:#f1fa8c"> %s</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, yytext, <span style="color:#f1fa8c">&#34;NUMLIT&#34;</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">&lt;&lt;</span>EOF<span style="color:#ff79c6">&gt;&gt;</span>     { yyterminate(); }
</span></span><span style="display:flex;"><span>.           {;}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">%%</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/*  C Code section */</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> yywrap(<span style="color:#8be9fd">void</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> main(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[])
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (argc <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">2</span>) {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> fopen(argv[<span style="color:#bd93f9">1</span>], <span style="color:#f1fa8c">&#34;r&#34;</span>);
</span></span><span style="display:flex;"><span>    } <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>        yyin <span style="color:#ff79c6">=</span> stdin;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    yylex();
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">Finish scanning.&#34;</span>);
</span></span><span style="display:flex;"><span>    fclose(yyin);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="測試範例" class="article-heading">測試範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>input/in01.lc</code>:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>decl x = 1 + 4
</span></span><span style="display:flex;"><span>decl y = 2
</span></span><span style="display:flex;"><span>decl num = x + y * (3 + 5)
</span></span><span style="display:flex;"><span>print num
</span></span></code></pre></div><ul>
<li>Result (其他檔案，如 Makefile 請參考 Source code):</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ make
</span></span><span style="display:flex;"><span>$ ls
</span></span><span style="display:flex;"><span>input/  lex.yy.c  Makefile  mycompiler.l  myscanner*
</span></span><span style="display:flex;"><span>$ ./myscanner &lt; input/in01.lc
</span></span><span style="display:flex;"><span>decl             DECL
</span></span><span style="display:flex;"><span>x                IDENT
</span></span><span style="display:flex;"><span>=                ASSIGN
</span></span><span style="display:flex;"><span>1                NUMLIT
</span></span><span style="display:flex;"><span>+                ADD
</span></span><span style="display:flex;"><span>4                NUMLIT
</span></span><span style="display:flex;"><span>\n               NEWLINE
</span></span><span style="display:flex;"><span>decl             DECL
</span></span><span style="display:flex;"><span>y                IDENT
</span></span><span style="display:flex;"><span>=                ASSIGN
</span></span><span style="display:flex;"><span>2                NUMLIT
</span></span><span style="display:flex;"><span>\n               NEWLINE
</span></span><span style="display:flex;"><span>decl             DECL
</span></span><span style="display:flex;"><span>num              IDENT
</span></span><span style="display:flex;"><span>=                ASSIGN
</span></span><span style="display:flex;"><span>x                IDENT
</span></span><span style="display:flex;"><span>+                ADD
</span></span><span style="display:flex;"><span>y                IDENT
</span></span><span style="display:flex;"><span>*                MUL
</span></span><span style="display:flex;"><span>(                LPAR
</span></span><span style="display:flex;"><span>3                NUMLIT
</span></span><span style="display:flex;"><span>+                ADD
</span></span><span style="display:flex;"><span>5                NUMLIT
</span></span><span style="display:flex;"><span>)                RPAR
</span></span><span style="display:flex;"><span>\n               NEWLINE
</span></span><span style="display:flex;"><span>print            PRINT
</span></span><span style="display:flex;"><span>num              IDENT
</span></span><span style="display:flex;"><span>\n               NEWLINE
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Finish scanning.
</span></span></code></pre></div><h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://westes.github.io/flex/manual/" title="Lexical Analysis With Flex, for Flex 2.6.2" aria-label="Lexical Analysis With Flex, for Flex 2.6.2"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Lexical Analysis With Flex, for Flex 2.6.2</a></li>
<li><a href="https://www.cs.virginia.edu/~cr4bd/flex-manual/index.html#Top" title="Lexical Analysis With Flex, for Flex 2.6.3" aria-label="Lexical Analysis With Flex, for Flex 2.6.3"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Lexical Analysis With Flex, for Flex 2.6.3</a></li>
<li><a href="https://github.com/westes/flex" title="westes/flex" aria-label="westes/flex"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> westes/flex</a></li>
<li><a href="https://stackoverflow.com/questions/39075510/option-noinput-nounput-what-are-they-for" title="YY_NO_UNPUT, YY_NO_INPUT" aria-label="YY_NO_UNPUT, YY_NO_INPUT"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> YY_NO_UNPUT, YY_NO_INPUT</a></li>
</ul>
 
        ]]></description></item><item><title>Build a Simple Compiler Ep0</title><link>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/</link><pubDate>Thu, 22 Jul 2021 17:17:52 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/</guid><description><![CDATA[
           <br/><p>說明及事前準備</p>
          
            <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/"><img src="https://images.unsplash.com/photo-1466692476868-aef1dfb1e735?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>說明及事前準備</p>
<ul>
<li>Series: <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep0/" title="[ep0]" aria-label="[ep0]" >[ep0]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep1/" title="[ep1]" aria-label="[ep1]" >[ep1]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep2/" title="[ep2]" aria-label="[ep2]" >[ep2]</a>, <a href="https://aben20807.github.io/posts/20210722-build-a-simple-compiler-ep3/" title="[ep3]" aria-label="[ep3]" >[ep3]</a></li>
<li>Source code: <a href="https://github.com/aben20807/learn_compiler" title="aben20807/learn_compiler" aria-label="aben20807/learn_compiler"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> aben20807/learn_compiler</a></li>
</ul>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>雖然好像很多相關資料了，但我覺得還是欠缺完整性，所以就寫了這個系列來補全。儘管還是有少數人無論如何都選擇直接抄襲同學這條路，但還是希望透過本系列能夠清楚完整的帶領完全沒概念的人走一遍，藉此降低這些行為。</p>
<p>雖然我算是蠻常使用本系列所介紹的這套工具了，不過可能還是會有錯誤的地方，還請各位不吝指教。</p>
<h1 id="本篇所建構的編譯器" class="article-heading">本篇所建構的編譯器 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%ac%e7%af%87%e6%89%80%e5%bb%ba%e6%a7%8b%e7%9a%84%e7%b7%a8%e8%ad%af%e5%99%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>本系列內容為使用 flex/bison (lex/yacc) 建構一個簡易的編譯器，並使其產生的 jasmin 指令可在 JVM 執行。完整執行流程如下。我們會利用 flex 產生 scanner，利用 bison 產生 parser。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLVfavnVca_5BLSfCjR9c4-qX2B3aClIeT0xi-dKP7OA3I6YQ6wpE7Xpesp1-TiV7scUERknJm54uRRowNcFRd1vm7irZP_97aKpwDJMTSH8d5B0bcyF6whs077_llSwlHZyCey4jSwH4XqjpQ8O2vJ5pQ=w551-h281-no" alt='流程，橘色區塊為本系列需要寫程式的部分' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">流程，橘色區塊為本系列需要寫程式的部分</center>
    </figcaption>
  </figure>
</p>
<h1 id="環境設定" class="article-heading">環境設定 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83%e8%a8%ad%e5%ae%9a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="作業系統" class="article-heading">作業系統 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%9c%e6%a5%ad%e7%b3%bb%e7%b5%b1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>OS: Ubuntu 18.04 (我使用 WSL2)</li>
</ul>
<h2 id="軟體安裝" class="article-heading">軟體安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%bb%9f%e9%ab%94%e5%ae%89%e8%a3%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>gcc: 7.5.0 (<code>gcc -v</code>)</li>
<li>gnu make: 4.1 (<code>make -v</code>)</li>
<li>flex: 2.6.4 (<code>flex --version</code>)</li>
<li>bison: 3.0.4 (<code>bison --version</code>)</li>
<li>java: openjdk 11.0.10 (<code>java --version</code>)</li>
<li>安裝指令: <code>$ sudo apt install gcc make flex bison default-jre</code></li>
</ul>
<h1 id="定義本次教學的語言" class="article-heading">定義本次教學的語言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%9a%e7%be%a9%e6%9c%ac%e6%ac%a1%e6%95%99%e5%ad%b8%e7%9a%84%e8%aa%9e%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>主要特性: 包含賦值、基本四則運算、輸出。</p>
<h2 id="型別-type" class="article-heading">型別 type 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9e%8b%e5%88%a5-type">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>整數 (num_lit), e.g., <code>1</code>, <code>2</code></li>
<li>變數 (ident), e.g., <code>x</code>, <code>y</code>, <code>num</code></li>
</ul>
<h2 id="運算子-operator" class="article-heading">運算子 operator 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%8b%e7%ae%97%e5%ad%90-operator">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><code>+</code>: 加</li>
<li><code>-</code>: 減</li>
<li><code>*</code>: 乘</li>
<li><code>/</code>: 除</li>
<li><code>=</code>: 宣告時賦值</li>
</ul>
<h2 id="其他符號" class="article-heading">其他符號 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96%e7%ac%a6%e8%99%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><code>(</code> <code>)</code>: 運算有最高優先度</li>
<li><code>\n</code> (newline): 換行作為結尾</li>
</ul>
<h2 id="關鍵字-keyword" class="article-heading">關鍵字 keyword 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e9%8d%b5%e5%ad%97-keyword">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><code>decl</code></li>
<li><code>print</code></li>
</ul>
<h2 id="簡化的文法-grammar" class="article-heading">簡化的文法 grammar 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b0%a1%e5%8c%96%e7%9a%84%e6%96%87%e6%b3%95-grammar">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>未標示運算子優先順序，但是符合先乘除後加減，括號優先度最高。</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Statement -&gt; DeclStmt
</span></span><span style="display:flex;"><span>          | PrintStmt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>DeclStmt -&gt; &#34;decl&#34; ident &#34;=&#34; Expression newline
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>PrintStmt -&gt; &#34;print&#34; Expression newline
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Expression -&gt; Expression BinaryOp Expression
</span></span><span style="display:flex;"><span>           | Operand
</span></span><span style="display:flex;"><span>           
</span></span><span style="display:flex;"><span>Operand -&gt; num_lit
</span></span><span style="display:flex;"><span>        | ident
</span></span><span style="display:flex;"><span>        | &#34;(&#34; Expression &#34;)&#34;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>BinaryOp -&gt; &#34;+&#34; | &#34;-&#34; | &#34;*&#34; | &#34;/&#34;
</span></span></code></pre></div><h2 id="範例輸入" class="article-heading">範例輸入 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b%e8%bc%b8%e5%85%a5">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>decl x = 1 + 4
</span></span><span style="display:flex;"><span>decl y = 2
</span></span><span style="display:flex;"><span>decl num = x + y * (3 + 5)
</span></span><span style="display:flex;"><span>print num
</span></span></code></pre></div><h1 id="qa-僅代表本人意見" class="article-heading">Q&amp;A (僅代表本人意見) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#qa-%e5%83%85%e4%bb%a3%e8%a1%a8%e6%9c%ac%e4%ba%ba%e6%84%8f%e8%a6%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1> 

<details>
  <summary><span>建議心理素質強健者再行觀看 </span></summary>
  <ul>
<li><strong>Q</strong> 為何編譯系統<del>目前</del>為必修?</li>
<li><strong>A</strong> 這需要回顧一下整個資訊工程的範疇，一般這個科系會有一些硬體課程以及多數的軟體課程 (包含數學、理論)，編譯系統是連接兩大領域的科學，因此在這堂課會用到幾乎所有在大學的所學 (例如，程式設計、資料結構、演算法、作業系統、計算理論)，雖然沒有到使用硬體指令 (否則會太難，想學可以參考 Jserv 的課)，不過可以說是整個大學的總整理。</li>
<li><strong>Q</strong> 為何編譯系統這麼難?</li>
<li><strong>A</strong> 其實課程部分一點也不難，每年超過100分的大概都有 20 個已經超過修課人數的一成，要不及格只可能是上課都沒在聽、考試沒複習、作業有問題都沒有問幾乎每次都沒交。如果是編譯器領域的話的確是難，但相對的會的人就少。</li>
<li><strong>Q</strong> 為何作業沒有部份給分?</li>
<li><strong>A</strong> 試想你之後出社會，老闆要你開發產品而你只能寫出屍體，連執行都不行，這樣你覺得老闆要給你多少薪水。你總不能跟他說我寫了哪些功能只是不能跑，所以應該要部份給薪吧。</li>
</ul>

</details>
        ]]></description></item><item><title>Google Sheet Grouping</title><link>https://aben20807.github.io/posts/20210529-google-sheet-grouping/</link><pubDate>Sat, 29 May 2021 11:16:15 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210529-google-sheet-grouping/</guid><description><![CDATA[
           <br/><p>Proficient programming language:</p><br/><ul><br/><li>Google sheet</li><br/></ul>
          
            <p><a href="https://aben20807.github.io/posts/20210529-google-sheet-grouping/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210529-google-sheet-grouping/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>Proficient programming language:</p>
<ul>
<li>Google sheet</li>
</ul>
<p>善用工具的心法很簡單：</p>
<blockquote>
<p>我相信有這個功能</p>
</blockquote>
<p>不過還是需要拆解一下：需求 -&gt; 功能分解 -&gt; 合併</p>
<h1 id="需求" class="article-heading">需求 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9c%80%e6%b1%82">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>以這次功能為例，我想要針對所有同學進行分組，但是不需要隨機，只要按照順序分 A, B, C 就好。</p>
<h1 id="功能分解逐漸合併" class="article-heading">功能分解、逐漸合併 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%9f%e8%83%bd%e5%88%86%e8%a7%a3%e9%80%90%e6%bc%b8%e5%90%88%e4%bd%b5">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>三個一個循環很容易想到取餘數 (modulo) 。接著到 Google sheet function list   搜尋看看有沒有：</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3eHskvbWonxNnPntuPoVU-BB5frZRuSWBseEPPHvhg16rNbOLr23yhb2Tuz85f7vYaXiwlkgFMsTjsSitPAAevG904AnSEQLgyMMEghKFwomt81AQKUzU-Cv67Q451GlAUpLWxmeoHNrMmOykGNJMUO3A=w1199-h776-no" alt='搜尋結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">搜尋結果</center>
    </figcaption>
  </figure>
</p>
<p>我們大概可以知道 <code>MOD(x, y)</code> 得到的是 <code>x/y</code> 的餘數，因此 <code>x</code> 是對應到列數，而 <code>y</code> 是分組的數量。</p>
<p>再來比較抽象。我們有了餘數功能，要怎麼對應到每一列 (row)? 所以就找到 <code>ROW()</code> 可以取得目前的列數，這樣我們就得到 <code>x</code> 了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fiUAHHbCsaBpyvclBHNlMa57_1-JlrEAxSMRP3BVX071SZnn_ORcsEhZtnJHOuKy4HK67yw_JdbdKocrBhJwjWvqgLf5GxGDsakCLbiTZJdNWIicGirct-YQ-ddVNbS58h_rayFvi4zN9yi041gG4zaQ=w307-h386-no" alt='每個人的列數' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">每個人的列數</center>
    </figcaption>
  </figure>
</p>
<p><code>y</code> 用 <code>3</code> 代入</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fEda2LS9FQLpGcan6rweZctvXTwK1q-OsEA-kjdmbCe6u0L40y0W2deC-sJb0sreCOLIrhbHIjJZnaSofjM0YcA6TgpQd7DauHQy5-FalhW0LMzRniLvSulgd21t9MxtSjjYiN1UdP0KBHHbPw-wdfCw=w308-h387-no" alt='2,0,1 重複出現' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">2,0,1 重複出現</center>
    </figcaption>
  </figure>
</p>
<p>如果分組編號就是 0,1,2 的話就可以在這邊停止，不過如果要重新取代號 (A,B,C) 或是分配不同內容給各個組別時就需要繼續下去。</p>
<p>再來的思考方向，就是用剛剛的 0,1,2 當作索引值 (index)，查看看如何用索引值取得其他格子的內容。我們選擇使用 <code>INDEX()</code>，其使用方法就是先選擇一個區塊 <code>reference</code> 接著用 <code>row</code>, <code>column</code> 去選擇。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fSOGvhxqM_OW94b9zA6qbLl1QGMXiLcMS-4wcQgOTPUiaXnA1PIOUqcfRX39GNuWDQDAycJXlsi1vvnI_uHAMqTd4MRD8le7oTlrBVVII1nJ_oyE07eYf-GL8cyEuqhAZ2t28PFZQ6iwBqmtftOAK_wA=w1174-h900-no" alt='選一個功能最不複雜的' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">選一個功能最不複雜的</center>
    </figcaption>
  </figure>
</p>
<p>套用進去會長這樣，<code>INDEX(\$E\$1:\$E\$3, MOD(ROW(), 3))</code> (<code>\$</code> 是鎖定用，不會因為下拉導致列或欄改變，因為 <code>E1:E3</code> 是固定放我們的代號)。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3djn5Tqfhr3O1GH6SALCCahCihSID6m0RbA_4VYXGqNU61yoL5Lk6bRp81gsIVOj8tevLHv0-w-0RihTdeAv6UfDQtqwE4CTepk71mYrFmztiTzwjMSvtxqcXrEo8y2Wu2t4K81R18gRBF1VkY41F3K7Q=w506-h385-no" alt='目前的成果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">目前的成果</center>
    </figcaption>
  </figure>
</p>
<p>會發生上面的錯誤是因為 <code>INDEX</code> 使用的列起始是從 <code>1</code> 開始，所以我們來加 <code>1</code>。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dsrRA-9kdsJrtANswZ01XvsoSW3UdUn8UyjgTCqihHAq_QH7Dm65y9P0616XASNuCcVu2Np_ZR9Z5ZiobW-by36NZT-U87j3eO_EK1LYqoxrmN_m-vSOUD5OETzm_7CtQ6IoWfkwzDz0arxbha-QTmDQ=w506-h385-no" alt='完成' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">完成</center>
    </figcaption>
  </figure>
</p>
<p>如果想要 A 開始的會只要將右邊 E 欄換個順序即可。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3eGzeTF-u6a8scFj0NVUs5GCRge149HD7X6oygWYCyLx322QMxejANFBdLzqkTCBtMaX78yDWUHRCzbZBg3NimvKwhXokBfc_FJi4KNL-iPFX1MS6mgLarOQIwLPbKsxItFPkB9PvsDneu1N9XYXzcmVg=w505-h387-no" alt='換順序' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">換順序</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>Hugo on WSL2 (Ubuntu18.04)</title><link>https://aben20807.github.io/posts/20210215-hugo-on-wsl2/</link><pubDate>Mon, 15 Feb 2021 10:56:01 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20210215-hugo-on-wsl2/</guid><description><![CDATA[
           <br/><p>漸漸變成老闆的樣子 (?)</p>
          
            <p><a href="https://aben20807.github.io/posts/20210215-hugo-on-wsl2/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3dz0JI6eOlA0KVRH15KQGVdaa5_NwujRTRNGtgyJMhM0RwFOQ95GUou8cjNdH4g7Bjg3N4yjfr085yg-IIUa_mOAxgBEkUwVRNTe_r_ZE3nv1whJfAyP5Xb9LSqQQ2eTUVyOlKAJktv0CXH2UFHUncbQw=w587-h422-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20210215-hugo-on-wsl2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>漸漸變成老闆的樣子 (?)</p>
<h1 id="tldr" class="article-heading">TL;DR 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> /tmp
</span></span><span style="display:flex;"><span>$ wget https://github.com/gohugoio/hugo/releases/download/v0.80.0/hugo_extended_0.80.0_Linux-64bit.tar.gz
</span></span><span style="display:flex;"><span>$ tar xvf hugo_extended_0.80.0_Linux-64bit.tar.gz
</span></span><span style="display:flex;"><span>$ sudo mv hugo /usr/local/bin
</span></span><span style="display:flex;"><span>$ hugo version
</span></span><span style="display:flex;"><span>Hugo Static Site Generator v0.80.0-792EF0F4/extended linux/amd64 BuildDate: 2020-12-31T13:46:18Z
</span></span></code></pre></div><h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>筆電系統演進:</p>
<ul>
<li>國小~國中 (Windows)</li>
<li>高中 (VirtualBox, Wubi)</li>
<li>大一~三 (Cygwin, VirtualBox)</li>
<li>大四~研一 (Dual system)</li>
<li>研二~??? (Windows)</li>
</ul>
<p>雖然開發還是在 Linux 上，不過文書的處理會越來越多，所以筆電如果用雙系統會頻繁的切換，相當麻煩。因此目前是用遠端軟體連到 Linux 做開發 (需要的話。</p>
<p>最近 Win10 已經可以支援 WSL2 了，雖然要經過一些步驟，不過已經相對穩定，目前用的很多簡單指令都有支援，所以像 VSCode 用的 git 也可以直接用 WSL2 內的 git 了  </p>
<p>因此目前的文書作業，包括計畫書 (Word)、論文 (Latex)，我都轉移到 Win10。</p>
<p>為了檢驗相容性，也嘗試在 WSL2 中用 hugo 寫個東西。找很久才發現，原來可以直接下載編譯好的執行檔。詳細就請看最前面的指令。</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>結果每次都是過年在寫文章&hellip;</p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://aozaki-kuro.com/tech/hugo-deployment-debugging/#wsl2%E5%86%85%E9%83%A8%E7%BD%B2hugo" title="Hugo部署与踩坑记" aria-label="Hugo部署与踩坑记"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Hugo部署与踩坑记</a></li>
</ul>
 
        ]]></description></item><item><title>寫一個記帳程式有多難？</title><link>https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/</link><pubDate>Sat, 15 Aug 2020 17:17:26 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/</guid><description><![CDATA[
           <br/><p>靈機一動，想說可以用表單來記帳，一查果然有人做過 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200815-how-hard-to-build-money-manager-app/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>靈機一動，想說可以用表單來記帳，一查果然有人做過 OuO</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>又被 Google play 發了60元禮金，想說看一下工具類的 APP 付費情況，發現前幾名有兩個記帳 APP，原本想說要買來用養成一下記帳，可是我對現有的記帳程式沒有啥好感，之前也用過兩三種，後來也都放棄。結果後來想想還是不要拿來買工具，所以又買了一個 Rusty lake 的遊戲，燒腦的解謎遊戲，多多支持 (無業配XD)</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fMBGVal6Y6qmf0-CSh-AfKoWtWNqvCUI-60lPR7C9ZAgDbE0CNwlqPyAdjm-Q1uLbExDxLR14b6K2AtJJZLBcHftF0fZ3gblRscO7kjQBQ0DP74gCnNbiFOOOdxHri-Zqcay_gKsUCyi_Y7hkR49XQ=w646-h1041-no" alt='Rusty Lake Paradise' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Rusty Lake Paradise</center>
    </figcaption>
  </figure>
</p>
<h1 id="使用表單記帳" class="article-heading">使用表單記帳 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8%e8%a1%a8%e5%96%ae%e8%a8%98%e5%b8%b3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>靈機一動，想說可以用表單來記帳，一查果然有人做過 </p>
<p>不過我也只是採用了簡單部份，後面那個對帳有點複雜啊。所以我就建了兩個表單：消費記錄、轉帳記錄。</p>
<ul>
<li>消費記錄：記錄平常花費</li>
<li>轉帳記錄：領錢、悠遊卡或是點點卡儲值</li>
</ul>
<p>用表單記帳好處：</p>
<ul>
<li>雲端化，即時更新</li>
<li>自動時間戳記</li>
<li>超客制化，問題選項及流程都自行設計</li>
<li>統計圖表功能完整</li>
</ul>
<p>可能缺點：</p>
<ul>
<li>一定要有網路才能記帳</li>
<li>複雜統計功能要花時間設計</li>
<li>某些表單沒有的可能就無法提供，例如，顯示表格，另外我發現手機無法上傳圖片 QuQ</li>
</ul>
<h2 id="表單設計" class="article-heading">表單設計 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a1%a8%e5%96%ae%e8%a8%ad%e8%a8%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>表單有一個很有用的功能，就是區段，可以針對回答跳轉到不同的問題</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dtUNadoaEi6qkB0o9GKiDL1uZLqi7ZtRLBbOshWrIMFbIkF5MYjICopOKcSXLBjJldZudGT87f5hrf02RASGct7YaMXLHAphLohzBmlMlNjxhetEQ54pa7bwIqhv150zbY_sxdVIuaM3zGVSDU6XmB=w859-h579-no" alt='根據回答跳轉區段' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">根據回答跳轉區段</center>
    </figcaption>
  </figure>
</p>
<p>所以大概就是這樣設計，如此便可以快速方便記錄細節。其實這就是一個狀態機，Compiler DFA 回憶起來~ 針對自己的情況加選項或是問題，超級客制化。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3e_fQr9GGaMQHlG1-JLvQpCmzcuImufjPFuqtFlugwb9QRj9VCHhpGle_-A-zICRSk6ZQ9PqXyftjUV1piJdzm5mz2syYiKMI6LbS5gocIyS4fSv-Z_GdTWehkdEVe13kp35NYO7MdXNYTFKzvdeJya=w892-h422-no" alt='我沒畫完整版的喔' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">我沒畫完整版的喔</center>
    </figcaption>
  </figure>
</p>
<h2 id="預先填入表單" class="article-heading">預先填入表單 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%90%e5%85%88%e5%a1%ab%e5%85%a5%e8%a1%a8%e5%96%ae">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>某些選項可能超常用，比方說消費記錄大部份都是現金，可以將它用作選項預設值，可以參考  </p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3c51lQNqFVCSqjAn2XVkDt0xZSs9PSqt2S623mTXkh-oTcmLdcNJd5Qh59cDiUALwe4EnGx1oO94vTn9O8AasjwZOfFwG8IkdblaSR4643XjYfozFOT5h1bJpxScbVyPMBXMlYAH0tlZd6irq7jWtyc=w692-h403-no" alt='新版在右上角' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">新版在右上角</center>
    </figcaption>
  </figure>
</p>
<h2 id="如何使用表單" class="article-heading">如何使用表單 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8%e8%a1%a8%e5%96%ae">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>一開始想法很簡單，就是建立記錄用的表單，然後將連結用書籤的型式存在手機桌面，這樣就可以直接點來記帳。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dBfRoc4yz-m2ciB1uy1WiY5NUFUdHZZ7Us8HWtZPVZviemG2keYD56E0Ujo-00380KveIxeQcQ2l5AqRjHYrVejcxQESoC6lR43QtZGwsSKjyX-m_0rdqzzg8hE0Y9NEUjzPRe7L4t3R4J5TTtrmwQ=w1272-h836-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3frXOytq3We7pyNsglA69vKcVR3mFoV0nQbihbk8mqR5ebdj-gxlvXPhxQ7oNByjdtlwTQ9Szj1TTxC4mWJ0ty7SLGr5LpJIJKMmpWzBGlyHuK-26TGR8A2rgkBn4nUv_ODDaC1FUCxQDjO51t8dUrE=w1272-h903-no" alt='出現在桌面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">出現在桌面</center>
    </figcaption>
  </figure>
</p>
<h1 id="app" class="article-heading">APP 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#app">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>用書籤有一個很大的缺點，就是一定要放在桌面，多表單的話很麻煩。再來就是每次點開就需要開啟瀏覽器，而我的瀏覽器頁面常駐超過 99 個分頁 (<code>:D</code>) 所以載入要花費一定的記憶體及時間。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fljY1Lx9qYXtjq8dfqx-dSbDyjz9IMmU5DAMkDUivBFwupJQSODbQxBZD3NEQqxt0v8dZhQKk1COJQDHHgtNnIawzdwr5WEJZjZvyh2Tgq31R2aY3cLObAA2ELveNItMXgpRmasztoSxK93Le0--3X=w1272-h1239-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>於是我就想說找看看有沒有將表單變成 APP 的方法，不過看來沒有簡單的方法，<a href="https://play.google.com/store/apps/details?id=x1Trackmaster.x1Trackmaster&amp;hl=zh_TW" title="AppSheet" aria-label="AppSheet"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> AppSheet</a> 好像可以不過似乎之後要收費。接著我就打算自己用一個簡單的 APP。</p>
<p>Android Studio 過於肥大是不得已才會採用。查了一下發現 App Inventer 2 (AI2) 也有支援 WebView 的元件所以我的想法應該可行，基本概念就是用 WebView 來載入我們的表單，用按鈕控制開啟哪個表單這樣。</p>
<h2 id="版面設計" class="article-heading">版面設計 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%89%88%e9%9d%a2%e8%a8%ad%e8%a8%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>兩個畫面，左邊主畫面作為一開始進入的畫面；右邊用來開啟網頁也就是表單，放一個 WebViewer 然後大小用最大。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dV5Gn101vL3GfVWY6yecntkVd0UP_vDgzZGqd0tjoA8k9V87nX7zlF2EbEFGxqcDrn8icutYcE4SV7-tv9eCHWX3qc8Mez--FxVkzNpoQmtH-IbD-Vu0iVv4sIKCEPKIw8KLvQYWBwdJnK8PfNJZoG=w1272-h554-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="開始寫-code咦是拉-code" class="article-heading">開始寫 code，咦，是拉 code 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e5%a7%8b%e5%af%ab-code%e5%92%a6%e6%98%af%e6%8b%89-code">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>先展示一下完整的模樣</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3e3RXtqDVFdubJjmlkAZCHYZ8ru-FtTDTd8vtkxaetMkS1p7LiDKKNdgLZ0IXXq27vYR2-onK45Gghk3-itmUuTId7LzROOm0tcuY9_xstcEfiDZ7-NichYkmS5t7Rk52bOgpAIBvUxBzj0fkCEvxRR=w1272-h643-no" alt='Screen1' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Screen1</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3e2vKJQmuKlTVEAJ88cMpwZBqYB05bvn23YiBIITp8wQ4EKct_hx56i0QFq6Fhhx1novqwDOLs0kyxpPMnU0UkKL9-PeN5MnMBSLV9HCkuzJT3g47X_jkz-a_E2_BzZqZvWJrEKl-TR1NbEGyd-QOYg=w1272-h640-no" alt='Screen2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Screen2</center>
    </figcaption>
  </figure>
</p>
<ol>
<li>首先是畫面進入及離開，因為在 AI2 中對 TextBox 作修改是無法儲存的，關閉 App 重開後會恢復，所以這裡採用建議的方式：用 TinyDB 當作儲存空間。那紫色的兩個 procedure 將在稍候提到。主要就是用來讓設定可以被儲存。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dZJnlJPYoM8IWlwit56aajeQJuqncIQu5uY5sh1pZIxoxaCayShM1Ay7BmT2j6S5MxmrNmMAf7BGEfBvJaglWr6GqP_vE4eu3d8eVXRie1sVBmiwzBVQJ3knwwkcTK-V7lrddQ4lIuC7PrbM9Og8vz=w285-h219-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<ol start="2">
<li>點擊按鈕後傳送對應的連結給 Screen 2 當作瀏覽連結，這裡我有點懶所以命名就大致上不更改@@，值得注意的是，這裡看到傳入 TextBox 的值，可是剛剛畫面上沒看到 TextBox 啊，其實是我隱藏起來了，將 visiable 設定為 false，按下設定才會顯示。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3cNajTDVEms6BWCGBHIX63Fd96YTILkirW2p1q-3ZP_hStceuVfYwJaYOU5hTqFINqrGtgCQfCPL0ggoefHZNOnq5bQMG4QdZdPCoPtc-3NVfHMrlOabF64OWSOJLnnsoRCA3XgfSDlXf3VXROB5GxR=w592-h299-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<ol start="3">
<li>Screen 2 接收剛剛傳的連結後當作首頁畫面，Screen 2 也就只有這個方塊。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3e6D9aJTo3gFXSJfGY-iZRUp-u_KXDHUEJFF8QUDn5Jldo8X0lMhkwOa8x4xL3KqFa4kSqFbCDj7PzP-P_-UNhxP5EtyR0DqAEk67CtIQOMSGOa6OMOCo9euneoXM1NScigiOmUBofdCfifTklbz5uT=w521-h200-no" alt='Screen2' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Screen2</center>
    </figcaption>
  </figure>
</p>
<ol start="4">
<li>這裡就是我在 2. 中提到的，按設定的按鈕會顯示設定</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3f_jBNSwSu_p9eWDv0JXn71OjRa06_utd5xEswjfv0jJzZ37yEsERkJhZWAF8dZjET5kNbGcIPxv69s5IJ3yi-zi0bhSXjBuRZeXrjV8LpzEZ-j0R-kDJC6gMraE-fKY-1B9SvYuK-ACQN2biQz7gCe=w465-h160-no" alt='Setting section' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Setting section</center>
    </figcaption>
  </figure>
</p>
<ol start="5">
<li>在 4. 中設定的部份會需要儲存到 TinyDB 中。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3ctSw-g3InpKnt1QyfG7yu4i5nKUx_671d5lJf6lmI4rxnGNUPmnw0iZNa7TZHgvS3nbeRoQc3muMyjZhg6K1iyHWZ2jpAjMt7jyZ2hwX5my6GPAUpH3TW48aaNVq1gcDnAfyDWo0fcgZnbwWdLTG1s=w449-h290-no" alt='Set button' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Set button</center>
    </figcaption>
  </figure>
</p>
<ol start="6">
<li>最後，把 TextBox 存取 TinyDB 的動作寫成 procedure，這樣比較清楚。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fuQeIoXDp-C0TvgNpIznR4JRc9DS0LNSmCg0kfnQbSz3r_FlL3sxPNhAg4PG_OWO0tixY_v9-p9tlfMDECuiPBbu3HDHNDPLFsoXp_3S2Zduhvrc4Q24jfEasuM55IkriY7mdfDjI5nVVFbK_6ywRR=w668-h1038-no" alt='' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"></center>
    </figcaption>
  </figure>
</p>
<ol start="7">
<li>額外功能。開啟相機掃描 QRcode 並複製到剪貼簿，這裡需要安裝一個外掛套件 <a href="https://puravidaapps.com/clipboard.php" title="Clipboard Extension" aria-label="Clipboard Extension"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Clipboard Extension</a>，另外記得取消勾選BarcodeScanner1 的 UseExternalScanner 直接使用內建的即可。會多這個功能主要是可以用在電子發票上，在記帳前可以先掃描，之後直接複製到備註那邊即可。</li>
</ol>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3c-baXvN_ippYf4tCbROQDqkwHjfknfbXDqdElVdxzrL59g3gnELs3BUf2Ep_xsxMGlpB9Hv7SCx8oWR5wzQ8ERxKR8UTf7qtScZWZwMu9pbp4PmYYVQavRyFq_JKcg6vFP5bARTyCiu73obddk6AJC=w401-h272-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="成品" class="article-heading">成品 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%88%90%e5%93%81">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>感覺我也不算是做一個記帳 App，反而像是將書籤或是網址合併變成一個 App，所我雖然取這個名子不過我還是找一個沒有跟錢相關的 icon。我也增加設定頁面可以設定的東西，包括按鈕的文字也可以換，所以也就不限於記帳了。</p>
<p>Icons made by <a href="https://smashicons.com/" title="Smashicons" aria-label="Smashicons"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Smashicons</a> from <a href="https://www.flaticon.com/" title="www.flaticon.com" aria-label="www.flaticon.com"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> www.flaticon.com</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dCHkhaKSt4Pe-t7pRfxzxIkU9A_MWEyLR0svdl1wfinZR2ZWCTHdPAPFcmO0ZvBb8zNxEeMLkDC8hIWSV3dGmKY_CWAYZmojmgoma500tOE_9fMUyDH3nY0faL-9rCjL-91-TE52bD_NTjXlzn55CU=w660-h1319-no" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3er9oo-dAdEogzgXc41sHDxnVwKEkUQc0l36X0jxzWBpb92QlXhWG6E7__NLzf9SarSWnkUIMytNOhLRCXg5ur5F9_DcTGqRs6pYsgzE7htPymKKSPlUigLhhJbOe5KgmmHm2vRSf3gAodtYE0m83Dh=w660-h1319-no" alt='主頁面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">主頁面</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3ev0_9UxWRs2TNPcc947ntp3ncr_Tkl8E_mYhJWHBTOlMeWi9GEbFH0H_j7iXEQyYsnGhu2-hxX2t12ktLjV0-tB5RKV9M292ZcbKR9-KMBRa-nCNzV5QxBkpHGM4-bc5B3pHNr0EPA1DOuaOB2pzog=w660-h1319-no" alt='設定頁面' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">設定頁面</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3cg3mhLJEIYy3tIRsOxqJr3PiOjmWaEc6ho6npj1Q69AgaCnIbU073VmOqbA2DULN1r9mfN7CI57ZOW_9ZrDKhtEkyU65zBAy9lu7i7gaNUr8e1f2Vo3QodWIKZDBjKHeCMgC1GNwcuh_yJxr-sR7k6=w660-h1319-no" alt='消費記錄，連額頭網址列都消失了，舒服 OuO' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">消費記錄，連額頭網址列都消失了，舒服 OuO</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3fEqBTRnMchjOpS4SqzjifLk05CXdQuQQ-9I0Ve_quNnRtTz07Cv6rdSh2s5R4H5B08zy1eEEJsJoyEVkaep0PZ4upa1D5eyteMM1A1-aXwAlLYymFscg2z73dx4UDiAq4kn3EOkbHVwVNi7SHK5VXZ=w660-h1319-no" alt='轉帳記錄' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">轉帳記錄</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3dMfTlxaQfdxv0wXs3JRymXiUE9ZYfW6e-fUDP2N7ABITWv_f0aULXvR8NrLMLjPRDDH9HqAKd5OvDxGjP7auQG6-lwY60N5a2h1L-m9loZD2VU3-yFNFALtn4Jq0q648kG2oHz3xZB2U5lhew98PKa=w660-h1319-no" alt='報表，就是畫幾張圖用手機開的感覺' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">報表，就是畫幾張圖用手機開的感覺</center>
    </figcaption>
  </figure>
</p>
 
        ]]></description></item><item><title>C++ Get Pretty Type Name</title><link>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</link><pubDate>Fri, 10 Jul 2020 13:36:58 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/</guid><description><![CDATA[
           <br/><p>最近狂看 C++ 的東西，明明這麼複雜，可是真香 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/"><img src="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200710-cpp-get-pretty-type-name/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>最近狂看 C++ 的東西，明明這麼複雜，可是真香 OuO</p>
<h1 id="tldr" class="article-heading">tl;dr 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;typeinfo&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;cxxabi.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">template</span><span style="color:#ff79c6">&lt;</span><span style="color:#ff79c6">typename</span> T<span style="color:#ff79c6">&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">const</span> std<span style="color:#ff79c6">::</span>string get_type_name(<span style="color:#ff79c6">const</span> T variable) {
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> name <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">typeid</span>(variable).name();
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> status <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> demangled_name <span style="color:#ff79c6">=</span> abi<span style="color:#ff79c6">::</span>__cxa_demangle(name, <span style="color:#8be9fd;font-style:italic">NULL</span>, <span style="color:#8be9fd;font-style:italic">NULL</span>, <span style="color:#ff79c6">&amp;</span>status);
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>string ret{name};
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (status <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>) {
</span></span><span style="display:flex;"><span>        ret <span style="color:#ff79c6">=</span> std<span style="color:#ff79c6">::</span>string(demangled_name);
</span></span><span style="display:flex;"><span>        free(demangled_name);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> ret;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="typeid-operator" class="article-heading">typeid operator 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#typeid-operator">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>在 <code>typeinfo</code> 中有提供 <code>typeid()</code> 可以取得 type 或是 expression (variable) 的名字  </p>
<h2 id="example" class="article-heading">Example 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#example">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;typeinfo&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span> () {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> a;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#ff79c6">typeid</span>(<span style="color:#8be9fd">int</span>).name() <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#ff79c6">typeid</span>(a).name() <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><a href="https://godbolt.org/#g:!%28%28g:!%28%28g:!%28%28h:codeEditor,i:%28fontScale:14,j:1,lang:c%2B%2B,selection:%28endColumn:2,endLineNumber:8,positionColumn:1,positionLineNumber:1,selectionStartColumn:2,selectionStartLineNumber:8,startColumn:1,startLineNumber:1%29,source:%27%23include&#43;%3Ciostream%3E%0A%23include&#43;%3Ctypeinfo%3E%0A%0Aint&#43;main&#43;%28%29&#43;%7B%0A&#43;&#43;&#43;&#43;int&#43;a%3B%0A&#43;&#43;&#43;&#43;std::cout&#43;%3C%3C&#43;typeid%28int%29.name%28%29&#43;%3C%3C&#43;!%27%5Cn!%27%3B%0A&#43;&#43;&#43;&#43;std::cout&#43;%3C%3C&#43;typeid%28a%29.name%28%29&#43;%3C%3C&#43;!%27%5Cn!%27%3B%0A%7D%27%29,l:%275%27,n:%270%27,o:%27C%2B%2B&#43;source&#43;%231%27,t:%270%27%29%29,k:50,l:%274%27,n:%270%27,o:%27%27,s:0,t:%270%27%29,%28g:!%28%28g:!%28%28h:compiler,i:%28compiler:g83,filters:%28b:%270%27,binary:%271%27,commentOnly:%270%27,demangle:%270%27,directives:%270%27,execute:%270%27,intel:%270%27,libraryCode:%271%27,trim:%271%27%29,fontScale:14,j:1,lang:c%2B%2B,libs:!%28%29,options:%27-Ofast%27,selection:%28endColumn:1,endLineNumber:1,positionColumn:1,positionLineNumber:1,selectionStartColumn:1,selectionStartLineNumber:1,startColumn:1,startLineNumber:1%29,source:1%29,l:%275%27,n:%270%27,o:%27x86-64&#43;gcc&#43;8.3&#43;%28Editor&#43;%231,&#43;Compiler&#43;%231%29&#43;C%2B%2B%27,t:%270%27%29%29,k:50,l:%274%27,m:78.34710743801652,n:%270%27,o:%27%27,s:0,t:%270%27%29,%28g:!%28%28h:output,i:%28compiler:1,editor:1,fontScale:14,wrap:%271%27%29,l:%275%27,n:%270%27,o:%27%231&#43;with&#43;x86-64&#43;gcc&#43;8.3%27,t:%270%27%29%29,header:%28%29,l:%274%27,m:21.65289256198347,n:%270%27,o:%27%27,s:0,t:%270%27%29%29,k:50,l:%273%27,n:%270%27,o:%27%27,t:%270%27%29%29,l:%272%27,n:%270%27,o:%27%27,t:%270%27%29%29,version:4" title="[run]" aria-label="[run]"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> [run]</a></p>
<p>不過像是 int 只能顯示 i，其他複雜的顯示也不直觀，主要是因為 C++ 會對於型別做修飾 (Name mangling  )，這也是為何 C++ 能夠支援 function overloading，因為編譯過程中型別都會轉成獨一無二的表達方式所以不會造成衝突。</p>
<h1 id="demangle" class="article-heading">Demangle 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#demangle">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>在 <code>&lt;cxxabi.h&gt;</code> 中有提供方法可以讓經過 mangle 的型別轉回可讀性較高的字串。以下範例與上述提到的方法進行比較。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;iostream&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;string&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;typeinfo&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;cxxabi.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">template</span><span style="color:#ff79c6">&lt;</span><span style="color:#ff79c6">typename</span> T<span style="color:#ff79c6">&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">const</span> std<span style="color:#ff79c6">::</span>string get_type_name(<span style="color:#ff79c6">const</span> T variable) {
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> name <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">typeid</span>(variable).name();
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> status <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span><span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> demangled_name <span style="color:#ff79c6">=</span> abi<span style="color:#ff79c6">::</span>__cxa_demangle(name, <span style="color:#8be9fd;font-style:italic">NULL</span>, <span style="color:#8be9fd;font-style:italic">NULL</span>, <span style="color:#ff79c6">&amp;</span>status);
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>string ret{name};
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">if</span> (status <span style="color:#ff79c6">==</span> <span style="color:#bd93f9">0</span>) {
</span></span><span style="display:flex;"><span>        ret <span style="color:#ff79c6">=</span> std<span style="color:#ff79c6">::</span>string(demangled_name);
</span></span><span style="display:flex;"><span>        free(demangled_name);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> ret;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">namespace</span> OuO<span style="color:#ff79c6">::</span>QuQ {
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">struct</span> <span style="color:#50fa7b">Foo</span> { };
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">template</span> <span style="color:#ff79c6">&lt;</span><span style="color:#8be9fd">unsigned</span> <span style="color:#8be9fd">int</span> size<span style="color:#ff79c6">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">struct</span> <span style="color:#50fa7b">Bar</span> { };
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">using</span> Foo <span style="color:#ff79c6">=</span> OuO<span style="color:#ff79c6">::</span>QuQ<span style="color:#ff79c6">::</span>Foo;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span> () {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> a;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#ff79c6">typeid</span>(a).name() <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> get_type_name(a) <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    Foo b;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#ff79c6">typeid</span>(b).name() <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> get_type_name(b) <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    OuO<span style="color:#ff79c6">::</span>QuQ<span style="color:#ff79c6">::</span>Bar<span style="color:#ff79c6">&lt;</span><span style="color:#bd93f9">99</span><span style="color:#ff79c6">&gt;</span> c;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#ff79c6">typeid</span>(c).name() <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>    std<span style="color:#ff79c6">::</span>cout <span style="color:#ff79c6">&lt;&lt;</span> get_type_name(c) <span style="color:#ff79c6">&lt;&lt;</span> <span style="color:#f1fa8c">&#39;\n&#39;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><a href="https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAM1QDsCBlZAQwBtMQBGAFlICsupVs1qhkAUgBMAISnTSAZ0ztkBPHUqZa6AMKpWAVwC2tQVvQAZPLUwA5YwCNMxEAGYA7KQAOqBYXW0eoYmgj5%2BanRWNvZGTi4eisqYqgEMBMzEBEHGppyJKhG0aRkEUXaOzm6eCumZ2SF5NSVlMXFVAJSKqAbEyBwA5FKu1siGWADU4q466jXEmMxGU9jiAAwAgkMjY5iT03PWwMtrm5LDtKMGE1M6BACeXpjWNMcbWxc7ezrIAB4/zA48AA6BCvTZvDYETBGLzCKE3e6PWiLXYAFTBaFoNXGNXQIBAB1E42AmAIAH1EZgycijJgIJjsajxgA3DJ4AHsdqTdyyDbjfnjBkEQUIDIAKkFdGxNN2UwAIuNKXh0BBWcR2Q5OUCZRB2lNeesBeNrMKmgQDAo9gqALTcfUnI3IUXECVC8ZYIwiYDsdDUlFW8YAiggMlk37MMker3sCAy0jjWwAVQsFnjSZT8akADYzRa9a4DUbcfjCcBxvMCOIeTKq3L7XyBXgqOMILnLfL5eNVlyq4WjQKKwHiwSCOrRBAo6IfX7afm%2B/3xlR5nTJ97ML6ZXOHQLa9v%2BRWerRy6T65t3HWIesZQovMw%2BuMAPIGB/4gCKBlf3PnONHBlU4wAMVQVAv25OsCxOPdFWhWFmChL4DCxPBgBsdBjXoHE8AAL0wMEi1/f9pAyUDdwgt5zxOC1DkA4CAyfF8QHfV98SA1BT0gjYTXGT1rBbHseSgrjmFPfC8RQbphRuG5FQeJ4VWYdptRRXUvmksBBgAVh0Wh1JEgVhzQAxJOmaSSXJSkZzpBTVOmcZdK0nTBjI8FDQFVjxgcPT%2BQMiSbJ0GTHmVCAHEUnUexM2z7O03TnNE/FDOMnRTNJClZMs4LwqSyLNOipyDSg%2Bi3w/fEiOIG4AE5yuWQUvJ/MSEr8gK5PpULlMytScsc2qfKMxqzNSx50uQdrsvEByYvyht91JQ8u3Y89%2Bk6VgQH6DT%2BlIUx%2BlWdbUBWpKZDkHFul6WUzk4daCBW7b2k6ABrEANNWIQVu4dbNu20hdv6daFBAJ7Lq2xbSDgWAYEQcSYTwdgyAoelUEh6GQGAAAOVxSCoKGoWIX7gqu9bAWRYg7hW87SDQIxaXoB9aFYYnAdIVd2Dxhm8HmFJmUwX76cwH5kiMgYPpNZRmdYPAHGIDI7j0LASYu9UjFlzoaHoJg2A4Hh%2BEEYRRBQOQ5CEMXfsgTpUC8QouetXF5QkA6ZE4dxxmtB9XB%2BpIUg0CBzHqXJSHMFoKhcPIwn8OhvdCXwQ9of3YkqRo3cKYo6n0HJBCUApUlqUprHKGPA8UTOw8aTPo7aThOgUY6%2Bi4JaVrWjbma%2Bn5kaza0s24YlkGQcZkaBVwW1wQgSEmM74z0BHnGH1wy/GfbZBkC68Zu0h7se57%2Ble0gFazHv3CzVZXFcVYNPcZGNM4SReHenaVp%2Bv7SAB67gbBiAkAkrwjPIShya8KHY99/AiB52VowFgTMNYAHcJZeEVmvOuV9PorSGJwcY4DCAIHGE3FubcO5dx7i7e%2Bi9OgIAWFgFwuo14bwVlPIEZxypZizOVbgkgeDI13kfeu9Mvq33%2BoQ5eD0nrLX6Pg%2BBXCCGAyXoIyQb0G43zEddToHNsYBBANwIAA%3D" title="[run]" aria-label="[run]"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> [run]</a></p>
<p>可以從結果看到後者可讀性較高</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/ACtC-3cFVFsP6QcLV2K8_d7pOf3SfR4bWEjy5oM8KqVHXHST8h7ysiSwCAJd4-oZOfWB_v54ekhXZ5OSM36lAtLS0EhN-YoDXIkuRVkDPU6sH41P5jrtNhPYsvgnIeg55ZGXouiUQe-vblaoFGLo40Y315J0=w1708-h1112-no" alt='封面照片 - 執行結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">封面照片 - 執行結果</center>
    </figcaption>
  </figure>
</p>
<p>我發佈後才被 YouTube 推薦&hellip;，不過我最近也看一堆他的影片。<br>







 </p>
<h1 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://stackoverflow.com/a/19123821" title="C&#43;&#43; Get name of type in template" aria-label="C&#43;&#43; Get name of type in template"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> C++ Get name of type in template</a></li>
<li><a href="https://stackoverflow.com/a/4541470" title="Unmangling the result of std::type_info::name" aria-label="Unmangling the result of std::type_info::name"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Unmangling the result of std::type_info::name</a></li>
</ul>
 
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200508-miscellaneous0508/</link><pubDate>Fri, 08 May 2020 23:06:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200508-miscellaneous0508/</guid><description><![CDATA[
           <br/><p>考完囉，還有好多事@@</p>
          
            <p><a href="https://aben20807.github.io/posts/20200508-miscellaneous0508/"><img src="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200508-miscellaneous0508/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>考完囉，還有好多事@@</p>
<h1 id="天氣" class="article-heading">天氣 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>我是每天都要洗熱水澡的人，今天竟然不用開電熱水器就有熱水，賺。</p>
<p>天氣雖然熱，但是這幾天傍晚天空都很美 OuO</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pT6JsJO88Ew5z4vDATq6Ge3ZBKcdA0l2v4-fJ6mmZkkWYk23L2BMcP7TxH7nrq2-Oru5enZXfjSOGsXsvKMjFzGg1PbicmH2gOGuPUchRxdFmIKRu1fGyELFwYpWOcIMuI1ys49aeg=w1266-h949-no" alt='封面照片 - 5/6' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">封面照片 - 5/6</center>
    </figcaption>
  </figure>
</p>
<h1 id="考後反省" class="article-heading">考後反省 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%80%83%e5%be%8c%e5%8f%8d%e7%9c%81">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有一題 NPDA 確定錯，不過其他也不保證對 QuQ</p>
<p>題目跟答案如下：</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://gateoverflow.in/?qa=blob&amp;qa_blobid=15483797651626709437" alt='來源' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">來源</center>
    </figcaption>
  </figure>
  </p>
<p>我真的沒想到可以 push 任意 1~3 個這種作法，我的回答就說不能同時存 n 跟 3n 的資訊所以不是 Context Free 因此找不到 NPDA，寫這種答案都會很懷疑自己，因為推翻題目的解法之前考古都沒有過。有人可能只 push 3 個，這樣無法保證大於 n，可是這種應該會被部份給分吧。寫過題目的人可能才會意識到寫我這種的可能要給更多部份分 (自己講XDD)，可是我這種想的比較周全啊，結果卻是全錯 QuQ</p>
<h1 id="鋼琴推薦-ludovico-einaudi---nuvole-bianche" class="article-heading">鋼琴推薦 Ludovico Einaudi - Nuvole Bianche 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%8b%bc%e7%90%b4%e6%8e%a8%e8%96%a6-ludovico-einaudi---nuvole-bianche">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>我忘記之前有沒有分享過。這是我小時候 (大一 or 大二) 在 C++ 助教的 FB 發現他有分享，真的很耐聽，我可以重複這首邊做事一整天。歌名是義大利文，翻譯是 white clouds，不過若是翻成中文就變成白雲，雖然這個梗可能有年紀了，不過我這輩的應該都還是有聽過這個藝人，之後可能就可以直接用中文說歌名而不會有其他聯想了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/nGdLDnNyT3t-GAiJLcxPfNVIuoEl_EelGs9VBAgRQ6s0K37bK5cYnNc3UA5uY6fv98fC5VbQ96jzo5jtNJJDG-WenPQc-EaJdegb9xDOxDG2A8QvX-stQDuPKj5oGm6e-MQGrYc9jBU=w1292-h229-no" alt='Ludovico Einaudi - Nuvole Bianche' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Ludovico Einaudi - Nuvole Bianche</center>
    </figcaption>
  </figure>
</p>







 
<h1 id="圖床" class="article-heading">圖床 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%96%e5%ba%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>昨天突然發現，我可以把圖片用學校 google 帳號備份啊，這樣我可以直接傳原圖而且無限空間，之後的圖床也會改用 google photo 了，解釋起來麻煩，總之各種面向來說都比較方便 OuO</p>
<p>話說好像太多影片檔所以到現在還沒備份完，我都用長鏡頭拍老鼠，考驗演技 (x</p>
<h1 id="雜" class="article-heading">雜 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9b%9c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近晚上實驗試都剩下我一個，突然覺得有點孤單XDD</p>
 
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200505-miscellaneous0505/</link><pubDate>Tue, 05 May 2020 21:33:50 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200505-miscellaneous0505/</guid><description><![CDATA[
           <br/><p>要考試了好不想寫考古 (x</p>
          
            <p><a href="https://aben20807.github.io/posts/20200505-miscellaneous0505/"><img src="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200505-miscellaneous0505/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>要考試了好不想寫考古 (x</p>
<h1 id="天氣" class="article-heading">天氣 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>五月突然變得超熱，這樣六、七、八月要怎麼過？QuQ</p>
<h1 id="人生好難xd" class="article-heading">人生好難XD 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%ba%ba%e7%94%9f%e5%a5%bd%e9%9b%a3xd">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>人真的是頗複雜的動物，思想難以輕易被解讀，內心會自己額外腦補一段，但是又怕是自己過度解讀造成的誤解。</p>
<p>會變成木頭不是沒有道理，因為感覺大家好像都想說什麼卻又沒說出來，我不太想製造不必要的麻煩，所以盡量不要去過度解讀，就算有也只放在心裡當做腦補區塊就是。但是好像又需要把握什麼。老實講這是我在住宿公寓看到一個長的算漂亮的女生卻把整包回收丟到一般垃圾之後突然產生的感想，若是不把握之後遇到都是這種的怎麼辦? 有這個聯想是有些奇怪XDD</p>
<p>高中班導曾經在上課提到挑情人的數學問題 <a href="https://en.m.wikipedia.org/wiki/Secretary_problem" title="Secretary problem" aria-label="Secretary problem"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Secretary problem</a>，就像是當你放棄了目前的，那有一定機率再也遇不到更好的。</p>
<p>真是煩</p>
<blockquote>
<p>人生好難XD</p>
</blockquote>
<p>終於漸漸知道前室友為什麼每天掛在嘴邊了，原來是每天都在取捨的部份 OuO</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://images.unsplash.com/photo-1588671571787-aad772fd7e1e?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1934&amp;q=80" alt='封面照片 - 5/3 全家爬員林藤山步道隨手拍' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">封面照片 - 5/3 全家爬員林藤山步道隨手拍</center>
    </figcaption>
  </figure>
</p>
<p>這代表我現在是有這個煩惱？果然是因為事情都擠在一起不想做，喜歡胡思亂想的部份啊。</p>
<h1 id="資格考的意義" class="article-heading">資格考的意義？ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b3%87%e6%a0%bc%e8%80%83%e7%9a%84%e6%84%8f%e7%be%a9">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>或許有這個疑慮代表我還是屁孩。</p>
<p>到底為什麼博士班需要考資格考，而且是筆試基礎科目。若是為了在就讀期間確認有一定能力或許是最好的解答，但我不太能認可，沒有能力還能讀嗎？這些考科都算是系上的必修科目，而且老實說，課堂的考試可能都還比資格考難。</p>
<p>必修的考試會出的繁瑣 (至少 compiler 是這樣)，主要是讓學生能夠靜下心在考試當下思考所學，雖然多但是會發現慢慢寫還是寫得完，除非是沒讀書。</p>
<p>但是資格考好像不是這樣，而是流於寫考古題來通過考試的形式，這讓我非常好奇資格考的意義。不過也沒管道可以反應，也只能繼續考下去。</p>
<p>我算是蠻會考試的，但都讀到這裡了還要考，對我來說只是複習一下，但不是說臺灣教育就是敗在考試制度嗎？真的都沒有人懷疑？好吧，我還只是個屁孩 OuO</p>
<p>希望這次考試順利通過 (被揍</p>
<h1 id="手機成癮" class="article-heading">手機成癮 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%89%8b%e6%a9%9f%e6%88%90%e7%99%ae">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>有點嚴重，前幾天睡前都在重新整理 YouTube 看有什麼沒看過的影片。覺得這樣不行，所以最近晚上會更早把手機開飛航，早上時也會起床一段時間再關飛航，聯絡不到先不要緊張，我還活著的機率頗大 OuO</p>
<h1 id="舊部落格" class="article-heading">舊部落格 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%8a%e9%83%a8%e8%90%bd%e6%a0%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>話說我的<a href="https://aben20807.blogspot.com/" title="舊部落格" aria-label="舊部落格"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 舊部落格</a>竟然已經破20萬瀏覽，每天還是會有超過100人造訪，可能是因為我持續透過 IFTTT 更新，所以 SEO 還沒放棄我的網站，相較之下，這個網站觀看人數慘不忍睹XD</p>
<p>前幾天，去維護了一下那個網站，至少有把 LikeCoin 的按鈕修好，該貢獻一下了吧 (x</p>
        ]]></description></item><item><title>Shutil</title><link>https://aben20807.github.io/posts/20200420-shutil/</link><pubDate>Mon, 20 Apr 2020 16:20:49 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200420-shutil/</guid><description><![CDATA[
           
          
            <p><a href="https://aben20807.github.io/posts/20200420-shutil/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200420-shutil/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>在 <a href="https://github.com/aben20807/local-judge" title="local-judge" aria-label="local-judge"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> local-judge</a> 中遇到一個關於檔案權限 (Filemode) 的問題，因為檔案權限不同導致 git 比對的結果會顯示兩個輸入不同：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>old mode <span style="color:#bd93f9">100644</span>
</span></span><span style="display:flex;"><span>new mode <span style="color:#bd93f9">100755</span>
</span></span></code></pre></div><p>原本我是用 subprocess 在比對之前執行 <code>chmod</code>，效果跟我想的是一樣的。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>chmod <span style="color:#ff79c6">--</span>reference<span style="color:#ff79c6">=</span>answer_filepath output_filepath
</span></span></code></pre></div><p>但是在解決另外一個複製的問題時，意外找到 <a href="https://docs.python.org/3/library/shutil.html#module-shutil" title="shutil" aria-label="shutil"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> shutil</a>，這個工具提供一些檔案複製的函式，其中就有複製檔案權限的，而且竟然是 build-in module，因此我後來改用這個了。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>copymode(answer_filepath, output_filepath)
</span></span></code></pre></div><p>感覺雖然自己已經算是很會找現有的工具了，但是還是很多東西沒看過呢 OuO</p>
        ]]></description></item><item><title>雜記</title><link>https://aben20807.github.io/posts/20200413-miscellaneous/</link><pubDate>Mon, 13 Apr 2020 21:06:45 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200413-miscellaneous/</guid><description><![CDATA[
           <br/><p>明明事情很多，卻無所事事游手好閒。</p>
          
            <p><a href="https://aben20807.github.io/posts/20200413-miscellaneous/"><img src="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200413-miscellaneous/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>明明事情很多，卻無所事事游手好閒。</p>
<h1 id="天氣" class="article-heading">天氣 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%a9%e6%b0%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近天氣很常太陽很大，但卻感覺不到熱，只有陽光刺眼，可能是因為在同時冷風狂吹。這種天氣老實說很像之前去的美西那樣，但我又深怕是因為時過多年，大腦已經擅自將記憶修改成這樣的天氣會讓我想到那裡。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/zG-bOAF04jTSbeO54kPpSXKcX5gxErxulpnFLLVKT9JLKBGiyOom_EVtKqKmaqElN83YhAdb3AZsmpSY-L2qj-MnSwqDFflzl7iYbho5Gm-PsXgma31Lrt2JNv50TgAmxOCu8Y9peoI=w2400" alt='封面圖片 4/13 9:07 AM' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">封面圖片 4/13 9:07 AM</center>
    </figcaption>
  </figure>
</p>
<p>近期看到 FB 上許多認識的人去國外讀研究所，說認識其實是不算熟的人，僅僅是我們互相知道有對方這樣。感覺當初我沒有考慮是因為我太膽小了，害怕失敗，現在讀博之後這些問題又再一次出現，或許連留在成大也是上述那些問題，想自己未來要幹麻真難。</p>
<p>也許因為教別人是我逃不開的舒適圈，習慣不了被人拯救的自己，相對的也限制我成長的速度。不過世界上的強者太多，就拿 Google Code Jam 2020 Round 1A 來說，在兩個半小時中我好不容易才擠出兩題的最小測資的暴力解，結束後以為我再也不會碰這個了 (x)，結果因為近期無力做事，所以去找了一下別人的講解，我只有聽邏輯的部份沒有看他的程式碼，他邏輯解釋蠻清晰的，所以我就照著這個邏輯寫，結果兩題就都拿到全對了。附上<a href="https://www.youtube.com/watch?v=OlpC2d1Odrs" title="講解影片連結" aria-label="講解影片連結"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 講解影片連結</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/Ft2HHye-9TCm-aHoORISDTXKbT8zaO1enDNm2jwl201gfX62yQafxhT1239-uQ7u_n7bpNujZ6u7LFJtrTLd-5hx0CF1Rw_XS4BfKhLqjHivSVMWJB7MjmNdWEjEZqDfLfhT1yr3Kec=w2400" alt='實力差距' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">實力差距</center>
    </figcaption>
  </figure>
</p>
<p>讓我想起這幾天實驗室學長再跟新生面試時提到</p>
<blockquote>
<p>重要的是想法，用什麼工具來實現都是其次</p>
</blockquote>
<h1 id="手遊-非業配" class="article-heading">手遊 (非業配) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%89%8b%e9%81%8a-%e9%9d%9e%e6%a5%ad%e9%85%8d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>老實說，可能是因為最近沈迷新手遊，不過這款真的是我目前玩到我覺得最可以的手機遊戲，跟現在大部分都已經免洗化一兩年就砍掉的那種不一樣。它就是「明日方舟 Arknights」，老實說去年吧就看到另外一個學長在玩，那時候覺得塔防遊戲就都那樣，結果現在玩起來真的有驚豔到，界面流暢度一流 (可能是因為我之前都玩雷亞的每個都卡到爆炸)，玩法真的充滿變化，完全突破我的想像。</p>
<p>最令我印象深刻的是它的自動打怪模式可以中途接手，所以如果玩到一半發現有更快的解法可以臨時接手改變陣行。</p>
<p>可惜的是沒有掛機。但是，這遊戲讓我重新思考掛機的必要性，老實說掛機已經不算是遊玩的一部分，或許這是因為現在大家時間越來越零碎的產物，但是它犧牲了遊戲的體驗，玩家變成玩的是掛機模擬後的結果，中間的過程變得不再重要。是這遊戲讓我意識到過程的重要性。(雖然我是因為刪了不能掛機的 Evil Hunter Tycoon 才找到這款&hellip;)</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/8Hr9P9sQx12ty-3wFnjoatYcOlEngUYxyikB0FZOEaCinXu1okPH-8PiGvob4PP5_PouZ-elcnFTTuUUjpp8rKiDVZt11ZPsxMLugX5SuD68t2-uKchZpfRvdXAhTrmGl7qavQsiPBk=w2400" alt='兩隻能天使 OuO' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">兩隻能天使 OuO</center>
    </figcaption>
  </figure>
</p>
<h1 id="結語" class="article-heading">結語 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%aa%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>總之這幾天算是都在回課程的 email，然後主要進度都沒啥進展，paper 頗難寫，太多次都是手邊在忙時有想法，可是動筆時又卡住，可能跟兩個東西有關，第一，英文太爛，第二，太久沒寫東西，基於這些理由想到乾脆之後不定期發一下雜記 (雖然原本就是不定期 OuO)</p>
        ]]></description></item><item><title>20200202</title><link>https://aben20807.github.io/posts/20200202-20200202/</link><pubDate>Sun, 02 Feb 2020 11:14:20 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20200202-20200202/</guid><description><![CDATA[
           <br/><p>Palindrome!</p>
          
            <p><a href="https://aben20807.github.io/posts/20200202-20200202/"><img src="https://drive.google.com/uc?export=view&amp;id=12Y9AlAEvGKF87LKqiDW_5waH4inUmwQN" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20200202-20200202/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>Palindrome!</p>
<p>想當年，高中程式設計上機考最後一題就是迴文，當時能帶大抄，剛好有迴文所以就直接貼上了，<br>
記得打了一堆自己不太懂的程式碼。當時我左邊的同學霸氣不帶大抄，雖然他最後一題沒寫出來，不過卻令我相當佩服呢。</p>
<p>啊，完蛋，是字串反轉還是迴文判斷啊@@，算了，小時候的事了(x</p>
<p>因應時節(?)，所以寫了一個簡單的迴文檢測程式。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdlib.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;string.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>(<span style="color:#8be9fd">int</span> argc, <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>argv[]) {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>s <span style="color:#ff79c6">=</span> strdup(argv[<span style="color:#bd93f9">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> len <span style="color:#ff79c6">=</span> strlen(s);
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> mid <span style="color:#ff79c6">=</span> len <span style="color:#ff79c6">/</span> <span style="color:#bd93f9">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> mid; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#ff79c6">if</span> (s[i] <span style="color:#ff79c6">!=</span> s[len <span style="color:#ff79c6">-</span> <span style="color:#bd93f9">1</span> <span style="color:#ff79c6">-</span> i]) {
</span></span><span style="display:flex;"><span>            printf(<span style="color:#f1fa8c">&#34;Not Palindrome QuQ</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#ff79c6">goto</span> exit;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;Palindrome! OuO</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">exit</span>:
</span></span><span style="display:flex;"><span>    free(s);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o palindrome palindrome.c
</span></span><span style="display:flex;"><span>$ ./palindrome <span style="color:#bd93f9">20200202</span>
</span></span><span style="display:flex;"><span>Palindrome! OuO
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ ./palindrome <span style="color:#bd93f9">20200203</span>
</span></span><span style="display:flex;"><span>Not Palindrome QuQ
</span></span></code></pre></div><p>下次迴文，要等到 20211202。再下一次，20300302。</p>
        ]]></description></item><item><title>Hugo v0.60</title><link>https://aben20807.github.io/posts/20191201-hugo-0-60/</link><pubDate>Sun, 01 Dec 2019 17:26:34 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191201-hugo-0-60/</guid><description><![CDATA[
           <br/><p>記錄一下 hugo 的改變 QuQ</p>
          
            <p><a href="https://aben20807.github.io/posts/20191201-hugo-0-60/"><img src="https://drive.google.com/uc?export=view&amp;id=1jp6mt3-fx1CAz5SIe5UPlUTuQTdAku9l" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191201-hugo-0-60/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>記錄一下 hugo 的改變 QuQ</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>因為實在改的有點多東西，直接在 FB 發(抱)文(怨)又有點沒架構，所以乾脆來個小整理。另外這也不是全部，主要是我有遇到的 QuQ</p>
<p>這裡主要是從 0.59 到 0.60   的一些記錄。</p>
<h1 id="不同之處" class="article-heading">不同之處 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%8d%e5%90%8c%e4%b9%8b%e8%99%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="parser" class="article-heading">Parser 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#parser">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>最大不同就是 markdown parser 從原本的 <a href="https://github.com/russross/blackfriday" title="Blackfriday" aria-label="Blackfriday"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Blackfriday</a> 換成使用 <a href="https://github.com/yuin/goldmark/" title="Goldmark" aria-label="Goldmark"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Goldmark</a> 為預設了。所以有一堆是用 regex 改的內容全都要再改規則＠＠，例如 <code>&lt;img xxx /&gt;</code> 這類的 self-closing tags   把最後的 <code>/</code> 去掉了變成 <code>&lt;img xxx&gt;</code>，所以剛剛是看不到圖片的。我已經改成讓 <code>/</code> 可有可無了&hellip;</p>
<h2 id="footnote" class="article-heading">Footnote 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#footnote">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Footnote 的部份被大改了，產生的 html 跟原本的不太一樣，然後 0.60.1 好像有一些修改   ，所以可能還要再等等 QuQ，目前 snap 最新還在 0.60.0 所以還不能返回 (<code>footnoteAnchorPrefix</code>, <code>footnoteReturnLinkContents</code> 也還沒看到實作 )。之後還要加入 smooth scroll 讓捲動有動畫而不是直接跳 (這邊我也是用 regex)。</p>
<h2 id="預設不可以在-markdown-中使用-html" class="article-heading">預設不可以在 markdown 中使用 html 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%90%e8%a8%ad%e4%b8%8d%e5%8f%af%e4%bb%a5%e5%9c%a8-markdown-%e4%b8%ad%e4%bd%bf%e7%94%a8-html">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>如果有加一些非 markdown 語法的 html 的話預設會變成 <code>&lt;!-- raw HTML omitted --&gt;</code><br>
(例如從 google 雲端嵌入 pdf 檔案之類的)，如果想要修改這個預設   的話可以在 config.tmol 裡面加入</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-toml" data-lang="toml"><span style="display:flex;"><span>[markup]
</span></span><span style="display:flex;"><span>[markup.goldmark]
</span></span><span style="display:flex;"><span>[markup.goldmark.renderer]
</span></span><span style="display:flex;"><span>unsafe = <span style="color:#ff79c6">true</span>
</span></span></code></pre></div><h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>J 個改變的速度其實有點小惱人，每次都想棄用 snap，但換個想法，這是走在世界的尖端啊 (x</p>
 
        ]]></description></item><item><title>Programming Sense (2)</title><link>https://aben20807.github.io/posts/20191118-programming-sense-2/</link><pubDate>Mon, 18 Nov 2019 11:36:33 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191118-programming-sense-2/</guid><description><![CDATA[
           <br/><p>結果因為太多項了導致右邊的目錄超出邊界，所以還是要拆成兩篇。QuQ</p>
          
            <p><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/"><img src="https://images.unsplash.com/photo-1539392253103-78d190be0116?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=2689&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>結果因為太多項了導致右邊的目錄超出邊界，所以還是要拆成兩篇。QuQ</p>
<p><a href="https://aben20807.github.io/posts/20191116-programming-sense/" title="{{ 上一篇傳送門：Programming Sense (1) }}" aria-label="{{ 上一篇傳送門：Programming Sense (1) }}" >{{ 上一篇傳送門：Programming Sense (1) }}</a></p>
<h1 id="抽像化-abstractionhttpsenwikipediaorgwikiabstraction_computer_science" class="article-heading">抽像化 (<a href="https://en.wikipedia.org/wiki/Abstraction_%28computer_science%29" title="Abstraction" aria-label="Abstraction"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Abstraction</a>) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8a%bd%e5%83%8f%e5%8c%96-abstractionhttpsenwikipediaorgwikiabstraction_computer_science">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>盡量的抽象化自己的程式，最簡單的方式就是把相關的程式碼包成一塊，而不是散在主函式中，包起來的動作通常稱作封裝 (<a href="https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29" title="Encapsulation" aria-label="Encapsulation"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Encapsulation</a>)，也有實作成 ADT (<a href="https://en.wikipedia.org/wiki/Abstract_data_type" title="Abstract data type" aria-label="Abstract data type"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Abstract data type</a>) 一說。</p>
<p>主要目的就是讓程式碼可重複使用，並讓簡化主函式的流程。抽象化過程要想著如何讓別人 (包括未來的自己) 使用自己的程式碼。可以透過將函式切成一個函式只做一件事讓可重複利用率提高。</p>
<p>例如實作一個 Queue 時，可以將存放的結構 (陣列)、操作指標 (front, rear) 放在同一個 <code>struct</code> 中，甚至將 enqueue 和 dequeue 做成函式指標 (function pointer) 一起放入 <code>struct</code> 中。注意，以下程式碼尚未測試過&hellip;</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// 結構定義
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">struct</span> Queue {
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd">char</span> que[<span style="color:#bd93f9">26</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd">int</span> front;
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd">int</span> rear;
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd">void</span> (<span style="color:#ff79c6">*</span>enque)(<span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">*</span>, <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span> a);
</span></span><span style="display:flex;"><span>  <span style="color:#8be9fd">void</span> (<span style="color:#ff79c6">*</span>deque)(<span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">*</span>);
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// 初始化
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">*</span><span style="color:#50fa7b">init_queue</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">*</span>ret <span style="color:#ff79c6">=</span> calloc(<span style="color:#ff79c6">sizeof</span>(<span style="color:#ff79c6">struct</span> Queue), <span style="color:#bd93f9">1</span>);
</span></span><span style="display:flex;"><span>  ret<span style="color:#ff79c6">-&gt;</span>front <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>  ret<span style="color:#ff79c6">-&gt;</span>rear <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">-</span><span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>  ret<span style="color:#ff79c6">-&gt;</span>enque <span style="color:#ff79c6">=</span> enque; <span style="color:#6272a4">// 須另外定義 enque 函式
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>  ret<span style="color:#ff79c6">-&gt;</span>deque <span style="color:#ff79c6">=</span> deque; <span style="color:#6272a4">// 須另外定義 deque 函式
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>  <span style="color:#ff79c6">return</span> ret;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// 使用
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">*</span>q <span style="color:#ff79c6">=</span> init_queue();
</span></span><span style="display:flex;"><span>  q<span style="color:#ff79c6">-&gt;</span>enque(q, <span style="color:#f1fa8c">&#39;A&#39;</span>);
</span></span><span style="display:flex;"><span>  q<span style="color:#ff79c6">-&gt;</span>deque(q);
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="寫程式的過程" class="article-heading">寫程式的過程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%af%ab%e7%a8%8b%e5%bc%8f%e7%9a%84%e9%81%8e%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="思考" class="article-heading">思考 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%80%9d%e8%80%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>不先思考就直接寫程式的話是很危險的，通常最後很容易落得需要打掉重練的情況，預先思考可以避免掉一些盲點。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1uYiTbRQ-bmFDkJE-MC_z-HyemZzzz6kA" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h3 id="待解決的問題" class="article-heading">待解決的問題 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%85%e8%a7%a3%e6%b1%ba%e7%9a%84%e5%95%8f%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>首先得理解題目或問題的要求，如果有提供範例輸入輸出的話請一定要按照給定的格式，不能多也不能少。不過這在現實中比較少見，很多情況是要去設計防呆的。</p>
<p>直覺的解法一定有，但是通常會有大量的迴圈拖慢程式執行，儘管現在的硬體好到讓我們感覺不出差異，但是還是需要正視這個問題，因為當需求一擴大，效能瓶頸就會是一個大問題。</p>
<p>以下題目來自 108-1 成大資工 資料結構作業三 (這裡放上題目，不過我不打算解它，雖然這樣會比較完整，可是我真的沒空 QuQ)</p>
 
<h3 id="是否能簡化" class="article-heading">是否能簡化 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%98%af%e5%90%a6%e8%83%bd%e7%b0%a1%e5%8c%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>以範例問題來說，題目會給定 N 個團體，每個群體的人數不定。最直觀的方法是使用二維陣列存放這 N 個團體各自的成員，要檢查 A 是否屬於某個群體時使用雙層迴圈去搜尋這個二維陣列，都找不到則代表不屬於任何團體。</p>
<p>然而這樣每次搜尋都要耗費不少資源，甚至需要不少程式碼。更好的作法可以對題目的細節做解讀，題目提到成員只會有 A~Z 所以我們可以直接產生一個長度為 26 的整數陣列 <code>people_group_ids</code> (更好的方式是使用 dict 不過 C 沒有內建) 來存放這 26 的人的團體編號，為了方便初始化，可以讓 0 代表沒有團體接著往上累加，讀取到範例輸入讀取到 3 A B C 時，在陣列的 0 1 2 位置上填入 1，等到要查詢 A 的團體編號時就可以使用 <code>people_group_ids[0]</code> 來查詢了，原本 $O(nm)$ 的複雜度直接降為 $O(1)$，程式碼上也較為清楚。另外關於 A 對應 0 要怎麼寫，這就需要對字元有一些了解，可以觀察一下 <a href="https://en.wikipedia.org/wiki/ASCII" title="ASCII 表格" aria-label="ASCII 表格"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ASCII 表格</a>，<code>person = 'B';</code> 的話我們只需要使用 <code>person - 'A'</code>; 就可以得到 <code>1</code> 了，把這個操作放到函式中增加可讀性的話更棒如下。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">get_group_id</span>(
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> people_group_ids,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span> person) {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">return</span> people_group_ids[person <span style="color:#ff79c6">-</span> <span style="color:#f1fa8c">&#39;A&#39;</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">void</span> <span style="color:#50fa7b">set_group_id</span>(
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> people_group_ids,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span> person,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">int</span> group_id) {
</span></span><span style="display:flex;"><span>  people_group_ids[person <span style="color:#ff79c6">-</span> <span style="color:#f1fa8c">&#39;A&#39;</span>] <span style="color:#ff79c6">=</span> group_id;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>插隊的話只需要從 queue 的頭找 <code>group_id</code> 相同的人即可。</p>
<h3 id="事前設計" class="article-heading">事前設計 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%ba%8b%e5%89%8d%e8%a8%ad%e8%a8%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>這裡表達的不是一定要畫出 UML 或是先做好完整架構圖，而是有一點架構就可以，有簡易的流程圖當然更棒，但是我自己通常會在腦中進行，遇到比較大型的才會拿一張紙畫一下流程，這裡推薦 <a href="https://www.draw.io/" title="draw.io" aria-label="draw.io"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> draw.io</a> 這個完美的應用程式，可以應付各種圖。</p>
<h2 id="小步前進持續驗證" class="article-heading">小步前進，持續驗證 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b0%8f%e6%ad%a5%e5%89%8d%e9%80%b2%e6%8c%81%e7%ba%8c%e9%a9%97%e8%ad%89">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><blockquote>
<p>寫大程式要像西敏寺那樣的大教堂一樣，先從一個功能完整的小教堂開始，然後把小部分拆掉蓋個更大更豪華的；如果一次就想蓋個超大的教堂，最後可能弄成一團廢墟，連禮拜的功能都沒有。<br>
&mdash; Yoda 生活筆記 (Lee You Tang)  </p>
</blockquote>
<p>等萬事俱備只欠打扣時我們就可以開始寫程式囉，最有效率的流程就是小步前進逐步驗證，不要一次就把程式打完，這樣執行發現跟結果不一樣時，問題就會非常難找，是輸入錯誤還是中間的邏輯錯誤或是輸出錯誤，若沒有逐步驗證的話，哪個階段出問題真的很難定位。</p>
<p>我的做法會先將輸入部分完成，並且印出結果確認是否跟想像中的結果一模一樣，這裡必須要注意是否有奇怪的換行，或是輸出的順序不對等等問題，因為 C 的輸入會有許多隱藏的陷阱，也許是把空格也當成一個成員之類的。操作的指令也是把讀到的直接印出來確認。驗證完畢才繼續往下一步走。 細心檢查每一個魔鬼細節才能達到最終目的。</p>
<p>強烈建議每一次的驗證完後搭配 git commit 把階段性成果記錄下來。</p>
<p>enque 跟 deque 一樣分開驗證，這時候我們需要加上一些輔助的程式碼幫助我們印出 queue 的內容，來保證每次的操作都是正確的。例如：<code>print_queue()</code>。</p>
<h1 id="除錯-debug" class="article-heading">除錯 (Debug) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%99%a4%e9%8c%af-debug">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="編譯訊息" class="article-heading">編譯訊息 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b7%a8%e8%ad%af%e8%a8%8a%e6%81%af">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>編譯器產生的訊息相當重要，而且不是只有 Error 重要，Warning 也是一大關鍵，所以千萬不要忽略這些警告，反而要將這些警告視為錯誤，這裡推薦在編譯的時候加上 <code>-Wall -Werror</code> 這樣那些警告就會導致編譯錯誤了。</p>
<h2 id="設計測資" class="article-heading">設計測資 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%ad%e8%a8%88%e6%b8%ac%e8%b3%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>題目給的測資一定很少，但是實際會遇到的情況相當多，所以一定要多設計幾組測試資料，可以利用上一篇提到的重新導向 (Redirection) 的方式才不用每次都要重新手打，照理說可以再加上 Makefile 來幫忙，可以參考我的另外一篇  。</p>
<h2 id="註解大法" class="article-heading">註解大法 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e8%a7%a3%e5%a4%a7%e6%b3%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>用註解部份程式碼來找出錯誤是最簡單的方式，但這我通常是用來幫別人抓錯的時候會用，因為我不確定其是否使用逐步驗證的方式，因此只有結果錯誤，但是中間的過程無法直接看出是哪邊有問題，利用註解的方式隔離未驗證的程式碼來逐步比對。</p>
<h2 id="printf-好夥伴" class="article-heading"><code>printf</code> 好夥伴 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#printf-%e5%a5%bd%e5%a4%a5%e4%bc%b4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p><code>printf()</code> 是一個相當神奇且好用的函式，其底層非常複雜歡迎有興趣的人可以參考  。我的習慣是在實作不同資料結構時都會做一個對應的函式來印出其內容以方便驗證。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd">void</span> <span style="color:#50fa7b">print_queue</span>(<span style="color:#ff79c6">struct</span> Queue <span style="color:#ff79c6">const</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> q) {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> <span style="color:#bd93f9">26</span>; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;%c &#34;</span>, q<span style="color:#ff79c6">-&gt;</span>que[i]);
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  printf(<span style="color:#f1fa8c">&#34;</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="gdb" class="article-heading">GDB 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#gdb">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>GDB (<a href="https://www.gnu.org/software/gdb/" title="The GNU Project Debugger" aria-label="The GNU Project Debugger"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> The GNU Project Debugger</a>) 是 segmentation fault 發生時的好夥伴，它可以幫助你找出程式是在哪裡發生錯誤，這樣就可以去找出對應的解決方法。關於原生的 GDB 有點樸素這點我之前有寫過一篇介紹 <a href="https://github.com/cyrus-and/gdb-dashboard" title="GDB dashboard" aria-label="GDB dashboard"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> GDB dashboard</a> 可以參考  。</p>
<h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>突然發現自己好像也不是這麼悠閒，不過還是把這些趕出來了，可能會有錯 (範例打錯或錯字) 再請大家幫忙抓漏 了，感恩 QuQ。很多部份也都沒有附上範例，這可能之後有需要的話可以補上。歡迎討論也歡迎在我有空的時候找我幫忙 review 程式碼，這對我來說也是一種成長的來源吧。身邊如果有人願意幫你 review 的話請盡量把握，也在此感謝曾經幫我看過程式碼的貴人們。</p>
 
        ]]></description></item><item><title>Programming Sense (1)</title><link>https://aben20807.github.io/posts/20191116-programming-sense/</link><pubDate>Sat, 16 Nov 2019 08:53:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191116-programming-sense/</guid><description><![CDATA[
           <br/><p>主要是我自己編寫邊學慢慢累積的，說真的也找不太到相關的資源，要搜尋也不知道下什麼關鍵字，問別人其實也很難在一時半刻裡解釋清楚，所以就拿來發一篇吧 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20191116-programming-sense/"><img src="https://images.unsplash.com/photo-1539392156992-268f1e62f111?ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=2689&amp;q=80" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191116-programming-sense/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>主要是我自己編寫邊學慢慢累積的，說真的也找不太到相關的資源，要搜尋也不知道下什麼關鍵字，問別人其實也很難在一時半刻裡解釋清楚，所以就拿來發一篇吧 OuO</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>期中加資格考的爆炸禮拜終於結束，其實比我想得還要容易，雖然我都很沒把握，因為我幾乎不狂寫考古題，而是以觀念取勝，有沒有取到就不確定了。</p>
<p>寫程式很簡單，拿來解決問題就有些難度，最難的是用優雅易懂且嚴謹的程式碼來解決問題，寫得好絕對遠遠好過寫得快。</p>
<p>關於這個主題，其實很早就打算寫了，只是一直擱置連架構都沒出來，直到最近有幫同學看一下程式碼，所以覺得這個觀念還是頗為重要，所以整理一下發個文，主要也希望可以幫助比較沒經驗的人，但也不限於此，我相信也會有畢業於資訊工程相關科系而沒有這些觀念。</p>
<p>當然在整個程式界我也不是老手，幾乎沒在開源貢獻，更沒參與過業界，所以很多的概念是我在大學時期慢慢累積起來的，主要來源就是一些開源的專案還有自身的經驗，不能說涵蓋得很全面，也不是說我這套最棒了大家看了之後一定要照這些規則，這篇從來就不是規則，而是我在寫了幾年程式後整理出來讓自己開發更為流暢的一些想法，希望大家能夠來互相討論給與意見。</p>
<p>架構會以不同的主題當作探討，雖然全部都是在講 programming sense，內容因為相當廣泛，切成不同文章又會讓某些部分零碎化，所以請善用標題跟右方的目錄來幫助閱讀。順序以 &ldquo;工具&rdquo;，&ldquo;coding style&rdquo;，&ldquo;習慣養成&rdquo;，&ldquo;抽像化&rdquo;，&ldquo;寫程式的過程&rdquo;，&ldquo;除錯&rdquo;。並主要以 C 語言當作講解範例。</p>
<p>雖然雜但是請記得一個中心思想：</p>
<blockquote>
<p>用程式碼來溝通 (Communication Through Code)</p>
</blockquote>
<h1 id="工具" class="article-heading">工具 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b7%a5%e5%85%b7">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>「工欲善其事，必先利其器」《論語·衛靈公》 善用工具真的頗為重要，使用得當可以大量減少重複性的動作，如果是寫一般的小程式的話我會建議可以玩看看 <a href="https://en.wikipedia.org/wiki/Vim_%28text_editor%29" title="VIM" aria-label="VIM"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> VIM</a> 設定可以參考<a href="https://github.com/aben20807/aben20807.vim" title="我的設定" aria-label="我的設定"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 我的設定</a>或直接問我，可以大量減少手部的負擔。大型一點的我會推薦 <a href="https://code.visualstudio.com/" title="VSCode" aria-label="VSCode"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> VSCode</a>，因為內容會偏多所以我就用一個副標題來說明了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1kYWGLrrnkeQaVo2OwbMZQddDu6iIn-do" alt='vi… ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">vi… </center>
    </figcaption>
  </figure>
  </p>
<h2 id="vscode" class="article-heading">VSCode 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#vscode">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>VSCode 其實不太像一般的 IDE，它更像一個單純的文字編輯器，只是有相當多好用的外掛功能，基本的包含了對各種語言的程式碼的關鍵字 highlight、檔案架構樹、搜尋取代功能、編碼轉換、coding style 自動重新排版。以下附上一些我目前服役中的外掛功能，使用方法就請各位自己前往查看了：</p>
<ul>
<li><code>alefragnani.bookmarks</code> <a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.Bookmarks" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>： 可以在想要標記的程式碼上加入書籤，這個在瀏覽大型專案需要跳來跳去 trace 程式碼下可以幫很大的忙，至少不用再記是第幾行了。</li>
<li><code>coenraads.bracket-pair-colorizer</code> <a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：連結對應的括號，這在括號一堆的語言 (C, C++, Java, Lisp) 相當有幫助，可以一眼就看出在哪個有效範圍 (scope)。</li>
<li><code>streetsidesoftware.code-spell-checker</code> <a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：幫忙檢查英文拼字。</li>
<li><code>tabnine.tabnine-vscode</code> <a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：程式碼補全建議。</li>
<li><code>gruntfuggly.todo-tree</code> <a href="https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：收集註解中有 <code>TODO</code> 標籤的地方。</li>
<li><code>donjayamanne.githistory</code> <a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：Git 系列。</li>
<li><code>eamodio.gitlens</code> <a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：Git 系列。</li>
<li><code>zhuangtongfa.material-theme</code> <a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：耐看主題。</li>
<li><code>vscode-icons-team.vscode-icons</code> <a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" title="🔗" aria-label="🔗"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 🔗</a>：美美的檔案圖示。</li>
</ul>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1YrpZ2ktFpMxR3Y7MZM0zBrt4DtRFNmga" alt='名稱拿去搜尋即可' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">名稱拿去搜尋即可</center>
    </figcaption>
  </figure>
</p>
<h2 id="shell" class="article-heading">Shell 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#shell">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>很多指令都是可以幫助懶惰的人，目前我還沒有遇過我想要但是沒有的指令。</p>
<h3 id="重新導向-redirection" class="article-heading">重新導向 (Redirection) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%87%8d%e6%96%b0%e5%b0%8e%e5%90%91-redirection">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>寫程式時會常使用重新導向 (Redirection) 的方式來減少標準輸入 (stdin) 的次數，用法也相當直觀，只需要先將測試輸入先打在一份文檔 (例如：input.txt) 中，再使用以下指令執行程式即可。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./queue &lt; input.txt
</span></span></code></pre></div><p>若要把標準輸出 (stdout) 存到另一份文件時呢，當然也是使用重新導向。這適合在輸出很多時或是需要搜尋結果時使用。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ ./queue &lt; input.txt &gt; output.txt
</span></span></code></pre></div><h1 id="coding-style" class="article-heading">Coding Style 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#coding-style">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這是一個看似微小卻非常重要的細節，尤其是需要別人幫忙 review 甚至是合作時都需要事先講好共用的 coding style，一來格式統一閱讀時不需要轉換，二來可以避免因為工具自動調整造成不必要的程式改動紀錄。</p>
<p>看別人的程式碼時最怕遇到沒有縮排的&hellip;</p>
<p>這裡涵蓋的範圍包括了縮排、空格、括號、命名。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1srj3r8VaQ4_csG69Lr3vQD_ENvjEXmJH" alt='pythonize … 別亂學 XDD' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">pythonize … 別亂學 XDD</center>
    </figcaption>
  </figure>
  </p>
<h2 id="google-coding-style" class="article-heading">Google Coding Style 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#google-coding-style">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>若要偷懶，強烈建議就直接用最多人使用的就好，很多工具都有辦法幫忙重新排版程式碼，這裡展示如何用 VSCode 來設定 Google 使用的 coding style，規定的格式細節可參考 <a href="https://google.github.io/styleguide/cppguide.html" title="Google C&#43;&#43; Style Guide" aria-label="Google C&#43;&#43; Style Guide"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Google C++ Style Guide</a>。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1lCoOvNF61c1WaNoZ2MhO9QioANQS3HUS" alt='開啟設定' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">開啟設定</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1RCaxBhfaLrVM84FoD3ekeu4AmtBhnxLJ" alt='搜尋 format style，將欄位改成 Google' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">搜尋 format style，將欄位改成 Google</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1rALSINyYBW1JuCiWsj1IVSLhiI_-_rXd" alt='使用格式化可以用右鍵或是直接按對應的快捷鍵' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">使用格式化可以用右鍵或是直接按對應的快捷鍵</center>
    </figcaption>
  </figure>
</p>
<h1 id="習慣養成" class="article-heading">習慣養成 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%bf%92%e6%85%a3%e9%a4%8a%e6%88%90">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><blockquote>
<p>傻瓜都可以寫出機器能讀懂的代碼，但只有專業程序員才能寫出人能讀懂的代碼。<br>
&mdash; 李先靜 《系統程序員成長計劃》 </p>
</blockquote>
<h2 id="coding-style-again" class="article-heading">Coding Style Again 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#coding-style-again">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>用工具是很方便沒錯，不過盡量還是養成習慣而不依賴工具，這裡介紹幾個比較常見的格式：</p>
<h3 id="空行-blank" class="article-heading">空行 (Blank) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%a9%ba%e8%a1%8c-blank">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>把所有操作寫在同一個函式裡面通常不容易辦到，因此不免會有某些區塊在做相關的事，合理使用空行能夠讓讀者很容易就看出程式碼的這些區塊的用途。</p>
<h3 id="縮排-indent" class="article-heading">縮排 (Indent) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b8%ae%e6%8e%92-indent">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>我以前偏好 4 個空格，但是最近有往兩個空格移動的趨勢，另外 Google 也是以 2 個空格為主。然而 Linux kernel 是使用 tab，這裡其實只要跟合作的夥伴們講好統一使用一種即可，就不提有統計指出用 space 賺的錢比用 tab 的人多了  。</p>
<h3 id="if-statement" class="article-heading">If Statement 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#if-statement">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><h4 id="加上空格們" class="article-heading">加上空格們 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e7%a9%ba%e6%a0%bc%e5%80%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">if</span>(condition) {   <span style="color:#6272a4">// Bad
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">if</span> (condition){   <span style="color:#6272a4">// Bad
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">if</span>(condition){    <span style="color:#6272a4">// Doubly bad
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#ff79c6">if</span> (condition) {  <span style="color:#6272a4">// Good
</span></span></span></code></pre></div><h4 id="加上大括號們" class="article-heading">加上大括號們 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e5%a4%a7%e6%8b%ac%e8%99%9f%e5%80%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><p>這裡我會比較嚴格規定自己，就算是只有一行也要加，這樣比較方便擴充，例如臨時要加上 <code>printf</code> 時就不用再加。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">if</span> (condition) {
</span></span><span style="display:flex;"><span>  foo;
</span></span><span style="display:flex;"><span>} <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>  bar;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="loop-statement" class="article-heading">Loop Statement 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#loop-statement">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><h4 id="加上空格們-1" class="article-heading">加上空格們 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a%e7%a9%ba%e6%a0%bc%e5%80%91-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><p>注意 <code>;</code> 前不要後要。<br>
這裡用 <code>i++</code> 或 <code>++i</code> 其實基本上沒有效能差異  ，編譯器會幫你最佳化，我更喜歡 <code>i++</code> 因為要改成 <code>i+=2</code> 之類的比較方便，另外也是有 <code>i-=-1</code>   這種邪教&hellip;</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">for</span> (<span style="color:#8be9fd">int</span> i <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>; i <span style="color:#ff79c6">&lt;</span> some_number; i<span style="color:#ff79c6">++</span>) {
</span></span><span style="display:flex;"><span>  printf(<span style="color:#f1fa8c">&#34;OuO</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="pointer-變數宣告" class="article-heading">Pointer 變數宣告 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#pointer-%e8%ae%8a%e6%95%b8%e5%ae%a3%e5%91%8a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p><code>int*x;</code>、<code>int *x;</code>、<code>int* x</code>、<code>int * x</code> 都是可編譯的寫法，在 C 中 <code>int *x;</code> 更為常用。C++ 中反而是 <code>int* x;</code>  。</p>
<h3 id="命名-naming-convention" class="article-heading">命名 (Naming Convention) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%91%bd%e5%90%8d-naming-convention">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><h4 id="檔案名稱變數-variable函式-function" class="article-heading">檔案名稱、變數 (Variable)、函式 (Function) 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e5%90%8d%e7%a8%b1%e8%ae%8a%e6%95%b8-variable%e5%87%bd%e5%bc%8f-function">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><p>使用 <a href="https://en.wikipedia.org/wiki/Snake_case" title="snake_case" aria-label="snake_case"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> snake_case</a> 並取有上下文關係的名字，例如 <code>flag</code>、<code>count</code> 就沒有上下文，會不知道這個變數要用來存放什麼東西。<br>
e.g., <code>http_server_logs.h</code>、<code>table_name</code></p>
<p>Google 的函式也可用 UpperCamelCase，但我個人比較習慣 snake_case，另外函式須以動詞開頭以表明動作。<br>
e.g., <code>add_table_entry</code></p>
<h4 id="struct-class" class="article-heading">Struct, Class 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#struct-class">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><p>使用 <a href="https://en.wikipedia.org/wiki/Camel_case" title="UpperCamelCase" aria-label="UpperCamelCase"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> UpperCamelCase</a><br>
e.g., <code>UrlTableProperties</code>, <code>TableInfo</code></p>
<h4 id="常數-constant" class="article-heading">常數 (Constant) 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%b8%b8%e6%95%b8-constant">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><p>使用全大寫並以 <code>_</code> 連接。<br>
e.g., <code>MAX_ROW_SIZE</code></p>
<h2 id="初始化-initialize" class="article-heading">初始化 (Initialize) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%9d%e5%a7%8b%e5%8c%96-initialize">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>寫 C 語言時要注意變數的初始化，以免結果跟自己所想的不一樣，這是因為在規格書中的定義中提到，只有全域變數或是靜態 (static) 變數會被初始化，其他未初始化的則不會有明確的初始值。 C99 §6.7.8.10  。在陣列的初始化若要全部定義為 <code>\0</code>，我們可以直接在宣告中使用 <code>{}</code> 即可，因為規格書中有規定若初始化的個數不足則會比照靜態變數 C99 §6.7.8.21  :</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// 每個變數宣告時搭配初始化
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd">int</span> n <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#6272a4">// 陣列初始化以下都可以
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd">char</span> que[<span style="color:#bd93f9">26</span>] <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#39;\0&#39;</span>};
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">char</span> que[<span style="color:#bd93f9">26</span>] <span style="color:#ff79c6">=</span> {<span style="color:#bd93f9">0</span>};
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">char</span> que[<span style="color:#bd93f9">26</span>] <span style="color:#ff79c6">=</span> {};
</span></span></code></pre></div><h2 id="註解-comment" class="article-heading">註解 (Comment) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a8%bb%e8%a7%a3-comment">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>請盡量使用英文來註解，因為英文比較不像中文那樣一詞多義，可以較明確的敘述，若執意要用中文就需要注意編碼，目前主流應該是使用 UTF8。內容部份可以多記錄一點上下文而不是僅僅該行程式碼做了什麼事，通常註解會拿來說明整個函式，會需要一行一行註解的情況比較少並會用高可讀性的程式馬來替代。我之前有找到一篇非常詳盡的指南   可以參考看看 (雖然我也沒有仔細讀完就是了＠＠</p>
<p>寫法上注意空格即可。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// OuO
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#6272a4">/* OuO */</span>
</span></span></code></pre></div><h2 id="副作用-side-effect" class="article-heading">副作用 (Side Effect) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%af%e4%bd%9c%e7%94%a8-side-effect">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>副作用 (<a href="https://en.wikibooks.org/wiki/C_Programming/Side_effects_and_sequence_points" title="Side Effect" aria-label="Side Effect"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Side Effect</a>) 聽起來好像很不妙，簡單來說就是會在函式內部修改到參數的情況。其實這在一般程式語言中頗為常見，沒有這項功能的話程式會變得相當難寫，例如 Functional language 寫起來就頗耗費腦力。</p>
<h3 id="在函式宣告時點出副作用" class="article-heading">在函式宣告時點出副作用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%a8%e5%87%bd%e5%bc%8f%e5%ae%a3%e5%91%8a%e6%99%82%e9%bb%9e%e5%87%ba%e5%89%af%e4%bd%9c%e7%94%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>但是在開發過程需要適時隔離變化，C 語言提供了 <code>const</code> 修飾字來標示該參數在函式中不會被修改。以下範例中的 <code>rear</code> 和 <code>orig</code>  不會被修改到內容，所以可以利用 <code>const</code> 來提醒函式呼叫者該參數不會被改動，反之 <code>front</code> 就有機會被改動。詳細的排列組合可以參考  。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#8be9fd">void</span> <span style="color:#50fa7b">deque</span>(<span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span>orig, <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>front, <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>rear) {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">if</span> (<span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">==</span> <span style="color:#ff79c6">*</span>rear) {
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;Empty&#34;</span>);
</span></span><span style="display:flex;"><span>  } <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;%c</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, orig[<span style="color:#ff79c6">*</span>front]);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">+</span> <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// rear, orig 皆是指向一個唯讀參數 (read-only parameter)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">// 的唯讀指標 (read-only location)
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">// 若嘗試在函式中修改 `rear` 或 `*rear` 就會得到編譯錯誤
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd">void</span> <span style="color:#50fa7b">deque</span>(
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> orig,
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>front,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> rear) {
</span></span></code></pre></div><h3 id="需要修改的才傳入其指標-pointer" class="article-heading">需要修改的才傳入其指標 (Pointer) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%9c%80%e8%a6%81%e4%bf%ae%e6%94%b9%e7%9a%84%e6%89%8d%e5%82%b3%e5%85%a5%e5%85%b6%e6%8c%87%e6%a8%99-pointer">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>這裡要先宣導一個觀念就是 C 語言只有 Pass By Value，也就是只會複製傳入變數的數值，傳入指標也是一樣，我們只是傳入了指標這個數值，而透過這個指標的取值 (dereference) 可以改動對應的記憶體位置 C99 §6.5.2.2.4  。而因為 C 的函式回傳值只限一個，所以大部分會使用修改參數的方式來回傳數值，而真正的回傳值就用來表示函式是否正確執行，否則就回傳對應的錯誤碼。</p>
<p>上面那樣改起來好像太奇葩，更好的解決方式是要先思考，把將要在函式內部更動變數在傳入其指標，其餘的只須把數值傳進去即可。當然若是傳入陣列就還是需要指標就像 <code>orig</code>。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#6272a4">// 因為最後一個參數不會變動而且只需要其數值
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4">// 所以直接以常數傳入，當然函式內部就不需要取值了
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd">void</span> <span style="color:#50fa7b">deque</span>(
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">char</span> <span style="color:#ff79c6">const</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">const</span> orig,
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>front,
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">const</span> <span style="color:#8be9fd">int</span> rear_value) {
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">if</span> (<span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">==</span> rear_value) {
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;Empty&#34;</span>);
</span></span><span style="display:flex;"><span>  } <span style="color:#ff79c6">else</span> {
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;%c</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, orig[<span style="color:#ff79c6">*</span>front]);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">*</span>front <span style="color:#ff79c6">+</span> <span style="color:#bd93f9">1</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="多檔案" class="article-heading">多檔案 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a4%9a%e6%aa%94%e6%a1%88">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="避免重複-include" class="article-heading">避免重複 include 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%bf%e5%85%8d%e9%87%8d%e8%a4%87-include">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>專案擴張下，必然會用到多檔案，這時候就會拆成很多的 <code>.h</code>, <code>.c</code> 檔，<code>.h</code> 用來作為界面的溝通，這時候一定要使用 macro (<a href="https://en.wikipedia.org/wiki/Include_guard" title="Include guard" aria-label="Include guard"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Include guard</a>) 防止重複 include。以下為檔名為 <code>file.h</code> 的內容範例：<code>FILE_H</code>, <code>_FILE_H</code>, <code>__FILE_H__</code> 都有人用，但一般以第一種為主即可。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#ifndef FILE_H
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#define FILE_H
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4">/* ... Declarations etc here ... */</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">#endif </span><span style="color:#6272a4">/* FILE_H */</span><span style="color:#ff79c6">
</span></span></span></code></pre></div><h3 id="用-static-修飾內部函數" class="article-heading">用 <code>static</code> 修飾內部函數 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a8-static-%e4%bf%ae%e9%a3%be%e5%85%a7%e9%83%a8%e5%87%bd%e6%95%b8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p>如果在多檔案下函數並不是要開放給其他檔案呼叫時，請加上 <code>static</code> 來保證只有當前檔案內部可以看到那個函數。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">static</span> <span style="color:#8be9fd">void</span> <span style="color:#50fa7b">my_local_function</span>() {
</span></span><span style="display:flex;"><span>  printf(<span style="color:#f1fa8c">&#34;OuO</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="避免使用危險的函式們" class="article-heading">避免使用危險的函式們 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%81%bf%e5%85%8d%e4%bd%bf%e7%94%a8%e5%8d%b1%e9%9a%aa%e7%9a%84%e5%87%bd%e5%bc%8f%e5%80%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>C 語言給予使用者相當大的彈性但用起來需要知道自己在做什麼，否則會有許多安全性漏洞，有一些函式很容易造成誤用，連資深工程師也常用錯，因此蠻多專案直接把不安全的函式禁用，例如 Git  ，Intel 的 safestringlib 也有一個完整列表  。以下給出一些較常見的。</p>
<ul>
<li><code>gets()</code>   C11 已經不支援，請改用 <code>fgets()</code></li>
<li><code>strcpy()</code> 沒有長度偵測。</li>
<li><code>strncpy()</code> 有長度但是不會在結尾補上 <code>\0</code>  。</li>
<li><code>ato*()</code> 改用 <code>strto*()</code> 利於錯誤處理 C99 §7.20.1  。</li>
</ul>
<h2 id="其他習慣" class="article-heading">其他習慣 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96%e7%bf%92%e6%85%a3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>盡量不使用全域變數</li>
</ul>
<p><a href="https://aben20807.github.io/posts/20191118-programming-sense-2/" title="{{ 下一篇傳送門：Programming Sense (2) }}" aria-label="{{ 下一篇傳送門：Programming Sense (2) }}" >{{ 下一篇傳送門：Programming Sense (2) }}</a></p>
 
        ]]></description></item><item><title>Numpy Array Truncate</title><link>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</link><pubDate>Tue, 22 Oct 2019 20:27:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191022-numpy-array-truncate/</guid><description><![CDATA[
           <br/><p>踩個雷 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20191022-numpy-array-truncate/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191022-numpy-array-truncate/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>踩個雷 OuO</p>
<p>numpy 的 <code>trunc</code> [1] 好像沒有針對小數點以下幾位做設定，一次只能全砍變成整數，可是又不能用 <code>around</code> [2] 解決。</p>
<p>網路上有找到解法 [3]：很直覺，就是先乘大，truncate 後再除</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">trunc</span>(values, decs<span style="color:#ff79c6">=</span><span style="color:#bd93f9">0</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> np<span style="color:#ff79c6">.</span>trunc(values<span style="color:#ff79c6">*</span><span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decs)<span style="color:#ff79c6">/</span>(<span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decs)
</span></span></code></pre></div><p>不過這有個問題，可以從以下程式觀察：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">trunc</span>(a, decimals<span style="color:#ff79c6">=</span><span style="color:#bd93f9">0</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> np<span style="color:#ff79c6">.</span>trunc(a<span style="color:#ff79c6">*</span><span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decimals)<span style="color:#ff79c6">/</span>(<span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decimals)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>float32(np<span style="color:#ff79c6">.</span>array([<span style="color:#bd93f9">1.123456789</span>, <span style="color:#bd93f9">2.234567890</span>, <span style="color:#bd93f9">3.45678901</span>]))
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr<span style="color:#ff79c6">.</span>dtype)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr_tr6 <span style="color:#ff79c6">=</span> trunc(arr, <span style="color:#bd93f9">6</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr6)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr6<span style="color:#ff79c6">.</span>dtype)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr_tr20 <span style="color:#ff79c6">=</span> trunc(arr, <span style="color:#bd93f9">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr20)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr20<span style="color:#ff79c6">.</span>dtype)
</span></span></code></pre></div><p>輸出如下：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]
</span></span><span style="display:flex;"><span>float32
</span></span><span style="display:flex;"><span>[1.123456 2.234567 3.456789]
</span></span><span style="display:flex;"><span>float64
</span></span><span style="display:flex;"><span>[1.1234568357467651 2.234567880630493 3.456789016723633]
</span></span><span style="display:flex;"><span>object
</span></span></code></pre></div><p>不對啊，型別怎麼不一樣了 OAO</p>
<p>所以如果不想要型別被改動的話可能要在最後轉成原來的型別</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">def</span> <span style="color:#50fa7b">trunc</span>(a, decimals<span style="color:#ff79c6">=</span><span style="color:#bd93f9">0</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> (np<span style="color:#ff79c6">.</span>trunc(a<span style="color:#ff79c6">*</span><span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decimals)<span style="color:#ff79c6">/</span>(<span style="color:#bd93f9">10</span><span style="color:#ff79c6">**</span>decimals))<span style="color:#ff79c6">.</span>astype(a<span style="color:#ff79c6">.</span>dtype)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>float32(np<span style="color:#ff79c6">.</span>array([<span style="color:#bd93f9">1.123456789</span>, <span style="color:#bd93f9">2.234567890</span>, <span style="color:#bd93f9">3.45678901</span>]))
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr<span style="color:#ff79c6">.</span>dtype)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr_tr6 <span style="color:#ff79c6">=</span> trunc(arr, <span style="color:#bd93f9">6</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr6)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr6<span style="color:#ff79c6">.</span>dtype)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>arr_tr20 <span style="color:#ff79c6">=</span> trunc(arr, <span style="color:#bd93f9">20</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr20)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(arr_tr20<span style="color:#ff79c6">.</span>dtype)
</span></span></code></pre></div><p>輸出：(但是就有型別限制的最大儲存長度了)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]
</span></span><span style="display:flex;"><span>float32
</span></span><span style="display:flex;"><span>[1.123456 2.234567 3.456789]
</span></span><span style="display:flex;"><span>float32
</span></span><span style="display:flex;"><span>[1.1234568 2.2345679 3.456789 ]
</span></span><span style="display:flex;"><span>float32
</span></span></code></pre></div><p>完美 OuO</p>
<h2 id="references" class="article-heading">References 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#references">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li>[1] <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.trunc.html" title="numpy.trunc" aria-label="numpy.trunc"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> numpy.trunc</a></li>
<li>[2] <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.around.html" title="numpy.around" aria-label="numpy.around"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> numpy.around</a></li>
<li>[3] <a href="https://stackoverflow.com/a/46020635/6734174" title="Truncating decimal digits numpy array of floats" aria-label="Truncating decimal digits numpy array of floats"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Truncating decimal digits numpy array of floats</a></li>
</ul>
        ]]></description></item><item><title>資料整理</title><link>https://aben20807.github.io/posts/20191019-data-statistic/</link><pubDate>Sat, 19 Oct 2019 11:20:13 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20191019-data-statistic/</guid><description><![CDATA[
           <br/><p>剛好用到一些蠻有用的工具，記錄一下</p>
          
            <p><a href="https://aben20807.github.io/posts/20191019-data-statistic/"><img src="https://drive.google.com/uc?export=view&amp;id=1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20191019-data-statistic/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>剛好用到一些蠻有用的工具，記錄一下</p>
<p>資料：一個檔案 13 個數字共有 10,000 個檔案。<br>
目的：視覺化平均後的 13 欄資料<br>
主要分作以下步驟：</p>
<ol>
<li>合併 10,000 筆資料到一個檔案方便複製</li>
<li>用 Google Spreadsheet 來平均並製作圖表</li>
</ol>
<h2 id="1-合併" class="article-heading">1. 合併 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-%e5%90%88%e4%bd%b5">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>檔案架構大致如下</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>├── mae_0000.txt
</span></span><span style="display:flex;"><span>├── mae_0001.txt
</span></span><span style="display:flex;"><span>├── mae_0002.txt
</span></span><span style="display:flex;"><span>├── mae_0003.txt
</span></span><span style="display:flex;"><span>├── mae_0004.txt
</span></span><span style="display:flex;"><span>├── mae_0005.txt
</span></span><span style="display:flex;"><span>├── mae_0006.txt
</span></span><span style="display:flex;"><span>├── mae_0007.txt
</span></span><span style="display:flex;"><span>├── mae_0008.txt
</span></span><span style="display:flex;"><span>├── mae_0009.txt
</span></span><span style="display:flex;"><span>├── mae_0010.txt
</span></span><span style="display:flex;"><span>├── mae_0011.txt
</span></span><span style="display:flex;"><span>├── mae_0012.txt
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>└── mae_9999.txt
</span></span></code></pre></div><p>所以首先我們需要合併，這裡介紹一個頗好用的指令 <code>paste</code>。 <code>paste</code> 可以將資料水平合併，例如：(左邊行號，右邊內容)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ cat a.txt b.txt c.txt 
</span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────
</span></span><span style="display:flex;"><span>       │ File: a.txt
</span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">1</span>   │ <span style="color:#bd93f9">1</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">2</span>   │ <span style="color:#bd93f9">2</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">3</span>   │ <span style="color:#bd93f9">3</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">4</span>   │ <span style="color:#bd93f9">4</span>
</span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────
</span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────
</span></span><span style="display:flex;"><span>       │ File: b.txt
</span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">1</span>   │ <span style="color:#bd93f9">5</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">2</span>   │ <span style="color:#bd93f9">6</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">3</span>   │ <span style="color:#bd93f9">7</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">4</span>   │ <span style="color:#bd93f9">8</span>
</span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────
</span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────
</span></span><span style="display:flex;"><span>       │ File: c.txt
</span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">1</span>   │ <span style="color:#bd93f9">9</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">2</span>   │ <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">3</span>   │ <span style="color:#bd93f9">11</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">4</span>   │ <span style="color:#bd93f9">12</span>
</span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ paste *.txt &gt; all.txt
</span></span><span style="display:flex;"><span>$ cat all.txt 
</span></span><span style="display:flex;"><span>───────┬──────────────────────────────────────────
</span></span><span style="display:flex;"><span>       │ File: all.txt
</span></span><span style="display:flex;"><span>───────┼──────────────────────────────────────────
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">1</span>   │ <span style="color:#bd93f9">1</span>   <span style="color:#bd93f9">5</span>   <span style="color:#bd93f9">9</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">2</span>   │ <span style="color:#bd93f9">2</span>   <span style="color:#bd93f9">6</span>   <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">3</span>   │ <span style="color:#bd93f9">3</span>   <span style="color:#bd93f9">7</span>   <span style="color:#bd93f9">11</span>
</span></span><span style="display:flex;"><span>   <span style="color:#bd93f9">4</span>   │ <span style="color:#bd93f9">4</span>   <span style="color:#bd93f9">8</span>   <span style="color:#bd93f9">12</span>
</span></span><span style="display:flex;"><span>───────┴──────────────────────────────────────────
</span></span></code></pre></div><p>所以我們一樣可以用 <code>paste *.txt &gt; all.txt</code> 來把 10,000 資料都整理到同一個檔案，</p>
<p>此時如果出現 <code>Too many open files</code> 的錯誤，可以使用以下指令來增加同時可開啟的檔案數</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">ulimit</span> -Hn <span style="color:#bd93f9">10240</span> <span style="color:#6272a4"># The hard limit</span>
</span></span><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">ulimit</span> -Sn <span style="color:#bd93f9">10240</span> <span style="color:#6272a4"># The soft limit</span>
</span></span></code></pre></div><p>成功變成一個檔案後發現它的 column 太多了 Spreadsheet 無法直接貼上，所以接下來要轉置一下。</p>
<p>這裡我們使用 awk 來幫忙，新增一個 <code>transpose.sh</code> 的檔案，內容如下：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#ff79c6">#!/usr/bin/env bash
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>awk <span style="color:#f1fa8c">&#39;
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">{
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">    for (i=1; i&lt;=NF; i++)  {
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">        a[NR,i] = $i
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">    }
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">}
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">NF&gt;p { p = NF }
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">END {
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">    for(j=1; j&lt;=p; j++) {
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">        str=a[1,j]
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">        for(i=2; i&lt;=NR; i++){
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">            str=str&#34; &#34;a[i,j];
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">        }
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">        print str
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">    }
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">}&#39;</span> <span style="color:#8be9fd;font-style:italic">$1</span>
</span></span></code></pre></div><p>變更一下執行權限，就可以執行了</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ chmod +x transpose.sh 
</span></span><span style="display:flex;"><span>$ ./transpose.sh all.txt &gt; all_tr.txt
</span></span></code></pre></div><p>這樣資料就會從原本的往右長變成往下長</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1dZ7u6raak9lUQiPR5DKxUTRjQJWPTPFZ" alt='轉置前' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">轉置前</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1_vu6Is-UDZqvWJodUJjdVlmbGokwct5O" alt='轉置後' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">轉置後</center>
    </figcaption>
  </figure>
</p>
<h2 id="使用-google-spreadsheep" class="article-heading">使用 Google Spreadsheep 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-google-spreadsheep">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這裡可能比較沒啥，就是貼上去，這裡我覺得不要用 vim 開啟，找個方便複製的 (例如：VSCode)</p>
<p>用 Ctrl-v 貼上 Spreadsheet 時可能會花一點時間</p>
<p>不過發現它把所有的 column 合在一起了</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1jluF0VN_pDaifwAjVaJVsklIb5j3w7nN" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>我們選取第一個 column 然後點上方的 &ldquo;資料&rdquo; &gt; &ldquo;將文字分隔成不同欄&rdquo;</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1daksDj4iW6FCgvoTi9pxrQks7RYxBd4c" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>它會自動將第一個 column 分出來，這時後會冒出一個小視窗 (有點不明顯，有時候要滾動一下才會出現)，把下拉式選單點開選擇 &ldquo;空格&rdquo; 這樣它就會把所有 column 分開了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/13wfpf9aTKIqahEW-WUjAWkTAH-zwLlAf" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1sUbYYqab7gdhWDDSFX0eJUxujb7_zfPn" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1NnbVE8x3tW3BDpNNNdohXiyM4jyVIgPs" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>平均跟圖表部份就按照一般試算表的使用方式，就不記錄了。</p>
<h2 id="參考" class="article-heading">參考 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><a href="https://stackoverflow.com/a/1729980/6734174" title="An efficient way to transpose a file in Bash" aria-label="An efficient way to transpose a file in Bash"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> An efficient way to transpose a file in Bash</a></li>
<li><a href="https://unix.stackexchange.com/a/205646" title="Combining large amount of files" aria-label="Combining large amount of files"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Combining large amount of files</a></li>
</ul>
        ]]></description></item><item><title>天氣之子 Weathering With You</title><link>https://aben20807.github.io/posts/20190919-weathering-with-you/</link><pubDate>Thu, 19 Sep 2019 23:35:06 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190919-weathering-with-you/</guid><description><![CDATA[
           <br/><p>看完直接來寫一波 OuO<br><br/>趁還沒看其他人的影評先來說一下看完當下的一些感想<br><br/>!!!! 強烈暴雷注意 !!!!</p>
          
            <p><a href="https://aben20807.github.io/posts/20190919-weathering-with-you/"><img src="https://drive.google.com/uc?export=view&amp;id=1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190919-weathering-with-you/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>看完直接來寫一波 OuO<br>
趁還沒看其他人的影評先來說一下看完當下的一些感想<br>
!!!! 強烈暴雷注意 !!!!</p>
<blockquote>
<p>果然誠哥回不去了<br>
果然有貓<br>
果然有瀧跟三葉<br>
果然沒有縮時鏡頭<br>
果然音樂都頗讚</p>
</blockquote>
<p>這些當然不是我在看電影前就預測，而是邊看邊喔～果然</p>
<p>話說這個聲優陣容有點厲害</p>
<p>所以我這幾天有點膽顫心驚，深怕一不小心就被暴雷了，我甚至連已經在 YouTube 出現的音樂都沒聽過，看到相關新聞快速掠過。</p>
<p>雖然我總是口頭說著喜歡下雨，但是再好幾次的雨天也都會覺得很麻煩，這次能夠用天氣當作動畫題材我真心佩服。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1e-W33G5mxkcyW8UggrgalOOMiN0rCVHG" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>首先第一個果然，從 2002年《星之聲》, 2004年《雲之彼端，約定的地方》, 2007年 《秒速5公分》, 2011年《追逐繁星的孩子》, 2013年《言葉之庭》全部都有一種會使人心痛的寂寞感，但想當然爾大家喜歡的是像迪士尼那樣友好結局的作品，2016年《你的名字》就出現了，直接讓新海誠導演成為討論的焦點，而成功關鍵就是有好的結局，就如同細田守2009年《夏日大作戰》一樣是大家喜愛的電影。但是誠哥舊時的那種寂寞感已經不復存在，較不失理的講法就是稱那些新的影片為商業導向即為商業片。</p>
<p>對我來說，我是不會說一定只看之前的影片，但是我是很喜歡那種寂寞感的，雖然有點傷身體 XDD，有興趣可以先從《追逐繁星的孩子》、《言葉之庭》入門，經典是《秒速5公分》。但有時我也覺得商業片不錯，至少看了心情會好。</p>
<p>第二個果然，我覺得導演頗愛貓，可以去看一個可愛的短片：<a href="https://www.youtube.com/watch?v=wafGAcUim5A" title="猫の集会" aria-label="猫の集会"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 猫の集会</a>。</p>
<p>第三個果然，其實在《你的名字》就有出現類似的彩蛋，裡面有《言葉之庭》的孝雄和雪野。</p>
<p>第四個果然，我看完之後想果然沒有縮時攝影，但是明明天氣這種用縮時會很好看啊。不過注意《天氣之子》裡面都是在講短暫的天氣變化，這也難怪沒地方塞縮時了。</p>
<p>第五個果然，在電影院的環繞音效下音樂都頗棒，煙火那邊的 BGM 會起雞皮疙瘩，兩個人在天空的那首最為氣派也最需要比較好的環繞來聽。然後因為我歌跟歌名還沒對起來，待我聽個幾日再更新吧 OuO</p>
<p>主角們最後為了自己而許願，這並不是妥協於世界已經在崩壞的藉口，而是有所選擇下的結果。</p>
<p>老實說我一度以為會想辦法解決這個雨一直下不停的狀況，結果最後是就直接在這裡停止，我想這也是頗好，帶了一點點不是這麼完美的結局結束。</p>
<hr>
<h2 id="20190921-補充" class="article-heading">2019.09.21 補充 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#20190921-%e8%a3%9c%e5%85%85">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>怎麼講呢，認真要挑反而沒有一首代表性的 (跟《你的名字》有點像)，不過我會想放グランドエスケープ(Grand Escape) - RADWIMPS (feat.三浦透子)，因為是電影短版所以那種到高潮處嘎然而止的感覺跟電影有點像，重低音的背景我有點愛但不太適合狂聽就是了。</p>







 
<p>不過，大丈夫 (We&rsquo;ll be alright) - RADWIMPS 這首的歌詞最棒最符合這部主角的心境了 OuO</p>







 
<p>另外，我上面的淺薄心得都是在看任何影評之前靠著自己寫的，有一個短評我覺得跟我想表達的有點像可是講得非常好 (我太爛啦XD)：【影評/解析】《天氣之子》-為了你，我可以放棄世界 | 超粒方</p>







 
        ]]></description></item><item><title>我的學習方式</title><link>https://aben20807.github.io/posts/20190911-how-i-learn-in-university/</link><pubDate>Wed, 11 Sep 2019 22:18:43 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190911-how-i-learn-in-university/</guid><description><![CDATA[
           <br/><p>大學畢業後突然有感，感覺需要記錄一下。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190911-how-i-learn-in-university/"><img src="https://drive.google.com/uc?export=view&amp;id=11dfe_7DVpwD2njTDBgIu23p1B4c_M7-d" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190911-how-i-learn-in-university/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>大學畢業後突然有感，感覺需要記錄一下。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>其實這只是一段紀錄，不是要說你們一定要學著這樣做，當然如果你覺得不錯可以試試看，不過如果發現太晚看到了，沒關係，生命自會找到出路，人生裡沒有什麼是繞遠路的。總之把這篇當作是<a href="https://zh.wikipedia.org/wiki/%E5%80%96%E5%AD%98%E8%80%85%E5%81%8F%E5%B7%AE" title="倖存者偏差" aria-label="倖存者偏差"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 倖存者偏差</a>的文章我也不會說什麼。</p>
<p>另外，雖然主要是大學，不過我覺得這個學習方式是在國中的時候被養成的，高中時有機會得以更加磨練，大學時用的得心應手。</p>
<h1 id="國高中的啟蒙" class="article-heading">國高中的啟蒙 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%8b%e9%ab%98%e4%b8%ad%e7%9a%84%e5%95%9f%e8%92%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>剛好都是生物課 (結果我現在的領域截然不同)。國中生物課是老師通常用投影片跟講義上課，然後會有東西需要填空，當時是因為老師頗有趣而且會需要畫一堆生物相關的圖片所以我算是蠻認真上課。高中的生物老師一樣有趣，不過教學方式是純板書，而且字相當的「藝術」(當下沒記到的話之後一定會看不懂的那種)，但是因為整理的相當好，所以我都會在他講課的當下把聽到的東西抄成手稿，板書只是用來輔助我沒抄到的部份，這裡訓練到了寫字的速度及反應，然後之後再找時間轉換成比較精美的筆記，突然發現我在高中生物花了很多時間@@。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11ckRrYyumxt0qTjxS9Dz98gpH6JYNdpx" alt='高中生物手稿' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">高中生物手稿</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11rgEhk6nd47jcfyTdt8KQsk7xRLh_3Ll" alt='高中生物筆記' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">高中生物筆記</center>
    </figcaption>
  </figure>
</p>
<h1 id="正文" class="article-heading">正文 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e6%96%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>好像有蠻多人，不管是自己的心態亦或是將學習意願缺乏怪在教課的教授身上，這群人總是認為自己學習更有效率，甚至課都不用去上，考前讀個幾天或僅需一整夜即可應付大大小小的測驗。其實不然，若只把讀書拿來應付考試實在過於短視。</p>
<p>我想說，最懶惰最輕鬆的方式絕對是「認真上課加抄筆記」，我的作法是即時將教授上課所講得知識轉換成自己能快速理解的語言並寫在活頁紙上，我覺得寫字還是很難被取代，因為自由度相當大，臨時要畫圖什麼的可以不需要任何切換。除了考試外，有其他額外的技能能夠訓練，例如教授上課的教學技巧，並非只有教得好的值得學習，那些聽得很吃力的可以學到怎樣的方式是不適合的間接可以拿來調整自己。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11LbbgbouvwIlnpDm8EPL7mPabBjnPVin" alt='作業系統 process scheduling' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">作業系統 process scheduling</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11HKH0-EwLVEK74ggSIQdhYyzH3nGf5gA" alt='作業系統 fork' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">作業系統 fork</center>
    </figcaption>
  </figure>
</p>
<p>活頁紙也是方便之後做補充或調整。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11H5tRYqoTCEClbPqH1ZmXB5T-ig8S4v5" alt='計算理論 NFA' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">計算理論 NFA</center>
    </figcaption>
  </figure>
</p>
<p>有時也會用便利貼做補充或整理。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11j_ElOGVmLW678tEFavcdFBZt287Ft2l" alt='計算機概論' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">計算機概論</center>
    </figcaption>
  </figure>
</p>
<p>甚至是跨頁的指向。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11ttY-5mgL8rAxY9Zj6gvDMqWaGQkuMfv" alt='工程數學 第二位移定理' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">工程數學 第二位移定理</center>
    </figcaption>
  </figure>
</p>
<p>解題心法，工數教授會口述，所以我抄起來 (紅字) 以免忘記</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11fn8OvmD3bc5NTRRmGzORoSw4QaAReg2" alt='工程數學' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">工程數學</center>
    </figcaption>
  </figure>
</p>
<p>必考題重點標記。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11tzUGk0lsDuDGs7KbOUBPZqL6aUn6z3F" alt='資料結構 Binary Tree' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">資料結構 Binary Tree</center>
    </figcaption>
  </figure>
</p>
<p>因為抄筆記已經成為一種習慣了，所以你可以看到不管什麼課我都可以抄。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11D90v_2P7X6bBZNNTwx9Clkxy6k9_Pac" alt='法政哲學 康德自由意志' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">法政哲學 康德自由意志</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11_a3xYpk5UX3HtZP_tJi4LOtI2NoQo0E" alt='憲政民主體制' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">憲政民主體制</center>
    </figcaption>
  </figure>
</p>
<p>總之我認為邊上課邊寫出讓自己易於理解筆記的過程，與直譯器 (<a href="https://en.wikipedia.org/wiki/Interpreter_%28computing%29" title="Interpreter" aria-label="Interpreter"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Interpreter</a>) 有 87% 相似度，根本就是人體直譯器。 然後算是最近才知道這非常接近<a href="https://medium.com/y-pointer/%E7%9F%A5%E8%AD%98-967cca95a939" title="費曼學習法" aria-label="費曼學習法"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 費曼學習法</a>，只是我還有加上即時產出。</p>
<p>另外因為是即時改寫，所以也算是有訓練到重寫的技能，這在未來寫論文上可能會比較需要。</p>
<p>使用這個方法我認為算是比較容易能夠維持好成績的，不會像臨時抱佛腳那樣浮動比較大，至於好成績有什麼用我就另外列在下面了，別在說「大學成績沒啥用，有過就好」這種話，但是當然也是有缺點的。</p>
<h1 id="認真上課的缺點" class="article-heading">認真上課的缺點 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%aa%8d%e7%9c%9f%e4%b8%8a%e8%aa%b2%e7%9a%84%e7%bc%ba%e9%bb%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>需要有人 (教授) 幫忙整理資料變成自己的輸入</li>
<li>缺少主動去學習的能力</li>
<li>如果需要大量思考的內容會比較吃力，例如：演算法</li>
<li>會有更多時間做自己的事，不夠自律的話會浪費時間</li>
</ul>
<h1 id="補充成績好可能有的好處" class="article-heading">補充：成績好可能有的好處 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a3%9c%e5%85%85%e6%88%90%e7%b8%be%e5%a5%bd%e5%8f%af%e8%83%bd%e6%9c%89%e7%9a%84%e5%a5%bd%e8%99%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>(相關規定自己查嘿 OuO)</p>
<ul>
<li>獎學金 &ndash; (雖然我沒拿過我們學校的)</li>
<li>提早畢業 &ndash; (有成績門檻，雖然我也沒用到)</li>
<li>不用補習考研，靠推甄 &ndash; (直接省一大筆錢加一堆時間)</li>
<li>出國 GPA &ndash; (據說國外成績看頗重)</li>
<li><del>同學都把你當學霸</del></li>
</ul>
<h1 id="結論" class="article-heading">結論 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%ab%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>整體來說，認真上課的 CP 值真的頗高。</p>
<h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>畢業之後回想，這個學習方式是很輕鬆，但是缺點就是自己讀書的時間太少，而這卻是大學跟研究所之間的差異，也就是說讀研究所時，會傾向學生已經具備從書本學習已建構好的知識，研究所則是不會又統一的教材，必須自行找到相關的期刊論文、研究、實驗、找出新方法。因此現在的我就會有之前書讀得太少的感覺。</p>
<p>然而這些知識現在大部分都已經散落在網路上的，怎麼下關鍵字找答案以及如何分辨真偽反而是更重要的課題。不過下關鍵字的能力我是覺得我算很不錯，因為很多問題只能自己上網找答案之類的。</p>
        ]]></description></item><item><title>Valgrind 的 Memcheck</title><link>https://aben20807.github.io/posts/20190817-valgrind-memcheck/</link><pubDate>Sat, 17 Aug 2019 11:17:09 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190817-valgrind-memcheck/</guid><description><![CDATA[
           <br/><p>簡單玩玩 @@</p>
          
            <p><a href="https://aben20807.github.io/posts/20190817-valgrind-memcheck/"><img src="https://drive.google.com/uc?export=view&amp;id=10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190817-valgrind-memcheck/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>簡單玩玩 @@</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>之前大學時期 (講得好像很久之前 OuO) 的某幾個作業我有拿來測試自己的程式碼是否有 memory leak 的情況，會發生這種情況主要原因是沒有對每一個 alloc 做 free。</p>
<h1 id="環境" class="article-heading">環境 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>T490s</li>
<li>Ubuntu 18.04</li>
</ul>
<h1 id="valgrind-的-memcheck" class="article-heading">Valgrind 的 Memcheck 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#valgrind-%e7%9a%84-memcheck">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>要一篇講完 Valgrind 基本上有點難，而且東西頗雜，我也是邊摸邊記錄，因為 Valgrind 有很多工具可以用，本篇主要講解預設的工具 <strong>memcheck</strong>，當然也只是部份的部份而已 QuQ。顧名思義是用來檢測記憶體使用情況，主要用在 C 及 C++。它是以插入額外程式碼 (<a href="https://en.wikipedia.org/wiki/Profiling_%28computer_programming%29#Instrumentation" title="Instrumentation" aria-label="Instrumentation"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Instrumentation</a>) 的方式來記錄記憶體的使用，根據 wiki，memcheck 幾乎對所有指令的周圍都插入額外的檢測程式碼用來追蹤記憶體區塊的有效性 (validity)。原因是因為一開始未被分配的區塊都會是無效 (invalid) 或是未定義 (undefined)，當這些區快被初始化後，memcheck 仍繼續追蹤 V bits (<a href="http://valgrind.org/docs/manual/mc-manual.html#mc-manual.value" title="Valid-value bits" aria-label="Valid-value bits"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Valid-value bits</a>) 及 A bits (<a href="http://valgrind.org/docs/manual/mc-manual.html#mc-manual.vaddress" title="Valid-address bits" aria-label="Valid-address bits"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Valid-address bits</a>)。此外，還實做了記憶體分配器 (<a href="https://en.wikipedia.org/wiki/C_dynamic_memory_allocation" title="memory allocator" aria-label="memory allocator"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> memory allocator</a>)，也就是定義了 <code>malloc</code> 與 <code>free</code> 之類的函式來記錄呼叫次數。</p>
<p>總結來說，主要用來做以下項目檢測：</p>
<ul>
<li>使用位初始化的記憶體空間</li>
<li>讀或寫一塊已經 <code>free</code> 過得區塊</li>
<li>讀或寫超過一塊 <code>malloc</code> 取得合法的大小</li>
<li>記憶體洩漏 (<a href="https://en.wikipedia.org/wiki/Memory_leak" title="Memory leaks" aria-label="Memory leaks"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Memory leaks</a>)</li>
</ul>
<p>不過插入外程式碼是有代價的，就是效能會變低許多。</p>
<h2 id="安裝" class="article-heading">安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install valgrind
</span></span></code></pre></div><h2 id="使用" class="article-heading">使用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="測試記憶體洩漏-memory-leak-detection" class="article-heading">測試記憶體洩漏 (Memory leak detection) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b8%ac%e8%a9%a6%e8%a8%98%e6%86%b6%e9%ab%94%e6%b4%a9%e6%bc%8f-memory-leak-detection">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdlib.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>() {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>a <span style="color:#ff79c6">=</span> (<span style="color:#8be9fd">int</span> <span style="color:#ff79c6">*</span>) malloc(<span style="color:#bd93f9">1024</span> <span style="color:#ff79c6">*</span> <span style="color:#ff79c6">sizeof</span>(<span style="color:#8be9fd">int</span>));
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;%p</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, a);
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">// free(a);
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="編譯" class="article-heading">編譯 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b7%a8%e8%ad%af">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><p><code>-g</code> 代表加入除錯資訊，可以讓 valgrind 指出在程式的那一行。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ gcc -o <span style="color:#8be9fd;font-style:italic">test</span> test.c -g
</span></span></code></pre></div><h3 id="利用-valgrind-抓-memory-leak" class="article-heading">利用 valgrind 抓 memory leak 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%a9%e7%94%a8-valgrind-%e6%8a%93-memory-leak">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ valgrind --leak-check<span style="color:#ff79c6">=</span>full --show-leak-kinds<span style="color:#ff79c6">=</span>all ./test
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>==18006== Memcheck, a memory error detector
</span></span><span style="display:flex;"><span>==18006== Copyright (C) 2002-2017, and GNU GPL&#39;d, by Julian Seward et al.
</span></span><span style="display:flex;"><span>==18006== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
</span></span><span style="display:flex;"><span>==18006== Command: ./test
</span></span><span style="display:flex;"><span>==18006== 
</span></span><span style="display:flex;"><span>0x522d040
</span></span><span style="display:flex;"><span>==18006== 
</span></span><span style="display:flex;"><span>==18006== HEAP SUMMARY:
</span></span><span style="display:flex;"><span>==18006==     in use at exit: 4,096 bytes in 1 blocks
</span></span><span style="display:flex;"><span>==18006==   total heap usage: 2 allocs, 1 frees, 5,120 bytes allocated
</span></span><span style="display:flex;"><span>==18006== 
</span></span><span style="display:flex;"><span>==18006== 4,096 bytes in 1 blocks are definitely lost in loss record 1 of 1
</span></span><span style="display:flex;"><span>==18006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
</span></span><span style="display:flex;"><span>==18006==    by 0x10869B: main (test.c:5)
</span></span><span style="display:flex;"><span>==18006== 
</span></span><span style="display:flex;"><span>==18006== LEAK SUMMARY:
</span></span><span style="display:flex;"><span>==18006==    definitely lost: 4,096 bytes in 1 blocks
</span></span><span style="display:flex;"><span>==18006==    indirectly lost: 0 bytes in 0 blocks
</span></span><span style="display:flex;"><span>==18006==      possibly lost: 0 bytes in 0 blocks
</span></span><span style="display:flex;"><span>==18006==    still reachable: 0 bytes in 0 blocks
</span></span><span style="display:flex;"><span>==18006==         suppressed: 0 bytes in 0 blocks
</span></span><span style="display:flex;"><span>==18006== 
</span></span><span style="display:flex;"><span>==18006== For counts of detected and suppressed errors, rerun with: -v
</span></span><span style="display:flex;"><span>==18006== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
</span></span></code></pre></div><h2 id="分析" class="article-heading">分析 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%86%e6%9e%90">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>程式中我們 malloc 的一塊 1024 個整數大小 (4 bytes) 的記憶體空間，程式結束前沒有呼叫 free 因此產生的 memory leak 的現象。可以看到 valgrind 指出我們在程式第 5 行 <code>int *a = (int *) malloc(1024 * sizeof(int));</code> 分配了 4096 bytes 的記憶體。</p>
<p>此外這裡有一個有趣的現象，就是總共分配的大小是 5120 bytes，這是因為 <code>printf</code> 的關係，這個函式會固定使用 1024 bytes 的記憶體空間。所以 5120 = 4096 + 1024。</p>
<h1 id="有顏色版本colour-valgrind" class="article-heading">有顏色版本：colour-valgrind 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%89%e9%a1%8f%e8%89%b2%e7%89%88%e6%9c%accolour-valgrind">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="安裝-1" class="article-heading">安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ pip3 install colour-valgrind <span style="color:#6272a4"># 需要 python</span>
</span></span></code></pre></div><h2 id="如果喜歡的話可以直接加在-bashrc" class="article-heading">如果喜歡的話可以直接加在 <code>~/.bashrc</code> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a6%82%e6%9e%9c%e5%96%9c%e6%ad%a1%e7%9a%84%e8%a9%b1%e5%8f%af%e4%bb%a5%e7%9b%b4%e6%8e%a5%e5%8a%a0%e5%9c%a8-bashrc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">alias</span> <span style="color:#8be9fd;font-style:italic">valgrind</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;colour-valgrind&#39;</span>
</span></span></code></pre></div><h2 id="使用-1" class="article-heading">使用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>基本上就直接跟 valgrind 一樣</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ colour-valgrind --leak-check<span style="color:#ff79c6">=</span>full --show-leak-kinds<span style="color:#ff79c6">=</span>all ./test
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/10pF-pr6yd5wJxlMfyaUHOrz-5v6iB1Ud" alt='結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">結果</center>
    </figcaption>
  </figure>
</p>
<h1 id="參考資料" class="article-heading">參考資料 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="http://valgrind.org/docs/manual/mc-manual.html" title="Valgrind User Manual - 4. Memcheck: a memory error detector" aria-label="Valgrind User Manual - 4. Memcheck: a memory error detector"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Valgrind User Manual - 4. Memcheck: a memory error detector</a></li>
<li><a href="https://en.wikipedia.org/wiki/Valgrind" title="https://en.wikipedia.org/wiki/Valgrind" aria-label="https://en.wikipedia.org/wiki/Valgrind"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://en.wikipedia.org/wiki/Valgrind</a></li>
</ul>
        ]]></description></item><item><title>Regex101</title><link>https://aben20807.github.io/posts/20190815-regexp/</link><pubDate>Thu, 15 Aug 2019 22:16:38 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190815-regexp/</guid><description><![CDATA[
           <br/><p>我現在才知道這個是不是偏爛啊</p>
          
            <p><a href="https://aben20807.github.io/posts/20190815-regexp/"><img src="https://drive.google.com/uc?export=view&amp;id=1vdxAJpMf506uqrdfXp6IPve3CYn-RXCP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190815-regexp/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>我現在才知道這個是不是偏爛啊</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>因為要調整網站的一些東西，所以需要寫一些正規表達式 (regular expression)，不過一直試都失敗，上網找資料才發現一個好網站。傳送門：<a href="https://regex101.com/" title="https://regex101.com/" aria-label="https://regex101.com/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://regex101.com/</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1-H5FG7NzGBMSEqNv6iJ0z2QfY3hQoXW5" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>一開始看到連結還以為是什麼內容農場，結果不是XDD</p>
<h1 id="使用" class="article-heading">使用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>左方有語言選項，因為不同語言的正規表達式可能會有些許的差異，所以就選擇正在使用的語言，因為 Hugo 是 Golang 寫的所以網站的表達式要選用 Go 語言。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1Oz0fVpydicxt3X97ywQ-Z45YHePTf6-l" alt='選擇 Golang' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">選擇 Golang</center>
    </figcaption>
  </figure>
</p>
<p>基本功能就是填入表達式，接著可以輸入測試字串看是否吻合，如果中間有 group 的話也會標示不同顏色，這點我覺得超棒。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/11ScFQm6k0GbA3TPJbA7AysE8btF7dsdL" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>圖上範例就是我想要用來修改文章的標題 (heading)，加上錨定符號用。</p>
<p>簡單範例：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>(&lt;(h[1-9]) id=\&#34;([^\&#34;]+)\&#34;(.+))(&lt;/h[1-9]+&gt;)
</span></span></code></pre></div><p>然後我是用這個來做取代來換成我想要的樣式，例如：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>replaceRE &#34;(&lt;(h[1-9]) id=\&#34;([^\&#34;]+)\&#34;(.+))(&lt;/h[1-9]+&gt;)&#34; `&lt;${2} id=&#34;${3}&#34; class=&#34;article-heading&#34;${4}&lt;a class=&#34;headline-hash smoothScroll hover-show scrollspy&#34; style=&#34;font-size: 0.75em; color: black; padding-left: 0.25em&#34; href=&#34;#${3}&#34;&gt;&lt;span class=&#34;iconify&#34; data-icon=&#34;octicon-link&#34; data-inline=&#34;false&#34;&gt;&lt;/span&gt;&lt;/a&gt; ${5}`
</span></span></code></pre></div><p>原本的標題就會變成<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1yubxNXgTK8uZV07Bo52PzBUHN2Tjf8rY" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>別把人家的好心視為理所當然</title><link>https://aben20807.github.io/posts/20190804-tiny-action/</link><pubDate>Sun, 04 Aug 2019 11:08:11 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190804-tiny-action/</guid><description><![CDATA[
           <br/><p>其實原本 6 月中就要寫了，結果因為沒拍到照片所以就先延後 (明明是自己懶惰</p>
          
            <p><a href="https://aben20807.github.io/posts/20190804-tiny-action/"><img src="https://drive.google.com/uc?export=view&amp;id=1KfJO4p5cEL0SzRgLYDIMVLPtPOA3wVlf" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190804-tiny-action/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>其實原本 6 月中就要寫了，結果因為沒拍到照片所以就先延後 (明明是自己懶惰</p>
<p>6 月中還蠻嚴重的就是香港反送中的事件開始，到現在 8 月了仍然有罷工及遊行，不過本篇不會討論這個事件。 雖說不討論但其實有些相關。記得當時許多人跟風換了頭貼濾鏡，但我認為有一些人只會盲從表現自己好像有在關注社會議題反而忽略身邊的事。 若真的去探討哪些人，其實並不限於換頭貼的人，也不是換頭貼就會這樣，換頭貼只是剛好是附近發生的大事。所以並不是想要嘴這些換頭貼的人喔。</p>
<p>讓我想發文的遠因是大家都會把雨傘晾在走廊，導火線是前室友針對此事的<a href="https://www.moedict.tw/%E5%BC%B7%E8%BE%AF" title="強 (ㄑ一ㄤˇ) 辯" aria-label="強 (ㄑ一ㄤˇ) 辯"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 強 (ㄑ一ㄤˇ) 辯</a>，先來講講發生了什麼事吧。</p>
<p>下雨天，大部分的人都會撐雨傘，拿回宿舍後就會打開然後放在走廊上，若是短暫的放置是還可以，不過幾乎所有人都是會放到過夜的，等到了隔天，打掃阿姨因為要推工作車，但因為有放雨傘所以過不去，因此就需要一個一個收雨傘才能前進。</p>
<p>我的前室友提出以下幾點：</p>
<ul>
<li>雨傘打開放在外面比較快乾</li>
<li>打掃阿姨有領薪水，而且沒看過她抱怨</li>
</ul>
<p>我對這些有些疑問。乾比較快需要放整晚嗎？另外，走廊是公共空間，照理說是不可以放置私人物品。還有正常打掃工作是不會包含收雨傘的，她幫忙收是因為這樣才能工作，沒有抱怨是因為人很好。因此帶入今天的主題，「別把人家的好心視為理所當然」。</p>
<p>(當然，這位室友事後說他是硬要辯</p>
<p>突然發現要講的沒有很多，只是希望大家多去思考，平時其實會有許多類似的情況，多去將心比心，而不是以為換個頭貼就有多關心這個社會，請從身邊最微小的事開始去實際力行，這個社會才能一點一滴的變好。</p>
<p>當然你可能好奇我怎麼晾雨傘，我是直接收傘的狀況下放到房間地上，不用綁起來，利用房間冷氣會讓房間乾燥的特性，放一個晚上基本上就乾了。給你們參考 OuO</p>
        ]]></description></item><item><title>Build MNIST with TVM</title><link>https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/</link><pubDate>Sun, 16 Jun 2019 17:40:59 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/</guid><description><![CDATA[
           <br/><p>真的是隔很久&hellip;.藉口就不多說了 OuO</p><br/><p>這篇主要在造輪子，主要原因就是幾乎找不到這類輪子了，而剛好自己需要，又卡了很久才完成，不如記錄一下 OuO</p>
          
            <p><a href="https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/"><img src="https://drive.google.com/uc?export=view&amp;id=1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190616-build-mnist-with-tvm/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>真的是隔很久&hellip;.藉口就不多說了 OuO</p>
<p>這篇主要在造輪子，主要原因就是幾乎找不到這類輪子了，而剛好自己需要，又卡了很久才完成，不如記錄一下 OuO</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>最近在做 TVM 相關的事，它支援頗多前端，基於方便我就隨便挑一個 Keras 了 (先說我不會 AI @@<br>
然後因為現在頗多都在做 ImageNet 或更之後的應用，MNIST 的資料反而偏少，尤其是幾乎找不到訓練好的模型，說幾乎是因為還真的被我找到，傳送門：<a href="https://github.com/EN10/KerasMNIST" title="EN10/KerasMNIST" aria-label="EN10/KerasMNIST"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> EN10/KerasMNIST</a>，如果只是要用 Keras 來操作 MNIST 的話可以用這個連結，我已經確認過是可以直接執行XDD</p>
<hr>
<p>2019.06.17 更新：扯，原來官網就有&hellip;.https://keras.io/examples/mnist_cnn/<br>
然後我發現我整篇都把 MNIST 打成 MINST&hellip;.</p>
<hr>
<p>話說原本以為模型被存成檔案的話只有權重，結果是有兩種，也可以跟整個模型存在一起，詳情就去 Keras 官網 <a href="https://keras.io/getting-started/faq/#how-can-i-save-a-keras-model" title="How can I save a Keras model?" aria-label="How can I save a Keras model?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How can I save a Keras model?</a> 看看吧。</p>
<p>所以上面那個做 MNIST 的是把整個模型存起來，這主要不是我要的＠＠，不過還是先用看看。</p>
<p>P.S. 一些相依性檔案例如 Keras, Tensorflow, TVM 的安裝就不一一記錄囉 OuO</p>
<h1 id="環境" class="article-heading">環境 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%92%b0%e5%a2%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>ubuntu 18.04</li>
<li>TVM 0.6.dev (6a4d71ff40915611bd42b62994992b879e6be610)</li>
</ul>
<h1 id="一堆程式碼上菜囉" class="article-heading">一堆程式碼上菜囉 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%b8%80%e5%a0%86%e7%a8%8b%e5%bc%8f%e7%a2%bc%e4%b8%8a%e8%8f%9c%e5%9b%89">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="原始-cnnpredictpy" class="article-heading">原始 <code>cnnPredict.py</code> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8e%9f%e5%a7%8b-cnnpredictpy">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>注意要下載或複製那個程式碼，<code>cnn.h5</code> 跟 <code>test3.png</code> 一樣要放對位置。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">from</span> scipy.misc <span style="color:#ff79c6">import</span> imread, imresize
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imread(<span style="color:#f1fa8c">&#39;test3.png&#39;</span>,mode<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compute a bit-wise inversion so black becomes white and vice versa</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>invert(x)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Make it the right size</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imresize(x,(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>))
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Convert to a 4D tensor to feed into our model</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>reshape(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Perform the prediction</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> load_model
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> load_model(<span style="color:#f1fa8c">&#39;cnn.h5&#39;</span>)
</span></span><span style="display:flex;"><span>out <span style="color:#ff79c6">=</span> model<span style="color:#ff79c6">.</span>predict(x)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(np<span style="color:#ff79c6">.</span>argmax(out))
</span></span></code></pre></div><p>很好，可以執行～</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict.py
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span></code></pre></div><h2 id="加入-tvm-囉" class="article-heading">加入 TVM 囉 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e5%85%a5-tvm-%e5%9b%89">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> nnvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm.relay <span style="color:#ff79c6">as</span> relay
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> scipy.misc <span style="color:#ff79c6">import</span> imread, imresize
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> keras
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> load_model
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imread(<span style="color:#f1fa8c">&#39;test3.png&#39;</span>,mode<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compute a bit-wise inversion so black becomes white and vice versa</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>invert(x)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Make it the right size</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imresize(x,(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>))
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Convert to a 4D tensor to feed into our model</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>reshape(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Load model from pre-trained file</span>
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> load_model(<span style="color:#f1fa8c">&#39;cnn.h5&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compile with tvm</span>
</span></span><span style="display:flex;"><span>shape_dict <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#39;input_1&#39;</span>: (<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">28</span>)}
</span></span><span style="display:flex;"><span>func, params <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>frontend<span style="color:#ff79c6">.</span>from_keras(model, shape_dict)
</span></span><span style="display:flex;"><span>target <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;llvm&#34;</span>
</span></span><span style="display:flex;"><span>ctx <span style="color:#ff79c6">=</span> tvm<span style="color:#ff79c6">.</span>cpu(<span style="color:#bd93f9">0</span>)
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> relay<span style="color:#ff79c6">.</span>build_config(opt_level<span style="color:#ff79c6">=</span><span style="color:#bd93f9">3</span>):
</span></span><span style="display:flex;"><span>    executor <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>build_module<span style="color:#ff79c6">.</span>create_executor(<span style="color:#f1fa8c">&#39;graph&#39;</span>, func, ctx, target)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Perform the prediction</span>
</span></span><span style="display:flex;"><span>dtype <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#39;float32&#39;</span>
</span></span><span style="display:flex;"><span>tvm_out <span style="color:#ff79c6">=</span> executor<span style="color:#ff79c6">.</span>evaluate(func)(tvm<span style="color:#ff79c6">.</span>nd<span style="color:#ff79c6">.</span>array(x<span style="color:#ff79c6">.</span>astype(dtype)), <span style="color:#ff79c6">**</span>params)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(np<span style="color:#ff79c6">.</span>argmax(tvm_out<span style="color:#ff79c6">.</span>asnumpy()[<span style="color:#bd93f9">0</span>]))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict_tvm.py
</span></span><span style="display:flex;"><span>In <span style="color:#f1fa8c">`</span>main<span style="color:#f1fa8c">`</span>: 
</span></span><span style="display:flex;"><span>v0.0.1
</span></span><span style="display:flex;"><span>fn <span style="color:#ff79c6">(</span>%conv2d_1_input, %v_param_1: Tensor<span style="color:#ff79c6">[(</span>32, 1, 3, 3<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_2: Tensor<span style="color:#ff79c6">[(</span>32,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_3: Tensor<span style="color:#ff79c6">[(</span>64, 32, 3, 3<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_4: Tensor<span style="color:#ff79c6">[(</span>64,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_5: Tensor<span style="color:#ff79c6">[(</span>128, 9216<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_6: Tensor<span style="color:#ff79c6">[(</span>128,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_7: Tensor<span style="color:#ff79c6">[(</span>10, 128<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_8: Tensor<span style="color:#ff79c6">[(</span>10,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">])</span> <span style="color:#ff79c6">{</span>
</span></span><span style="display:flex;"><span>  %0 <span style="color:#ff79c6">=</span> nn.conv2d<span style="color:#ff79c6">(</span>%conv2d_1_input, %v_param_1, <span style="color:#8be9fd;font-style:italic">channels</span><span style="color:#ff79c6">=</span>32, <span style="color:#8be9fd;font-style:italic">kernel_size</span><span style="color:#ff79c6">=[</span>3, 3<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %1 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%0, %v_param_2<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %2 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%1<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %3 <span style="color:#ff79c6">=</span> nn.conv2d<span style="color:#ff79c6">(</span>%2, %v_param_3, <span style="color:#8be9fd;font-style:italic">channels</span><span style="color:#ff79c6">=</span>64, <span style="color:#8be9fd;font-style:italic">kernel_size</span><span style="color:#ff79c6">=[</span>3, 3<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %4 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%3, %v_param_4<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %5 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%4<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %6 <span style="color:#ff79c6">=</span> nn.max_pool2d<span style="color:#ff79c6">(</span>%5, <span style="color:#8be9fd;font-style:italic">pool_size</span><span style="color:#ff79c6">=[</span>2, 2<span style="color:#ff79c6">]</span>, <span style="color:#8be9fd;font-style:italic">strides</span><span style="color:#ff79c6">=[</span>2, 2<span style="color:#ff79c6">])</span>an internal invariant was violated <span style="color:#ff79c6">while</span> typechecking your program <span style="color:#ff79c6">[</span>22:05:21<span style="color:#ff79c6">]</span> tvm/src/relay/op/nn/pooling.cc:73: Check failed: data !<span style="color:#ff79c6">=</span> nullptr: 
</span></span><span style="display:flex;"><span>; 
</span></span><span style="display:flex;"><span>  %7 <span style="color:#ff79c6">=</span> transpose<span style="color:#ff79c6">(</span>%6, <span style="color:#8be9fd;font-style:italic">axes</span><span style="color:#ff79c6">=[</span>0, 2, 3, 1<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %8 <span style="color:#ff79c6">=</span> nn.batch_flatten<span style="color:#ff79c6">(</span>%7<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %9 <span style="color:#ff79c6">=</span> nn.dense<span style="color:#ff79c6">(</span>%8, %v_param_5, <span style="color:#8be9fd;font-style:italic">units</span><span style="color:#ff79c6">=</span>128<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %10 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%9, %v_param_6<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %11 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%10<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %12 <span style="color:#ff79c6">=</span> nn.dense<span style="color:#ff79c6">(</span>%11, %v_param_7, <span style="color:#8be9fd;font-style:italic">units</span><span style="color:#ff79c6">=</span>10<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %13 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%12, %v_param_8<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  nn.softmax<span style="color:#ff79c6">(</span>%13, <span style="color:#8be9fd;font-style:italic">axis</span><span style="color:#ff79c6">=</span>1<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">}</span>
</span></span></code></pre></div><p>扯，竟然不行＠＠，而且完全不知道錯哪，找了一些資料說是 shape 錯了，我試了各種排列組合也都不行&hellip;.</p>
<h2 id="只存-mnist-的權重" class="article-heading">只存 MNIST 的權重 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%aa%e5%ad%98-mnist-%e7%9a%84%e6%ac%8a%e9%87%8d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>只好使用上面提到 Keras 官網 <a href="https://keras.io/getting-started/faq/#how-can-i-save-a-keras-model" title="How can I save a Keras model?" aria-label="How can I save a Keras model?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> How can I save a Keras model?</a> 的方式只存權重出來，這裡我們只需要改最後一行，<code>save</code> 改成 <code>save_weights</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> keras
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.datasets <span style="color:#ff79c6">import</span> mnist
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> Sequential
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Dense, Dropout, Flatten
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Conv2D, MaxPooling2D
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras <span style="color:#ff79c6">import</span> backend <span style="color:#ff79c6">as</span> K
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>batch_size <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">128</span>
</span></span><span style="display:flex;"><span>num_classes <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>epochs <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">12</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># input image dimensions</span>
</span></span><span style="display:flex;"><span>img_rows, img_cols <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">28</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># the data, shuffled and split between train and test sets</span>
</span></span><span style="display:flex;"><span>(x_train, y_train), (x_test, y_test) <span style="color:#ff79c6">=</span> mnist<span style="color:#ff79c6">.</span>load_data()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x_train <span style="color:#ff79c6">=</span> x_train<span style="color:#ff79c6">.</span>reshape(x_train<span style="color:#ff79c6">.</span>shape[<span style="color:#bd93f9">0</span>], img_rows, img_cols, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x_test <span style="color:#ff79c6">=</span> x_test<span style="color:#ff79c6">.</span>reshape(x_test<span style="color:#ff79c6">.</span>shape[<span style="color:#bd93f9">0</span>], img_rows, img_cols, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>input_shape <span style="color:#ff79c6">=</span> (img_rows, img_cols, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x_train <span style="color:#ff79c6">=</span> x_train<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x_test <span style="color:#ff79c6">=</span> x_test<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x_train <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>x_test <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#39;x_train shape:&#39;</span>, x_train<span style="color:#ff79c6">.</span>shape)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(x_train<span style="color:#ff79c6">.</span>shape[<span style="color:#bd93f9">0</span>], <span style="color:#f1fa8c">&#39;train samples&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(x_test<span style="color:#ff79c6">.</span>shape[<span style="color:#bd93f9">0</span>], <span style="color:#f1fa8c">&#39;test samples&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># convert class vectors to binary class matrices</span>
</span></span><span style="display:flex;"><span>y_train <span style="color:#ff79c6">=</span> keras<span style="color:#ff79c6">.</span>utils<span style="color:#ff79c6">.</span>to_categorical(y_train, num_classes)
</span></span><span style="display:flex;"><span>y_test <span style="color:#ff79c6">=</span> keras<span style="color:#ff79c6">.</span>utils<span style="color:#ff79c6">.</span>to_categorical(y_test, num_classes)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> Sequential()
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">32</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>),
</span></span><span style="display:flex;"><span>                 activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>,
</span></span><span style="display:flex;"><span>                 input_shape<span style="color:#ff79c6">=</span>input_shape))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">64</span>, (<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(MaxPooling2D(pool_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">2</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.25</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Flatten())
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(<span style="color:#bd93f9">128</span>, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.5</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(num_classes, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;softmax&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>compile(loss<span style="color:#ff79c6">=</span>keras<span style="color:#ff79c6">.</span>losses<span style="color:#ff79c6">.</span>categorical_crossentropy,
</span></span><span style="display:flex;"><span>              optimizer<span style="color:#ff79c6">=</span>keras<span style="color:#ff79c6">.</span>optimizers<span style="color:#ff79c6">.</span>Adadelta(),
</span></span><span style="display:flex;"><span>              metrics<span style="color:#ff79c6">=</span>[<span style="color:#f1fa8c">&#39;accuracy&#39;</span>])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>fit(x_train, y_train,
</span></span><span style="display:flex;"><span>          batch_size<span style="color:#ff79c6">=</span>batch_size,
</span></span><span style="display:flex;"><span>          epochs<span style="color:#ff79c6">=</span>epochs,
</span></span><span style="display:flex;"><span>          verbose<span style="color:#ff79c6">=</span><span style="color:#bd93f9">1</span>,
</span></span><span style="display:flex;"><span>          validation_data<span style="color:#ff79c6">=</span>(x_test, y_test))
</span></span><span style="display:flex;"><span>score <span style="color:#ff79c6">=</span> model<span style="color:#ff79c6">.</span>evaluate(x_test, y_test, verbose<span style="color:#ff79c6">=</span><span style="color:#bd93f9">0</span>)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#39;Test loss:&#39;</span>, score[<span style="color:#bd93f9">0</span>])
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#39;Test accuracy:&#39;</span>, score[<span style="color:#bd93f9">1</span>])
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>save_weights(<span style="color:#f1fa8c">&#39;mnist_weights.h5&#39;</span>)
</span></span></code></pre></div><p>跑了頗久，不過跟其應該比 ImageNet 快很多了。結果如下圖。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1qSdoAYPCxNk5tlI0ELivCieDWCQO9IOV" alt='train a MNIST model with Keras' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">train a MNIST model with Keras</center>
    </figcaption>
  </figure>
</p>
<h2 id="自己用-keras-建構一個-mnist-再餵給-tvm" class="article-heading">自己用 Keras 建構一個 MNIST 再餵給 TVM 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%87%aa%e5%b7%b1%e7%94%a8-keras-%e5%bb%ba%e6%a7%8b%e4%b8%80%e5%80%8b-mnist-%e5%86%8d%e9%a4%b5%e7%b5%a6-tvm">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>把上面產生的權重餵給自己建構的模型</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> nnvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm.relay <span style="color:#ff79c6">as</span> relay
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> scipy.misc <span style="color:#ff79c6">import</span> imread, imresize
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> keras
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> load_model
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.datasets <span style="color:#ff79c6">import</span> mnist
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> Sequential
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Dense, Dropout, Flatten, InputLayer
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Conv2D, MaxPooling2D
</span></span><span style="display:flex;"><span>num_classes <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imread(<span style="color:#f1fa8c">&#39;test3.png&#39;</span>,mode<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compute a bit-wise inversion so black becomes white and vice versa</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>invert(x)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Make it the right size</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imresize(x,(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>))
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Convert to a 4D tensor to feed into our model</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>reshape(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Construct a MNIST model</span>
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> Sequential()
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">32</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>, input_shape<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">64</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(MaxPooling2D(pool_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">2</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.25</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Flatten())
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(<span style="color:#bd93f9">128</span>, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.5</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(num_classes, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;softmax&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Load the weights that we get from last program</span>
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>load_weights(<span style="color:#f1fa8c">&#39;mnist_weights.h5&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>shape_dict <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#39;input_1&#39;</span>: (<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">28</span>)}
</span></span><span style="display:flex;"><span>func, params <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>frontend<span style="color:#ff79c6">.</span>from_keras(model, shape_dict)
</span></span><span style="display:flex;"><span>target <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;llvm&#34;</span>
</span></span><span style="display:flex;"><span>ctx <span style="color:#ff79c6">=</span> tvm<span style="color:#ff79c6">.</span>cpu(<span style="color:#bd93f9">0</span>)
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> relay<span style="color:#ff79c6">.</span>build_config(opt_level<span style="color:#ff79c6">=</span><span style="color:#bd93f9">3</span>):
</span></span><span style="display:flex;"><span>    executor <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>build_module<span style="color:#ff79c6">.</span>create_executor(<span style="color:#f1fa8c">&#39;graph&#39;</span>, func, ctx, target)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Perform the prediction</span>
</span></span><span style="display:flex;"><span>dtype <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#39;float32&#39;</span>
</span></span><span style="display:flex;"><span>tvm_out <span style="color:#ff79c6">=</span> executor<span style="color:#ff79c6">.</span>evaluate(func)(tvm<span style="color:#ff79c6">.</span>nd<span style="color:#ff79c6">.</span>array(x<span style="color:#ff79c6">.</span>astype(dtype)), <span style="color:#ff79c6">**</span>params)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(np<span style="color:#ff79c6">.</span>argmax(tvm_out<span style="color:#ff79c6">.</span>asnumpy()[<span style="color:#bd93f9">0</span>]))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict_tvm.py
</span></span><span style="display:flex;"><span>In <span style="color:#f1fa8c">`</span>main<span style="color:#f1fa8c">`</span>: 
</span></span><span style="display:flex;"><span>v0.0.1
</span></span><span style="display:flex;"><span>fn <span style="color:#ff79c6">(</span>%conv2d_1_input, %v_param_1: Tensor<span style="color:#ff79c6">[(</span>32, 1, 3, 3<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_2: Tensor<span style="color:#ff79c6">[(</span>32,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_3: Tensor<span style="color:#ff79c6">[(</span>64, 32, 3, 3<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_4: Tensor<span style="color:#ff79c6">[(</span>64,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_5: Tensor<span style="color:#ff79c6">[(</span>128, 9216<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_6: Tensor<span style="color:#ff79c6">[(</span>128,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_7: Tensor<span style="color:#ff79c6">[(</span>10, 128<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">]</span>, %v_param_8: Tensor<span style="color:#ff79c6">[(</span>10,<span style="color:#ff79c6">)</span>, float32<span style="color:#ff79c6">])</span> <span style="color:#ff79c6">{</span>
</span></span><span style="display:flex;"><span>  %0 <span style="color:#ff79c6">=</span> nn.conv2d<span style="color:#ff79c6">(</span>%conv2d_1_input, %v_param_1, <span style="color:#8be9fd;font-style:italic">channels</span><span style="color:#ff79c6">=</span>32, <span style="color:#8be9fd;font-style:italic">kernel_size</span><span style="color:#ff79c6">=[</span>3, 3<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %1 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%0, %v_param_2<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %2 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%1<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %3 <span style="color:#ff79c6">=</span> nn.conv2d<span style="color:#ff79c6">(</span>%2, %v_param_3, <span style="color:#8be9fd;font-style:italic">channels</span><span style="color:#ff79c6">=</span>64, <span style="color:#8be9fd;font-style:italic">kernel_size</span><span style="color:#ff79c6">=[</span>3, 3<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %4 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%3, %v_param_4<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %5 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%4<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %6 <span style="color:#ff79c6">=</span> nn.max_pool2d<span style="color:#ff79c6">(</span>%5, <span style="color:#8be9fd;font-style:italic">pool_size</span><span style="color:#ff79c6">=[</span>2, 2<span style="color:#ff79c6">]</span>, <span style="color:#8be9fd;font-style:italic">strides</span><span style="color:#ff79c6">=[</span>2, 2<span style="color:#ff79c6">])</span>an internal invariant was violated <span style="color:#ff79c6">while</span> typechecking your program <span style="color:#ff79c6">[</span>22:21:27<span style="color:#ff79c6">]</span> tvm/src/relay/op/nn/pooling.cc:73: Check failed: data !<span style="color:#ff79c6">=</span> nullptr: 
</span></span><span style="display:flex;"><span>; 
</span></span><span style="display:flex;"><span>  %7 <span style="color:#ff79c6">=</span> transpose<span style="color:#ff79c6">(</span>%6, <span style="color:#8be9fd;font-style:italic">axes</span><span style="color:#ff79c6">=[</span>0, 2, 3, 1<span style="color:#ff79c6">])</span>
</span></span><span style="display:flex;"><span>  %8 <span style="color:#ff79c6">=</span> nn.batch_flatten<span style="color:#ff79c6">(</span>%7<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %9 <span style="color:#ff79c6">=</span> nn.dense<span style="color:#ff79c6">(</span>%8, %v_param_5, <span style="color:#8be9fd;font-style:italic">units</span><span style="color:#ff79c6">=</span>128<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %10 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%9, %v_param_6<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %11 <span style="color:#ff79c6">=</span> nn.relu<span style="color:#ff79c6">(</span>%10<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %12 <span style="color:#ff79c6">=</span> nn.dense<span style="color:#ff79c6">(</span>%11, %v_param_7, <span style="color:#8be9fd;font-style:italic">units</span><span style="color:#ff79c6">=</span>10<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  %13 <span style="color:#ff79c6">=</span> nn.bias_add<span style="color:#ff79c6">(</span>%12, %v_param_8<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>  nn.softmax<span style="color:#ff79c6">(</span>%13, <span style="color:#8be9fd;font-style:italic">axis</span><span style="color:#ff79c6">=</span>1<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">}</span>
</span></span></code></pre></div><p>扯，結果竟然一模一樣。</p>
<h2 id="檢驗剛剛建立的模型是否正確" class="article-heading">檢驗剛剛建立的模型是否正確 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%a2%e9%a9%97%e5%89%9b%e5%89%9b%e5%bb%ba%e7%ab%8b%e7%9a%84%e6%a8%a1%e5%9e%8b%e6%98%af%e5%90%a6%e6%ad%a3%e7%a2%ba">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>總之先試試看是不是跟直接讀 <code>cnn.h5</code> 一樣。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> nnvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm.relay <span style="color:#ff79c6">as</span> relay
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> scipy.misc <span style="color:#ff79c6">import</span> imread, imresize
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> keras
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> load_model
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.datasets <span style="color:#ff79c6">import</span> mnist
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> Sequential
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Dense, Dropout, Flatten, InputLayer
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Conv2D, MaxPooling2D
</span></span><span style="display:flex;"><span>num_classes <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imread(<span style="color:#f1fa8c">&#39;test3.png&#39;</span>,mode<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compute a bit-wise inversion so black becomes white and vice versa</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>invert(x)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Make it the right size</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imresize(x,(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>))
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Convert to a 4D tensor to feed into our model</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>reshape(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Construct a MNIST model</span>
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> Sequential()
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">32</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>, input_shape<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">64</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(MaxPooling2D(pool_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">2</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.25</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Flatten())
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(<span style="color:#bd93f9">128</span>, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.5</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(num_classes, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;softmax&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Load the weights that we get from last program</span>
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>load_weights(<span style="color:#f1fa8c">&#39;mnist_weights.h5&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Perform the prediction</span>
</span></span><span style="display:flex;"><span>out <span style="color:#ff79c6">=</span> model<span style="color:#ff79c6">.</span>predict(x)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(np<span style="color:#ff79c6">.</span>argmax(out))
</span></span></code></pre></div><p>很好，是一樣&hellip;.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 cnnPredict.py
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span></code></pre></div><h2 id="突破加個輸入層" class="article-heading">突破，加個輸入層？ 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%aa%81%e7%a0%b4%e5%8a%a0%e5%80%8b%e8%bc%b8%e5%85%a5%e5%b1%a4">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>在找解決方式的過程中突然看到<a href="https://stackoverflow.com/a/49600827/6734174" title="這裡" aria-label="這裡"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 這裡</a>提到有 <code>InputLayer</code>，不如加看看。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">import</span> nnvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> tvm.relay <span style="color:#ff79c6">as</span> relay
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> scipy.misc <span style="color:#ff79c6">import</span> imread, imresize
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> numpy <span style="color:#ff79c6">as</span> np
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">import</span> keras
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> load_model
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.datasets <span style="color:#ff79c6">import</span> mnist
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.models <span style="color:#ff79c6">import</span> Sequential
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Dense, Dropout, Flatten, InputLayer
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">from</span> keras.layers <span style="color:#ff79c6">import</span> Conv2D, MaxPooling2D
</span></span><span style="display:flex;"><span>num_classes <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">10</span>
</span></span><span style="display:flex;"><span>input_shape <span style="color:#ff79c6">=</span> (<span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imread(<span style="color:#f1fa8c">&#39;test3.png&#39;</span>,mode<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;L&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Compute a bit-wise inversion so black becomes white and vice versa</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> np<span style="color:#ff79c6">.</span>invert(x)
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Make it the right size</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> imresize(x,(<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>))
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Convert to a 4D tensor to feed into our model</span>
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>reshape(<span style="color:#bd93f9">1</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">28</span>,<span style="color:#bd93f9">1</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">=</span> x<span style="color:#ff79c6">.</span>astype(<span style="color:#f1fa8c">&#39;float32&#39;</span>)
</span></span><span style="display:flex;"><span>x <span style="color:#ff79c6">/=</span> <span style="color:#bd93f9">255</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># model = load_model(&#39;cnn.h5&#39;)</span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Construct a MNIST model</span>
</span></span><span style="display:flex;"><span>model <span style="color:#ff79c6">=</span> Sequential()
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(InputLayer(input_shape<span style="color:#ff79c6">=</span>input_shape))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">32</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>, input_shape<span style="color:#ff79c6">=</span>input_shape))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Conv2D(<span style="color:#bd93f9">64</span>, kernel_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">3</span>, <span style="color:#bd93f9">3</span>), activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(MaxPooling2D(pool_size<span style="color:#ff79c6">=</span>(<span style="color:#bd93f9">2</span>, <span style="color:#bd93f9">2</span>)))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.25</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Flatten())
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(<span style="color:#bd93f9">128</span>, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;relu&#39;</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dropout(<span style="color:#bd93f9">0.5</span>))
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>add(Dense(num_classes, activation<span style="color:#ff79c6">=</span><span style="color:#f1fa8c">&#39;softmax&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Load the weights that we get from last program</span>
</span></span><span style="display:flex;"><span>model<span style="color:#ff79c6">.</span>load_weights(<span style="color:#f1fa8c">&#39;mnist_weights.h5&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>shape_dict <span style="color:#ff79c6">=</span> {<span style="color:#f1fa8c">&#39;input_1&#39;</span>: (<span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">1</span>, <span style="color:#bd93f9">28</span>, <span style="color:#bd93f9">28</span>)}
</span></span><span style="display:flex;"><span>func, params <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>frontend<span style="color:#ff79c6">.</span>from_keras(model, shape_dict)
</span></span><span style="display:flex;"><span>target <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#34;llvm&#34;</span>
</span></span><span style="display:flex;"><span>ctx <span style="color:#ff79c6">=</span> tvm<span style="color:#ff79c6">.</span>cpu(<span style="color:#bd93f9">0</span>)
</span></span><span style="display:flex;"><span><span style="color:#ff79c6">with</span> relay<span style="color:#ff79c6">.</span>build_config(opt_level<span style="color:#ff79c6">=</span><span style="color:#bd93f9">3</span>):
</span></span><span style="display:flex;"><span>    executor <span style="color:#ff79c6">=</span> relay<span style="color:#ff79c6">.</span>build_module<span style="color:#ff79c6">.</span>create_executor(<span style="color:#f1fa8c">&#39;graph&#39;</span>, func, ctx, target)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># Pperform the prediction</span>
</span></span><span style="display:flex;"><span>dtype <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">&#39;float32&#39;</span>
</span></span><span style="display:flex;"><span>tvm_out <span style="color:#ff79c6">=</span> executor<span style="color:#ff79c6">.</span>evaluate(func)(tvm<span style="color:#ff79c6">.</span>nd<span style="color:#ff79c6">.</span>array(x<span style="color:#ff79c6">.</span>astype(dtype)), <span style="color:#ff79c6">**</span>params)
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">print</span>(np<span style="color:#ff79c6">.</span>argmax(tvm_out<span style="color:#ff79c6">.</span>asnumpy()[<span style="color:#bd93f9">0</span>]))
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ python3 test_mnist.py
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span>
</span></span></code></pre></div><p>扯，竟然過了 QuQ</p>
<h1 id="其他" class="article-heading">其他 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="lutzroedernetronhttpsgithubcomlutzroedernetron" class="article-heading"><a href="https://github.com/lutzroeder/netron" title="&lt;code&gt;lutzroeder/netron&lt;/code&gt;" aria-label="&lt;code&gt;lutzroeder/netron&lt;/code&gt;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> <code>lutzroeder/netron</code></a> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#lutzroedernetronhttpsgithubcomlutzroedernetron">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>發現了一個視覺化工具可以看模型。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/18rjO-BiQTXRsSDAtisBkyEEhkO2sIBoP" alt='NETRON' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">NETRON</center>
    </figcaption>
  </figure>
</p>
<h2 id="想看中間的-shape-的話" class="article-heading">想看中間的 shape 的話 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%83%b3%e7%9c%8b%e4%b8%ad%e9%96%93%e7%9a%84-shape-%e7%9a%84%e8%a9%b1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff79c6">for</span> layer <span style="color:#ff79c6">in</span> model<span style="color:#ff79c6">.</span>layers:
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(layer<span style="color:#ff79c6">.</span>input_shape)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(layer<span style="color:#ff79c6">.</span>input)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(layer<span style="color:#ff79c6">.</span>output_shape)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(layer<span style="color:#ff79c6">.</span>output)
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd;font-style:italic">print</span>(<span style="color:#f1fa8c">&#34;---&#34;</span>)
</span></span></code></pre></div>
        ]]></description></item><item><title>Github Flow (2)</title><link>https://aben20807.github.io/posts/20190421-github-flow-2/</link><pubDate>Sun, 21 Apr 2019 19:13:02 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190421-github-flow-2/</guid><description><![CDATA[
           <br/><p>針對昨天的再多釐清一些。順便補充一些東西。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190421-github-flow-2/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190421-github-flow-2/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>針對昨天的再多釐清一些。順便補充一些東西。</p>
<h1 id="關於流程" class="article-heading">關於流程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e6%96%bc%e6%b5%81%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>昨天的流程主要是有需要 fork 的，通常是針對那些你無法對原始專案直接操作的狀況。</p>
<p>如果對同一個專案使用 GitHub flow 也是可以的，也就是說在同一個專案中開啟 branch 在對自己開啟 PR，或許這就是我一開始有點困惑的原因，結果是都適用。</p>
<h1 id="pr-被-merge-後呢" class="article-heading">PR 被 merge 後呢 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#pr-%e8%a2%ab-merge-%e5%be%8c%e5%91%a2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="更新-merge-commit" class="article-heading">更新 merge commit 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9b%b4%e6%96%b0-merge-commit">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>接下來要做的就是更新一下自己的 master (origin 跟 local)。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git fetch upstream
</span></span><span style="display:flex;"><span>$ git checkout master
</span></span><span style="display:flex;"><span>$ git merge upstream/master
</span></span><span style="display:flex;"><span>$ git push origin master
</span></span></code></pre></div><h2 id="刪除-branch" class="article-heading">刪除 branch 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%aa%e9%99%a4-branch">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>GitHub 上在被 merge 的 PR 的界面會出現可以刪除 branch 的按鈕。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1MM_kFgO6PWBnPRPp9Ry3BgX4Lf6j2U3i" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>刪除完成後會出現提示，貌似還可以復原呢。這個步驟後你帳號遠端上的那個 branch 就不見了。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1Q39-VcdZ36CqtvOh0NCu1Ix35JxwuzaQ" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>再來是更新到本地端。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#6272a4"># 列出本地端的分支 (加上遠端記錄)</span>
</span></span><span style="display:flex;"><span>$ git branch -a
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1QifWjcp6goVP329L8aBoeV98yVze_XAc" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>刪除遠端記錄</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#6272a4"># 模擬遠端可刪除分支</span>
</span></span><span style="display:flex;"><span>$ git remote prune origin --dry-run
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6272a4"># 執行刪除</span>
</span></span><span style="display:flex;"><span>$ git remote prune origin
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1w1LtPh3fYn6s2EO21yof6Xh8T60Gw-Zc" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1MdDsIHfyFUX9hAmorRbWYmg8tv0HYtO0" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>刪除本地分支後就大功告成</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git branch -d new_feature
</span></span></code></pre></div><h1 id="參考" class="article-heading">參考 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="http://www.fizerkhan.com/blog/posts/Clean-up-your-local-branches-after-merge-and-delete-in-GitHub.html" title="Clean up your local branches after merge and delete in GitHub" aria-label="Clean up your local branches after merge and delete in GitHub"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Clean up your local branches after merge and delete in GitHub</a></li>
</ul>
        ]]></description></item><item><title>Github Flow</title><link>https://aben20807.github.io/posts/20190420-github-flow/</link><pubDate>Sat, 20 Apr 2019 21:04:32 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190420-github-flow/</guid><description><![CDATA[
           <br/><p>最近算是真的在用多人合作的 git 了，以前大多只有自己在 add, commit, push。不過到多人的合作下就講求流程，這裡以 GitHub flow 為主要的流程做討論以及順便記錄一些會用到的指令。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190420-github-flow/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190420-github-flow/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>最近算是真的在用多人合作的 git 了，以前大多只有自己在 add, commit, push。不過到多人的合作下就講求流程，這裡以 GitHub flow 為主要的流程做討論以及順便記錄一些會用到的指令。</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>其實是看了 <a href="https://guides.github.com/introduction/flow/" title="Understanding the GitHub flow" aria-label="Understanding the GitHub flow"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Understanding the GitHub flow</a> 之後還不是相當懂，跟同學(大神)討論了一下算是有釐清一些我的懷疑吧。</p>
<p>p.s. 這裡有翻譯版：<a href="https://medium.com/@trylovetom/%e8%ae%93%e6%88%91%e5%80%91%e4%be%86%e4%ba%86%e8%a7%a3-github-flow-%e5%90%a7-4144caf1f1bf" title="讓我們來了解 GitHub Flow 吧！" aria-label="讓我們來了解 GitHub Flow 吧！"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 讓我們來了解 GitHub Flow 吧！</a></p>
<p>&lt;注意&gt; 因為目前專案還不算大型，所以目前遇到的狀況算是比較簡易的。<br>
&lt;注意&gt; 由於我也是初心者，如果我有誤解的話請跟我說，感激不盡。</p>
<h1 id="github-flow" class="article-heading">GitHub flow 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#github-flow">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>這個流程，主要是去掉 Git flow 有兩條主線的麻煩。不過誰比較好，還是得看用途，更有 GitLab flow 是合併兩個來用的＠＠</p>
<blockquote>
<p>GitHub flow 只專注在 master 身上，從 master 上開啟 feature branch，在該 branch 上開發(會有一些 commit)，最後在透過 PR(pull request) 合併到 master。</p>
</blockquote>
<p>上面這句看似簡單，其實相當複雜，我盡量詳盡解釋。</p>
<p>更清楚的解釋應該為：</p>
<blockquote>
<p>從主要專案(upstream) fork 一份到自己的帳號(origin)，修改 origin，從 origin/master 新增分支，開發完後將分支 push 到 origin/新分支 上後直接用新分支對 upstream/master 開啟 PR。</p>
</blockquote>
<h1 id="fork-and-pr" class="article-heading">Fork and PR 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#fork-and-pr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>首先，PR 可以達到討論及 code review 的效果，為了達到 PR 我們必須把主專案 fork 一份到自己的帳號。而 PR 的方式主要就是透過 GitHub 網頁提供的界面進行操作。</p>
<p>不過，我試了一下，發現同一個 repo 還是可以透過 branch 發 PR 的，這我就有點不確定為何一定要 fork，或許 fork 是不一定，不過更改自己的 repo 會比較心安一點，尤其若是常使用&hellip;.<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1poKsFmBeJ650xMa6OtgxMUGNE8NYo8fy" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="branch" class="article-heading">Branch 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#branch">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Branch 在 git 中花費相當少，因為它就只是一個標籤，所以應該盡量使用它。GitHub flow 中保證 master 上的每一個版本都是可佈署的，因此在此流程中不建議直接在 master 上加 commit 而是在 master 上開一個 branch 出來。</p>
<p>&lt;注意&gt; 一定要從 master 開 branch<br>
但是又有一個特例：就是當別人還沒 merge 我的 PR 可是我接下來的開發又需要有這個 PR 的內容的時候。網路上我找到有人問這個問題 <a href="https://softwareengineering.stackexchange.com/questions/310427/in-github-flow-is-it-ok-to-base-feature-branch-on-another-feature-branch" title="傳送門" aria-label="傳送門"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 傳送門</a>，好像就只能在 branch 分出另一個 branch 來先暫時用。</p>
<h1 id="流程" class="article-heading">流程 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%b5%81%e7%a8%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="初始化" class="article-heading">初始化 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%88%9d%e5%a7%8b%e5%8c%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ol>
<li>Fork 主要專案到自己的 GitHub 帳號</li>
<li>Clone 自己 GitHub 中的專案 (fork 過來的)</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git clone &lt;自己專案的 url&gt;
</span></span></code></pre></div><ol start="3">
<li>設定 upstream 來源</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git remote add upstream &lt;主要專案的 url&gt;
</span></span></code></pre></div><h2 id="開發中" class="article-heading">開發中 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%96%8b%e7%99%bc%e4%b8%ad">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ol>
<li>前往 master 分支 (一開始就在 master 可以不用)</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout master
</span></span></code></pre></div><ol start="2">
<li>新增並前往 feature 分支</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout -b new_feature
</span></span></code></pre></div><ol start="3">
<li>開始開發功能</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git add XXX
</span></span><span style="display:flex;"><span>$ git commit
</span></span></code></pre></div><ol start="4">
<li>push 到自己帳號的專案 (3. 4. 可以混用，push 完後一樣可以 commit 再 push)</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git push origin new_feature
</span></span></code></pre></div><ol start="5">
<li>準備發起 PR，先把專案更新到最新，也就是把 upstream 的東西更新到自己本地端</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout master
</span></span><span style="display:flex;"><span>$ git fetch upstream
</span></span><span style="display:flex;"><span>$ git merge upstream/master
</span></span></code></pre></div><ol start="6">
<li>回到 feature 分支把 master 中從 upstream 來的新 commit 更新回 feature branch</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git checkout new_feature
</span></span><span style="display:flex;"><span>$ git rebase master
</span></span><span style="display:flex;"><span>$ git push origin new_feature
</span></span></code></pre></div><ol start="7">
<li>發 PR<br>
開啟 GitHub 界面，按下 Create pull request 的綠色按鈕，注意方向，輸入標題、解說文字、新增 reviewer 後按下 Create。這樣就大公告成了。</li>
</ol>
<h1 id="參考資料" class="article-heading">參考資料 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://medium.com/@yengttt/%e9%96%8b%e7%99%bc%e7%94%a8%e5%88%b0%e7%9a%84git%e6%b5%81%e7%a8%8b-c9082b914974" title="這次專案用到的Git流程" aria-label="這次專案用到的Git流程"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 這次專案用到的Git流程</a>：本篇主要流程來自這裡，更詳盡請點擊參考。</li>
<li><a href="https://poychang.github.io/guide-to-use-github-flow/" title="如何使用 GitHub Flow 來參與開源專案" aria-label="如何使用 GitHub Flow 來參與開源專案"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 如何使用 GitHub Flow 來參與開源專案</a></li>
</ul>
        ]]></description></item><item><title>不同路徑之 Git Patch</title><link>https://aben20807.github.io/posts/20190403-git-patch-different-directory/</link><pubDate>Wed, 03 Apr 2019 16:50:28 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190403-git-patch-different-directory/</guid><description><![CDATA[
           <br/><p>最近也算常用 git，不過有些特殊的功能都沒用過，這次也不算是學學看，而是真的要用到了，總之就是還個技術債順便記錄。不過會用到這個情境的應該算是少數。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190403-git-patch-different-directory/"><img src="https://drive.google.com/uc?export=view&amp;id=1oerWXAO9-X5k8wb1ixdAmnaqgCFFAizP" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190403-git-patch-different-directory/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>最近也算常用 git，不過有些特殊的功能都沒用過，這次也不算是學學看，而是真的要用到了，總之就是還個技術債順便記錄。不過會用到這個情境的應該算是少數。</p>
<h1 id="tldr" class="article-heading">tl;dr 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tldr">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ git format-patch --relative &lt;SHA&gt; ./ -o /tmp/patches
</span></span><span style="display:flex;"><span>$ git am /tmp/patches/*.patch
</span></span></code></pre></div><h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>git 有一個好用的工具可以針對 repo 上面的 commit 產生補丁檔 (patch)。詳細用法可以去查看官方說明文件 <a href="https://git-scm.com/docs/git-format-patch" title="git format-patch" aria-label="git format-patch"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> git format-patch</a>。</p>
<p>這裡主要記錄一個使用情境：要把專案A 下的子專案a 的修改記錄做成 patch 給專案B 使用，注意，專案a 與專案B 是同一個專案。</p>
<p>會有這樣需求主要是因為 B 是開源專案，然後我們拿來修改後變成 A 的子專案。當然最好的方式是用 fork，然後利用 submodule 管理，不過因為只有一個 repo 可以使用，所以就採用這個作法。</p>
<p>限制：內部檔案名稱要相同</p>
<h1 id="範例檔案架構" class="article-heading">範例檔案架構 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%af%84%e4%be%8b%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>接下來利用簡單的範例來模擬。</p>
<p><code>repo A</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>A
</span></span><span style="display:flex;"><span>├── a
</span></span><span style="display:flex;"><span>│   └── file_1.txt
</span></span><span style="display:flex;"><span>└── sth_in_A.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>* a257187 - <span style="color:#ff79c6">(</span>HEAD -&gt; master<span style="color:#ff79c6">)</span> Add sth in A
</span></span><span style="display:flex;"><span>* a1f4b9e - init
</span></span></code></pre></div><p><code>repo B</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>B
</span></span><span style="display:flex;"><span>└── file_1.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>* 63998ea - <span style="color:#ff79c6">(</span>HEAD -&gt; master<span style="color:#ff79c6">)</span> init
</span></span></code></pre></div><p>接著進行一些修改 (記得用 git 去追蹤修改記錄)</p>
<p>我們測試一些不同的行為，可以從下方 commit message 看出，同時修改(<code>eb948ee</code>)也可以喔</p>
<p>大概像是這樣</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>A
</span></span><span style="display:flex;"><span>├── a
</span></span><span style="display:flex;"><span>│   ├── file_1.txt
</span></span><span style="display:flex;"><span>│   └── file_2.txt
</span></span><span style="display:flex;"><span>└── sth_in_A.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>* 0f5c75e - <span style="color:#ff79c6">(</span>HEAD -&gt; master<span style="color:#ff79c6">)</span> Add file_2 in a
</span></span><span style="display:flex;"><span>* eb948ee - Modify file_1 and sth_in_A.txt
</span></span><span style="display:flex;"><span>* 26bde10 - Modify sth_in_A.txt
</span></span><span style="display:flex;"><span>* b551578 - Modify file_1
</span></span><span style="display:flex;"><span>* a257187 - Add sth in A
</span></span><span style="display:flex;"><span>* a1f4b9e - init
</span></span></code></pre></div><h1 id="產生-patch" class="article-heading">產生 patch 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%94%a2%e7%94%9f-patch">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>開始產生 patch 囉，首先 <code>cd</code> 到子資料夾，接著打入下方指令，<code>a1f4b9e</code> 是起始 commit，如果這個子專案是從中間才開始追蹤的話也可以從中間的 commit 開始。可以看到它只會針對 a 中有修改的部份才產生 patch 檔。<code>-o</code> 是指定輸出的路徑，完全可以依照自己喜好修改。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ <span style="color:#8be9fd;font-style:italic">cd</span> A/a/
</span></span><span style="display:flex;"><span>$ git format-patch --relative a1f4b9e ./ -o /tmp/patches
</span></span><span style="display:flex;"><span>/tmp/patches/0001-Modify-file_1.patch
</span></span><span style="display:flex;"><span>/tmp/patches/0002-Modify-file_1-and-sth_in_A.txt.patch
</span></span><span style="display:flex;"><span>/tmp/patches/0003-Add-file_2-in-a.patch
</span></span></code></pre></div><h1 id="套用-patch" class="article-heading">套用 patch 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%a5%97%e7%94%a8-patch">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>套用 patch 到專案B</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ cd B/
</span></span><span style="display:flex;"><span>$ git am /tmp/patches/*.patch
</span></span><span style="display:flex;"><span>Applying: Modify file_1
</span></span><span style="display:flex;"><span>Applying: Modify file_1 and sth_in_A.txt
</span></span><span style="display:flex;"><span>Applying: Add file_2 in a
</span></span></code></pre></div><p>最後可以看到它把所有的 commit 都一一重現</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>B
</span></span><span style="display:flex;"><span>├── file_1.txt
</span></span><span style="display:flex;"><span>└── file_2.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>* e28e672 - <span style="color:#ff79c6">(</span>HEAD -&gt; master<span style="color:#ff79c6">)</span> Add file_2 in a
</span></span><span style="display:flex;"><span>* 24d4693 - Modify file_1 and sth_in_A.txt
</span></span><span style="display:flex;"><span>* 96d0b8c - Modify file_1
</span></span><span style="display:flex;"><span>* 63998ea - init
</span></span></code></pre></div>
        ]]></description></item><item><title>Makefile Help Message</title><link>https://aben20807.github.io/posts/20190402-makefile-help-message/</link><pubDate>Tue, 02 Apr 2019 09:06:15 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190402-makefile-help-message/</guid><description><![CDATA[
           <br/><p>最近蠻常用 Makefile 的，想說寫一個 help 選項，這樣就不用要使用時都要打開 Makefile 看怎麼用，意外查到可以使用小技巧來印出 help。達到註解及文件的效果。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190402-makefile-help-message/"><img src="https://drive.google.com/uc?export=view&amp;id=1jMqjSm6HUMHY3QBm0x51leBBmvBW5EEu" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190402-makefile-help-message/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>最近蠻常用 Makefile 的，想說寫一個 help 選項，這樣就不用要使用時都要打開 Makefile 看怎麼用，意外查到可以使用小技巧來印出 help。達到註解及文件的效果。</p>
<p>原本可能在寫完所有 rule 後要再加一個 <code>help</code> 來寫準備印出來給使用者的內容。如下：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#50fa7b">action1</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 1.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 1...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">action2</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 2.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 2...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">help</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Show help message.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Usage:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  make &lt;target&gt;\n\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;Targets:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  action1\tDo action 1.\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  action2\tDo action 2.\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  help\t\tShow help message.\n&#34;</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1IwQiOPfxIXVfPhZ76N7UX497HuZ-lA3m" alt='結果' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">結果</center>
    </figcaption>
  </figure>
</p>
<p>這種方式在數量一多下會很麻煩，尤其是要不斷確認上面是否有被更動。所以找到許多人針對每個 target 的註解去產生 help 資訊。這裡使用 perl 跟 awk 幫忙。</p>
<p>下方印出的結果同上就不貼圖片了。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#50fa7b">action1</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 1.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 1...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">action2</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 2.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 2...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">help</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Show help message.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Usage:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  make &lt;target&gt;\n\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;Targets:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@perl -nle<span style="color:#f1fa8c">&#39;print $&amp; if m{^[a-zA-Z0-9_-]+:.*?## .*$$}&#39;</span> <span style="color:#ff79c6">$(</span>MAKEFILE_LIST<span style="color:#ff79c6">)</span> | <span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span>		sort | <span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span>		awk <span style="color:#f1fa8c">&#39;BEGIN {FS = &#34;:.*?## &#34;}; \
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">		{printf &#34;  %-18s %s\n&#34;, $$1, $$2}&#39;</span>
</span></span></code></pre></div><p>稍微解釋一下 perl 那一行</p>
<p>首先就是先使用 regexp 去 match 符合的表達式，<code>^[a-zA-Z0-9_-]+:.*?## .*$$</code> 表示由一個單字(可能含數字)開頭 <code>:</code> 後方是相依的部份，最後是用 <code>##</code> 註解的描述。</p>
<p>接著利用 pipe (<code>|</code>) 給 awk，它可以針對欄 (column) 去操作文字，<code>BEGIN</code> 區塊表示初始化宣告，也就是輸入的字串是用 <code>##</code> 當作分割符號，最後利用 <code>printf()</code> 去把第一欄及第二欄印出來。</p>
<p>最後最後，加上點顏色頗不錯 OuO</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-makefile" data-lang="makefile"><span style="display:flex;"><span><span style="color:#6272a4"># color
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span><span style="color:#8be9fd;font-style:italic">BLUE</span> <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">\0</span>33<span style="color:#ff79c6">[</span>34m
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">NC</span> <span style="color:#ff79c6">=</span> <span style="color:#f1fa8c">\0</span>33<span style="color:#ff79c6">[</span>0m
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">action1</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 1.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 1...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">action2</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Do action 2.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Doing action 2...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">help</span><span style="color:#ff79c6">:</span> <span style="color:#6272a4">## Show help message.
</span></span></span><span style="display:flex;"><span><span style="color:#6272a4"></span>	@printf <span style="color:#f1fa8c">&#34;Usage:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;  make </span><span style="color:#ff79c6">$(</span>BLUE<span style="color:#ff79c6">)</span><span style="color:#f1fa8c">&lt;target&gt;</span><span style="color:#ff79c6">$(</span>NC<span style="color:#ff79c6">)</span><span style="color:#f1fa8c">\n\n&#34;</span>
</span></span><span style="display:flex;"><span>	@printf <span style="color:#f1fa8c">&#34;Targets:\n&#34;</span>
</span></span><span style="display:flex;"><span>	@perl -nle<span style="color:#f1fa8c">&#39;print $&amp; if m{^[a-zA-Z0-9_-]+:.*?## .*$$}&#39;</span> <span style="color:#ff79c6">$(</span>MAKEFILE_LIST<span style="color:#ff79c6">)</span> | <span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span>		sort | <span style="color:#f1fa8c">\
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c"></span>		awk <span style="color:#f1fa8c">&#39;BEGIN {FS = &#34;:.*?## &#34;}; \
</span></span></span><span style="display:flex;"><span><span style="color:#f1fa8c">		{printf &#34;$(BLUE)  %-18s$(NC) %s\n&#34;, $$1, $$2}&#39;</span>
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1RTn1OcTBserVT9XOFhDRSFA2f3Lx1R-G" alt='有顏色版本' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">有顏色版本</center>
    </figcaption>
  </figure>
</p>
<h3 id="參考資料" class="article-heading">參考資料 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><ul>
<li><a href="https://nedbatchelder.com/blog/201804/makefile_help_target.html" title="Makefile help target" aria-label="Makefile help target"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Makefile help target</a></li>
</ul>
        ]]></description></item><item><title>First Met Hugo</title><link>https://aben20807.github.io/posts/20190321-first-met-hugo/</link><pubDate>Thu, 21 Mar 2019 22:20:12 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190321-first-met-hugo/</guid><description><![CDATA[
           <br/><p>正常轉換跑道時都會有一篇推坑文，不過我這篇算比較晚了，也不是為了摸久一點，就感覺好像一直沒啥時間寫文章。<br><br/>就請多見諒＠＠</p>
          
            <p><a href="https://aben20807.github.io/posts/20190321-first-met-hugo/"><img src="https://drive.google.com/uc?export=view&amp;id=1uRxzv04K2tSTBayXsGRSMKmK6CgstZ03" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190321-first-met-hugo/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>正常轉換跑道時都會有一篇推坑文，不過我這篇算比較晚了，也不是為了摸久一點，就感覺好像一直沒啥時間寫文章。<br>
就請多見諒＠＠</p>
<h1 id="前言" class="article-heading">前言 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%89%8d%e8%a8%80">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>從 Blogger 轉出來的原因可以去關於的頁面看看，我就不再贅述，此篇主要也不會手把手的教學如何用 Hugo 從頭到尾架設一個網頁，因為網路上有相當多這類的教學，我主要是記錄一些比較特別地方。接著跟我唸三遍：</p>
<blockquote>
<p>前端坑好深，前端坑好深，前端坑好深</p>
</blockquote>
<h1 id="安裝" class="article-heading">安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>說不教好像也有點無情，不過在 GitHub 架 Hugo 真的太過簡單了，步驟真的算少，所以我就推給其他文章吧(可以先看完整篇再開始)：<a href="https://medium.com/@chs_wei/%E5%9C%A8-github-%E9%83%A8%E7%BD%B2-hugo-%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-9c40682dfe40" title="在 GitHub 部署 Hugo 靜態網站" aria-label="在 GitHub 部署 Hugo 靜態網站"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 在 GitHub 部署 Hugo 靜態網站</a></p>
<h1 id="安裝---注意事項" class="article-heading">安裝 - 注意事項 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%89%e8%a3%9d---%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>Ubuntu 請用 <code>snap</code> 來安裝比較新的版本，用 <code>apt</code> 會發現一堆主題不能用因為版本過舊。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo snap install hugo
</span></span><span style="display:flex;"><span>$ hugo version
</span></span><span style="display:flex;"><span>Hugo Static Site Generator v0.54.0 linux/amd64 BuildDate: 2019-02-01T13:33:06Z
</span></span></code></pre></div><p>結果注意事項就把 Hugo 全部安裝完成了＠＠，部屬在 GitHub 就跟大部分用法相同。</p>
<h1 id="部落格架構配置" class="article-heading">部落格架構配置 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%83%a8%e8%90%bd%e6%a0%bc%e6%9e%b6%e6%a7%8b%e9%85%8d%e7%bd%ae">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>因為 Hugo 會針對主題和文章經過 <code>hugo</code> 指令去產生一個完整的網站並預設放在 <code>public/</code> 資料夾。所以一般會把寫文章的地方跟網站分成兩個 repo，也就是把 <code>public/</code> push 到 <code>&lt;username&gt;.github.io</code>，寫文章的就創建另一個 <code>blog-post</code> 之類的 repo。這個作法可以使得網站不會被污染，也就是不會有奇怪的檔案，repo 也不會好像各種語言都有。</p>
<p>但是，一般上面這種是會把主題的檔案都複製到你寫文章的 repo 裡這樣就可以自訂一些前端設計。</p>
<p>我覺得這樣還不夠乾淨！因此我的方式是使用三個 repo：</p>
<ul>
<li>blog-post：存文章</li>
<li>hugOuO：主題</li>
<li>aben20807.github.io：發布網站</li>
</ul>
<p>沒錯，多一個 repo 追蹤主題，由於 Hugo 會自動的搜尋一些資料夾找尋網站設定，在一開始的資料夾找不到時，會根據 <code>config.toml</code> 中設定的主題去 <code>themes/</code> 找對應的主題，所以一開始的資料夾就不要有任何前端的檔案，除非像是 google analytics 需要放置規定的檔案，不然所有的前端設計 (架構, css, javascript) 都放在主題的 repo 中。當然這是給那些會修改別人主題的人的建議，如果是直接用現成的那就不需要多一個 repo 了。</p>
<p>以下是一個簡單的檔案結構：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>blog-post/ &lt;----------------------- repo 1: 存文章
</span></span><span style="display:flex;"><span>├── config.toml
</span></span><span style="display:flex;"><span>├── content
</span></span><span style="display:flex;"><span>│   ├── about
</span></span><span style="display:flex;"><span>│   ├── _index.md
</span></span><span style="display:flex;"><span>│   └── posts/ &lt;------------------- 文章會在這裡
</span></span><span style="display:flex;"><span>├── themes/
</span></span><span style="display:flex;"><span>│   └── hugOuO/ &lt;------------------ repo 2: 主題
</span></span><span style="display:flex;"><span>│       ├── archetypes/
</span></span><span style="display:flex;"><span>│       │   ├── default.md
</span></span><span style="display:flex;"><span>│       │   └── posts.md
</span></span><span style="display:flex;"><span>│       ├── layouts/
</span></span><span style="display:flex;"><span>│       │   ├── 404.html
</span></span><span style="display:flex;"><span>│       │   ├── _default/
</span></span><span style="display:flex;"><span>│       │   ├── index.html
</span></span><span style="display:flex;"><span>│       │   ├── index.json
</span></span><span style="display:flex;"><span>│       │   ├── index.rss.xml
</span></span><span style="display:flex;"><span>│       │   ├── partials/
</span></span><span style="display:flex;"><span>│       │   └── shortcodes/
</span></span><span style="display:flex;"><span>│       ├── static/
</span></span><span style="display:flex;"><span>│       │   ├── css/
</span></span><span style="display:flex;"><span>│       │   ├── img/
</span></span><span style="display:flex;"><span>│       │   └── js/
</span></span><span style="display:flex;"><span>│       └── theme.toml
</span></span><span style="display:flex;"><span>└── public/ &lt;---------------------- repo 3: 發布網站
</span></span></code></pre></div><h2 id="這樣安排的缺點" class="article-heading">這樣安排的缺點 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%80%99%e6%a8%a3%e5%ae%89%e6%8e%92%e7%9a%84%e7%bc%ba%e9%bb%9e">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這麼多 repo 就是一個蠻大的缺點，不過若是非常在意的話可以利用 branch 來讓三個 repo 合併。<br>
但是這個缺點有一個優點 (?)，就是可以刷 GitHub 的 contributions 啊！每次寫文章改一堆東西就會綠一片OuO</p>
<h2 id="其他" class="article-heading">其他 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%85%b6%e4%bb%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>當然也可以利用 GitHub 和其他工具達到持續集成、部署，參考：<a href="https://axdlog.com/zh/2018/using-hugo-and-travis-ci-to-deploy-blog-to-github-pages-automatically/" title="利用Travis CI和Hugo將Blog自動部署到Github Pages" aria-label="利用Travis CI和Hugo將Blog自動部署到Github Pages"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 利用Travis CI和Hugo將Blog自動部署到Github Pages</a>。不過我是有點點懶惰，所以我就用 <a href="https://github.com/aben20807/blog-post/blob/master/deploy.sh" title="script" aria-label="script"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> script</a> 來部屬。</p>
<p>還有 <code>blog-post</code> repo 可以用 <code>.gitattributes</code> 來讓 GitHub 把 markdown 當作一個語言來計算，<a href="https://github.com/aben20807/blog-post/blob/master/.gitattributes" title="傳送門" aria-label="傳送門"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 傳送門</a>。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1L-bAODhj57C7wFIBaWTgZuY0Sp0bEQFJ" alt='結果展示' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">結果展示</center>
    </figcaption>
  </figure>
</p>
<h1 id="圖片" class="article-heading">圖片 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%9c%96%e7%89%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>通常架設在 GitHub 的靜態網站都會直接把圖片也傳到 repo 中，雖然說這樣會比較快而且方便，但是我不建議用 git 去追蹤圖片，到最後會非常肥大。所以我一開始就有想說用 google 雲端當作一個圖床 (Flickr 1TB 回來啊QuQ)，反正有學校帳號算是有無限空間吧 (還是當學生的小福利＠＠)，再加上 google 圖片可以無限上傳，我手機拍照的圖片都會自動上傳了，然後也可以跟雲端連結，也就是說在 google 雲端透過檔案存取到 google 圖片的檔案。不過因為它的 api 還不是說很好用，就是雲端右鍵拿到的連結是不能直接嵌入網頁的，所以要手動複製 id，我覺得頗麻煩就乾脆寫一個可以偵測是否在 markdown 使用 google 雲端的圖片，然後把它轉成對應的 url 同時提供點擊就可以直接連過去，這樣就可以放大檢視了。</p>
<p>作法就是我的文章若要用到 google 雲端的圖片就要用以下語法：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#ff79c6">google-標題</span>](<span style="color:#50fa7b">從雲端裡面右鍵拿到的分享連結</span>)
</span></span></code></pre></div><p>沒意外這篇文章內文都是用這個方式加圖片的，唯一缺點就是明顯慢很多＠＠，雖然慢會影響 SEO，不過算了，就會看的人就會來看吧。說到這個，流量很明顯跟 Blogger 時期差很多＠＠，實做<a href="https://github.com/aben20807/hugOuO/blob/master/layouts/partials/custom-content.html#L5-L23" title="傳送門" aria-label="傳送門"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 傳送門</a>。</p>
<h1 id="文章" class="article-heading">文章 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%87%e7%ab%a0">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>對於文章，我建議可以用日期當作檔名的前綴，以便排序。我的主題就會自動切割日期。Hugo 也有 permalinks 功能，就是把日期當作網站的路徑，不過我懶得用了＠＠</p>
<h1 id="優點啦" class="article-heading">優點啦 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%84%aa%e9%bb%9e%e5%95%a6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>單一執行檔，只需要安裝 hugo，其他什麼 ruby, python, node 都不用。</li>
<li>建制快速，號稱目前地表最快，尤其當網站一多，目前有找到跟 Jekyll 的比較<a href="https://forestry.io/blog/hugo-vs-jekyll-benchmark/" title="傳送門" aria-label="傳送門"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 傳送門</a>，跟 Hexo 的可能還要找一下。</li>
<li>網站內容乾淨，也就是上面的缺點啦，我是覺得這是優點 OuO，分多個 repo 不是很好嗎。</li>
</ul>
<h1 id="有趣的功能" class="article-heading">有趣的功能 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%9c%89%e8%b6%a3%e7%9a%84%e5%8a%9f%e8%83%bd">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>下面這些功能其實不限於 Hugo，只要有想要其實都可以把它加到自己的網站，甚至是從頭自己刻的也可。不要忘了開頭念三次的東西 OuO</p>
<h2 id="1-搜尋" class="article-heading">1. 搜尋 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#1-%e6%90%9c%e5%b0%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>由於之前 Blogger 算是內建搜尋的，所以這裡算是研究頗久，原本要使用一些已經做成套件的切字工具，但是中文字真的太難搞定了，所以我乾脆直接用 google 提供的搜尋：Google Custom Search。一樣，這裡就不一一教學，請移駕：<a href="https://blog.yowko.com/google-search-in-hugo/" title="將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中" aria-label="將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 將 Google自訂搜尋引擎 (Google Custom Search) 搭配 OpenSearch 加至 Hugo 網站中</a>。真的要參考實做的話可以來這個 <a href="https://github.com/aben20807/blog-post/commit/6f6b62898791322876091d4db98d580b8a7accdc#diff-44f0b83d58ef03d7cee156de462be50c" title="commit" aria-label="commit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> commit</a> 看看。對了，設定完後要等個幾天才會可以搜尋，我那時候以為我哪裡設定錯誤，結果等個幾天就可以用了。結果可以到這個<a href="https://aben20807.github.io/search/" title="頁面" aria-label="頁面"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 頁面</a>查看。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1YD4461mDTtn7MHssUOQxorRAiqkhRiVh" alt='搜尋範例' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">搜尋範例</center>
    </figcaption>
  </figure>
</p>
<h2 id="2-toc-table-of-content" class="article-heading">2. TOC (Table Of Content) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#2-toc-table-of-content">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Hugo 算有提供 toc 工具，但是用起來沒這麼好看，例如它無法設定深度，不管幾層就都會做成 toc 也就是 h1~6 都有，造成空間浪費。這裡我也是弄超級久，最後我是參考 <a href="https://orianna-zzo.github.io/sci-tech/2018-08/blog%E5%85%BB%E6%88%90%E8%AE%B016-%E8%87%AA%E5%BB%BAhugo%E7%9A%84toc%E6%A8%A1%E6%9D%BF/#/hugo%E7%9A%84table-of-content" title="AllinOne" aria-label="AllinOne"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> AllinOne</a> 這個主題的實做方式：<a href="https://github.com/orianna-zzo/AllinOne/blob/master/layouts/partials/toc.html" title="toc.html" aria-label="toc.html"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> toc.html</a>。</p>
<h2 id="3-headline-hash" class="article-heading">3. Headline Hash 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#3-headline-hash">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>也就是滑鼠移到標題會出現一個 anchor 可以產生直接跳到這個標題的連結，直接參考：<a href="https://discourse.gohugo.io/t/adding-anchor-next-to-headers/1726" title="Adding anchor next to headers" aria-label="Adding anchor next to headers"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Adding anchor next to headers</a>。</p>
<h2 id="4-smooth-scroll" class="article-heading">4. Smooth Scroll 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#4-smooth-scroll">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這個可以讓移動有滾動的動畫而不是直接跳到那邊，我是使用 <code>jquery.smooth-scroll.min.js</code> 來達成，請參考這個 <a href="https://github.com/aben20807/blog-post/commit/68fa52f8d25c90d003fec296081427d12c6724cf#diff-0aa74fe7c8cd2a2b79dab67ece16cb02" title="commit" aria-label="commit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> commit</a>。</p>
<h2 id="5-scrollspy" class="article-heading">5. Scrollspy 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#5-scrollspy">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>讓右邊的 toc 自動標記現在所在的標題位置，我是從 <a href="https://stackoverflow.com/questions/30348314/how-to-use-scrollspy-without-using-bootstrap/49257431#49257431" title="how to use scrollspy without using bootstrap 的其中一個回答" aria-label="how to use scrollspy without using bootstrap 的其中一個回答"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> how to use scrollspy without using bootstrap 的其中一個回答</a> 改成這個 <a href="https://github.com/aben20807/blog-post/commit/94b0b7344de07858b4ed346bc76b30caafa71220#comments" title="commit" aria-label="commit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> commit</a></p>
<p>2.3.4.5. 合起來差不多就是這樣：<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1Ent_uFFd1IuKhGna9hZ2uEBZ1cjoHw63" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="6-自動換標題-ouo" class="article-heading">6. 自動換標題 OuO 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#6-%e8%87%aa%e5%8b%95%e6%8f%9b%e6%a8%99%e9%a1%8c-ouo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>這算是一個有趣但是沒啥實用性的功能，我是在 <a href="https://diygod.me/" title="https://diygod.me/" aria-label="https://diygod.me/"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://diygod.me/</a> 看到的，當你暫時離開去其他分頁時，它的標題就會變換。建議不要在手機上用這個功能。參考：<a href="https://blog.youdivi.com/tutorials/change-browser-tab-title-tab-not-active/" title="CHANGE BROWSER TAB TITLE WHEN TAB NOT ACTIVE" aria-label="CHANGE BROWSER TAB TITLE WHEN TAB NOT ACTIVE"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> CHANGE BROWSER TAB TITLE WHEN TAB NOT ACTIVE</a>，<a href="https://github.com/aben20807/blog-post/commit/4a468cb27289453f1a53ccb05db50343877438d8#diff-0aa74fe7c8cd2a2b79dab67ece16cb02" title="commit" aria-label="commit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> commit</a>，如何排擠手機：<a href="https://stackoverflow.com/questions/3514784/what-is-the-best-way-to-detect-a-mobile-device-in-jquery/3540295#3540295" title="What is the best way to detect a mobile device in jQuery?" aria-label="What is the best way to detect a mobile device in jQuery?"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> What is the best way to detect a mobile device in jQuery?</a><br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1AF_3cXaG2gWU1VM5ybrrQDO2qXtEusGH" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h2 id="7-e-mail-subscribe-mailchimphttpsmailchimpcom" class="article-heading">7. E-mail subscribe (<a href="https://mailchimp.com/" title="mailchimp" aria-label="mailchimp"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> mailchimp</a>) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#7-e-mail-subscribe-mailchimphttpsmailchimpcom">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>原本 Blogger 有 G+ 當作一個社群平台來分享發布的文章，不過這裡就沒有了，我想說需要有一個方法來提供讀者訂閱，不能叫他自己去申請 GitHub 然後訂閱我網站的 repo 吧。所以我就找到這個服務，它免費版提供 2000 個訂閱者，一個月可以寄 12000 封 e-mail，對我來說算是非常夠用了(吧＠＠)，剛剛看原本還以為只有兩個人 (我跟我的分身帳號)，結果竟然多一個人了！還不來<a href="https://aben20807.github.io/subscription/" title="訂閱" aria-label="訂閱"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 訂閱</a>？</p>
<p>mailchimp 的用法其實官網就有提供，我英文不太行的看久一點就可以架設好服務了，我相信你們可以的 (?)</p>
<h2 id="8-google-analytics" class="article-heading">8. google analytics 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#8-google-analytics">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>Google 的流量監測，Hugo 已經有寫好可以直接用，在 <code>config.toml</code> 直接加上自己的 token 就好，然後還要上傳一個證明是自己網站的 html 檔案，放在 <code>static/</code> 裡面就可以。上面有提到流量差異大致上就如下，我 Blogger 那邊已經很久沒更新了，一天還是快 100 個人造訪呢 OuO。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1XoxtAg5qZT_sDIrXc8HITfE5QBKN0nXF" alt='左：Blogger，右：這個網站QuQ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">左：Blogger，右：這個網站QuQ</center>
    </figcaption>
  </figure>
</p>
<h2 id="9-hued" class="article-heading">9. hued 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#9-hued">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>因為每次編輯時都要用很長的路徑 <code>content/posts/xxxx.md</code>，頗煩躁，所以就寫了一個把指令包起來的 script，安裝方式可以看 <a href="https://github.com/aben20807/blog-post#hued" title="README" aria-label="README"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> README</a>，還有補全喔，雖然應該是只有 oh-my-bash 可用。</p>
<h2 id="10-disqus-評論系統" class="article-heading">10. Disqus 評論系統 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#10-disqus-%e8%a9%95%e8%ab%96%e7%b3%bb%e7%b5%b1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>設定方式跟 google analytics 一樣簡單，簡單到我都忘了要設定&hellip;.設定 short name 即可。</p>
        ]]></description></item><item><title>Emacs 安裝 rainbow-delimiters 插件</title><link>https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/</link><pubDate>Thu, 07 Mar 2019 20:23:24 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/</guid><description><![CDATA[
           <br/><p>恩&hellip;.身為一個 vimer，我還是想試試看 emacs，所以就選了系上的一堂教 lisp 的課。<br><br/>本篇記錄一下安裝插件的過程<br><br/>(雖然我這篇還是用 vim 打的&hellip;.</p>
          
            <p><a href="https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/"><img src="https://drive.google.com/uc?export=view&amp;id=1Z2vwPs46qPbQTEnrqXEiniGTavMqA0hB" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190307-emacs-install-rainbow-delimiters/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
           
<p>恩&hellip;.身為一個 vimer，我還是想試試看 emacs，所以就選了系上的一堂教 lisp 的課。<br>
本篇記錄一下安裝插件的過程<br>
(雖然我這篇還是用 vim 打的&hellip;.</p>
<p>這個插件的名稱是 <code>rainbow-delimiters</code>，顧名思義就是讓對應的括號有相同的顏色，這在一堆括號的語言 lisp 中可以對初學者較為友善。</p>
<h1 id="emacs-安裝" class="article-heading">emacs 安裝 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#emacs-%e5%ae%89%e8%a3%9d">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>emacs 的安裝方式就還是提一下，不然我應該記不起來@@</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo add-apt-repository ppa:ubuntu-elisp/ppa
</span></span><span style="display:flex;"><span>$ sudo apt-get update
</span></span><span style="display:flex;"><span>$ sudo apt-get install emacs-snapshot emacs-snapshot-el
</span></span></code></pre></div><h1 id="超基本按鍵" class="article-heading">超基本按鍵 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b6%85%e5%9f%ba%e6%9c%ac%e6%8c%89%e9%8d%b5">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>我是超新手，所以只暫時記錄最重要的@@</p>
<ul>
<li><code>ctrl-x ctrl-s</code>：儲存</li>
<li><code>ctrl-x ctrl-c</code>：離開</li>
</ul>
<h1 id="新增設定檔" class="article-heading">新增設定檔 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e5%a2%9e%e8%a8%ad%e5%ae%9a%e6%aa%94">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>首先需要新增一個設定檔，就像 vim 中的 <code>.vimrc</code> 一樣，而為了方便管理我使用 <code>~/.emacs.d/init.el</code>，我們就直接用 emacs 編輯吧～</p>
<p>Note. <code>-nw</code> 可以用非 GUI 的方式開啟 emacs</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ mkdir ~/.emacs.d/
</span></span><span style="display:flex;"><span>$ emacs -nw ~/.emacs.d/init.el
</span></span></code></pre></div><h1 id="支援-melpahttpsmelpaorg-插件庫" class="article-heading">支援 <a href="https://melpa.org/#/" title="MELPA" aria-label="MELPA"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> MELPA</a> 插件庫 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%94%af%e6%8f%b4-melpahttpsmelpaorg-%e6%8f%92%e4%bb%b6%e5%ba%ab">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>打開之後貼上</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(<span style="color:#50fa7b">require</span> <span style="color:#f1fa8c">&#39;package</span>)
</span></span><span style="display:flex;"><span>(<span style="color:#ff79c6">let*</span> ((<span style="color:#8be9fd;font-style:italic">no-ssl</span> (<span style="color:#8be9fd;font-style:italic">and</span> (<span style="color:#8be9fd;font-style:italic">memq</span> <span style="color:#8be9fd;font-style:italic">system-type</span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">windows-nt</span> <span style="color:#8be9fd;font-style:italic">ms-dos</span>))
</span></span><span style="display:flex;"><span>                    (<span style="color:#50fa7b">not</span> (<span style="color:#8be9fd;font-style:italic">gnutls-available-p</span>))))
</span></span><span style="display:flex;"><span>       (<span style="color:#8be9fd;font-style:italic">proto</span> (<span style="color:#ff79c6">if</span> <span style="color:#8be9fd;font-style:italic">no-ssl</span> <span style="color:#f1fa8c">&#34;http&#34;</span> <span style="color:#f1fa8c">&#34;https&#34;</span>)))
</span></span><span style="display:flex;"><span>  <span style="color:#6272a4">;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired                                         </span>
</span></span><span style="display:flex;"><span>  (<span style="color:#8be9fd;font-style:italic">add-to-list</span> <span style="color:#f1fa8c">&#39;package-archives</span> (<span style="color:#50fa7b">cons</span><span style="color:#f1fa8c">&#34;melpa&#34;</span>(<span style="color:#8be9fd;font-style:italic">concat</span> <span style="color:#8be9fd;font-style:italic">proto</span><span style="color:#f1fa8c">&#34;://melpa.org/packages/&#34;</span>)) t)
</span></span><span style="display:flex;"><span>  <span style="color:#6272a4">;;(add-to-list &#39;package-archives (cons&#34;melpa-stable&#34;(concat proto&#34;://stable.melpa.org/packages/&#34;)) t)                            </span>
</span></span><span style="display:flex;"><span>  (<span style="color:#8be9fd;font-style:italic">when</span> (<span style="color:#50fa7b">&lt;</span> <span style="color:#8be9fd;font-style:italic">emacs-major-version</span> <span style="color:#bd93f9">24</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#6272a4">;; For important compatibility libraries like cl-lib                                                                           </span>
</span></span><span style="display:flex;"><span>    (<span style="color:#8be9fd;font-style:italic">add-to-list</span> <span style="color:#f1fa8c">&#39;package-archives</span><span style="color:#ff79c6">&#39;</span>(<span style="color:#f1fa8c">&#34;gnu&#34;</span> <span style="color:#ff79c6">.</span> (<span style="color:#8be9fd;font-style:italic">concat</span> <span style="color:#8be9fd;font-style:italic">proto</span> <span style="color:#f1fa8c">&#34;://elpa.gnu.org/packages/&#34;</span>)))))
</span></span><span style="display:flex;"><span>(<span style="color:#8be9fd;font-style:italic">package-initialize</span>)
</span></span></code></pre></div><h1 id="新增-rainbow-delimiters-插件" class="article-heading">新增 <code>rainbow-delimiters</code> 插件 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%96%b0%e5%a2%9e-rainbow-delimiters-%e6%8f%92%e4%bb%b6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>退出 (上面有記錄怎麼儲存跟離開) 後重新開啟 emacs</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ emacs -nw
</span></span></code></pre></div><p>按下 <code>alt-x</code> 後輸入 <code>package-list-packages</code> 接著按下 <code>Enter</code><br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1tcS1Yxs-I0J1Nf63528PVypU7LmrhDhG" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>會發現出現一個各種插件的頁面。</p>
<p>搜尋方式請按 <code>ctrl-s</code> 後輸入 <code>rainbow-delimiters</code> 接著 <code>Enter</code>  即可找到<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1lQa5BBsjLRQxUheS41WTRi1maN1AtA90" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>在那一行按下 <code>i</code> 會發現最前方多了一個 <code>I</code></p>
<p>Note. 要取消請按 <code>u</code><br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1DuzQMOTEc4MO4HByxDhKCpVu30fr3FvV" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>選完後按下 <code>x</code> 就可以安裝了</p>
<p>結果最後還需要加東西到 <code>~/emacs.d/init.el</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(<span style="color:#50fa7b">require</span> <span style="color:#f1fa8c">&#39;rainbow-delimiters</span>)
</span></span><span style="display:flex;"><span>(<span style="color:#8be9fd;font-style:italic">add-hook</span> <span style="color:#f1fa8c">&#39;prog-mode-hook</span> <span style="color:#f1fa8c">&#39;rainbow-delimiters-mode</span>)
</span></span></code></pre></div><p>改完之後會發現有很淺的變色了</p>
<h1 id="自訂顏色" class="article-heading">自訂顏色 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%87%aa%e8%a8%82%e9%a1%8f%e8%89%b2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>結果就如封面所示。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-lisp" data-lang="lisp"><span style="display:flex;"><span>(<span style="color:#8be9fd;font-style:italic">custom-set-variables</span>
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">package-selected-packages</span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters</span>)))
</span></span><span style="display:flex;"><span>(<span style="color:#8be9fd;font-style:italic">custom-set-faces</span>
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-1-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;dark orange&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-2-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;deep pink&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-3-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;chartreuse&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-4-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;deep sky blue&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-5-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;yellow&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-6-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;orchid&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-7-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;spring green&#34;</span>))))
</span></span><span style="display:flex;"><span> <span style="color:#ff79c6">&#39;</span>(<span style="color:#8be9fd;font-style:italic">rainbow-delimiters-depth-8-face</span> ((t (<span style="color:#f1fa8c">:foreground</span> <span style="color:#f1fa8c">&#34;sienna1&#34;</span>))))
</span></span><span style="display:flex;"><span>)
</span></span></code></pre></div><h1 id="參考資料" class="article-heading">參考資料 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83%e8%b3%87%e6%96%99">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://5xruby.tw/posts/emacs-part1/" title="Emacs 入坑引導 - 打造自己的 Ruby IDE - Part 1" aria-label="Emacs 入坑引導 - 打造自己的 Ruby IDE - Part 1"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Emacs 入坑引導 - 打造自己的 Ruby IDE - Part 1</a></li>
<li><a href="https://www.emacswiki.org/emacs/RainbowDelimiters" title="RainbowDelimiters" aria-label="RainbowDelimiters"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> RainbowDelimiters</a></li>
<li><a href="https://ericscrivner.me/2015/06/better-emacs-rainbow-delimiters-color-scheme/" title="Better Emacs Rainbow Delimiters Color Scheme" aria-label="Better Emacs Rainbow Delimiters Color Scheme"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Better Emacs Rainbow Delimiters Color Scheme</a></li>
</ul>
        ]]></description></item><item><title>把 app 加到 ubuntu 的 dash 目錄</title><link>https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/</link><pubDate>Sat, 02 Mar 2019 10:40:02 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/</guid><description><![CDATA[
          <p>所謂的 dash 就有點像是在 windows 10 點擊「開始」出現的很多 app 的畫面。而在 ubuntu 中有些程式的安裝方式是從網路上下載壓縮檔後解壓縮，一般要啟動的話就需要先去打開那個資料夾再點擊，有點麻煩，所以就找了一個最簡單的方式將要用的程式加到 dash 中。</p>
          
            <p><a href="https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/"><img src="https://drive.google.com/uc?export=view&amp;id=14kN9vjDOKr9W5d6e-1rgDEkNh6XtWRSa" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190302-add-app-to-ubuntu-dash-home/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>所謂的 dash 就有點像是在 windows 10 點擊「開始」出現的很多 app 的畫面。而在 ubuntu 中有些程式的安裝方式是從網路上下載壓縮檔後解壓縮，一般要啟動的話就需要先去打開那個資料夾再點擊，有點麻煩，所以就找了一個最簡單的方式將要用的程式加到 dash 中。</p>
<p>測試系統：Ubuntu 18.04</p>
<h1 id="使用-gnome-desktop-item-edit" class="article-heading">使用 gnome-desktop-item-edit 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8-gnome-desktop-item-edit">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>首先安裝 <code>gnome-desktop-item-edit</code> 這個工具</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo apt install --no-install-recommends gnome-panel
</span></span></code></pre></div><p>接著新增一個應用程式</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo gnome-desktop-item-edit /usr/share/applications/ --create-new
</span></span></code></pre></div><p>出現一個小框框，填入名稱以及程式所在</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1YFjaDpgQhBUacfdD38UnId97hAoPG1QL" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>點 OK 後就會出現了，不需要重新登入或關機</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1dRR1G6VrP2oid0S9QBvTvXVMeFHzGF8r" alt='最下排左邊數來第二個' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">最下排左邊數來第二個</center>
    </figcaption>
  </figure>
</p>
<p>圖標是預設的，若需要要修改就編輯一下檔案，注意檔名是剛剛取的名稱加上 .desktop 的副檔名</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ sudo vim /usr/share/applications/VisualVM.desktop
</span></span></code></pre></div><h1 id="加上-icon-路徑" class="article-heading">加上 icon 路徑 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8a%a0%e4%b8%8a-icon-%e8%b7%af%e5%be%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1rAWhlWkLTVIJ8JhS_o-o-gZW1grBVbQU" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<p>儲存後就可以看到結果了</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1P1k41x1OtC9bbsphoYVyNTBoA14xDTKf" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
<h1 id="參考" class="article-heading">參考 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8f%83%e8%80%83">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://linuxconfig.org/how-to-create-desktop-shortcut-launcher-on-ubuntu-18-04-bionic-beaver-linux#h6-3-desktop-shortcut-creation-with-gnome-desktop-item-edit" title="Desktop Shortcut creation with gnome-desktop-item-edit" aria-label="Desktop Shortcut creation with gnome-desktop-item-edit"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Desktop Shortcut creation with gnome-desktop-item-edit</a></li>
</ul>
        ]]></description></item><item><title>訂閱囉</title><link>https://aben20807.github.io/posts/20190227-subscription/</link><pubDate>Wed, 27 Feb 2019 17:39:51 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190227-subscription/</guid><description><![CDATA[
          <p>訂閱起來～訂閱起來～</p>
          
            <p><a href="https://aben20807.github.io/posts/20190227-subscription/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190227-subscription/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>訂閱起來～訂閱起來～</p>
<p>本篇主要是測試訂閱有沒有問題 (希望沒有</p>
<p>要訂閱的話可以透過右上角的信箱圖案填寫 email</p>
<p>或是真的懶的話：https://aben20807.github.io/subscription/</p>
<p>如果是 Gmail 的話可能會被分到「促銷內容」可以透過篩選器喔。或是用右鍵來修改已經寄到信箱的信的標籤喔。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/19Ftzj_DlKmuTLeyybZw0V50ucBLHuiJ7" alt=' ' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text"> </center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Talk About Shame</title><link>https://aben20807.github.io/posts/20190225-talk-about-shame/</link><pubDate>Mon, 25 Feb 2019 21:40:00 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190225-talk-about-shame/</guid><description><![CDATA[
          <p>顧炎武的＜廉恥＞中提到</p><br/><blockquote><br/><p>四者之中，恥尤為要</p><br/></blockquote><br/><p>其中的四者就是禮、義、廉、恥應該不用多說 (去複習國文啦</p>
          
            <p><a href="https://aben20807.github.io/posts/20190225-talk-about-shame/"><img src="https://drive.google.com/uc?export=view&amp;id=1oGP2AYSwCtfbqqAYbKGY-6mFXfqPWhlX" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190225-talk-about-shame/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>顧炎武的＜廉恥＞中提到</p>
<blockquote>
<p>四者之中，恥尤為要</p>
</blockquote>
<p>其中的四者就是禮、義、廉、恥應該不用多說 (去複習國文啦</p>
<h1 id="關於標題" class="article-heading">關於標題 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%97%9c%e6%96%bc%e6%a8%99%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>(有時候英文標題就懶的改了，不然就是改了有點怪，想這次的，所以我就不改囉＠＠</p>
<p>說到英文，「恥」在英文翻譯是 shame，不過在四維的英文中其對應的是 honor。根據不專業的討論，shame 是貶義，而英文卻傾向用褒義表達，更進一步的去解釋可以想成「恥」是讓我們了解什麼是不榮耀的事，大概是這樣。</p>
<p>(圖片有點震撼我知道 OuO</p>
<h1 id="正題" class="article-heading">正題 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%ad%a3%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>為何會突然講這個主題呢？其實很多事情都是先學會，然後在之後才會去遇到，甚至體會到一開始接觸到時沒有獲得的感觸。這次談的這個主題其實已經在腦海中想過頗多次，但就如同上述，是我在高中學到這段課文後過了很久才漸漸有看法。或許到大學這段期間還不算久，我想會有更多的東西可能是我到老還無法了解的吧。</p>
<p>總結那篇課文，其認為人會違反一些道德倫理，是因為無恥所導致。</p>
<p>結合到日常生活中，最微小的可以從那些不遵守交通規則的人身上看出，他們將這些視為理所當然，例如在台南闖紅燈是再稀鬆平常不過的事了，在那些人眼中我看不到一絲的羞恥感。這或許也是現行法律所無法顧慮的吧，之前上課總說法律是道德的最低標準，這也是為何重刑不管用，酒駕的還是會酒駕，因為罰錢根本是小事，內心的道德感一點也沒有覺得自己做錯。我覺得可能要更善加利用輿論壓力才能有效降低，例如酒駕就會有標籤，可能求職時就需要出示之類的，但這都只是外部的約束，主要還是要自己感覺到「恥」。</p>
<p>除了這些，更有人會合理化自己的行為，認為自己沒有影響別人什麼的，其實就需要去思考那為何需要訂定交通規則。</p>
<p>另外，亂丟垃圾也是，真心不懂為何有人就是會把垃圾留在離垃圾桶不到五步距離的飲水機上。總之族繁不及備載，這些事一直都會發生。</p>
<h1 id="結論" class="article-heading">結論 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e8%ab%96">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>好啦，其實也沒有要戰什麼，其實是想表達自己看到的現象彷彿跟以前學到的有些許映射。總之呢，希望世界和平，做人有多一點點羞恥心去用不同的角度去看待事情，這樣才能打造更和諧的社會。</p>
<h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>其實我是覺得我可能過於看重這件事了，所以會變得比較怕去麻煩別人，當然這有好有壞，我是不太建議像我這樣的個性，因為時常要跟自己打架 XDD。人活著也不是要一直去注意他人的眼光，去找一個適合自己的光譜位置，然後貫徹自己的想法吧。</p>
        ]]></description></item><item><title>Makefile for Testing</title><link>https://aben20807.github.io/posts/20190216-makefile-for-testing/</link><pubDate>Sat, 16 Feb 2019 10:00:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190216-makefile-for-testing/</guid><description><![CDATA[
          <p>Makefile 可以執行終端機的指令，所以也可以搭配重新導向 (redirection) 用來做簡單測試</p><br/><p>例如：</p><br/><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#50fa7b">test</span><span style="color:#ff79c6">:</span><br/></span></span><span style="display:flex;"><span>    ./a.out &lt; input.txt &gt; output.txt<br/></span></span></code></pre></div><p>這樣只需要用 <code>$ make test</code> 就可以測試輸入 input.txt，並把結果存到 output.txt</p>
          
            <p><a href="https://aben20807.github.io/posts/20190216-makefile-for-testing/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190216-makefile-for-testing/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>Makefile 可以執行終端機的指令，所以也可以搭配重新導向 (redirection) 用來做簡單測試</p>
<p>例如：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#50fa7b">test</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; input.txt &gt; output.txt
</span></span></code></pre></div><p>這樣只需要用 <code>$ make test</code> 就可以測試輸入 input.txt，並把結果存到 output.txt</p>
<h1 id="舊方法" class="article-heading">舊方法 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%88%8a%e6%96%b9%e6%b3%95">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>不過若是有很多種輸入測資的話會有點麻煩，當然還是可以寫成這樣</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#50fa7b">test1</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; input1.txt &gt; output1.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">test2</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; input2.txt &gt; output2.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">test3</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; input3.txt &gt; output3.txt
</span></span></code></pre></div><p>或是</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#50fa7b">test</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; input1.txt &gt; output1.txt
</span></span><span style="display:flex;"><span>    ./a.out &lt; input2.txt &gt; output2.txt
</span></span><span style="display:flex;"><span>    ./a.out &lt; input3.txt &gt; output3.txt
</span></span></code></pre></div><p>這樣寫的缺點就是每次測資增加的時候舊需要修改 Makefile</p>
<h1 id="makefile-內建函式" class="article-heading">Makefile 內建函式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#makefile-%e5%85%a7%e5%bb%ba%e5%87%bd%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>不過其實有更好的寫法，利用 makefile 內建的函式</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">INPUT_DIR</span> <span style="color:#ff79c6">=</span> input/linux/
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">INPUTS</span> <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">$(</span>wildcard <span style="color:#ff79c6">$(</span>INPUT_DIR<span style="color:#ff79c6">)</span>*.txt<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">OUTPUT_DIR</span> <span style="color:#ff79c6">=</span> output/linux/
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">OUTPUTS</span> <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">$(</span>addprefix <span style="color:#ff79c6">$(</span>OUTPUT_DIR<span style="color:#ff79c6">)</span>,<span style="color:#ff79c6">$(</span>notdir <span style="color:#ff79c6">$(</span>INPUTS<span style="color:#ff79c6">)))</span>
</span></span></code></pre></div><ul>
<li><code>wildcard</code>: 獲取輸入檔案列表</li>
<li><code>notdir</code>: 獲得檔案名稱 (去掉前面路徑)</li>
<li><code>addprefix</code>: 加上前綴 (修改輸出路徑)</li>
</ul>
<p>這樣的優點就是只要 input/linux/ 中有多的 .txt 檔就會自動加入測試，不需要修改 Makefile</p>
<h1 id="完整範例" class="article-heading">完整範例 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%ae%8c%e6%95%b4%e7%af%84%e4%be%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="檔案們" class="article-heading">檔案們 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e5%80%91">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="tc" class="article-heading"><code>t.c</code>: 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#tc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex;"><span><span style="color:#ff79c6"></span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>() {
</span></span><span style="display:flex;"><span>    <span style="color:#8be9fd">int</span> a, b;
</span></span><span style="display:flex;"><span>    scanf(<span style="color:#f1fa8c">&#34;%d%d&#34;</span>, <span style="color:#ff79c6">&amp;</span>a, <span style="color:#ff79c6">&amp;</span>b);
</span></span><span style="display:flex;"><span>    printf(<span style="color:#f1fa8c">&#34;%d</span><span style="color:#f1fa8c">\n</span><span style="color:#f1fa8c">&#34;</span>, a <span style="color:#ff79c6">+</span> b);
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">return</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="makefile" class="article-heading"><code>Makefile</code>: 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#makefile">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">CC</span> <span style="color:#ff79c6">=</span> gcc
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">EXEC</span> <span style="color:#ff79c6">=</span> a.out
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">INPUT_DIR</span> <span style="color:#ff79c6">=</span> input/linux/
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">INPUTS</span> <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">$(</span>wildcard <span style="color:#ff79c6">$(</span>INPUT_DIR<span style="color:#ff79c6">)</span>*.txt<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">OUTPUT_DIR</span> <span style="color:#ff79c6">=</span> output/linux/
</span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">OUTPUTS</span> <span style="color:#ff79c6">=</span> <span style="color:#ff79c6">$(</span>addprefix <span style="color:#ff79c6">$(</span>OUTPUT_DIR<span style="color:#ff79c6">)</span>,<span style="color:#ff79c6">$(</span>notdir <span style="color:#ff79c6">$(</span>INPUTS<span style="color:#ff79c6">)))</span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">.PHONY</span><span style="color:#ff79c6">:</span> all, test, mk_parent_dir
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">all</span><span style="color:#ff79c6">:</span> <span style="color:#ff79c6">$(</span><span style="color:#8be9fd;font-style:italic">EXEC</span><span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">mk_parent_dir</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    @mkdir -p <span style="color:#ff79c6">$(</span>OUTPUT_DIR<span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">test</span><span style="color:#ff79c6">:</span> mk_parent_dir <span style="color:#ff79c6">$(</span><span style="color:#8be9fd;font-style:italic">OUTPUTS</span><span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">$(OUTPUT_DIR)%.txt</span><span style="color:#ff79c6">:</span> <span style="color:#ff79c6">$(</span><span style="color:#8be9fd;font-style:italic">INPUT_DIR</span><span style="color:#ff79c6">)</span>%.txt <span style="color:#ff79c6">$(</span><span style="color:#8be9fd;font-style:italic">EXEC</span><span style="color:#ff79c6">)</span>
</span></span><span style="display:flex;"><span>    ./a.out &lt; $&lt; &gt; <span style="color:#8be9fd;font-style:italic">$@</span>
</span></span><span style="display:flex;"><span>    @cat $&lt; <span style="color:#8be9fd;font-style:italic">$@</span> <span style="color:#6272a4"># cat the content of file</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">$(EXEC)</span><span style="color:#ff79c6">:</span> t.c
</span></span><span style="display:flex;"><span>    <span style="color:#ff79c6">$(</span>CC<span style="color:#ff79c6">)</span> t.c
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#50fa7b">clean</span><span style="color:#ff79c6">:</span>
</span></span><span style="display:flex;"><span>    rm -rf <span style="color:#ff79c6">$(</span>OUTPUT_DIR<span style="color:#ff79c6">)</span> a.out
</span></span></code></pre></div><h3 id="檔案架構" class="article-heading">檔案架構 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ tree .
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>├── input
</span></span><span style="display:flex;"><span>│   └── linux
</span></span><span style="display:flex;"><span>│       ├── test1.txt
</span></span><span style="display:flex;"><span>│       ├── test2.txt
</span></span><span style="display:flex;"><span>│       └── test3.txt
</span></span><span style="display:flex;"><span>├── Makefile
</span></span><span style="display:flex;"><span>├── output
</span></span><span style="display:flex;"><span>└── t.c
</span></span></code></pre></div><h2 id="使用" class="article-heading">使用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e4%bd%bf%e7%94%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="指令同為--make-test" class="article-heading">指令同為 <code>$ make test</code> 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8c%87%e4%bb%a4%e5%90%8c%e7%82%ba--make-test">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ make <span style="color:#8be9fd;font-style:italic">test</span>
</span></span><span style="display:flex;"><span>gcc t.c
</span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test2.txt &gt; output/linux/test2.txt
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">1</span> <span style="color:#bd93f9">6</span>
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">7</span>
</span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test3.txt &gt; output/linux/test3.txt
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">78</span> <span style="color:#bd93f9">99</span>
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">177</span>
</span></span><span style="display:flex;"><span>./a.out &lt; input/linux/test1.txt &gt; output/linux/test1.txt
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">3</span> <span style="color:#bd93f9">4</span>
</span></span><span style="display:flex;"><span><span style="color:#bd93f9">7</span>
</span></span></code></pre></div><h3 id="結果檔案架構" class="article-heading">結果檔案架構 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e7%b5%90%e6%9e%9c%e6%aa%94%e6%a1%88%e6%9e%b6%e6%a7%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>$ tree .
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>├── a.out
</span></span><span style="display:flex;"><span>├── input
</span></span><span style="display:flex;"><span>│   └── linux
</span></span><span style="display:flex;"><span>│       ├── test1.txt
</span></span><span style="display:flex;"><span>│       ├── test2.txt
</span></span><span style="display:flex;"><span>│       └── test3.txt
</span></span><span style="display:flex;"><span>├── Makefile
</span></span><span style="display:flex;"><span>├── output
</span></span><span style="display:flex;"><span>│   └── linux
</span></span><span style="display:flex;"><span>│       ├── test1.txt
</span></span><span style="display:flex;"><span>│       ├── test2.txt
</span></span><span style="display:flex;"><span>│       └── test3.txt
</span></span><span style="display:flex;"><span>└── t.c
</span></span></code></pre></div><h1 id="後記" class="article-heading">後記 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%be%8c%e8%a8%98">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>上面的簡單例子中可能看不出 <code>$(INPUTS)</code> 跟 <code>$(OUTPUTS)</code> 的用途，不過在相依多的話可以直接代表全部的檔案，但若是需要做名稱配對的話還是需要 <code>%</code> 出馬，就像 <code>$(OUTPUT_DIR)%.txt: $(INPUT_DIR)%.txt</code> 來表示輸入輸出的檔名要一致。</p>
        ]]></description></item><item><title>咖啡木蠹蛾</title><link>https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/</link><pubDate>Tue, 12 Feb 2019 22:51:30 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/</guid><description><![CDATA[
          <p>(以下圖片皆攝於 2019.02.03)</p><br/><p>咖啡木蠹蛾，學名 Zeuzera Coffeae Nietner<br><br/>詳細可以去行政院農業委員會 農業試驗所提供的<a href="http://web.tari.gov.tw/techcd/%E6%9E%9C%E6%A8%B9/%E5%B8%B8%E7%B6%A0%E6%9E%9C%E6%A8%B9/%E6%A5%8A%E6%A1%83/%E8%9F%B2%E5%AE%B3/%E6%A5%8A%E6%A1%83-%E5%92%96%E5%95%A1%E6%9C%A8%E8%A0%B9%E8%9B%BE.htm" title="圖鑑" aria-label="圖鑑"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 圖鑑</a></p>
          
            <p><a href="https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/"><img src="https://drive.google.com/uc?export=view&amp;id=14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190212-zeuzera-coffeae-nietner/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>(以下圖片皆攝於 2019.02.03)</p>
<p>咖啡木蠹蛾，學名 Zeuzera Coffeae Nietner<br>
詳細可以去行政院農業委員會 農業試驗所提供的<a href="http://web.tari.gov.tw/techcd/%E6%9E%9C%E6%A8%B9/%E5%B8%B8%E7%B6%A0%E6%9E%9C%E6%A8%B9/%E6%A5%8A%E6%A1%83/%E8%9F%B2%E5%AE%B3/%E6%A5%8A%E6%A1%83-%E5%92%96%E5%95%A1%E6%9C%A8%E8%A0%B9%E8%9B%BE.htm" title="圖鑑" aria-label="圖鑑"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 圖鑑</a></p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/14FU_jdoqFlTPkXxMENhMgayz86EkCfeGvg" alt='點圖可放大喔 OuO' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">點圖可放大喔 OuO</center>
    </figcaption>
  </figure>
</p>
<p>總之呢就是害蟲，幼蟲會把樹木的枝條蛀空。</p>
<p>我們家就是幾乎不噴農藥雜草也不會一定要用除草劑處理的光禿禿的，所以難免有害蟲。<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1W2XiqPRhfVaMGkPwO_wRMIiIO_o1tdZH3g" alt='灑水中的葡萄園' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">灑水中的葡萄園</center>
    </figcaption>
  </figure>
</p>
<p>這隻剛從蛹中出來就被我拍到，然後通報給老媽，她趁牠還沒出去產卵就把牠處理掉了。</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1hssv_igXB1P3KEfEcCT5o2lbT64TF8JcbA" alt='蛹，仔細看第1張圖會看到喔' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蛹，仔細看第1張圖會看到喔</center>
    </figcaption>
  </figure>
</p>
<p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1GzQL4C-PyzQEkUnv7T2InNbzfUyjR2qZRg" alt='葡萄營養珠(老媽說是氮珠)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">葡萄營養珠(老媽說是氮珠)</center>
    </figcaption>
  </figure>
</p>
        ]]></description></item><item><title>Features</title><link>https://aben20807.github.io/posts/features/</link><pubDate>Wed, 06 Feb 2019 09:37:31 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/features/</guid><description><![CDATA[
          <p>記錄一下一些特性和使用方式</p>
          
            <p><a href="https://aben20807.github.io/posts/features/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/features/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>記錄一下一些特性和使用方式</p>
<h1 id="標題-heading" class="article-heading">標題 (heading) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a8%99%e9%a1%8c-heading">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span><span style="font-weight:bold"># h1
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold"></span><span style="font-weight:bold">## h2
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold">### h3
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold">#### h4 支援 emoji 😄
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold">##### h5 支援中文~
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold">###### h6 
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold">####### h7 最多只有到 6 級
</span></span></span></code></pre></div><h1 id="h1" class="article-heading">h1 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h1">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="h2" class="article-heading">h2 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h2">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><h3 id="h3" class="article-heading">h3 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h3">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><h4 id="h4-支援-emoji-" class="article-heading">h4 支援 emoji 😄 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h4-%e6%94%af%e6%8f%b4-emoji-">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h4><h5 id="h5-支援中文" class="article-heading">h5 支援中文~ 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h5-%e6%94%af%e6%8f%b4%e4%b8%ad%e6%96%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h5><h6 id="h6" class="article-heading">h6 
    <a class="headline-hash smoothScroll hover-show " style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#h6">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h6><p>####### h7 最多只有到 6 級</p>
<p>右邊會有浮動 TOC (table of contents)，可點擊！<br>
只會顯示 h1 ~ h3 過長會變成 &hellip;</p>
<h3 id="test中文-1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj" class="article-heading">test中文 1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#test%e4%b8%ad%e6%96%87-1-12sdofjsojdfojasodjfosjofdsoifjaosjdofj">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h3><h1 id="emoji" class="article-heading">emoji 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#emoji">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://github.com/ikatyang/emoji-cheat-sheet" title="ref" aria-label="ref"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ref</a></li>
<li><a href="https://stackoverflow.com/a/50662126" title="&lt;code&gt;&amp;lt;zero-width space&amp;gt;&lt;/code&gt;" aria-label="&lt;code&gt;&amp;lt;zero-width space&amp;gt;&lt;/code&gt;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> <code>&lt;zero-width space&gt;</code></a></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown">:<zero-width space>smile:
:<zero-width space>thinking:
:<zero-width space>flushed:
</code></pre></div>
<p>😄<br>
🤔<br>
😳</p>
<h1 id="code-block" class="article-heading">Code block 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#code-block">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><h2 id="原生" class="article-heading">原生 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%8e%9f%e7%94%9f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><ul>
<li><a href="https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences" title="ref" aria-label="ref"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ref</a></li>
<li>linenos: 開啟行數</li>
<li>hl_lines: 標記特定行</li>
<li>linenostart: 行數起始值</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>```c {linenos=table,hl_lines=[2,&#34;4-6&#34;],linenostart=199}
</span></span><span style="display:flex;"><span><span style="font-weight:bold">#include &lt;stdio.h&gt;
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold"></span>int main()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    int a = 0;
</span></span><span style="display:flex;"><span>    return a;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>```
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ff79c6">#include</span> <span style="color:#ff79c6">&lt;stdio.h&gt;</span><span style="color:#ff79c6">
</span></span></span><span style="display:flex; background-color:#3d3f4a"><span><span style="color:#ff79c6"></span><span style="color:#8be9fd">int</span> <span style="color:#50fa7b">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    <span style="color:#8be9fd">int</span> a <span style="color:#ff79c6">=</span> <span style="color:#bd93f9">0</span>;
</span></span><span style="display:flex; background-color:#3d3f4a"><span>    <span style="color:#ff79c6">return</span> a;
</span></span><span style="display:flex; background-color:#3d3f4a"><span>}
</span></span></code></pre></div><h2 id="code-block-alias" class="article-heading">Code block alias 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#code-block-alias">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>```c {name=&#34;qasm&#34;}
</span></span><span style="display:flex;"><span>OPENQASM 2.0;
</span></span><span style="display:flex;"><span>include &#34;qelib1.inc&#34;;
</span></span><span style="display:flex;"><span>qreg q[2];
</span></span><span style="display:flex;"><span>creg c[2];
</span></span><span style="display:flex;"><span>x q[0];
</span></span><span style="display:flex;"><span>x q[1];
</span></span><span style="display:flex;"><span>measure q[0] -&gt; c[0];
</span></span><span style="display:flex;"><span>measure q[1] -&gt; c[1];
</span></span><span style="display:flex;"><span>```
</span></span></code></pre></div><div class="highlight" name="qasm"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>OPENQASM <span style="color:#bd93f9">2.0</span>;
</span></span><span style="display:flex;"><span>include <span style="color:#f1fa8c">&#34;qelib1.inc&#34;</span>;
</span></span><span style="display:flex;"><span>qreg q[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>creg c[<span style="color:#bd93f9">2</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>x q[<span style="color:#bd93f9">1</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">0</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">0</span>];
</span></span><span style="display:flex;"><span>measure q[<span style="color:#bd93f9">1</span>] <span style="color:#ff79c6">-&gt;</span> c[<span style="color:#bd93f9">1</span>];
</span></span></code></pre></div><h2 id="copy-code-block" class="article-heading">Copy code block 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#copy-code-block">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h2><p>右上角可以複製程式碼，目前會自動忽略 prompt (每行開頭的 <code>$</code>, <code>&gt;</code>)。</p>
<h1 id="強調字型" class="article-heading">強調字型 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bc%b7%e8%aa%bf%e5%ad%97%e5%9e%8b">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://www.markdownguide.org/basic-syntax/#emphasis" title="ref" aria-label="ref"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ref</a></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>__粗體__  
</span></span><span style="display:flex;"><span>**粗體**  
</span></span><span style="display:flex;"><span><span style="text-decoration:underline">_斜體_</span>  
</span></span><span style="display:flex;"><span><span style="text-decoration:underline">*斜體*</span>  
</span></span><span style="display:flex;"><span><span style="text-decoration:underline">__</span>*粗斜體*__
</span></span></code></pre></div><p><strong>粗體</strong><br>
<strong>粗體</strong><br>
<em>斜體</em><br>
<em>斜體</em><br>
<strong><em>粗斜體</em></strong></p>
<h1 id="橫線" class="article-heading">橫線 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%a9%ab%e7%b7%9a">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>---
</span></span></code></pre></div><hr>
<h1 id="項目-bullet" class="article-heading">項目 (Bullet) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e9%a0%85%e7%9b%ae-bullet">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>+ a
</span></span><span style="display:flex;"><span>  + 1
</span></span><span style="display:flex;"><span>  + 2
</span></span><span style="display:flex;"><span>+ b
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">1.</span> OuO
</span></span><span style="display:flex;"><span>  <span style="color:#ff79c6">2.</span> QuQ
</span></span></code></pre></div><ul>
<li>a
<ul>
<li>1</li>
<li>2</li>
</ul>
</li>
<li>b
<ol>
<li>OuO</li>
<li>QuQ</li>
</ol>
</li>
</ul>
<h1 id="表格" class="article-heading">表格 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%a1%a8%e6%a0%bc">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>|A|B|C|
</span></span><span style="display:flex;"><span>|-|-|-|
</span></span><span style="display:flex;"><span>|a|b|c|
</span></span><span style="display:flex;"><span>|d|e|f|
</span></span></code></pre></div><table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>b</td>
<td>c</td>
</tr>
<tr>
<td>d</td>
<td>e</td>
<td>f</td>
</tr>
</tbody>
</table>
<h1 id="引用" class="article-heading">引用 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e5%bc%95%e7%94%a8">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span><span style="color:#ff79c6">&gt; </span><span style="text-decoration:underline">The more I learn, the more I realize how much I don&#39;t know.  
</span></span></span><span style="display:flex;"><span><span style="text-decoration:underline"></span><span style="color:#ff79c6">&gt; </span><span style="text-decoration:underline">--- Albert Einstein
</span></span></span></code></pre></div><blockquote>
<p>The more I learn, the more I realize how much I don&rsquo;t know.<br>
&mdash; Albert Einstein</p>
</blockquote>
<h1 id="跳轉" class="article-heading">跳轉 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%b3%e8%bd%89">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li>參考: <a href="https://gohugo.io/content-management/cross-references/" title="Use &lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;relref&lt;/code&gt;" aria-label="Use &lt;code&gt;ref&lt;/code&gt; and &lt;code&gt;relref&lt;/code&gt;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> Use <code>ref</code> and <code>relref</code></a></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>[<span style="color:#ff79c6">同一頁面不同 heading</span>](<span style="color:#50fa7b">{{&lt; relref &#34;#表格&#34; &gt;}}</span>)  
</span></span><span style="display:flex;"><span>[<span style="color:#ff79c6">不同頁面</span>](<span style="color:#50fa7b">{{&lt; relref &#34;/about&#34; &gt;}}</span>)
</span></span></code></pre></div><p><a href="#表格" title="同一頁面不同 heading" aria-label="同一頁面不同 heading" >同一頁面不同 heading</a><br>
<a href="/about/" title="不同頁面" aria-label="不同頁面" >不同頁面</a></p>
<h1 id="跳轉加強版-自動生成標題" class="article-heading">跳轉加強版 (自動生成標題) 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e8%b7%b3%e8%bd%89%e5%8a%a0%e5%bc%b7%e7%89%88-%e8%87%aa%e5%8b%95%e7%94%9f%e6%88%90%e6%a8%99%e9%a1%8c">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">reff</span> &#34;#<span style="color:#50fa7b">表格</span>&#34; &gt;}}  
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">reff</span> &#34;/<span style="color:#50fa7b">about</span>&#34; &gt;}}
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">reff</span> &#34;<span style="color:#50fa7b">20220620-4-bit-qft-iqft</span>&#34; &gt;}}  
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">reff</span> &#34;<span style="color:#50fa7b">20220620-4-bit-qft-iqft</span>/&#34; &gt;}}  
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">reff</span> &#34;<span style="color:#50fa7b">20220620-4-bit-qft-iqft</span>/#<span style="color:#50fa7b">version-1</span>&#34; &gt;}}
</span></span></code></pre></div><p><a href="#%e8%a1%a8%e6%a0%bc">Features#表格</a><br>
<a href="/about/"target="_blank" rel="noreferrer noopener">About</a><br>
<a href="/posts/20220620-4-bit-qft-iqft/"target="_blank" rel="noreferrer noopener">4-bit QFT IQFT</a><br>
<a href="/posts/20220620-4-bit-qft-iqft/"target="_blank" rel="noreferrer noopener">4-bit QFT IQFT</a><br>
<a href="/posts/20220620-4-bit-qft-iqft/#version-1"target="_blank" rel="noreferrer noopener">4-bit QFT IQFT#version-1</a></p>
<h1 id="插入圖片" class="article-heading">插入圖片 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%8f%92%e5%85%a5%e5%9c%96%e7%89%87">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>目前並不打算直接上傳到 github，所以找了一些方式<br>
一般圖片 (寬度設定可在網址後方加上空格再加 <code>&quot;=300x&quot;</code>，來將寬度設定為 <code>300</code>，我嘗試了一些方法不過很可惜跟 HackMD 不相容)</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#ff79c6">pic</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC</span>)
</span></span><span style="display:flex;"><span>![<span style="color:#ff79c6">pic with width = 300</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC &#34;=300x&#34;</span>)
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" alt='pic' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">pic</center>
    </figcaption>
  </figure>
<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" alt='pic with width = 300' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">pic with width = 300</center>
    </figcaption>
  </figure>
</p>
 

<details>
  <summary><span>不建議使用: google 雲端當作圖床 </span></summary>
  <p><del>這裡少部份會使用 google 雲端當作圖床 (目前大部分使用 google photo 當作圖床，右鍵複製圖片連結即可，不須使用下方技巧)<br>
不過從取得連結那裡會拿到：&ldquo;<a href="https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC%22" title="https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC&#34;" aria-label="https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC&#34;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC"</a></del><br>
<del>要改成 &ldquo;<a href="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC%22" title="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC&#34;" aria-label="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC&#34;"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC"</a> 才行 (<a href="https://stackoverflow.com/a/70143719" title="2022/7/6 可用版本" aria-label="2022/7/6 可用版本"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> 2022/7/6 可用版本</a>)，所以我動了一些手腳，下面還會顯示標題說明，點擊即可在新分頁開啟可放大的圖片瀏覽器</del></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#ff79c6">google-title here</span>](<span style="color:#50fa7b">https://drive.google.com/open?id=1LipAb-4seXENzvyjSYbgtCqEQUfzGziC</span>)
</span></span></code></pre></div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" alt='title here' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">title here</center>
    </figcaption>
  </figure>
</p>

</details>
<h1 id="gallery" class="article-heading">Gallery 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#gallery">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><code>2</code> 代表每欄 2 張圖，目前 Gallery 不支援 footnote。</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">gallery</span> <span style="color:#50fa7b">2</span> &gt;}}
</span></span><span style="display:flex;"><span>![<span style="color:#ff79c6">蚱蜢 1號 (短角異斑腿蝗)</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/pw/AM-JKLV4ikbvaB1gM01IJ9_1f1ShH6fMl62J3kU6PNASv9tU37GlpNqEOZMjgDwwyRnvsDnTB1uFKXCoD0DC3dFiXb-4aHgUoRpLd6o8dvJKrYAlGzfPksnkMZ-f8VuALIUFqZAxMiZzfLvnrjLGNU-1OlBTaQ=w1255-h941-no?authuser=1</span>)
</span></span><span style="display:flex;"><span>![<span style="color:#ff79c6">蚱蜢 2號 (瘤喉蝗)</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/pw/AM-JKLW2bmbirFNj-XWxsBiCDq5TApuG5hxpNLcZzhshpij_ur-yEPKlMvxaGj5-xJDXUjfFNJm7HMUwUe7erSyWoM3Fi-nl_jpLiDoq-gGtDHHlanT1N-oOoeErgVskafnLXFS5X27t14D7cR0ezW3w5DRwmw=w1255-h941-no?authuser=1</span>)
</span></span><span style="display:flex;"><span>![<span style="color:#ff79c6">蝴蝶 (細蝶)，兩隻都產卵在葉子上</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/pw/AM-JKLUhWKxcbdHhqx_ZSEXSrm0MSCt1fDaT8cnl2ySk0Dj4HE8dsr4jR7K-FQetXKuhUzGMig9F7-VDRKGgr8VS7IT_yq6Pg6UZKjTebfRmylJT-19W5HAb7p4Opv1-p-pO_964AErce5llfOeEaUI-wjum6g=w1255-h941-no?authuser=1</span>)
</span></span><span style="display:flex;"><span>![<span style="color:#ff79c6">蜥蜴 (斯文豪氏攀蜥)</span>](<span style="color:#50fa7b">https://lh3.googleusercontent.com/pw/AM-JKLW9bI2fQqA-Q59tBhp-yFnBydCM_SlzYpTsI4LZoW8v9zGAYMo7tK3h_BlXKDVwR68Pt5MZCd-Mkf31JUbA7nk6iZip4qiNnl-RG2hypR0y342b4gu8LiYChbcQIFSJNX4DEeUlqa8sYWSbeRGSSswSoA=w1255-h941-no?authuser=1</span>)
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">gallery</span> &gt;}}
</span></span></code></pre></div><div class="gallery-wrapper" style="grid-template-columns: repeat(2, 1fr)"><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLV4ikbvaB1gM01IJ9_1f1ShH6fMl62J3kU6PNASv9tU37GlpNqEOZMjgDwwyRnvsDnTB1uFKXCoD0DC3dFiXb-4aHgUoRpLd6o8dvJKrYAlGzfPksnkMZ-f8VuALIUFqZAxMiZzfLvnrjLGNU-1OlBTaQ=w1255-h941-no?authuser=1" alt='蚱蜢 1號 (短角外斑腿蝗)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蚱蜢 1號 (短角外斑腿蝗)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW2bmbirFNj-XWxsBiCDq5TApuG5hxpNLcZzhshpij_ur-yEPKlMvxaGj5-xJDXUjfFNJm7HMUwUe7erSyWoM3Fi-nl_jpLiDoq-gGtDHHlanT1N-oOoeErgVskafnLXFS5X27t14D7cR0ezW3w5DRwmw=w1255-h941-no?authuser=1" alt='蚱蜢 2號 (瘤喉蝗)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蚱蜢 2號 (瘤喉蝗)</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLUhWKxcbdHhqx_ZSEXSrm0MSCt1fDaT8cnl2ySk0Dj4HE8dsr4jR7K-FQetXKuhUzGMig9F7-VDRKGgr8VS7IT_yq6Pg6UZKjTebfRmylJT-19W5HAb7p4Opv1-p-pO_964AErce5llfOeEaUI-wjum6g=w1255-h941-no?authuser=1" alt='蝴蝶 (細蝶)，兩隻都產卵在葉子上' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蝴蝶 (細蝶)，兩隻都產卵在葉子上</center>
    </figcaption>
  </figure>
</p>
</div><div><p>
 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/pw/AM-JKLW9bI2fQqA-Q59tBhp-yFnBydCM_SlzYpTsI4LZoW8v9zGAYMo7tK3h_BlXKDVwR68Pt5MZCd-Mkf31JUbA7nk6iZip4qiNnl-RG2hypR0y342b4gu8LiYChbcQIFSJNX4DEeUlqa8sYWSbeRGSSswSoA=w1255-h941-no?authuser=1" alt='蜥蜴 (斯文豪氏攀蜥)' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">蜥蜴 (斯文豪氏攀蜥)</center>
    </figcaption>
  </figure>
</p>
</div></div>
<h1 id="數學式" class="article-heading">數學式 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#%e6%95%b8%e5%ad%b8%e5%bc%8f">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>要行內顯示的話在左右各使用一個 <code>$</code> 包著, e.g., <code>$x + y = z$</code>: $x + y = z$</p>
<p>使用 <code>$$</code> 會置中顯示, e.g., <code>$$a \times b = c$$</code></p>
<p>$$a \times b = c$$</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-latex" data-lang="latex"><span style="display:flex;"><span><span style="color:#f1fa8c">$$</span><span style="color:#8be9fd;font-style:italic">
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\def\TT</span><span style="color:#8be9fd;font-style:italic">{i</span><span style="color:#8be9fd;font-style:italic">\frac</span><span style="color:#8be9fd;font-style:italic">{</span><span style="color:#8be9fd;font-style:italic">\pi</span><span style="color:#8be9fd;font-style:italic">}{</span><span style="color:#bd93f9">4</span><span style="color:#8be9fd;font-style:italic">}}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\begin</span><span style="color:#8be9fd;font-style:italic">{equation</span><span style="color:#ff79c6">*</span><span style="color:#8be9fd;font-style:italic">}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\begin</span><span style="color:#8be9fd;font-style:italic">{split}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">x &amp;</span><span style="color:#ff79c6">=</span><span style="color:#8be9fd;font-style:italic"> e^{</span><span style="color:#8be9fd;font-style:italic">\TT</span><span style="color:#8be9fd;font-style:italic">}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\newline</span><span style="color:#8be9fd;font-style:italic">
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic">y &amp;</span><span style="color:#ff79c6">=</span><span style="color:#8be9fd;font-style:italic"> e^{</span><span style="color:#ff79c6">-</span><span style="color:#bd93f9">3</span><span style="color:#8be9fd;font-style:italic">\TT</span><span style="color:#8be9fd;font-style:italic">}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\end</span><span style="color:#8be9fd;font-style:italic">{split}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#8be9fd;font-style:italic">\end</span><span style="color:#8be9fd;font-style:italic">{equation</span><span style="color:#ff79c6">*</span><span style="color:#8be9fd;font-style:italic">}
</span></span></span><span style="display:flex;"><span><span style="color:#8be9fd;font-style:italic"></span><span style="color:#f1fa8c">$$</span>
</span></span></code></pre></div><p>$$<br>
\def\TT{i\frac{\pi}{4}}<br>
\begin{equation*}<br>
\begin{split}<br>
x &amp;= e^{\TT}<br>
\newline<br>
y &amp;= e^{-3\TT}<br>
\end{split}<br>
\end{equation*}<br>
$$</p>
<h1 id="footnote" class="article-heading">Footnote 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#footnote">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>Hi [^label], Link [^llink].
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>![Footnote in caption[^img]](https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>[^label]: OuO
</span></span><span style="display:flex;"><span>[^llink]: [<span style="color:#ff79c6">homepage</span>](<span style="color:#50fa7b">https://aben20807.github.io/</span>)
</span></span><span style="display:flex;"><span>[^img]: Image
</span></span></code></pre></div><p>Hi  , Link  .<br>

 
  <figure class="gphoto-media rss">
    <img src="https://lh3.googleusercontent.com/d/1LipAb-4seXENzvyjSYbgtCqEQUfzGziC" alt='Footnote in caption3' style="max-width: 100%;"/>
    <figcaption>
      <center class="caption-text">Footnote in caption3</center>
    </figcaption>
  </figure>
</p>
<h1 id="youtube" class="article-heading">YouTube 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#youtube">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">youtube</span> &#34;<span style="color:#50fa7b">https:</span>//<span style="color:#50fa7b">www</span>.<span style="color:#50fa7b">youtube</span>.<span style="color:#50fa7b">com</span>/<span style="color:#50fa7b">watch</span>?<span style="color:#50fa7b">v</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">jC3jnC1dsAg&#34;</span> &gt;}}
</span></span></code></pre></div>






 
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">youtube</span> &#34;<span style="color:#50fa7b">https:</span>//<span style="color:#50fa7b">www</span>.<span style="color:#50fa7b">youtube</span>.<span style="color:#50fa7b">com</span>/<span style="color:#50fa7b">watch</span>?<span style="color:#50fa7b">v</span><span style="color:#ff79c6">=</span><span style="color:#f1fa8c">jC3jnC1dsAg?t=500&#34;</span> &gt;}}
</span></span></code></pre></div>






 
<h1 id="alert-section" class="article-heading">Alert Section 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#alert-section">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><ul>
<li><a href="https://codepen.io/DobsonDev/pen/GgRJwv" title="ref" aria-label="ref"  target="_blank" rel="noreferrer noopener"><i class="fas fa-external-link-square-alt"></i> ref</a></li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">alert</span> <span style="color:#50fa7b">info</span> &gt;}}
</span></span><span style="display:flex;"><span><span style="text-decoration:underline">**</span> Beware !** is a text
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">alert</span> &gt;}}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">alert</span> <span style="color:#50fa7b">success</span> &gt;}}
</span></span><span style="display:flex;"><span>**Beware !** is a text
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">alert</span> &gt;}}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">alert</span> <span style="color:#50fa7b">warning</span> &gt;}}
</span></span><span style="display:flex;"><span>**Beware !** is a text
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">alert</span> &gt;}}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">alert</span> <span style="color:#50fa7b">danger</span> &gt;}}
</span></span><span style="display:flex;"><span>**Beware !** is a text
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">alert</span> &gt;}}
</span></span></code></pre></div>
<div class="alert-block">

  <div class="info-title"><i class="fa fa-info-circle"></i></div>
  <div class="info-msg db">
    <p><strong>Beware !</strong> is a text</p>
  </div>

</div>

<div class="alert-block">

  <div class="success-title"><i class="fa fa-check"></i></div>
  <div class="success-msg">
    <strong>Beware !</strong> is a text
  </div>

</div>

<div class="alert-block">

  <div class="warning-title"><i class="fa fa-exclamation-triangle"></i></div>
  <div class="warning-msg">
    <strong>Beware !</strong> is a text
  </div>

</div>

<div class="alert-block">

  <div class="danger-title"><i class="fa fa-times-circle"></i></div>
  <div class="alert danger-msg">
    <strong>Beware !</strong> is a text
  </div>

</div>
<h1 id="details-summary-section" class="article-heading">Details, summary section 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#details-summary-section">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>{{&lt; <span style="color:#ff79c6">summary</span> &#34;<span style="color:#50fa7b">Click</span>~&#34; &gt;}}
</span></span><span style="display:flex;"><span><span style="font-weight:bold"># OuO
</span></span></span><span style="display:flex;"><span><span style="font-weight:bold"></span>OuO
</span></span><span style="display:flex;"><span>+ OuO
</span></span><span style="display:flex;"><span>{{&lt; /<span style="color:#ff79c6">summary</span> &gt;}}
</span></span></code></pre></div> 

<details>
  <summary><span>Click~ </span></summary>
  <h1 id="ouo" class="article-heading">OuO 
    <a class="headline-hash smoothScroll hover-show scrollspy" style="font-size: 0.75em; color: black; padding-left: 0.25em" href="#ouo">
        <span class="iconify" data-icon="octicon-link" data-inline="false"></span>
    </a>
</h1><p>OuO</p>
<ul>
<li>OuO</li>
</ul>

</details>
 
        ]]></description></item><item><title>Happy New Year</title><link>https://aben20807.github.io/posts/20190204-happy-new-year/</link><pubDate>Mon, 04 Feb 2019 23:03:48 +0800</pubDate><author>aben20807@gmail.com (Huang, Po-Hsuan 黃柏瑄)</author><guid>https://aben20807.github.io/posts/20190204-happy-new-year/</guid><description><![CDATA[
          <p>今天除夕，首先祝各位新年快樂~</p>
          
            <p><a href="https://aben20807.github.io/posts/20190204-happy-new-year/"><img src="https://aben20807.github.io//img/default-header-img.jpg" style="max-width: 100%;"/></a></p>
          
          <p><a href="https://aben20807.github.io/posts/20190204-happy-new-year/">Visit website to read the full article</a></p>
          
          
          
          
          
          
          
          
          
          <p>今天除夕，首先祝各位新年快樂~</p>
<p>第一天用比較偏累，基本上把會用的東西都裝一裝了，例如：google analysitcs, disqus。likecoin 的部份我覺得可能還要找方法，不然拖慢許多載入速度。</p>
<p>總之，主因大致上可以推給 G+ 關閉吧，加上在 Blogger 那邊改主題頗累 (外加煩躁) 選擇 Hugo 主要是速度吧，號稱目前最快，原本考慮的 Jekyll 跟 Hexo 似乎在文章多的時候都會慢，所以就直上了(?)。</p>
<p>這裡會發的文會更偏向記錄，要說是日記也是可，不過我相信我自己絕對不可能日更，尤其是已經在研究所幹活了，可能這篇第一篇也是最後一篇也說不定。</p>
<p>恩&hellip;也不知道怎麼結尾，那就這樣吧 OuO</p>
        ]]></description></item></channel></rss>